export declare const ZERO: Readonly<{
    years: number;
    months: number;
    weeks: number;
    days: number;
    hours: number;
    minutes: number;
    seconds: number;
    milliseconds: number;
}>;
export type UnitKey = keyof typeof ZERO;
export declare const UNITS_META_MAP_LITERAL: {
    readonly years: {
        readonly milliseconds: number;
        readonly months: 12;
        readonly dateGetter: (date: Date) => number;
        readonly ISOCharacter: "Y";
        readonly ISOPrecision: "period";
    };
    readonly months: {
        readonly milliseconds: number;
        readonly months: 1;
        readonly dateGetter: (date: Date) => number;
        readonly ISOCharacter: "M";
        readonly ISOPrecision: "period";
    };
    readonly weeks: {
        readonly milliseconds: number;
        readonly dateGetter: () => number;
        readonly ISOCharacter: "W";
        readonly ISOPrecision: "period";
        readonly stringifyConvertTo: "days";
    };
    readonly days: {
        readonly milliseconds: number;
        readonly dateGetter: (date: Date) => number;
        readonly ISOCharacter: "D";
        readonly ISOPrecision: "period";
    };
    readonly hours: {
        readonly milliseconds: number;
        readonly dateGetter: (date: Date) => number;
        readonly ISOCharacter: "H";
        readonly ISOPrecision: "time";
    };
    readonly minutes: {
        readonly milliseconds: number;
        readonly dateGetter: (date: Date) => number;
        readonly ISOCharacter: "M";
        readonly ISOPrecision: "time";
    };
    readonly seconds: {
        readonly milliseconds: 1000;
        readonly dateGetter: (date: Date) => number;
        readonly ISOCharacter: "S";
        readonly ISOPrecision: "time";
    };
    readonly milliseconds: {
        readonly milliseconds: 1;
        readonly dateGetter: (date: Date) => number;
        readonly stringifyConvertTo: "seconds";
    };
};
interface Unit {
    milliseconds: number;
    months?: number;
    dateGetter(date: Date): number;
    ISOCharacter?: string;
    ISOPrecision?: 'period' | 'time';
    stringifyConvertTo?: UnitKey;
}
export declare const UNITS_META_MAP: {
    [key in UnitKey]: Unit;
};
/**
 * All the keys of the `Duration` type, ordered from largest
 * to smallest.
 */
export declare const UNITS: readonly ["years", "months", "weeks", "days", "hours", "minutes", "seconds", "milliseconds"];
export declare const UNITS_META: readonly {
    unit: "years" | "months" | "weeks" | "days" | "hours" | "minutes" | "seconds" | "milliseconds";
    milliseconds: number;
    months?: number | undefined;
    dateGetter(date: Date): number;
    ISOCharacter?: string | undefined;
    ISOPrecision?: "time" | "period" | undefined;
    stringifyConvertTo?: "years" | "months" | "weeks" | "days" | "hours" | "minutes" | "seconds" | "milliseconds" | undefined;
}[];
export {};
