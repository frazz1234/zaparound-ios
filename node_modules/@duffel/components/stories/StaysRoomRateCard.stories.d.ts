/// <reference types="@duffel/api" />
import { StaysRoomRateCardProps } from "@components/Stays/StaysRoomRateCard";
declare const _default: import("@storybook/csf").ComponentAnnotations<import("@storybook/react/dist/types-a5624094").R, import("@storybook/csf").Args>;
export default _default;
export declare const RateWithMinimalInformation: {
    render: import("@storybook/csf").AnnotatedStoryFn<import("@storybook/react/dist/types-a5624094").R, {
        roomRates: StaysRoomRateCardProps[];
    }>;
    args: {
        roomRates: {
            rate: import("@duffel/api/types").StaysRoomRate;
            numberOfNights: number;
        }[];
    };
};
export declare const PayLaterRate: {
    render: import("@storybook/csf").AnnotatedStoryFn<import("@storybook/react/dist/types-a5624094").R, {
        roomRates: StaysRoomRateCardProps[];
    }>;
    args: {
        roomRates: {
            rate: {
                available_payment_methods: string[];
                payment_type: string;
                source: string;
                id: string;
                cancellation_timeline: {
                    refund_amount: string;
                    currency: string;
                    before: string;
                }[];
                quantity_available: number | null;
                base_amount: string | null;
                base_currency: string;
                board_type: "room_only" | "breakfast" | "half_board" | "full_board" | "all_inclusive";
                conditions: import("@duffel/api/types").StaysRateCondition[];
                due_at_accommodation_amount: string | null;
                due_at_accommodation_currency: string;
                fee_amount: string | null;
                fee_currency: string;
                tax_amount: string | null;
                tax_currency: string;
                total_amount: string;
                total_currency: string;
                supported_loyalty_programme: import("@duffel/api/types").StaysLoyaltyProgrammeReference | null;
                loyalty_programme_required: boolean;
            };
            numberOfNights: number;
            searchNumberOfRooms: number;
        }[];
    };
};
export declare const RateWithCompleteInformation: {
    render: import("@storybook/csf").AnnotatedStoryFn<import("@storybook/react/dist/types-a5624094").R, {
        roomRates: StaysRoomRateCardProps[];
    }>;
    args: {
        roomRates: {
            rate: import("@duffel/api/types").StaysRoomRate;
            numberOfNights: number;
            searchNumberOfRooms: number;
        }[];
    };
};
export declare const RatesCrossComparison: {
    render: import("@storybook/csf").AnnotatedStoryFn<import("@storybook/react/dist/types-a5624094").R, {
        roomRates: StaysRoomRateCardProps[];
    }>;
    args: {
        roomRates: ({
            rate: import("@duffel/api/types").StaysRoomRate;
            numberOfNights: number;
        } | {
            rate: {
                available_payment_methods: string[];
                payment_type: string;
                source: string;
                id: string;
                cancellation_timeline: {
                    refund_amount: string;
                    currency: string;
                    before: string;
                }[];
                quantity_available: number | null;
                base_amount: string | null;
                base_currency: string;
                board_type: "room_only" | "breakfast" | "half_board" | "full_board" | "all_inclusive";
                conditions: import("@duffel/api/types").StaysRateCondition[];
                due_at_accommodation_amount: string | null;
                due_at_accommodation_currency: string;
                fee_amount: string | null;
                fee_currency: string;
                tax_amount: string | null;
                tax_currency: string;
                total_amount: string;
                total_currency: string;
                supported_loyalty_programme: import("@duffel/api/types").StaysLoyaltyProgrammeReference | null;
                loyalty_programme_required: boolean;
            };
            numberOfNights: number;
            searchNumberOfRooms: number;
        })[];
    };
};
export declare const DepositRate: {
    render: import("@storybook/csf").AnnotatedStoryFn<import("@storybook/react/dist/types-a5624094").R, {
        roomRates: StaysRoomRateCardProps[];
    }>;
    args: {
        roomRates: {
            rate: {
                available_payment_methods: string[];
                payment_type: string;
                source: string;
                id: string;
                cancellation_timeline: {
                    refund_amount: string;
                    currency: string;
                    before: string;
                }[];
                quantity_available: number | null;
                base_amount: string | null;
                base_currency: string;
                board_type: "room_only" | "breakfast" | "half_board" | "full_board" | "all_inclusive";
                conditions: import("@duffel/api/types").StaysRateCondition[];
                due_at_accommodation_amount: string | null;
                due_at_accommodation_currency: string;
                fee_amount: string | null;
                fee_currency: string;
                tax_amount: string | null;
                tax_currency: string;
                total_amount: string;
                total_currency: string;
                supported_loyalty_programme: import("@duffel/api/types").StaysLoyaltyProgrammeReference | null;
                loyalty_programme_required: boolean;
            };
            numberOfNights: number;
            searchNumberOfRooms: number;
        }[];
    };
};
