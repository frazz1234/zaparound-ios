import{d as e}from"./utils-cookiemanager.ts.DWX94_yC.js";const t=1e3,o=300;class i{cookieInventory=new Map;static instance;lastUpdateTime=0;updateTimeout=null;cachedTotalSize=null;cachedCategoryCounts=null;constructor(){this.updateInventory(),setInterval((()=>{this.cleanupExpiredCookies(),this.checkCookieLimits()}),36e5),document.addEventListener("cookie-changed",this.debouncedUpdate)}debouncedUpdate=()=>{this.updateTimeout&&clearTimeout(this.updateTimeout),this.updateTimeout=setTimeout((()=>{this.updateInventory()}),o)};static getInstance(){return i.instance||(i.instance=new i),i.instance}updateInventory(){const e=Date.now();if(!(e-this.lastUpdateTime<t)){this.lastUpdateTime=e;try{const e=document.cookie.split(";"),t=new Map;e.forEach((e=>{const[o,i]=e.trim().split("="),s=decodeURIComponent(o),n=(decodeURIComponent(i),this.cookieInventory.get(s)),a={name:s,size:new Blob([e]).size,lastAccessed:n?.lastAccessed||new Date,category:n?.category||this.determineCookieCategory(s)};t.set(s,a)})),this.cookieInventory=t,this.cachedTotalSize=null,this.cachedCategoryCounts=null}catch(o){}}}determineCookieCategory(e){return this.isNecessaryCookie(e)?"necessary":this.isFunctionalCookie(e)?"functional":this.isAnalyticsCookie(e)?"analytics":this.isMarketingCookie(e)?"marketing":"necessary"}isNecessaryCookie(e){return["zaparound-cookie-consent","session","csrf","auth","sb-"].some((t=>e.startsWith(t)))}isFunctionalCookie(e){return["theme","language","app-language","preferences","ui-"].some((t=>e.startsWith(t)))}isAnalyticsCookie(e){return["_ga","_gid","_gat","plausible_","amplitude_","mixpanel_"].some((t=>e.startsWith(t)))}isMarketingCookie(e){return["_fbp","_gcl","ads_","marketing_"].some((t=>e.startsWith(t)))}cleanupExpiredCookies(){try{let t=0;const o=new Date;this.cookieInventory.forEach(((i,s)=>{i.expires&&i.expires<o&&(e(s),this.cookieInventory.delete(s),t++)})),t>0&&this.updateInventory()}catch(t){}}checkCookieLimits(){try{let e=0;this.cookieInventory.size;this.cookieInventory.forEach((t=>{e+=t.size,t.size}))}catch(e){}}getInventory(){return new Map(this.cookieInventory)}getTotalSize(){if(null===this.cachedTotalSize){let e=0;this.cookieInventory.forEach((t=>{e+=t.size})),this.cachedTotalSize=e}return this.cachedTotalSize}getCookieCountByCategory(){if(null===this.cachedCategoryCounts){const e={necessary:0,functional:0,analytics:0,marketing:0};this.cookieInventory.forEach((t=>{e[t.category]++})),this.cachedCategoryCounts=e}return{...this.cachedCategoryCounts}}updateCookieAccess(e){const t=this.cookieInventory.get(e);t&&(t.lastAccessed=new Date,this.cookieInventory.set(e,t))}destroy(){this.updateTimeout&&clearTimeout(this.updateTimeout),document.removeEventListener("cookie-changed",this.debouncedUpdate)}}const s=i.getInstance();export{s as c};
//# sourceMappingURL=utils-cookiemonitor.ts.D_pqS03V.js.map
