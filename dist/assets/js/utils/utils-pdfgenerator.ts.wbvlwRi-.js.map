{"version":3,"file":"utils-pdfgenerator.ts.wbvlwRi-.js","sources":["../../../../src/utils/pdfGenerator.ts"],"sourcesContent":["import jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport { generateStaticMapUrl as generateSecureStaticMapUrl } from './mapboxUtils';\n\ninterface GeoPosition {\n  name: string;\n  type: string;\n  coordinates: [number, number];\n  description?: string;\n  Adresse?: string;\n}\n\ninterface TripDetails {\n  title: string;\n  description?: string;\n  startDate?: string;\n  endDate?: string;\n  category?: string;\n  notes?: string;\n  geopositions: GeoPosition[];\n  ai_content?: string;\n}\n\n// Constants for styling\nconst STYLES = {\n  colors: {\n    primary: '#1d1d1e',\n    secondary: '#62626a',\n    accent: '#61936f',\n    background: '#fcfcfc',\n    link: '#3b82f6'\n  },\n  fonts: {\n    title: 20,\n    subtitle: 16,\n    heading: 14,\n    normal: 11,\n    small: 9\n  },\n  spacing: {\n    margin: 20,\n    padding: 10,\n    lineHeight: 7\n  }\n};\n\n// Helper function to format dates\nconst formatDate = (date: string) => {\n  return new Date(date).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n};\n\n// Helper function to clean text\nconst cleanText = (text: string) => {\n  if (!text) return '';\n  return text\n    .replace(/^[Ø=Üí]+\\s*/g, '')  // Remove the Ø=Üí prefix\n    .replace(/[^\\x20-\\x7E]/g, '') // Remove non-printable characters\n    .replace(/\\s+/g, ' ')         // Normalize whitespace\n    .replace(/[`*_~]/g, '')       // Remove markdown formatting characters\n    .replace(/\\[(.*?)\\]\\(.*?\\)/g, '$1') // Convert markdown links to just text\n    .replace(/!\\[.*?\\]\\(.*?\\)/g, '')    // Remove markdown images\n    .replace(/\\\\[a-z]+\\{.*?\\}/g, '')    // Remove LaTeX expressions\n    .replace(/\\u{1F4CD}/gu, '')         // Remove the 📍 emoji\n    .replace(/&[a-z]+;/g, '')           // Remove HTML entities\n    .trim();\n};\n\n// Function to add a page header\nconst addPageHeader = (pdf: jsPDF, pageNumber: number, totalPages: number) => {\n  const pageWidth = pdf.internal.pageSize.width;\n  \n  // Add top border\n  pdf.setDrawColor(STYLES.colors.accent);\n  pdf.setLineWidth(0.5);\n  pdf.line(STYLES.spacing.margin, 10, pageWidth - STYLES.spacing.margin, 10);\n  \n  // Add page number\n  pdf.setFontSize(STYLES.fonts.small);\n  pdf.setTextColor(STYLES.colors.secondary);\n  pdf.text(`Page ${pageNumber} of ${totalPages}`, pageWidth - STYLES.spacing.margin, 15, { align: 'right' });\n  \n  return 25; // Return starting Y position for content\n};\n\n// Function to add a page footer\nconst addPageFooter = (pdf: jsPDF) => {\n  const pageWidth = pdf.internal.pageSize.width;\n  const pageHeight = pdf.internal.pageSize.height;\n  \n  // Add bottom border\n  pdf.setDrawColor(STYLES.colors.accent);\n  pdf.setLineWidth(0.5);\n  pdf.line(STYLES.spacing.margin, pageHeight - 15, pageWidth - STYLES.spacing.margin, pageHeight - 15);\n  \n  // Add footer text\n  pdf.setFontSize(STYLES.fonts.small);\n  pdf.setTextColor(STYLES.colors.secondary);\n  const today = new Date().toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n  pdf.text(`Generated by ZapAround on ${today}`, STYLES.spacing.margin, pageHeight - 10);\n};\n\n// Function to add section title\nconst addSectionTitle = (pdf: jsPDF, title: string, yPos: number) => {\n  const pageWidth = pdf.internal.pageSize.width;\n  \n  pdf.setFillColor(STYLES.colors.background);\n  pdf.setDrawColor(STYLES.colors.accent);\n  pdf.setLineWidth(0.5);\n  \n  // Draw section background\n  pdf.rect(\n    STYLES.spacing.margin - 5,\n    yPos - 5,\n    pageWidth - (STYLES.spacing.margin * 2) + 10,\n    12,\n    'F'\n  );\n  \n  // Add bottom border\n  pdf.line(\n    STYLES.spacing.margin - 5,\n    yPos + 7,\n    pageWidth - STYLES.spacing.margin + 5,\n    yPos + 7\n  );\n  \n  // Add title text\n  pdf.setFontSize(STYLES.fonts.subtitle);\n  pdf.setTextColor(STYLES.colors.primary);\n  pdf.setFont('helvetica', 'bold');\n  pdf.text(title, STYLES.spacing.margin, yPos + 4);\n  \n  return yPos + 15;\n};\n\n// Function to add the cover page\nconst addCoverPage = async (pdf: jsPDF, tripDetails: TripDetails) => {\n  const pageWidth = pdf.internal.pageSize.width;\n  const pageHeight = pdf.internal.pageSize.height;\n  let yPos = 40;\n\n  // Add logo\n  const logoUrl = 'https://zaparound.com/logo.png';\n  try {\n    const logoImage = await fetch(logoUrl).then(res => res.blob());\n    const logoImageUrl = URL.createObjectURL(logoImage);\n    \n    // Add logo with width of 60mm and maintain aspect ratio\n    const logoWidth = 60;\n    const logoHeight = 20;\n    const logoX = (pageWidth - logoWidth) / 2;\n    pdf.addImage(logoImageUrl, 'PNG', logoX, yPos, logoWidth, logoHeight);\n    \n    yPos += logoHeight + 20;\n  } catch (error) {\n    console.error('Failed to load logo:', error);\n    // Fallback to text if logo fails to load\n    pdf.setFontSize(32);\n    pdf.setTextColor(STYLES.colors.primary);\n    pdf.setFont('helvetica', 'bold');\n    pdf.text('ZapAround', pageWidth / 2, yPos, { align: 'center' });\n    yPos += 20;\n  }\n  \n  // Add \"Travel Itinerary\" subtitle\n  pdf.setFontSize(STYLES.fonts.subtitle);\n  pdf.setTextColor(STYLES.colors.secondary);\n  pdf.setFont('helvetica', 'normal');\n  pdf.text('Travel Itinerary', pageWidth / 2, yPos, { align: 'center' });\n\n  // Add trip title\n  yPos += 40;\n  pdf.setFontSize(24);\n  pdf.setTextColor(STYLES.colors.primary);\n  pdf.setFont('helvetica', 'bold');\n  pdf.text(tripDetails.title, pageWidth / 2, yPos, { align: 'center' });\n\n  // Add trip details\n  if (tripDetails.description) {\n    yPos += 20;\n    pdf.setFontSize(STYLES.fonts.normal);\n    pdf.setTextColor(STYLES.colors.secondary);\n    pdf.setFont('helvetica', 'normal');\n    const descriptionLines = pdf.splitTextToSize(\n      tripDetails.description,\n      pageWidth - (STYLES.spacing.margin * 4)\n    );\n    pdf.text(descriptionLines, pageWidth / 2, yPos, { align: 'center' });\n  }\n\n  // Add dates if available\n  if (tripDetails.startDate || tripDetails.endDate) {\n    yPos += 40;\n    pdf.setFontSize(STYLES.fonts.normal);\n    pdf.setTextColor(STYLES.colors.primary);\n    pdf.setFont('helvetica', 'bold');\n    \n    const dateText = tripDetails.startDate && tripDetails.endDate\n      ? `${formatDate(tripDetails.startDate)} - ${formatDate(tripDetails.endDate)}`\n      : tripDetails.startDate\n        ? formatDate(tripDetails.startDate)\n        : formatDate(tripDetails.endDate!);\n    \n    pdf.text(dateText, pageWidth / 2, yPos, { align: 'center' });\n  }\n\n  // Add decorative element\n  yPos = pageHeight - 80;\n  pdf.setDrawColor(STYLES.colors.accent);\n  pdf.setLineWidth(1);\n  pdf.line(STYLES.spacing.margin, yPos, pageWidth - STYLES.spacing.margin, yPos);\n};\n\n// Function to add map page\nconst addMapPage = async (pdf: jsPDF, geopositions: GeoPosition[]) => {\n  let yPos = addPageHeader(pdf, 2, pdf.internal.getNumberOfPages());\n  \n  // Add map title\n  yPos = addSectionTitle(pdf, 'Trip Overview Map', yPos);\n  yPos += 10;\n\n  // Add static map\n  const mapUrl = await generateStaticMapUrl(geopositions);\n  const mapImage = await fetch(mapUrl).then(res => res.blob());\n  const mapImageUrl = URL.createObjectURL(mapImage);\n  const mapHeight = 120;\n  \n  pdf.addImage(\n    mapImageUrl,\n    'PNG',\n    STYLES.spacing.margin,\n    yPos,\n    pdf.internal.pageSize.width - (STYLES.spacing.margin * 2),\n    mapHeight\n  );\n  \n  addPageFooter(pdf);\n};\n\n// Function to add stops pages\nconst addStopsPages = (pdf: jsPDF, geopositions: GeoPosition[]) => {\n  let yPos = addPageHeader(pdf, pdf.internal.getCurrentPageInfo().pageNumber, pdf.internal.getNumberOfPages());\n  \n  // Add stops title\n  yPos = addSectionTitle(pdf, 'Stops and Points', yPos);\n  yPos += 10;\n\n  const pageWidth = pdf.internal.pageSize.width;\n  const contentWidth = pageWidth - (STYLES.spacing.margin * 2);\n  const columnWidth = (contentWidth - 20) / 3; // 20mm total gap between columns\n  const itemHeight = 45; // Height for each stop item\n  const itemsPerPage = Math.floor((pdf.internal.pageSize.height - 70) / itemHeight);\n  \n  geopositions.forEach((pos, index) => {\n    const column = index % 3;\n    const row = Math.floor((index % (itemsPerPage * 3)) / 3);\n    \n    // Check if we need a new page\n    if (index > 0 && index % (itemsPerPage * 3) === 0) {\n      addPageFooter(pdf);\n      pdf.addPage();\n      yPos = addPageHeader(pdf, pdf.internal.getCurrentPageInfo().pageNumber, pdf.internal.getNumberOfPages());\n      yPos = addSectionTitle(pdf, 'Stops and Points (Continued)', yPos);\n      yPos += 10;\n    }\n    \n    const xPos = STYLES.spacing.margin + (column * (columnWidth + 10));\n    const currentYPos = yPos + (row * itemHeight);\n    \n    // Add stop box\n    pdf.setFillColor(STYLES.colors.background);\n    pdf.setDrawColor(STYLES.colors.accent);\n    pdf.setLineWidth(0.2);\n    pdf.roundedRect(xPos, currentYPos, columnWidth, itemHeight - 8, 2, 2, 'FD');\n    \n    // Add stop number and name\n    pdf.setFontSize(STYLES.fonts.normal);\n    pdf.setTextColor(STYLES.colors.primary);\n    pdf.setFont('helvetica', 'bold');\n    \n    // Handle title\n    const title = `${index + 1}. ${cleanText(pos.name)}`;\n    const titleLines = pdf.splitTextToSize(title, columnWidth - 10);\n    const titleHeight = titleLines.length > 1 ? 12 : 6;\n    pdf.text(titleLines, xPos + 5, currentYPos + 6);\n    \n    // Add description if available\n    let currentTextPos = currentYPos + titleHeight + 6;\n    if (pos.description) {\n      pdf.setTextColor(STYLES.colors.secondary);\n      pdf.setFontSize(STYLES.fonts.small);\n      pdf.setFont('helvetica', 'normal');\n      const descLines = pdf.splitTextToSize(cleanText(pos.description), columnWidth - 10);\n      if (descLines.length > 2) {\n        descLines.length = 2;\n        descLines[1] = descLines[1].substring(0, descLines[1].length - 3) + '...';\n      }\n      pdf.text(descLines, xPos + 5, currentTextPos);\n      currentTextPos += (descLines.length * 5) + 2;\n    }\n    \n    // Add address\n    pdf.setTextColor(STYLES.colors.secondary);\n    pdf.setFontSize(STYLES.fonts.small);\n    pdf.setFont('helvetica', 'normal');\n    \n    // Format address\n    const address = pos.Adresse ? cleanText(pos.Adresse) :\n      `${pos.coordinates[1].toFixed(4)}, ${pos.coordinates[0].toFixed(4)}`;\n    \n    const addressLines = pdf.splitTextToSize(address, columnWidth - 10);\n    if (addressLines.length > 2) {\n      addressLines.length = 2;\n      addressLines[1] = addressLines[1].substring(0, addressLines[1].length - 3) + '...';\n    }\n    pdf.text(addressLines, xPos + 5, currentTextPos);\n  });\n  \n  addPageFooter(pdf);\n};\n\n// Function to add AI content pages\nconst addAIContentPages = (pdf: jsPDF, content: string) => {\n  let yPos = addPageHeader(pdf, pdf.internal.getCurrentPageInfo().pageNumber, pdf.internal.getNumberOfPages());\n  \n  // Add AI content title\n  yPos = addSectionTitle(pdf, 'Travel Tips & AI Insights', yPos);\n  yPos += 10;\n\n  const pageWidth = pdf.internal.pageSize.width;\n  const contentWidth = pageWidth - (STYLES.spacing.margin * 2);\n  \n  // Split content into sections and clean markdown\n  const sections = content\n    .replace(/```[^`]*```/g, '') // Remove code blocks\n    .split(/(?=# )/g);\n  \n  sections.forEach((section, index) => {\n    if (index > 0) {\n      // Add page break between major sections\n      addPageFooter(pdf);\n      pdf.addPage();\n      yPos = addPageHeader(pdf, pdf.internal.getCurrentPageInfo().pageNumber, pdf.internal.getNumberOfPages());\n    }\n    \n    // Process section content\n    const lines = section.split('\\n');\n    lines.forEach((line) => {\n      // Skip empty lines\n      if (!line.trim()) return;\n      \n      // Check for page break\n      if (yPos > pdf.internal.pageSize.height - 30) {\n        addPageFooter(pdf);\n        pdf.addPage();\n        yPos = addPageHeader(pdf, pdf.internal.getCurrentPageInfo().pageNumber, pdf.internal.getNumberOfPages());\n      }\n      \n      // Set text style based on heading level\n      if (line.startsWith('# ')) {\n        pdf.setFontSize(STYLES.fonts.title);\n        pdf.setTextColor(STYLES.colors.primary);\n        pdf.setFont('helvetica', 'bold');\n        line = line.substring(2);\n      } else if (line.startsWith('## ')) {\n        pdf.setFontSize(STYLES.fonts.subtitle);\n        pdf.setTextColor(STYLES.colors.primary);\n        pdf.setFont('helvetica', 'bold');\n        line = line.substring(3);\n      } else if (line.startsWith('### ')) {\n        pdf.setFontSize(STYLES.fonts.heading);\n        pdf.setTextColor(STYLES.colors.primary);\n        pdf.setFont('helvetica', 'bold');\n        line = line.substring(4);\n      } else {\n        pdf.setFontSize(STYLES.fonts.normal);\n        pdf.setTextColor(STYLES.colors.secondary);\n        pdf.setFont('helvetica', 'normal');\n      }\n      \n      // Clean and split text\n      const textLines = pdf.splitTextToSize(cleanText(line), contentWidth);\n      textLines.forEach((textLine: string) => {\n        if (textLine.trim()) {\n          pdf.text(textLine, STYLES.spacing.margin, yPos);\n          yPos += STYLES.spacing.lineHeight;\n        }\n      });\n      \n      yPos += 3; // Add extra space between paragraphs\n    });\n  });\n  \n  addPageFooter(pdf);\n};\n\nconst generateStaticMapUrl = async (geopositions: GeoPosition[]) => {\n  try {\n    // Create markers string\n    const markers = geopositions.map((pos, index) => {\n      return `pin-s-${index + 1}+1d1d1e(${pos.coordinates[0]},${pos.coordinates[1]})`;\n    }).join(',');\n\n    // Calculate bounds to center the map\n    const lngs = geopositions.map(pos => pos.coordinates[0]);\n    const lats = geopositions.map(pos => pos.coordinates[1]);\n    const center: [number, number] = [\n      (Math.min(...lngs) + Math.max(...lngs)) / 2,\n      (Math.min(...lats) + Math.max(...lats)) / 2\n    ];\n\n    // Use secure token generation\n    return await generateSecureStaticMapUrl(\n      center,\n      6, // zoom\n      800, // width\n      400, // height\n      'mapbox://styles/mapbox/streets-v11',\n      markers\n    );\n  } catch (err) {\n    console.error('Error generating static map URL:', err);\n    // Return a fallback URL or empty string\n    return '';\n  }\n};\n\nconst generateGoogleMapsUrl = (geopositions: GeoPosition[]) => {\n  if (geopositions.length === 0) return '';\n  \n  const origin = geopositions[0];\n  const destination = geopositions[geopositions.length - 1];\n  const waypoints = geopositions.slice(1, -1);\n  \n  let url = 'https://www.google.com/maps/dir/?api=1';\n  url += `&origin=${origin.coordinates[1]},${origin.coordinates[0]}`;\n  url += `&destination=${destination.coordinates[1]},${destination.coordinates[0]}`;\n  \n  if (waypoints.length > 0) {\n    const waypointsStr = waypoints\n      .map(wp => `${wp.coordinates[1]},${wp.coordinates[0]}`)\n      .join('|');\n    url += `&waypoints=${waypointsStr}`;\n  }\n  \n  url += '&travelmode=driving';\n  return url;\n};\n\nexport const generateTripPDF = async (tripDetails: TripDetails) => {\n  // Create PDF document\n  const pdf = new jsPDF({\n    orientation: 'portrait',\n    unit: 'mm',\n    format: 'a4'\n  });\n\n  // Add cover page\n  await addCoverPage(pdf, tripDetails);\n\n  // Add map page\n  if (tripDetails.geopositions.length > 0) {\n    pdf.addPage();\n    await addMapPage(pdf, tripDetails.geopositions);\n  }\n\n  // Add stops pages\n  if (tripDetails.geopositions.length > 0) {\n    pdf.addPage();\n    addStopsPages(pdf, tripDetails.geopositions);\n  }\n\n  // Add AI content pages\n  if (tripDetails.ai_content) {\n    pdf.addPage();\n    addAIContentPages(pdf, tripDetails.ai_content);\n  }\n\n  // Add navigation link\n  if (tripDetails.geopositions.length > 0) {\n    pdf.addPage();\n    let yPos = addPageHeader(pdf, pdf.internal.getCurrentPageInfo().pageNumber, pdf.internal.getNumberOfPages());\n    \n    yPos = addSectionTitle(pdf, 'Navigation', yPos);\n    yPos += 20;\n    \n    const googleMapsUrl = generateGoogleMapsUrl(tripDetails.geopositions);\n    pdf.setTextColor(STYLES.colors.link);\n    pdf.setFontSize(STYLES.fonts.normal);\n    pdf.setFont('helvetica', 'normal');\n    pdf.textWithLink('Open Route in Google Maps', STYLES.spacing.margin, yPos, { url: googleMapsUrl });\n    \n    addPageFooter(pdf);\n  }\n\n  // Save the PDF\n  pdf.save(`zaparound-trip-${tripDetails.title.toLowerCase().replace(/\\s+/g, '-')}.pdf`);\n}; "],"names":["STYLES","primary","secondary","accent","background","link","title","subtitle","heading","normal","small","margin","lineHeight","formatDate","date","Date","toLocaleDateString","year","month","day","cleanText","text","replace","trim","addPageHeader","pdf","pageNumber","totalPages","pageWidth","internal","pageSize","width","setDrawColor","setLineWidth","line","setFontSize","setTextColor","align","addPageFooter","pageHeight","height","today","addSectionTitle","yPos","setFillColor","rect","setFont","generateStaticMapUrl","async","geopositions","markers","map","pos","index","coordinates","join","lngs","lats","center","Math","min","max","generateSecureStaticMapUrl","err","generateTripPDF","tripDetails","jsPDF","orientation","unit","format","logoImage","fetch","then","res","blob","logoImageUrl","URL","createObjectURL","logoWidth","logoHeight","logoX","addImage","error","description","descriptionLines","splitTextToSize","startDate","endDate","dateText","addCoverPage","length","addPage","getNumberOfPages","mapUrl","mapImage","mapImageUrl","addMapPage","getCurrentPageInfo","columnWidth","itemsPerPage","floor","forEach","column","row","xPos","currentYPos","roundedRect","itemHeight","name","titleLines","titleHeight","currentTextPos","descLines","substring","address","Adresse","toFixed","addressLines","addStopsPages","ai_content","content","contentWidth","split","section","startsWith","textLine","addAIContentPages","googleMapsUrl","origin","destination","waypoints","slice","url","wp","generateGoogleMapsUrl","textWithLink","save","toLowerCase"],"mappings":"+GAwBA,MAAMA,EACI,CACNC,QAAS,UACTC,UAAW,UACXC,OAAQ,UACRC,WAAY,UACZC,KAAM,WANJL,EAQG,CACLM,MAAO,GACPC,SAAU,GACVC,QAAS,GACTC,OAAQ,GACRC,MAAO,GAbLV,EAeK,CACPW,OAAQ,GAERC,WAAY,GAKVC,EAAcC,GACX,IAAIC,KAAKD,GAAME,mBAAmB,QAAS,CAChDC,KAAM,UACNC,MAAO,OACPC,IAAK,YAKHC,EAAaC,GACZA,EACEA,EACJC,QAAQ,eAAgB,IACxBA,QAAQ,gBAAiB,IACzBA,QAAQ,OAAQ,KAChBA,QAAQ,UAAW,IACnBA,QAAQ,oBAAqB,MAC7BA,QAAQ,mBAAoB,IAC5BA,QAAQ,mBAAoB,IAC5BA,QAAQ,cAAe,IACvBA,QAAQ,YAAa,IACrBC,OAXe,GAedC,EAAgB,CAACC,EAAYC,EAAoBC,KAC/C,MAAAC,EAAYH,EAAII,SAASC,SAASC,MAYjC,OATHN,EAAAO,aAAahC,EAAcG,QAC/BsB,EAAIQ,aAAa,IACbR,EAAAS,KAAKlC,EAAeW,OAAQ,GAAIiB,EAAY5B,EAAeW,OAAQ,IAGnEc,EAAAU,YAAYnC,EAAaU,OACzBe,EAAAW,aAAapC,EAAcE,WAC/BuB,EAAIJ,KAAK,QAAQK,QAAiBC,IAAcC,EAAY5B,EAAeW,OAAQ,GAAI,CAAE0B,MAAO,UAEzF,EAAA,EAIHC,EAAiBb,IACf,MAAAG,EAAYH,EAAII,SAASC,SAASC,MAClCQ,EAAad,EAAII,SAASC,SAASU,OAGrCf,EAAAO,aAAahC,EAAcG,QAC/BsB,EAAIQ,aAAa,IACbR,EAAAS,KAAKlC,EAAeW,OAAQ4B,EAAa,GAAIX,EAAY5B,EAAeW,OAAQ4B,EAAa,IAG7Fd,EAAAU,YAAYnC,EAAaU,OACzBe,EAAAW,aAAapC,EAAcE,WAC/B,MAAMuC,GAAQ,IAAI1B,MAAOC,mBAAmB,QAAS,CACnDC,KAAM,UACNC,MAAO,OACPC,IAAK,YAEHM,EAAAJ,KAAK,6BAA6BoB,IAASzC,EAAeW,OAAQ4B,EAAa,GAAE,EAIjFG,EAAkB,CAACjB,EAAYnB,EAAeqC,KAC5C,MAAAf,EAAYH,EAAII,SAASC,SAASC,MA6BxC,OA3BIN,EAAAmB,aAAa5C,EAAcI,YAC3BqB,EAAAO,aAAahC,EAAcG,QAC/BsB,EAAIQ,aAAa,IAGbR,EAAAoB,KACF7C,EAAeW,OAAS,EACxBgC,EAAO,EACPf,EAAqC,EAAxB5B,EAAeW,OAAc,GAC1C,GACA,KAIEc,EAAAS,KACFlC,EAAeW,OAAS,EACxBgC,EAAO,EACPf,EAAY5B,EAAeW,OAAS,EACpCgC,EAAO,GAILlB,EAAAU,YAAYnC,EAAaO,UACzBkB,EAAAW,aAAapC,EAAcC,SAC3BwB,EAAAqB,QAAQ,YAAa,QACzBrB,EAAIJ,KAAKf,EAAON,EAAeW,OAAQgC,EAAO,GAEvCA,EAAO,EAAA,EAwQVI,EAAuBC,MAAOC,IAC9B,IAEF,MAAMC,EAAUD,EAAaE,KAAI,CAACC,EAAKC,IAC9B,SAASA,EAAQ,YAAYD,EAAIE,YAAY,MAAMF,EAAIE,YAAY,QACzEC,KAAK,KAGFC,EAAOP,EAAaE,QAAWC,EAAIE,YAAY,KAC/CG,EAAOR,EAAaE,QAAWC,EAAIE,YAAY,KAC/CI,EAA2B,EAC9BC,KAAKC,OAAOJ,GAAQG,KAAKE,OAAOL,IAAS,GACzCG,KAAKC,OAAOH,GAAQE,KAAKE,OAAOJ,IAAS,GAI5C,aAAaK,EACXJ,EACA,EACA,IACA,IACA,qCACAR,SAEKa,GAGA,MAAA,EAAA,GA0BEC,EAAkBhB,MAAOiB,IAE9B,MAAAxC,EAAM,IAAIyC,EAAM,CACpBC,YAAa,WACbC,KAAM,KACNC,OAAQ,OAyBN,QAvVerB,OAAOvB,EAAYwC,KAChC,MAAArC,EAAYH,EAAII,SAASC,SAASC,MAClCQ,EAAad,EAAII,SAASC,SAASU,OACzC,IAAIG,EAAO,GAIP,IACI,MAAA2B,QAAkBC,MAFV,kCAEyBC,MAAKC,GAAOA,EAAIC,SACjDC,EAAeC,IAAIC,gBAAgBP,GAGnCQ,EAAY,GACZC,EAAa,GACbC,GAASpD,EAAYkD,GAAa,EACxCrD,EAAIwD,SAASN,EAAc,MAAOK,EAAOrC,EAAMmC,EAAWC,GAE1DpC,GAAQoC,EAAa,SACdG,GAGPzD,EAAIU,YAAY,IACZV,EAAAW,aAAapC,EAAcC,SAC3BwB,EAAAqB,QAAQ,YAAa,QACrBrB,EAAAJ,KAAK,YAAaO,EAAY,EAAGe,EAAM,CAAEN,MAAO,WAC5CM,GAAA,EAAA,CAiBV,GAbIlB,EAAAU,YAAYnC,EAAaO,UACzBkB,EAAAW,aAAapC,EAAcE,WAC3BuB,EAAAqB,QAAQ,YAAa,UACrBrB,EAAAJ,KAAK,mBAAoBO,EAAY,EAAGe,EAAM,CAAEN,MAAO,WAGnDM,GAAA,GACRlB,EAAIU,YAAY,IACZV,EAAAW,aAAapC,EAAcC,SAC3BwB,EAAAqB,QAAQ,YAAa,QACrBrB,EAAAJ,KAAK4C,EAAY3D,MAAOsB,EAAY,EAAGe,EAAM,CAAEN,MAAO,WAGtD4B,EAAYkB,YAAa,CACnBxC,GAAA,GACJlB,EAAAU,YAAYnC,EAAaS,QACzBgB,EAAAW,aAAapC,EAAcE,WAC3BuB,EAAAqB,QAAQ,YAAa,UACzB,MAAMsC,EAAmB3D,EAAI4D,gBAC3BpB,EAAYkB,YACZvD,EAAqC,EAAxB5B,EAAeW,QAE1Bc,EAAAJ,KAAK+D,EAAkBxD,EAAY,EAAGe,EAAM,CAAEN,MAAO,UAAU,CAIjE,GAAA4B,EAAYqB,WAAarB,EAAYsB,QAAS,CACxC5C,GAAA,GACJlB,EAAAU,YAAYnC,EAAaS,QACzBgB,EAAAW,aAAapC,EAAcC,SAC3BwB,EAAAqB,QAAQ,YAAa,QAEnB,MAAA0C,EAAWvB,EAAYqB,WAAarB,EAAYsB,QAClD,GAAG1E,EAAWoD,EAAYqB,gBAAgBzE,EAAWoD,EAAYsB,WACjEtB,EAAYqB,UACVzE,EAAWoD,EAAYqB,WACvBzE,EAAWoD,EAAYsB,SAEzB9D,EAAAJ,KAAKmE,EAAU5D,EAAY,EAAGe,EAAM,CAAEN,MAAO,UAAU,CAI7DM,EAAOJ,EAAa,GAChBd,EAAAO,aAAahC,EAAcG,QAC/BsB,EAAIQ,aAAa,GACbR,EAAAS,KAAKlC,EAAeW,OAAQgC,EAAMf,EAAY5B,EAAeW,OAAQgC,EAAI,EAwPvE8C,CAAahE,EAAKwC,GAGpBA,EAAYhB,aAAayC,OAAS,IACpCjE,EAAIkE,eAxPW3C,OAAOvB,EAAYwB,KACpC,IAAIN,EAAOnB,EAAcC,EAAK,EAAGA,EAAII,SAAS+D,oBAGvCjD,EAAAD,EAAgBjB,EAAK,oBAAqBkB,GACzCA,GAAA,GAGF,MAAAkD,QAAe9C,EAAqBE,GACpC6C,QAAiBvB,MAAMsB,GAAQrB,MAAKC,GAAOA,EAAIC,SAC/CqB,EAAcnB,IAAIC,gBAAgBiB,GAGpCrE,EAAAwD,SACFc,EACA,MACA/F,EAAeW,OACfgC,EACAlB,EAAII,SAASC,SAASC,MAAiC,EAAxB/B,EAAeW,OAP9B,KAWlB2B,EAAcb,EAAG,EAmOTuE,CAAWvE,EAAKwC,EAAYhB,eAIhCgB,EAAYhB,aAAayC,OAAS,IACpCjE,EAAIkE,UApOc,EAAClE,EAAYwB,KAC7B,IAAAN,EAAOnB,EAAcC,EAAKA,EAAII,SAASoE,qBAAqBvE,WAAYD,EAAII,SAAS+D,oBAGlFjD,EAAAD,EAAgBjB,EAAK,mBAAoBkB,GACxCA,GAAA,GAEF,MAEAuD,GAFYzE,EAAII,SAASC,SAASC,MACkB,EAAxB/B,EAAeW,OACb,IAAM,EAEpCwF,EAAexC,KAAKyC,OAAO3E,EAAII,SAASC,SAASU,OAAS,IAD7C,IAGNS,EAAAoD,SAAQ,CAACjD,EAAKC,KACzB,MAAMiD,EAASjD,EAAQ,EACjBkD,EAAM5C,KAAKyC,MAAO/C,GAAwB,EAAf8C,GAAqB,GAGlD9C,EAAQ,GAAKA,GAAwB,EAAf8C,IAAsB,IAC9C7D,EAAcb,GACdA,EAAIkE,UACGhD,EAAAnB,EAAcC,EAAKA,EAAII,SAASoE,qBAAqBvE,WAAYD,EAAII,SAAS+D,oBAC9EjD,EAAAD,EAAgBjB,EAAK,+BAAgCkB,GACpDA,GAAA,IAGV,MAAM6D,EAAOxG,EAAeW,OAAU2F,GAAUJ,EAAc,IACxDO,EAAc9D,EAjBH,GAiBW4D,EAGxB9E,EAAAmB,aAAa5C,EAAcI,YAC3BqB,EAAAO,aAAahC,EAAcG,QAC/BsB,EAAIQ,aAAa,IACbR,EAAAiF,YAAYF,EAAMC,EAAaP,EAAaS,GAAgB,EAAG,EAAG,MAGlElF,EAAAU,YAAYnC,EAAaS,QACzBgB,EAAAW,aAAapC,EAAcC,SAC3BwB,EAAAqB,QAAQ,YAAa,QAGnB,MAAAxC,EAAQ,GAAG+C,EAAQ,MAAMjC,EAAUgC,EAAIwD,QACvCC,EAAapF,EAAI4D,gBAAgB/E,EAAO4F,EAAc,IACtDY,EAAcD,EAAWnB,OAAS,EAAI,GAAK,EACjDjE,EAAIJ,KAAKwF,EAAYL,EAAO,EAAGC,EAAc,GAGzC,IAAAM,EAAiBN,EAAcK,EAAc,EACjD,GAAI1D,EAAI+B,YAAa,CACf1D,EAAAW,aAAapC,EAAcE,WAC3BuB,EAAAU,YAAYnC,EAAaU,OACzBe,EAAAqB,QAAQ,YAAa,UACnB,MAAAkE,EAAYvF,EAAI4D,gBAAgBjE,EAAUgC,EAAI+B,aAAce,EAAc,IAC5Ec,EAAUtB,OAAS,IACrBsB,EAAUtB,OAAS,EACnBsB,EAAU,GAAKA,EAAU,GAAGC,UAAU,EAAGD,EAAU,GAAGtB,OAAS,GAAK,OAEtEjE,EAAIJ,KAAK2F,EAAWR,EAAO,EAAGO,GACXA,GAAmB,EAAnBC,EAAUtB,OAAc,CAAA,CAIzCjE,EAAAW,aAAapC,EAAcE,WAC3BuB,EAAAU,YAAYnC,EAAaU,OACzBe,EAAAqB,QAAQ,YAAa,UAGnB,MAAAoE,EAAU9D,EAAI+D,QAAU/F,EAAUgC,EAAI+D,SAC1C,GAAG/D,EAAIE,YAAY,GAAG8D,QAAQ,OAAOhE,EAAIE,YAAY,GAAG8D,QAAQ,KAE5DC,EAAe5F,EAAI4D,gBAAgB6B,EAAShB,EAAc,IAC5DmB,EAAa3B,OAAS,IACxB2B,EAAa3B,OAAS,EACtB2B,EAAa,GAAKA,EAAa,GAAGJ,UAAU,EAAGI,EAAa,GAAG3B,OAAS,GAAK,OAE/EjE,EAAIJ,KAAKgG,EAAcb,EAAO,EAAGO,EAAc,IAGjDzE,EAAcb,EAAG,EAuJD6F,CAAA7F,EAAKwC,EAAYhB,eAI7BgB,EAAYsD,aACd9F,EAAIkE,UAxJkB,EAAClE,EAAY+F,KACjC,IAAA7E,EAAOnB,EAAcC,EAAKA,EAAII,SAASoE,qBAAqBvE,WAAYD,EAAII,SAAS+D,oBAGlFjD,EAAAD,EAAgBjB,EAAK,4BAA6BkB,GACjDA,GAAA,GAEF,MACA8E,EADYhG,EAAII,SAASC,SAASC,MACkB,EAAxB/B,EAAeW,OAGhC6G,EACdlG,QAAQ,eAAgB,IACxBoG,MAAM,WAEArB,SAAQ,CAACsB,EAAStE,KACrBA,EAAQ,IAEVf,EAAcb,GACdA,EAAIkE,UACGhD,EAAAnB,EAAcC,EAAKA,EAAII,SAASoE,qBAAqBvE,WAAYD,EAAII,SAAS+D,qBAIzE+B,EAAQD,MAAM,MACtBrB,SAASnE,IAERA,EAAKX,SAGNoB,EAAOlB,EAAII,SAASC,SAASU,OAAS,KACxCF,EAAcb,GACdA,EAAIkE,UACGhD,EAAAnB,EAAcC,EAAKA,EAAII,SAASoE,qBAAqBvE,WAAYD,EAAII,SAAS+D,qBAInF1D,EAAK0F,WAAW,OACdnG,EAAAU,YAAYnC,EAAaM,OACzBmB,EAAAW,aAAapC,EAAcC,SAC3BwB,EAAAqB,QAAQ,YAAa,QAClBZ,EAAAA,EAAK+E,UAAU,IACb/E,EAAK0F,WAAW,QACrBnG,EAAAU,YAAYnC,EAAaO,UACzBkB,EAAAW,aAAapC,EAAcC,SAC3BwB,EAAAqB,QAAQ,YAAa,QAClBZ,EAAAA,EAAK+E,UAAU,IACb/E,EAAK0F,WAAW,SACrBnG,EAAAU,YAAYnC,EAAaQ,SACzBiB,EAAAW,aAAapC,EAAcC,SAC3BwB,EAAAqB,QAAQ,YAAa,QAClBZ,EAAAA,EAAK+E,UAAU,KAElBxF,EAAAU,YAAYnC,EAAaS,QACzBgB,EAAAW,aAAapC,EAAcE,WAC3BuB,EAAAqB,QAAQ,YAAa,WAITrB,EAAI4D,gBAAgBjE,EAAUc,GAAOuF,GAC7CpB,SAASwB,IACbA,EAAStG,SACXE,EAAIJ,KAAKwG,EAAU7H,EAAeW,OAAQgC,GAC1CA,GAAQ3C,EAAeY,WAAA,IAInB+B,GAAA,EAAA,GACT,IAGHL,EAAcb,EAAG,EAkFGqG,CAAArG,EAAKwC,EAAYsD,aAIjCtD,EAAYhB,aAAayC,OAAS,EAAG,CACvCjE,EAAIkE,UACA,IAAAhD,EAAOnB,EAAcC,EAAKA,EAAII,SAASoE,qBAAqBvE,WAAYD,EAAII,SAAS+D,oBAElFjD,EAAAD,EAAgBjB,EAAK,aAAckB,GAClCA,GAAA,GAEF,MAAAoF,EA3DoB,CAAC9E,IACzB,GAAwB,IAAxBA,EAAayC,OAAqB,MAAA,GAEhC,MAAAsC,EAAS/E,EAAa,GACtBgF,EAAchF,EAAaA,EAAayC,OAAS,GACjDwC,EAAYjF,EAAakF,MAAM,GAAG,GAExC,IAAIC,EAAM,yCACHA,GAAA,WAAWJ,EAAO1E,YAAY,MAAM0E,EAAO1E,YAAY,KACvD8E,GAAA,gBAAgBH,EAAY3E,YAAY,MAAM2E,EAAY3E,YAAY,KAEzE4E,EAAUxC,OAAS,IAIrB0C,GAAO,cAHcF,EAClB/E,KAAUkF,GAAA,GAAGA,EAAG/E,YAAY,MAAM+E,EAAG/E,YAAY,OACjDC,KAAK,QAKH,OADA6E,GAAA,sBACAA,CAAA,EAwCiBE,CAAsBrE,EAAYhB,cACpDxB,EAAAW,aAAapC,EAAcK,MAC3BoB,EAAAU,YAAYnC,EAAaS,QACzBgB,EAAAqB,QAAQ,YAAa,UACrBrB,EAAA8G,aAAa,4BAA6BvI,EAAeW,OAAQgC,EAAM,CAAEyF,IAAKL,IAElFzF,EAAcb,EAAG,CAIfA,EAAA+G,KAAK,kBAAkBvE,EAAY3D,MAAMmI,cAAcnH,QAAQ,OAAQ,WAAU"}