import{r}from"../vendor/vendor-react-core.D1hcyiwY.js";import{s as t}from"../components/components-admin.CiIAoamg.js";import{u as s}from"./hooks-use-toast.ts.Dg8obzHg.js";import{u as e}from"../vendor/vendor--react-i18next.DhHVfoav.js";function i(){const[i,a]=r.useState(!1),[n,c]=r.useState(null),{toast:o}=s(),{t:u}=e("profile"),d=r.useRef(0),p=r.useCallback((async()=>{try{const r=Date.now();if(n&&r-d.current<6e4)return{success:!0,subscription:n};a(!0);const{data:{user:s}}=await t.auth.getUser();if(!s)return{success:!1,error:"User not authenticated"};const{data:e,error:i}=await t.functions.invoke("stripe-subscription-details",{body:{userId:s.id}});return i?(o({title:u("toasts.error"),description:u("subscriptionManager.fetchError"),variant:"destructive"}),{success:!1,error:i}):(d.current=r,c(e.subscription),{success:!0,subscription:e.subscription})}catch(r){return o({title:u("toasts.error"),description:u("subscriptionManager.fetchError"),variant:"destructive"}),{success:!1,error:r}}finally{a(!1)}}),[n,o,u]);return{subscription:n,isLoading:i,getSubscriptionDetails:p,updatePaymentMethod:async()=>{try{a(!0);const{data:{user:s}}=await t.auth.getUser();if(!s)return o({title:u("toasts.error"),description:u("subscriptionManager.notLoggedIn"),variant:"destructive"}),{success:!1};try{const r=await t.functions.invoke("stripe-update-payment",{body:{userId:s.id}}),{data:e,error:i}=r;return i?(o({title:u("toasts.error"),description:i.message||u("subscriptionManager.paymentError"),variant:"destructive"}),{success:!1,error:i}):e&&!1===e.success?(o({title:u("toasts.error"),description:e.details||u("subscriptionManager.paymentError"),variant:"destructive"}),{success:!1,error:e.error,details:e.details}):e&&e.url?{success:!0,url:e.url}:(o({title:u("toasts.error"),description:u("subscriptionManager.paymentError"),variant:"destructive"}),{success:!1})}catch(r){return o({title:u("toasts.error"),description:u("subscriptionManager.paymentError"),variant:"destructive"}),{success:!1,error:r}}}catch(r){return o({title:u("toasts.error"),description:r.message||u("subscriptionManager.paymentError"),variant:"destructive"}),{success:!1,error:r}}finally{a(!1)}},cancelSubscription:async()=>{try{a(!0);const{data:{user:s}}=await t.auth.getUser();if(!s)return o({title:u("toasts.error"),description:u("subscriptionManager.notLoggedIn"),variant:"destructive"}),{success:!1};try{const r=await t.functions.invoke("stripe-cancel-subscription",{body:{userId:s.id}}),{data:e,error:i}=r;return i?(o({title:u("toasts.error"),description:i.message||u("subscriptionManager.cancelError"),variant:"destructive"}),n&&c({...n,cancelAtPeriodEnd:!0}),{success:!0}):(n&&c({...n,cancelAtPeriodEnd:!0}),{success:!0})}catch(r){return n&&c({...n,cancelAtPeriodEnd:!0}),{success:!0}}}catch(r){return n&&c({...n,cancelAtPeriodEnd:!0}),{success:!0}}finally{a(!1)}},reactivateSubscription:async()=>{try{a(!0);const{data:{user:s}}=await t.auth.getUser();if(!s)return o({title:u("toasts.error"),description:u("subscriptionManager.notLoggedIn"),variant:"destructive"}),{success:!1};try{const{data:r,error:e}=await t.functions.invoke("reactivate-subscription",{body:{userId:s.id}});return e?(o({title:u("toasts.error"),description:e.message||u("subscriptionManager.reactivateError"),variant:"destructive"}),n&&c({...n,cancelAtPeriodEnd:!1}),{success:!0}):(n&&c({...n,cancelAtPeriodEnd:!1}),{success:!0})}catch(r){return n&&c({...n,cancelAtPeriodEnd:!1}),{success:!0}}}catch(r){return o({title:u("toasts.error"),description:r.message||u("subscriptionManager.reactivateError"),variant:"destructive"}),{success:!1}}finally{a(!1)}},changeSubscriptionPlan:async(r,s)=>{try{a(!0);if(!["zaptrip","zapout","zaproad","zappro"].includes(r))return o({title:u("toasts.error"),description:u("subscriptionManager.changePlanError"),variant:"destructive"}),{success:!1};const{data:{user:i}}=await t.auth.getUser();if(!i)return o({title:u("toasts.error"),description:u("subscriptionManager.notLoggedIn"),variant:"destructive"}),{success:!1};try{const e=await t.functions.invoke("stripe-change-plan",{body:{userId:i.id,planId:r,isYearly:s}}),{data:a,error:n}=e;return n?(o({title:u("toasts.error"),description:n.message||u("subscriptionManager.changePlanError"),variant:"destructive"}),{success:!1,error:n}):a&&!1===a.success?(o({title:u("toasts.error"),description:a.details||u("subscriptionManager.changePlanError"),variant:"destructive"}),{success:!1,error:a.error,details:a.details}):a&&a.subscription?(c(a.subscription),o({title:u("subscriptionManager.changePlanSuccess"),description:u("subscriptionManager.changePlanDescription")}),{success:!0,subscription:a.subscription}):(o({title:u("subscriptionManager.changePlanSuccess"),description:u("subscriptionManager.changePlanDescription")}),await p(),{success:!0})}catch(e){const r=e.message||u("subscriptionManager.changePlanError");return o({title:u("toasts.error"),description:r,variant:"destructive"}),{success:!1,error:e}}}catch(e){return o({title:u("toasts.error"),description:e.message||u("subscriptionManager.changePlanError"),variant:"destructive"}),{success:!1,error:e}}finally{a(!1)}},getBillingHistory:async(r=10)=>{try{a(!0);const{data:{user:s}}=await t.auth.getUser();if(!s)return o({title:u("toasts.error"),description:u("subscriptionManager.notLoggedIn"),variant:"destructive"}),{success:!1,error:"User not authenticated"};const{data:e,error:i}=await t.functions.invoke("stripe-billing-history",{body:{userId:s.id,limit:r}});return i?(o({title:u("toasts.error"),description:u("subscriptionManager.fetchBillingHistoryError"),variant:"destructive"}),{success:!1,error:i}):{success:!0,invoices:e.invoices||[]}}catch(s){return o({title:u("toasts.error"),description:u("subscriptionManager.fetchBillingHistoryError"),variant:"destructive"}),{success:!1,error:s}}finally{a(!1)}}}}new Date(Date.now()+2592e6).toISOString();export{i as u};
//# sourceMappingURL=hooks-usesubscriptionmanager.ts.BQlZZ2ob.js.map
