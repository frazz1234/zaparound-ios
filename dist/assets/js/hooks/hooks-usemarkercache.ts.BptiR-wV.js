import{r as e,R as r}from"../vendor/vendor-react-core.D1hcyiwY.js";import{m as t}from"../vendor/vendor--mapbox-gl.CIg18VY7.js";import{s as a}from"../vendor/vendor-react-dom.BnDkh-2X.js";import{a3 as s,a2 as n,a1 as o}from"../vendor/vendor--lucide-react.DRw9PYsu.js";const i={zapout:"#10b981",zaproad:"#f97316",zaptrip:"#0ea5e9",default:"#6b7280"},l=()=>{const l=e.useRef(new Map),c=e.useRef(null),d=e.useCallback((e=>{c.current=e}),[]),u=e.useCallback((e=>{const t=document.createElement("div");t.className="map-marker",t.style.width="30px",t.style.height="30px",t.style.borderRadius="50%",t.style.background=i[e.type]||i.default,t.style.cursor="pointer",t.style.display="flex",t.style.alignItems="center",t.style.justifyContent="center",t.style.color="white",t.style.fontWeight="bold",t.style.fontSize="14px",t.style.border="2px solid white",t.style.boxShadow="0 2px 4px rgba(0,0,0,0.3)",t.style.transition="box-shadow 0.2s ease";let l="";return"zapout"===e.type?l=a.renderToStaticMarkup(r.createElement(s,{className:"w-5 h-5"})):"zaproad"===e.type?l=a.renderToStaticMarkup(r.createElement(n,{className:"w-5 h-5"})):"zaptrip"===e.type&&(l=a.renderToStaticMarkup(r.createElement(o,{className:"w-5 h-5"}))),t.innerHTML=l,t}),[]);return{setMap:d,updateMarkers:e.useCallback(((e,r)=>{if(!c.current)return;const a=r?e.filter((e=>e.type===r)):e,s=new Set,n=new t.LngLatBounds;let o=!1;return a.forEach((e=>{if(!e.coordinates)return;const[r,a]=e.coordinates;if(!r||!a||isNaN(r)||isNaN(a))return;const i=`${e.type}-${e.id}`;s.add(i);const d=l.current.get(i);if(d){const e=d.marker.getLngLat();e.lng===r&&e.lat===a||(d.marker.setLngLat([r,a]),d.coordinates=[r,a]),d.isVisible||(d.marker.addTo(c.current),d.isVisible=!0)}else{const s=u(e);s.onmouseover=()=>{s.style.zIndex="10",s.style.boxShadow="0 4px 8px rgba(0,0,0,0.3)"},s.onmouseout=()=>{s.style.zIndex="1",s.style.boxShadow="0 2px 4px rgba(0,0,0,0.3)"};const n=new t.Marker(s).setLngLat([r,a]).addTo(c.current);l.current.set(i,{marker:n,tripId:e.id,type:e.type,coordinates:[r,a],isVisible:!0})}n.extend([r,a]),o=!0})),l.current.forEach(((e,r)=>{!s.has(r)&&e.isVisible&&(e.marker.remove(),e.isVisible=!1)})),o&&c.current&&c.current.fitBounds(n,{padding:50,maxZoom:12}),n}),[u]),addMarkerClickHandler:e.useCallback(((e,r)=>{const t=l.current.get(e);if(t){const e=t.marker.getElement();e.removeEventListener("click",r),e.addEventListener("click",r)}}),[]),clearMarkers:e.useCallback((()=>{l.current.forEach((e=>{e.isVisible&&(e.marker.remove(),e.isVisible=!1)}))}),[]),removeMarker:e.useCallback((e=>{const r=l.current.get(e);r&&r.isVisible&&(r.marker.remove(),r.isVisible=!1)}),[]),getMarkerStats:e.useCallback((()=>{const e=l.current.size,r=Array.from(l.current.values()).filter((e=>e.isVisible)).length;return{total:e,visible:r,hidden:e-r}}),[]),cleanup:e.useCallback((()=>{l.current.forEach((e=>{e.isVisible&&e.marker.remove()})),l.current.clear()}),[])}};export{l as u};
//# sourceMappingURL=hooks-usemarkercache.ts.BptiR-wV.js.map
