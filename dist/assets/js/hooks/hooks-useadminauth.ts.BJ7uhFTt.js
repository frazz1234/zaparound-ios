import{r}from"../vendor/vendor-react-core.D1hcyiwY.js";import{s as e}from"../components/components-admin.CiIAoamg.js";import{u as t}from"./hooks-use-toast.ts.Dg8obzHg.js";import{u as i}from"../vendor/vendor--react-i18next.DhHVfoav.js";import{u as o}from"../vendor/vendor--react-router.Gdfmkz0l.js";function s(s={redirectIfNotAdmin:!0}){const a=o(),[n,d]=r.useState(null),[u,c]=r.useState(!0),[m,l]=r.useState(!1),[f,h]=r.useState(null),{toast:p}=t(),{t:A}=i("common");r.useEffect((()=>{v();const{data:{subscription:r}}=e.auth.onAuthStateChange(((r,e)=>{"SIGNED_OUT"!==r&&e||s.redirectIfNotAdmin&&a("/auth")}));return()=>r.unsubscribe()}),[a,s.redirectIfNotAdmin]);const v=async()=>{try{c(!0);const{data:{user:r}}=await e.auth.getUser();if(!r)return s.redirectIfNotAdmin&&a("/auth"),{isAuthorized:!1};const{data:t,error:i}=await e.rpc("is_admin");if(i){l(!1);const{data:t,error:i}=await e.from("user_roles").select("role").eq("user_id",r.id).maybeSingle();if(!i&&t){if(h(t.role),"nosubs"===t.role&&s.redirectIfNotAdmin)return a("/dashboard"),p({title:A("navigation.subscriptionRequired"),description:A("navigation.upgradeForDashboard"),variant:"destructive"}),{isAuthorized:!0,userId:r.id};if("tier1"===t.role||"tier2"===t.role||"tier3"===t.role)return await I(r.id),{isAuthorized:!0,userId:r.id}}return s.redirectIfNotAdmin&&(a("/"),p({title:"Access denied",description:"You don't have permission to access this page.",variant:"destructive"})),{isAuthorized:!1}}const o=!!t;if(l(o),!o&&s.redirectIfNotAdmin){const{data:t,error:i}=await e.from("user_roles").select("role").eq("user_id",r.id).maybeSingle();return!i&&t&&(h(t.role),"tier1"===t.role||"tier2"===t.role||"tier3"===t.role)?(await I(r.id),{isAuthorized:!0,userId:r.id}):(a("/"),p({title:A("navigation.accessDenied"),description:A("navigation.permissionError"),variant:"destructive"}),{isAuthorized:!1})}return await I(r.id),{isAuthorized:o,userId:r.id}}catch(r){return s.redirectIfNotAdmin&&a("/auth"),{isAuthorized:!1}}finally{c(!1)}},I=async r=>{try{const{data:t,error:i,status:o}=await e.from("profiles").select("username, full_name, avatar_url").eq("id",r).single();if(i&&406!==o)throw i;d(t)}catch(t){}};return{loading:u,isAdmin:m,profile:n,checkIsAdmin:async()=>{try{const{data:r,error:t}=await e.rpc("is_admin");return!t&&!!r}catch(r){return!1}},userRole:f}}export{s as u};
//# sourceMappingURL=hooks-useadminauth.ts.BJ7uhFTt.js.map
