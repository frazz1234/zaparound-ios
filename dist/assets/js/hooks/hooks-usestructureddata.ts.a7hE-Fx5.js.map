{"version":3,"file":"hooks-usestructureddata.ts.a7hE-Fx5.js","sources":["../../../../src/hooks/useStructuredData.ts"],"sourcesContent":["import { useMemo } from 'react';\n\ninterface BaseSchema {\n  '@context': string;\n  '@type': string;\n}\n\ninterface TravelServiceSchema extends BaseSchema {\n  name: string;\n  description: string;\n  url: string;\n  provider: {\n    '@type': string;\n    name: string;\n    url: string;\n    logo: string;\n  };\n  areaServed?: string | object;\n  serviceType?: string[];\n  priceRange?: string;\n}\n\ninterface WebPageSchema extends BaseSchema {\n  name: string;\n  description: string;\n  url: string;\n  isPartOf?: object;\n  breadcrumb?: object;\n  mainEntity?: object;\n}\n\ninterface TravelPlanSchema extends BaseSchema {\n  name: string;\n  description: string;\n  itinerary?: object[];\n  totalTime?: string;\n  location?: object[];\n}\n\nexport const useStructuredData = () => {\n  // Organization Schema\n  const organizationSchema = useMemo(() => ({\n    '@context': 'https://schema.org',\n    '@type': 'TravelAgency',\n    name: 'ZapAround',\n    alternateName: 'ZapAround Travel Companion',\n    url: 'https://zaparound.com',\n    logo: {\n      '@type': 'ImageObject',\n      url: 'https://zaparound.com/zaparound-uploads/transparentnoliner.webp',\n      width: 512,\n      height: 512,\n    },\n    description: 'Your Smart Travel Companion. Plan your trips with AI-assisted recommendations and discover the best places to visit or hangout with your friends.',\n    foundingDate: '2024',\n    address: {\n      '@type': 'PostalAddress',\n      addressCountry: 'CA',\n      addressLocality: 'Quebec',\n      addressRegion: 'QC',\n    },\n    contactPoint: {\n      '@type': 'ContactPoint',\n      contactType: 'customer service',\n      url: 'https://zaparound.com/contact',\n      availableLanguage: ['English', 'French', 'Spanish'],\n    },\n    sameAs: [\n      'https://twitter.com/zaparound',\n      'https://www.facebook.com/zaparound',\n      'https://www.instagram.com/zaparound',\n      'https://www.linkedin.com/company/zaparound',\n    ],\n    serviceArea: {\n      '@type': 'GeoShape',\n      name: 'Worldwide',\n    },\n    hasOfferCatalog: {\n      '@type': 'OfferCatalog',\n      name: 'ZapAround Travel Services',\n      itemListElement: [\n        {\n          '@type': 'Offer',\n          itemOffered: {\n            '@type': 'Service',\n            name: 'ZapTrip - Vacation Planning',\n            description: 'AI-powered vacation and trip planning service',\n            serviceType: 'Travel Planning',\n          },\n        },\n        {\n          '@type': 'Offer',\n          itemOffered: {\n            '@type': 'Service',\n            name: 'ZapOut - Hangout Planning',\n            description: 'Local activity and hangout recommendation service',\n            serviceType: 'Activity Planning',\n          },\n        },\n        {\n          '@type': 'Offer',\n          itemOffered: {\n            '@type': 'Service',\n            name: 'ZapRoad - Road Trip Planning',\n            description: 'Comprehensive road trip planning and routing service',\n            serviceType: 'Road Trip Planning',\n          },\n        },\n      ],\n    },\n  }), []);\n\n  // WebSite Schema\n  const websiteSchema = useMemo(() => ({\n    '@context': 'https://schema.org',\n    '@type': 'WebSite',\n    name: 'ZapAround',\n    url: 'https://zaparound.com',\n    description: 'Your Smart Travel Companion for planning trips and discovering amazing places',\n    publisher: organizationSchema,\n    potentialAction: {\n      '@type': 'SearchAction',\n      target: 'https://zaparound.com/search?q={search_term_string}',\n      'query-input': 'required name=search_term_string',\n    },\n    inLanguage: ['en', 'fr', 'es'],\n  }), [organizationSchema]);\n\n  // Travel Service Schema\n  const travelServiceSchema = useMemo((): TravelServiceSchema => ({\n    '@context': 'https://schema.org',\n    '@type': 'TravelAgency',\n    name: 'ZapAround Travel Planning Service',\n    description: 'AI-powered travel planning and recommendation service',\n    url: 'https://zaparound.com',\n    provider: {\n      '@type': 'Organization',\n      name: 'ZapAround',\n      url: 'https://zaparound.com',\n      logo: 'https://zaparound.com/zaparound-uploads/transparentnoliner.webp',\n    },\n    areaServed: {\n      '@type': 'Country',\n      name: 'Worldwide',\n    },\n    serviceType: [\n      'Trip Planning',\n      'Travel Recommendations',\n      'Itinerary Creation',\n      'Activity Discovery',\n      'Road Trip Planning',\n    ],\n    priceRange: '$$',\n  }), []);\n\n  // WebApplication Schema\n  const webApplicationSchema = useMemo(() => ({\n    '@context': 'https://schema.org',\n    '@type': 'WebApplication',\n    name: 'ZapAround',\n    description: 'Smart travel planning web application',\n    url: 'https://zaparound.com',\n    applicationCategory: 'TravelApplication',\n    operatingSystem: 'Web Browser',\n    browserRequirements: 'Requires JavaScript. Requires HTML5.',\n    offers: {\n      '@type': 'Offer',\n      price: '0',\n      priceCurrency: 'USD',\n    },\n    featureList: [\n      'AI-powered trip planning',\n      'Real-time recommendations',\n      'Multi-language support',\n      'Interactive maps',\n      'Budget planning',\n      'Social sharing',\n    ],\n  }), []);\n\n  // FAQ Schema Generator\n  const generateFAQSchema = (faqs: Array<{ question: string; answer: string }>) => ({\n    '@context': 'https://schema.org',\n    '@type': 'FAQPage',\n    mainEntity: faqs.map((faq) => ({\n      '@type': 'Question',\n      name: faq.question,\n      acceptedAnswer: {\n        '@type': 'Answer',\n        text: faq.answer,\n      },\n    })),\n  });\n\n  // Article Schema Generator\n  const generateArticleSchema = (article: {\n    title: string;\n    description: string;\n    content: string;\n    author: string;\n    publishedDate: string;\n    modifiedDate?: string;\n    image?: string;\n    url: string;\n  }) => ({\n    '@context': 'https://schema.org',\n    '@type': 'Article',\n    headline: article.title,\n    description: article.description,\n    articleBody: article.content,\n    author: {\n      '@type': 'Person',\n      name: article.author,\n    },\n    publisher: organizationSchema,\n    datePublished: article.publishedDate,\n    dateModified: article.modifiedDate || article.publishedDate,\n    image: article.image || 'https://zaparound.com/og-image.png',\n    url: article.url,\n    mainEntityOfPage: {\n      '@type': 'WebPage',\n      '@id': article.url,\n    },\n  });\n\n  // Breadcrumb Schema Generator\n  const generateBreadcrumbSchema = (breadcrumbs: Array<{ name: string; url: string }>) => ({\n    '@context': 'https://schema.org',\n    '@type': 'BreadcrumbList',\n    itemListElement: breadcrumbs.map((crumb, index) => {\n      // Handle null/undefined or empty URL\n      if (!crumb.url) {\n        return {\n          '@type': 'ListItem',\n          position: index + 1,\n          name: crumb.name,\n          item: 'https://zaparound.com',\n        };\n      }\n      // Helper: is the URL absolute (http, https, protocol-relative, ftp, mailto, tel)\n      const isAbsoluteUrl = (url: string): boolean => {\n        return (\n          url.startsWith('http://') ||\n          url.startsWith('https://') ||\n          url.startsWith('//') ||\n          url.startsWith('ftp://') ||\n          url.startsWith('mailto:') ||\n          url.startsWith('tel:')\n        );\n      };\n      if (isAbsoluteUrl(crumb.url)) {\n        return {\n          '@type': 'ListItem',\n          position: index + 1,\n          name: crumb.name,\n          item: crumb.url,\n        };\n      }\n      // Otherwise, treat as relative and prepend base URL\n      const baseUrl = 'https://zaparound.com';\n      const normalizedUrl = crumb.url.startsWith('/') ? crumb.url : `/${crumb.url}`;\n      return {\n        '@type': 'ListItem',\n        position: index + 1,\n        name: crumb.name,\n        item: `${baseUrl}${normalizedUrl}`,\n      };\n    }),\n  });\n\n  // Trip Plan Schema Generator\n  const generateTripPlanSchema = (trip: {\n    name: string;\n    description: string;\n    destinations: Array<{ name: string; address?: string; coordinates?: [number, number] }>;\n    duration?: string;\n    activities?: string[];\n  }) => ({\n    '@context': 'https://schema.org',\n    '@type': 'TripPlanning',\n    name: trip.name,\n    description: trip.description,\n    itinerary: trip.destinations.map((dest, index) => ({\n      '@type': 'TouristDestination',\n      name: dest.name,\n      address: dest.address,\n      geo: dest.coordinates ? {\n        '@type': 'GeoCoordinates',\n        latitude: dest.coordinates[1],\n        longitude: dest.coordinates[0],\n      } : undefined,\n    })),\n    totalTime: trip.duration,\n    activity: trip.activities?.map(activity => ({\n      '@type': 'TouristActivity',\n      name: activity,\n    })),\n  });\n\n  return {\n    organizationSchema,\n    websiteSchema,\n    travelServiceSchema,\n    webApplicationSchema,\n    generateFAQSchema,\n    generateArticleSchema,\n    generateBreadcrumbSchema,\n    generateTripPlanSchema,\n  };\n};\n\nexport default useStructuredData;\n"],"names":["useStructuredData","organizationSchema","useMemo","name","alternateName","url","logo","width","height","description","foundingDate","address","addressCountry","addressLocality","addressRegion","contactPoint","contactType","availableLanguage","sameAs","serviceArea","hasOfferCatalog","itemListElement","itemOffered","serviceType","websiteSchema","publisher","potentialAction","target","inLanguage","travelServiceSchema","provider","areaServed","priceRange","webApplicationSchema","applicationCategory","operatingSystem","browserRequirements","offers","price","priceCurrency","featureList","generateFAQSchema","faqs","mainEntity","map","faq","question","acceptedAnswer","text","answer","generateArticleSchema","article","headline","title","articleBody","content","author","datePublished","publishedDate","dateModified","modifiedDate","image","mainEntityOfPage","generateBreadcrumbSchema","breadcrumbs","crumb","index","position","item","startsWith","normalizedUrl","generateTripPlanSchema","trip","itinerary","destinations","dest","geo","coordinates","latitude","longitude","totalTime","duration","activity","activities"],"mappings":"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"}