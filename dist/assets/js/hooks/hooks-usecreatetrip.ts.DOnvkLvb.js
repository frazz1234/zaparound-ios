import{r as t}from"../vendor/vendor-react-core.D1hcyiwY.js";import{u as e}from"./hooks-use-toast.ts.Dg8obzHg.js";import{c as r}from"../utils/utils-tripcreation.ts.VnA1EOFJ.js";import{c as o}from"../utils/utils-zapoutcreation.ts.BIyobya6.js";import{c as s}from"../utils/utils-zaproadcreation.ts.Sn3TFOx8.js";import{s as i}from"../components/components-admin.CiIAoamg.js";import{i as a,r as n}from"../utils/utils-cache.ts.BtmNadnX.js";import{u as c}from"../vendor/vendor--react-i18next.DhHVfoav.js";import{u,b as d,a as p}from"../vendor/vendor--react-router.Gdfmkz0l.js";function l(l,m){const[f,y]=t.useState(!1),{toast:h}=e(),{t:v}=c(),T=u(),g=d(),{lang:j}=p();return{isLoading:f,createTrip:async t=>{try{y(!0);const{data:{user:e}}=await i.auth.getUser();if(!e)throw new Error("No authenticated user found");const{data:c}=await i.from("profiles").select("*").eq("user_id",e.id).maybeSingle();let u;const d=t.tripType;if("ZapOut"===d){const r={...t,tripType:"ZapOut",activityTimes:t.activityTimes||[],activityTypes:t.activityTypes||[],includeLunch:t.includeLunch||!1,includeBudgetPerPerson:t.includeBudgetPerPerson||!1,lunchOption:t.lunchOption||"before",budgetPerPerson:t.budgetPerPerson||"",additionalNeeds:t.additionalNeeds||""};u=await o(r,e,c)}else if("ZapRoad"===d){const r={...t,tripType:"ZapRoad"};u=await s(r,e,c)}else{const o={...t,tripType:"ZapTrip"};u=await r(o,e,c)}await a(e.id),n(e.id);const p={},l=u?.[0]?.id;p.onSuccess&&p.onSuccess(l);const m=`/${j||"en"}/dashboard`;return g.pathname!==m&&T(m),u}catch(e){h({title:v("trip.creation.error"),description:v("trip.creation.errorMessage"),variant:"destructive"});const t={};throw t.onError&&t.onError(e),e}finally{y(!1)}}}}export{l as u};
//# sourceMappingURL=hooks-usecreatetrip.ts.DOnvkLvb.js.map
