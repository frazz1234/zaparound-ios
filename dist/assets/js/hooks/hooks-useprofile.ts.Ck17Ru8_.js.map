{"version":3,"file":"hooks-useprofile.ts.Ck17Ru8_.js","sources":["../../../../src/hooks/useProfile.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { supabase } from \"@/integrations/supabase/client\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { useTranslation } from 'react-i18next';\nimport { userCache, getOrSetCache } from '@/utils/cache';\nimport { Profile } from '@/types/profile';\n\nexport function useProfile() {\n  const navigate = useNavigate();\n  const { toast } = useToast();\n  const { t } = useTranslation('profile');\n  const [loading, setLoading] = useState(true);\n  const [profile, setProfile] = useState<Profile | null>(null);\n  const [date, setDate] = useState<Date | undefined>(undefined);\n  const [emailChangeInProgress, setEmailChangeInProgress] = useState(false);\n\n  // Check if email verification is still pending\n  useEffect(() => {\n    const checkEmailChangeStatus = async () => {\n      try {\n        const { data: { session } } = await supabase.auth.getSession();\n        if (session?.user?.email_confirmed_at && session?.user?.new_email) {\n          setEmailChangeInProgress(true);\n        }\n      } catch (error) {\n        console.error(\"Error checking email change status:\", error);\n      }\n    };\n    \n    checkEmailChangeStatus();\n  }, []);\n\n  const getProfile = async () => {\n    try {\n      setLoading(true);\n      const { data: { user } } = await supabase.auth.getUser();\n      \n      if (!user) {\n        navigate(\"/auth\");\n        return;\n      }\n\n      console.log(\"Fetching profile for user:\", user.id);\n      \n      const profileData = await getOrSetCache(\n        userCache,\n        `profile-${user.id}`,\n        async () => {\n          const { data, error } = await supabase\n            .from('profiles')\n            .select('*')\n            .eq('id', user.id)\n            .maybeSingle();\n\n          if (error) {\n            console.error('Error fetching profile:', error);\n            throw error;\n          }\n          \n          if (data) {\n            return {\n              ...data,\n              medical_conditions: data.medical_conditions || [],\n              dietary_preferences: data.dietary_preferences || [],\n              disabilities: data.disabilities || [],\n              allergies: data.allergies || [],\n              lgbtq_status: data.lgbtq_status || [],\n              language: data.language || 'en',\n              newsletter_subscribed: data.newsletter_subscribed ?? true,\n              email: data.email || user.email // Use database email, fallback to auth email\n            };\n          }\n          return null;\n        },\n        { ttl: 1000 * 60 * 15 } // 15 minutes TTL\n      );\n      \n      if (profileData) {\n        setProfile(profileData);\n        if (profileData.birth_date) {\n          const [year, month, day] = profileData.birth_date.split('-').map(Number);\n          setDate(new Date(year, month - 1, day));\n        }\n      }\n    } catch (error) {\n      console.error('Error in getProfile:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateProfile = async (updates: Partial<Profile>) => {\n    try {\n      setLoading(true);\n      const { data: { user } } = await supabase.auth.getUser();\n      \n      if (!user) {\n        throw new Error('No user found');\n      }\n\n      const { error } = await supabase\n        .from('profiles')\n        .update(updates)\n        .eq('id', user.id);\n\n      if (error) {\n        throw error;\n      }\n\n      // Clear the cache for this user's profile\n      userCache.delete(`profile-${user.id}`);\n      \n      // Refresh the profile data\n      await getProfile();\n      \n      return true;\n    } catch (error) {\n      console.error('Error updating profile:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const syncNewsletterSubscription = async (userId: string, email: string, subscribed: boolean) => {\n    try {\n      // Use the Edge Function to manage subscription\n      await supabase.functions.invoke('manage-newsletter', {\n        body: { \n          email, \n          userId,\n          subscribed \n        }\n      });\n    } catch (error) {\n      console.error('Error syncing newsletter subscription:', error);\n    }\n  };\n\n  useEffect(() => {\n    getProfile();\n  }, []);\n\n  return {\n    profile,\n    setProfile,\n    loading,\n    date,\n    setDate,\n    updateProfile,\n    emailChangeInProgress\n  };\n}\n"],"names":["useProfile","navigate","useNavigate","useToast","t","useTranslation","loading","setLoading","useState","profile","setProfile","date","setDate","emailChangeInProgress","setEmailChangeInProgress","useEffect","async","data","session","supabase","auth","getSession","user","email_confirmed_at","new_email","error","checkEmailChangeStatus","getProfile","getUser","profileData","getOrSetCache","userCache","id","from","select","eq","maybeSingle","medical_conditions","dietary_preferences","disabilities","allergies","lgbtq_status","language","newsletter_subscribed","email","ttl","birth_date","year","month","day","split","map","Number","Date","updateProfile","updates","Error","update","delete"],"mappings":"8WAQO,SAASA,IACd,MAAMC,EAAWC,IACCC,IAClB,MAAMC,EAAEA,GAAMC,EAAe,YACtBC,EAASC,GAAcC,EAAAA,UAAS,IAChCC,EAASC,GAAcF,EAAAA,SAAyB,OAChDG,EAAMC,GAAWJ,EAAAA,cAA2B,IAC5CK,EAAuBC,GAA4BN,EAAAA,UAAS,GAGnEO,EAAAA,WAAU,KACuBC,WACzB,IACI,MAAEC,MAAMC,QAAEA,UAAoBC,EAASC,KAAKC,aAC9CH,GAASI,MAAMC,oBAAsBL,GAASI,MAAME,WACtDV,GAAyB,SAEpBW,GACmD,GAIvCC,EAAA,GACtB,IAEH,MAAMC,EAAaX,UACb,IACFT,GAAW,GACL,MAAEU,MAAMK,KAAEA,UAAiBH,EAASC,KAAKQ,UAE/C,IAAKN,EAEH,YADArB,EAAS,SAMX,MAAM4B,QAAoBC,EACxBC,EACA,WAAWT,EAAKU,MAChBhB,UACE,MAAMC,KAAEA,EAAMQ,MAAAA,SAAgBN,EAC3Bc,KAAK,YACLC,OAAO,KACPC,GAAG,KAAMb,EAAKU,IACdI,cAEH,GAAIX,EAEI,MAAAA,EAGR,OAAIR,EACK,IACFA,EACHoB,mBAAoBpB,EAAKoB,oBAAsB,GAC/CC,oBAAqBrB,EAAKqB,qBAAuB,GACjDC,aAActB,EAAKsB,cAAgB,GACnCC,UAAWvB,EAAKuB,WAAa,GAC7BC,aAAcxB,EAAKwB,cAAgB,GACnCC,SAAUzB,EAAKyB,UAAY,KAC3BC,sBAAuB1B,EAAK0B,wBAAyB,EACrDC,MAAO3B,EAAK2B,OAAStB,EAAKsB,OAGvB,IAAA,GAET,CAAEC,IAAK,MAGT,GAAIhB,IACFnB,EAAWmB,GACPA,EAAYiB,YAAY,CACpB,MAACC,EAAMC,EAAOC,GAAOpB,EAAYiB,WAAWI,MAAM,KAAKC,IAAIC,QACjExC,EAAQ,IAAIyC,KAAKN,EAAMC,EAAQ,EAAGC,GAAI,QAGnCxB,GAED,MAAAA,CAAA,CACN,QACAlB,GAAW,EAAK,GAwDb,OAJPQ,EAAAA,WAAU,KACGY,GAAA,GACV,IAEI,CACLlB,UACAC,aACAJ,UACAK,OACAC,UACA0C,cA1DoBtC,MAAOuC,IACvB,IACFhD,GAAW,GACL,MAAEU,MAAMK,KAAEA,UAAiBH,EAASC,KAAKQ,UAE/C,IAAKN,EACG,MAAA,IAAIkC,MAAM,iBAGlB,MAAM/B,MAAEA,SAAgBN,EACrBc,KAAK,YACLwB,OAAOF,GACPpB,GAAG,KAAMb,EAAKU,IAEjB,GAAIP,EACI,MAAAA,EASD,OALPM,EAAU2B,OAAO,WAAWpC,EAAKU,YAG3BL,KAEC,QACAF,GAED,MAAAA,CAAA,CACN,QACAlB,GAAW,EAAK,GA8BlBM,wBAEJ"}