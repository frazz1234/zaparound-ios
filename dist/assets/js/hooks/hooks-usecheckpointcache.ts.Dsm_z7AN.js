import{r as t}from"../vendor/vendor-react-core.D1hcyiwY.js";import{s as e}from"../components/components-admin.CiIAoamg.js";import{g as o,t as a,c as s,C as r}from"../utils/utils-cache.ts.BtmNadnX.js";import{m as n}from"../vendor/vendor--mapbox-gl.CIg18VY7.js";const i=t=>{if(!t)return null;try{if(Array.isArray(t)&&2===t.length){const[e,o]=t;if("number"==typeof e&&"number"==typeof o)return[e,o]}if("string"==typeof t){try{const e=JSON.parse(t);if(Array.isArray(e)&&2===e.length){const[t,o]=e;if("number"==typeof t&&"number"==typeof o)return[t,o]}}catch{}if(t.includes(",")){const e=t.split(",").map((t=>parseFloat(t.trim())));if(2===e.length&&!isNaN(e[0])&&!isNaN(e[1]))return[e[1],e[0]]}}return null}catch(e){return null}};function c(){const[c,d]=t.useState(!1),p=t.useCallback((async(t,s="driving")=>{const r=`zapout-checkpoints-${t}`;return await o(a,r,(async()=>{const{data:o,error:a}=await e.from("zapout_data").select("*").eq("id",t).single();if(a)throw a;if(!o)throw new Error("No data returned for zapout ID: "+t);const s=i(o.coordinates);let r=[];if(s&&r.push({coordinates:s,name:o.title||"Starting Point",address:o.location||"No address available"}),o.checkpoints)try{const t="string"==typeof o.checkpoints?JSON.parse(o.checkpoints):o.checkpoints;Array.isArray(t)&&t.forEach((t=>{if(t.coordinates){const e=i(t.coordinates);e&&r.push({coordinates:e,name:t.name||t.place_name||"Unknown Location",address:t.Adresse||t.address||"No address available"})}}))}catch(n){}if(o.geoposition)try{const t="string"==typeof o.geoposition?JSON.parse(o.geoposition):o.geoposition;if(Array.isArray(t)){const e=s?1:0;t.slice(e).forEach((t=>{if(t.coordinates){let e;e=Array.isArray(t.coordinates)&&2===t.coordinates.length?t.coordinates:i(t.coordinates),e&&r.push({coordinates:e,name:t.place_name||t.name||t.location||t.city||"Unknown Location",address:t.Adresse||t.place||t.formatted_address||t.full_address||"No address available"})}}))}}catch(n){}return{checkpoints:r,lastUpdated:Date.now()}}),{ttl:6e5})}),[]),l=t.useCallback((async(t,s="driving")=>{const r=`zaproad-checkpoints-${t}-${s}`;return await o(a,r,(async()=>{const{data:o,error:a}=await e.from("zaproad_data").select("*").eq("id",t).single();if(a)throw a;if(!o)throw new Error("No data returned for zaproad ID: "+t);const r=i(o.starting_city_coordinates),c=o.end_city_coordinates?i(o.end_city_coordinates):null;let d=[],p=[];if(r&&(d.push({coordinates:r,name:o.starting_city||"Starting Point",address:o.starting_city||"No address available"}),p.push(r)),c&&(d.push({coordinates:c,name:o.end_city||"End Point",address:o.end_city||"No address available"}),p.push(c)),o.stopover_cities)try{const t="string"==typeof o.stopover_cities?JSON.parse(o.stopover_cities):o.stopover_cities;Array.isArray(t)&&t.forEach((t=>{if(t.coordinates){const e=i(t.coordinates);e&&(d.push({coordinates:e,name:t.name||"Stopover",address:t.name||"No address available"}),p.push(e))}}))}catch(h){}let l=null;if(p.length>=2)try{const t=p.map((t=>t.join(","))).join(";"),e=await fetch(`https://api.mapbox.com/directions/v5/mapbox/${s}/${t}?geometries=geojson&overview=full&radiuses=${p.map((()=>"50")).join(";")}&approaches=${p.map((()=>"curb")).join(";")}&waypoints=${p.map(((t,e)=>e)).join(";")}&access_token=${n.accessToken}`),o=await e.json();o.routes&&o.routes.length>0&&(l=o.routes[0].geometry.coordinates)}catch(f){}return{checkpoints:d,routeGeometry:l,lastUpdated:Date.now()}}),{ttl:6e5})}),[]),h=t.useCallback((async t=>{const s=`zaptrip-checkpoints-${t}`;return await o(a,s,(async()=>{const{data:o,error:a}=await e.from("trips").select("*").eq("id",t).single();if(a)throw a;if(!o)throw new Error("No data returned for zaptrip ID: "+t);const s=i(o.coordinates);let r=[];if(s&&r.push({coordinates:s,name:o.title||"Starting Point",address:o.location||"No address available"}),o.checkpoints)try{const t="string"==typeof o.checkpoints?JSON.parse(o.checkpoints):o.checkpoints;Array.isArray(t)&&t.forEach((t=>{if(t.coordinates){const e=i(t.coordinates);e&&r.push({coordinates:e,name:t.name||t.place_name||"Unknown Location",address:t.Adresse||t.address||"No address available"})}}))}catch(n){}if(o.geoposition)try{const t="string"==typeof o.geoposition?JSON.parse(o.geoposition):o.geoposition;if(Array.isArray(t)){const e=s?1:0;t.slice(e).forEach((t=>{if(t.coordinates){let e;e=Array.isArray(t.coordinates)&&2===t.coordinates.length?t.coordinates:i(t.coordinates),e&&r.push({coordinates:e,name:t.place_name||t.name||t.location||t.city||"Unknown Location",address:t.Adresse||t.place||t.formatted_address||t.full_address||"No address available"})}}))}}catch(n){}return{checkpoints:r,lastUpdated:Date.now()}}),{ttl:6e5})}),[]),f=t.useCallback(((t,e)=>{const o=`${e}-checkpoints-${t}`;a.delete(o)}),[]),u=t.useCallback((()=>{Array.from(a.keys()).forEach((t=>{t.includes("-checkpoints-")&&a.delete(t)}))}),[]);return t.useEffect((()=>{const t=s.subscribe(r.CHECKPOINTS_INVALIDATED,(()=>{u()})),e=s.subscribe(r.TRIP_CREATED,(()=>{u()}));return()=>{t(),e()}}),[u]),{loading:c,fetchZapoutCheckpoints:p,fetchZaproadCheckpoints:l,fetchZaptripCheckpoints:h,invalidateCheckpointCache:f,clearAllCheckpointCaches:u}}export{c as u};
//# sourceMappingURL=hooks-usecheckpointcache.ts.Dsm_z7AN.js.map
