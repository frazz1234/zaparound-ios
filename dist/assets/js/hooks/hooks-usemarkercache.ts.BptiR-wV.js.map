{"version":3,"file":"hooks-usemarkercache.ts.BptiR-wV.js","sources":["../../../../src/hooks/useMarkerCache.ts"],"sourcesContent":["import { useRef, useCallback } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport ReactDOMServer from 'react-dom/server';\nimport { CableCar, Car, PlaneTakeoff } from 'lucide-react';\nimport React from 'react';\n\ninterface TripMarker {\n  id: string;\n  type: 'zapout' | 'zaproad' | 'zaptrip';\n  coordinates: [number, number];\n  title: string;\n  location?: string;\n}\n\ninterface CachedMarker {\n  marker: mapboxgl.Marker;\n  tripId: string;\n  type: string;\n  coordinates: [number, number];\n  isVisible: boolean;\n}\n\nconst TRIP_TYPE_COLORS = {\n  zapout: '#10b981',\n  zaproad: '#f97316', \n  zaptrip: '#0ea5e9',\n  default: '#6b7280'\n};\n\nexport const useMarkerCache = () => {\n  const markerCache = useRef<Map<string, CachedMarker>>(new Map());\n  const mapRef = useRef<mapboxgl.Map | null>(null);\n\n  // Set the map reference\n  const setMap = useCallback((map: mapboxgl.Map | null) => {\n    mapRef.current = map;\n  }, []);\n\n  // Create marker element with optimized rendering\n  const createMarkerElement = useCallback((trip: TripMarker) => {\n    const markerEl = document.createElement('div');\n    markerEl.className = 'map-marker';\n    markerEl.style.width = '30px';\n    markerEl.style.height = '30px';\n    markerEl.style.borderRadius = '50%';\n    markerEl.style.background = TRIP_TYPE_COLORS[trip.type] || TRIP_TYPE_COLORS.default;\n    markerEl.style.cursor = 'pointer';\n    markerEl.style.display = 'flex';\n    markerEl.style.alignItems = 'center';\n    markerEl.style.justifyContent = 'center';\n    markerEl.style.color = 'white';\n    markerEl.style.fontWeight = 'bold';\n    markerEl.style.fontSize = '14px';\n    markerEl.style.border = '2px solid white';\n    markerEl.style.boxShadow = '0 2px 4px rgba(0,0,0,0.3)';\n    markerEl.style.transition = 'box-shadow 0.2s ease';\n    \n    // Use icons instead of letters for better performance\n    let iconMarkup = '';\n    if (trip.type === 'zapout') {\n      iconMarkup = ReactDOMServer.renderToStaticMarkup(React.createElement(CableCar, { className: \"w-5 h-5\" }));\n    } else if (trip.type === 'zaproad') {\n      iconMarkup = ReactDOMServer.renderToStaticMarkup(React.createElement(Car, { className: \"w-5 h-5\" }));\n    } else if (trip.type === 'zaptrip') {\n      iconMarkup = ReactDOMServer.renderToStaticMarkup(React.createElement(PlaneTakeoff, { className: \"w-5 h-5\" }));\n    }\n    markerEl.innerHTML = iconMarkup;\n    \n    return markerEl;\n  }, []);\n\n  // Update markers efficiently\n  const updateMarkers = useCallback((trips: TripMarker[], activeFilter?: string | null) => {\n    if (!mapRef.current) return;\n\n    const filteredTrips = activeFilter \n      ? trips.filter(trip => trip.type === activeFilter)\n      : trips;\n\n    const newMarkerIds = new Set<string>();\n    const bounds = new mapboxgl.LngLatBounds();\n    let hasValidCoordinates = false;\n\n    // Process each trip\n    filteredTrips.forEach(trip => {\n      if (!trip.coordinates) return;\n      \n      const [lng, lat] = trip.coordinates;\n      if (!lng || !lat || isNaN(lng) || isNaN(lat)) return;\n\n      const markerId = `${trip.type}-${trip.id}`;\n      newMarkerIds.add(markerId);\n\n      // Check if marker already exists and is in the right position\n      const existingMarker = markerCache.current.get(markerId);\n      \n      if (existingMarker) {\n        const currentLngLat = existingMarker.marker.getLngLat();\n        \n        // Update position if needed\n        if (currentLngLat.lng !== lng || currentLngLat.lat !== lat) {\n          existingMarker.marker.setLngLat([lng, lat]);\n          existingMarker.coordinates = [lng, lat];\n        }\n        \n        // Show marker if it was hidden\n        if (!existingMarker.isVisible) {\n          existingMarker.marker.addTo(mapRef.current!);\n          existingMarker.isVisible = true;\n        }\n      } else {\n        // Create new marker\n        const markerEl = createMarkerElement(trip);\n        \n        // Add hover effects\n        markerEl.onmouseover = () => {\n          markerEl.style.zIndex = '10';\n          markerEl.style.boxShadow = '0 4px 8px rgba(0,0,0,0.3)';\n        };\n        markerEl.onmouseout = () => {\n          markerEl.style.zIndex = '1';\n          markerEl.style.boxShadow = '0 2px 4px rgba(0,0,0,0.3)';\n        };\n\n        const marker = new mapboxgl.Marker(markerEl)\n          .setLngLat([lng, lat])\n          .addTo(mapRef.current!);\n\n        // Store in cache\n        markerCache.current.set(markerId, {\n          marker,\n          tripId: trip.id,\n          type: trip.type,\n          coordinates: [lng, lat],\n          isVisible: true\n        });\n      }\n\n      // Extend bounds\n      bounds.extend([lng, lat]);\n      hasValidCoordinates = true;\n    });\n\n    // Hide markers that are no longer needed\n    markerCache.current.forEach((cachedMarker, markerId) => {\n      if (!newMarkerIds.has(markerId) && cachedMarker.isVisible) {\n        cachedMarker.marker.remove();\n        cachedMarker.isVisible = false;\n      }\n    });\n\n    // Fit bounds if we have valid coordinates\n    if (hasValidCoordinates && mapRef.current) {\n      mapRef.current.fitBounds(bounds, {\n        padding: 50,\n        maxZoom: 12,\n      });\n    }\n\n    return bounds;\n  }, [createMarkerElement]);\n\n  // Add click handler to marker\n  const addMarkerClickHandler = useCallback((markerId: string, onClick: () => void) => {\n    const cachedMarker = markerCache.current.get(markerId);\n    if (cachedMarker) {\n      const element = cachedMarker.marker.getElement();\n      // Remove existing listeners to prevent duplicates\n      element.removeEventListener('click', onClick);\n      element.addEventListener('click', onClick);\n    }\n  }, []);\n\n  // Clear all markers\n  const clearMarkers = useCallback(() => {\n    markerCache.current.forEach((cachedMarker) => {\n      if (cachedMarker.isVisible) {\n        cachedMarker.marker.remove();\n        cachedMarker.isVisible = false;\n      }\n    });\n  }, []);\n\n  // Remove specific marker\n  const removeMarker = useCallback((markerId: string) => {\n    const cachedMarker = markerCache.current.get(markerId);\n    if (cachedMarker && cachedMarker.isVisible) {\n      cachedMarker.marker.remove();\n      cachedMarker.isVisible = false;\n    }\n  }, []);\n\n  // Get marker statistics\n  const getMarkerStats = useCallback(() => {\n    const total = markerCache.current.size;\n    const visible = Array.from(markerCache.current.values()).filter(m => m.isVisible).length;\n    return { total, visible, hidden: total - visible };\n  }, []);\n\n  // Cleanup on unmount\n  const cleanup = useCallback(() => {\n    markerCache.current.forEach((cachedMarker) => {\n      if (cachedMarker.isVisible) {\n        cachedMarker.marker.remove();\n      }\n    });\n    markerCache.current.clear();\n  }, []);\n\n  return {\n    setMap,\n    updateMarkers,\n    addMarkerClickHandler,\n    clearMarkers,\n    removeMarker,\n    getMarkerStats,\n    cleanup\n  };\n}; "],"names":["TRIP_TYPE_COLORS","zapout","zaproad","zaptrip","default","useMarkerCache","markerCache","useRef","Map","mapRef","setMap","useCallback","map","current","createMarkerElement","trip","markerEl","document","createElement","className","style","width","height","borderRadius","background","type","cursor","display","alignItems","justifyContent","color","fontWeight","fontSize","border","boxShadow","transition","iconMarkup","ReactDOMServer","renderToStaticMarkup","React","CableCar","Car","PlaneTakeoff","innerHTML","updateMarkers","trips","activeFilter","filteredTrips","filter","newMarkerIds","Set","bounds","mapboxgl","LngLatBounds","hasValidCoordinates","forEach","coordinates","lng","lat","isNaN","markerId","id","add","existingMarker","get","currentLngLat","marker","getLngLat","setLngLat","isVisible","addTo","onmouseover","zIndex","onmouseout","Marker","set","tripId","extend","cachedMarker","has","remove","fitBounds","padding","maxZoom","addMarkerClickHandler","onClick","element","getElement","removeEventListener","addEventListener","clearMarkers","removeMarker","getMarkerStats","total","size","visible","Array","from","values","m","length","hidden","cleanup","clear"],"mappings":"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"}