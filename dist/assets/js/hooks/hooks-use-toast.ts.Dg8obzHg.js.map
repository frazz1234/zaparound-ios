{"version":3,"file":"hooks-use-toast.ts.Dg8obzHg.js","sources":["../../../../src/hooks/use-toast.ts"],"sourcesContent":["import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 3\nconst TOAST_REMOVE_DELAY = 5000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  // Get the current position of this toast in the list\n  const toastIndex = memoryState.toasts.findIndex(t => t.id === toastId);\n  // Add a small delay for each toast based on its position (newer toasts stay longer)\n  const positionAdjustment = Math.max(0, memoryState.toasts.length - 1 - toastIndex) * 750;\n  \n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY + positionAdjustment)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n"],"names":["count","toastTimeouts","Map","addToRemoveQueue","toastId","has","toastIndex","memoryState","toasts","findIndex","t","id","positionAdjustment","Math","max","length","timeout","setTimeout","delete","dispatch","type","set","reducer","state","action","toast","slice","map","forEach","open","filter","listeners","listener","props","Number","MAX_SAFE_INTEGER","toString","dismiss","onOpenChange","update","useToast","setState","React.useState","React.useEffect","push","index","indexOf","splice"],"mappings":"4DAwBA,IAAIA,EAAQ,EA+BZ,MAAMC,MAAoBC,IAEpBC,EAAoBC,IACpB,GAAAH,EAAcI,IAAID,GACpB,OAIF,MAAME,EAAaC,EAAYC,OAAOC,WAAeC,GAAAA,EAAEC,KAAOP,IAExDQ,EAA+E,IAA1DC,KAAKC,IAAI,EAAGP,EAAYC,OAAOO,OAAS,EAAIT,GAEjEU,EAAUC,YAAW,KACzBhB,EAAciB,OAAOd,GACZe,EAAA,CACPC,KAAM,eACNhB,WACD,GAhEsB,IAiEDQ,GAEVX,EAAAoB,IAAIjB,EAASY,EAAO,EAGvBM,EAAU,CAACC,EAAcC,KACpC,OAAQA,EAAOJ,MACb,IAAK,YACI,MAAA,IACFG,EACHf,OAAQ,CAACgB,EAAOC,SAAUF,EAAMf,QAAQkB,MAAM,EA5ElC,IA+EhB,IAAK,eACI,MAAA,IACFH,EACHf,OAAQe,EAAMf,OAAOmB,KAAKjB,GACxBA,EAAEC,KAAOa,EAAOC,MAAMd,GAAK,IAAKD,KAAMc,EAAOC,OAAUf,KAI7D,IAAK,gBAAiB,CACd,MAAAN,QAAEA,GAAYoB,EAYb,OARHpB,EACFD,EAAiBC,GAEXmB,EAAAf,OAAOoB,SAASH,IACpBtB,EAAiBsB,EAAMd,GAAE,IAItB,IACFY,EACHf,OAAQe,EAAMf,OAAOmB,KAAKjB,GACxBA,EAAEC,KAAOP,QAAuB,IAAZA,EAChB,IACKM,EACHmB,MAAM,GAERnB,IAER,CAEF,IAAK,eACC,YAAmB,IAAnBc,EAAOpB,QACF,IACFmB,EACHf,OAAQ,IAGL,IACFe,EACHf,OAAQe,EAAMf,OAAOsB,QAAQpB,GAAMA,EAAEC,KAAOa,EAAOpB,WACrD,EAIA2B,EAA2C,GAEjD,IAAIxB,EAAqB,CAAEC,OAAQ,IAEnC,SAASW,EAASK,GACFjB,EAAAe,EAAQf,EAAaiB,GACzBO,EAAAH,SAASI,IACjBA,EAASzB,EAAW,GAExB,CAIA,SAASkB,MAAWQ,IAClB,MAAMtB,GAxHGX,GAAAA,EAAQ,GAAKkC,OAAOC,iBACtBnC,EAAMoC,YA8HPC,EAAU,IAAMlB,EAAS,CAAEC,KAAM,gBAAiBhB,QAASO,IAc1D,OAZEQ,EAAA,CACPC,KAAM,YACNK,MAAO,IACFQ,EACHtB,KACAkB,MAAM,EACNS,aAAeT,IACRA,GAAcQ,GAAA,KAKlB,CACL1B,KACA0B,UACAE,OAtBcN,GACdd,EAAS,CACPC,KAAM,eACNK,MAAO,IAAKQ,EAAOtB,QAqBzB,CAEA,SAAS6B,IACP,MAAOjB,EAAOkB,GAAYC,EAAAA,SAAsBnC,GAYzC,OAVPoC,EAAAA,WAAgB,KACdZ,EAAUa,KAAKH,GACR,KACC,MAAAI,EAAQd,EAAUe,QAAQL,GAC5BI,GAAQ,GACAd,EAAAgB,OAAOF,EAAO,EAAC,IAG5B,CAACtB,IAEG,IACFA,EACHE,QACAY,QAAUjC,GAAqBe,EAAS,CAAEC,KAAM,gBAAiBhB,YAErE"}