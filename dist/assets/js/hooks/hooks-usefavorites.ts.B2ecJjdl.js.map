{"version":3,"file":"hooks-usefavorites.ts.B2ecJjdl.js","sources":["../../../../src/hooks/useFavorites.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { supabase } from '../integrations/supabase/client';\nimport { useToast } from './use-toast';\nimport { cacheEventManager, CACHE_EVENTS, invalidateFavoriteCaches } from '../utils/cache';\n\nexport interface FavoritePlace {\n  id: number;\n  place_id: string;\n  place_name: string;\n  place_address: string;\n  place_rating: number;\n  place_lat: number;\n  place_lng: number;\n  place_types: string[];\n  created_at: string;\n}\n\nexport function useFavorites() {\n  const [favorites, setFavorites] = useState<FavoritePlace[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const { toast } = useToast();\n\n  // Fetch favorites from database\n  const fetchFavorites = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        setFavorites([]);\n        return;\n      }\n\n      const { data, error } = await supabase\n        .from('favorites')\n        .select('*')\n        .eq('user_id', user.id)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n\n      setFavorites(data || []);\n    } catch (err: any) {\n      console.error('Error fetching favorites:', err);\n      setError(err.message || 'Failed to fetch favorites');\n      toast({\n        title: 'Error',\n        description: 'Failed to load favorites. Please try again.',\n        variant: 'destructive',\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, [toast]);\n\n  // Add favorite\n  const addFavorite = useCallback(async (favoriteData: Omit<FavoritePlace, 'id' | 'created_at'>) => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        toast({\n          title: 'Login Required',\n          description: 'Please log in to save favorites.',\n          variant: 'destructive',\n        });\n        return false;\n      }\n\n      const { data, error } = await supabase\n        .from('favorites')\n        .insert([{\n          user_id: user.id,\n          ...favoriteData\n        }])\n        .select()\n        .single();\n\n      if (error) throw error;\n\n      // Update local state\n      setFavorites(prev => [data, ...prev]);\n\n      // Emit cache invalidation events\n      cacheEventManager.emit(CACHE_EVENTS.FAVORITE_ADDED);\n      await invalidateFavoriteCaches(user.id);\n\n      toast({\n        title: 'Added to Favorites',\n        description: 'Place added to your favorites.',\n      });\n\n      return true;\n    } catch (err: any) {\n      console.error('Error adding favorite:', err);\n      toast({\n        title: 'Error',\n        description: 'Failed to add favorite.',\n        variant: 'destructive',\n      });\n      return false;\n    }\n  }, [toast]);\n\n  // Remove favorite\n  const removeFavorite = useCallback(async (favoriteId: number) => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        console.error('No user found for removing favorite');\n        return false;\n      }\n\n      const { error } = await supabase\n        .from('favorites')\n        .delete()\n        .eq('id', favoriteId);\n\n      if (error) throw error;\n\n      // Update local state\n      setFavorites(prev => prev.filter(fav => fav.id !== favoriteId));\n\n      // Emit cache invalidation events\n      cacheEventManager.emit(CACHE_EVENTS.FAVORITE_REMOVED);\n      await invalidateFavoriteCaches(user.id);\n\n      toast({\n        title: 'Removed from Favorites',\n        description: 'Place removed from your favorites.',\n      });\n\n      return true;\n    } catch (err: any) {\n      console.error('Error removing favorite:', err);\n      toast({\n        title: 'Error',\n        description: 'Failed to remove favorite.',\n        variant: 'destructive',\n      });\n      return false;\n    }\n  }, [toast]);\n\n  // Check if a place is favorited\n  const isFavorited = useCallback((placeId: string) => {\n    return favorites.some(fav => fav.place_id === placeId);\n  }, [favorites]);\n\n  // Toggle favorite status\n  const toggleFavorite = useCallback(async (favoriteData: Omit<FavoritePlace, 'id' | 'created_at'>) => {\n    const existingFavorite = favorites.find(fav => fav.place_id === favoriteData.place_id);\n    \n    if (existingFavorite) {\n      return await removeFavorite(existingFavorite.id);\n    } else {\n      return await addFavorite(favoriteData);\n    }\n  }, [favorites, addFavorite, removeFavorite]);\n\n  // Listen for cache invalidation events\n  useEffect(() => {\n    const unsubscribeFavoriteAdded = cacheEventManager.subscribe(CACHE_EVENTS.FAVORITE_ADDED, () => {\n      console.log('Favorite added event received, refreshing favorites...');\n      fetchFavorites();\n    });\n\n    const unsubscribeFavoriteRemoved = cacheEventManager.subscribe(CACHE_EVENTS.FAVORITE_REMOVED, () => {\n      console.log('Favorite removed event received, refreshing favorites...');\n      fetchFavorites();\n    });\n\n    const unsubscribeFavoritesInvalidated = cacheEventManager.subscribe(CACHE_EVENTS.FAVORITES_INVALIDATED, () => {\n      console.log('Favorites invalidated event received, refreshing favorites...');\n      fetchFavorites();\n    });\n\n    return () => {\n      unsubscribeFavoriteAdded();\n      unsubscribeFavoriteRemoved();\n      unsubscribeFavoritesInvalidated();\n    };\n  }, [fetchFavorites]);\n\n  // Initialize favorites on mount\n  useEffect(() => {\n    fetchFavorites();\n  }, [fetchFavorites]);\n\n  return {\n    favorites,\n    loading,\n    error,\n    addFavorite,\n    removeFavorite,\n    toggleFavorite,\n    isFavorited,\n    refreshFavorites: fetchFavorites,\n  };\n} "],"names":["useFavorites","favorites","setFavorites","useState","loading","setLoading","error","setError","toast","useToast","fetchFavorites","useCallback","async","data","user","supabase","auth","getUser","from","select","eq","id","order","ascending","err","message","title","description","variant","addFavorite","favoriteData","insert","user_id","single","prev","cacheEventManager","emit","CACHE_EVENTS","FAVORITE_ADDED","invalidateFavoriteCaches","removeFavorite","favoriteId","delete","filter","fav","FAVORITE_REMOVED","isFavorited","placeId","some","place_id","toggleFavorite","existingFavorite","find","useEffect","unsubscribeFavoriteAdded","subscribe","unsubscribeFavoriteRemoved","unsubscribeFavoritesInvalidated","FAVORITES_INVALIDATED","refreshFavorites"],"mappings":"sPAiBO,SAASA,IACd,MAAOC,EAAWC,GAAgBC,EAAAA,SAA0B,KACrDC,EAASC,GAAcF,EAAAA,UAAS,IAChCG,EAAOC,GAAYJ,EAAAA,SAAwB,OAC5CK,MAAEA,GAAUC,IAGZC,EAAiBC,EAAAA,aAAYC,UAC7B,IACFP,GAAW,GACXE,EAAS,MAEH,MAAEM,MAAMC,KAAEA,UAAiBC,EAASC,KAAKC,UAC/C,IAAKH,EAEH,YADAZ,EAAa,IAIT,MAAAW,KAAEA,EAAMP,MAAAA,SAAgBS,EAC3BG,KAAK,aACLC,OAAO,KACPC,GAAG,UAAWN,EAAKO,IACnBC,MAAM,aAAc,CAAEC,WAAW,IAEpC,GAAIjB,EAAaA,MAAAA,EAEJJ,EAAAW,GAAQ,UACdW,GAEEjB,EAAAiB,EAAIC,SAAW,6BAClBjB,EAAA,CACJkB,MAAO,QACPC,YAAa,8CACbC,QAAS,eACV,CACD,QACAvB,GAAW,EAAK,IAEjB,CAACG,IAGEqB,EAAclB,eAAYC,MAAOkB,IACjC,IACI,MAAEjB,MAAMC,KAAEA,UAAiBC,EAASC,KAAKC,UAC/C,IAAKH,EAMI,OALDN,EAAA,CACJkB,MAAO,iBACPC,YAAa,mCACbC,QAAS,iBAEJ,EAGH,MAAAf,KAAEA,EAAMP,MAAAA,SAAgBS,EAC3BG,KAAK,aACLa,OAAO,CAAC,CACPC,QAASlB,EAAKO,MACXS,KAEJX,SACAc,SAEH,GAAI3B,EAAaA,MAAAA,EAcV,OAXPJ,GAAqBgC,GAAA,CAACrB,KAASqB,KAGbC,EAAAC,KAAKC,EAAaC,sBAC9BC,EAAyBzB,EAAKO,IAE9Bb,EAAA,CACJkB,MAAO,qBACPC,YAAa,oCAGR,QACAH,GAOA,OALDhB,EAAA,CACJkB,MAAO,QACPC,YAAa,0BACbC,QAAS,iBAEJ,CAAA,IAER,CAACpB,IAGEgC,EAAiB7B,eAAYC,MAAO6B,IACpC,IACI,MAAE5B,MAAMC,KAAEA,UAAiBC,EAASC,KAAKC,UAC/C,IAAKH,EAEI,OAAA,EAGT,MAAQR,MAAAA,SAAgBS,EACrBG,KAAK,aACLwB,SACAtB,GAAG,KAAMqB,GAEZ,GAAInC,EAAaA,MAAAA,EAcV,OAXPJ,MAAqBgC,EAAKS,WAAcC,EAAIvB,KAAOoB,MAGjCN,EAAAC,KAAKC,EAAaQ,wBAC9BN,EAAyBzB,EAAKO,IAE9Bb,EAAA,CACJkB,MAAO,yBACPC,YAAa,wCAGR,QACAH,GAOA,OALDhB,EAAA,CACJkB,MAAO,QACPC,YAAa,6BACbC,QAAS,iBAEJ,CAAA,IAER,CAACpB,IAGEsC,EAAcnC,eAAaoC,GACxB9C,EAAU+C,MAAYJ,GAAAA,EAAIK,WAAaF,KAC7C,CAAC9C,IAGEiD,EAAiBvC,eAAYC,MAAOkB,IACxC,MAAMqB,EAAmBlD,EAAUmD,SAAYR,EAAIK,WAAanB,EAAamB,WAE7E,OAAIE,QACWX,EAAeW,EAAiB9B,UAEhCQ,EAAYC,EAAY,GAEtC,CAAC7B,EAAW4B,EAAaW,IA+BrB,OA5BPa,EAAAA,WAAU,KACR,MAAMC,EAA2BnB,EAAkBoB,UAAUlB,EAAaC,gBAAgB,KAEzE5B,GAAA,IAGX8C,EAA6BrB,EAAkBoB,UAAUlB,EAAaQ,kBAAkB,KAE7EnC,GAAA,IAGX+C,EAAkCtB,EAAkBoB,UAAUlB,EAAaqB,uBAAuB,KAEvFhD,GAAA,IAGjB,MAAO,KACoB4C,IACEE,IACKC,GAAA,CAClC,GACC,CAAC/C,IAGJ2C,EAAAA,WAAU,KACO3C,GAAA,GACd,CAACA,IAEG,CACLT,YACAG,UACAE,QACAuB,cACAW,iBACAU,iBACAJ,cACAa,iBAAkBjD,EAEtB"}