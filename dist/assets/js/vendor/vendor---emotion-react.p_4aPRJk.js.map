{"version":3,"file":"vendor---emotion-react.p_4aPRJk.js","sources":["../../../../node_modules/@emotion/react/dist/emotion-element-f0de968e.browser.esm.js","../../../../node_modules/@emotion/react/dist/emotion-react.browser.esm.js"],"sourcesContent":["import * as React from 'react';\nimport { useContext, forwardRef } from 'react';\nimport createCache from '@emotion/cache';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport weakMemoize from '@emotion/weak-memoize';\nimport hoistNonReactStatics from '../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport { getRegisteredStyles, registerStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\n\nvar isDevelopment = false;\n\nvar EmotionCacheContext = /* #__PURE__ */React.createContext( // we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ? /* #__PURE__ */createCache({\n  key: 'css'\n}) : null);\n\nvar CacheProvider = EmotionCacheContext.Provider;\nvar __unsafe_useEmotionCache = function useEmotionCache() {\n  return useContext(EmotionCacheContext);\n};\n\nvar withEmotionCache = function withEmotionCache(func) {\n  return /*#__PURE__*/forwardRef(function (props, ref) {\n    // the cache will never be null in the browser\n    var cache = useContext(EmotionCacheContext);\n    return func(props, cache, ref);\n  });\n};\n\nvar ThemeContext = /* #__PURE__ */React.createContext({});\n\nvar useTheme = function useTheme() {\n  return React.useContext(ThemeContext);\n};\n\nvar getTheme = function getTheme(outerTheme, theme) {\n  if (typeof theme === 'function') {\n    var mergedTheme = theme(outerTheme);\n\n    return mergedTheme;\n  }\n\n  return _extends({}, outerTheme, theme);\n};\n\nvar createCacheWithTheme = /* #__PURE__ */weakMemoize(function (outerTheme) {\n  return weakMemoize(function (theme) {\n    return getTheme(outerTheme, theme);\n  });\n});\nvar ThemeProvider = function ThemeProvider(props) {\n  var theme = React.useContext(ThemeContext);\n\n  if (props.theme !== theme) {\n    theme = createCacheWithTheme(theme)(props.theme);\n  }\n\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: theme\n  }, props.children);\n};\nfunction withTheme(Component) {\n  var componentName = Component.displayName || Component.name || 'Component';\n  var WithTheme = /*#__PURE__*/React.forwardRef(function render(props, ref) {\n    var theme = React.useContext(ThemeContext);\n    return /*#__PURE__*/React.createElement(Component, _extends({\n      theme: theme,\n      ref: ref\n    }, props));\n  });\n  WithTheme.displayName = \"WithTheme(\" + componentName + \")\";\n  return hoistNonReactStatics(WithTheme, Component);\n}\n\nvar hasOwn = {}.hasOwnProperty;\n\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar createEmotionProps = function createEmotionProps(type, props) {\n\n  var newProps = {};\n\n  for (var _key in props) {\n    if (hasOwn.call(props, _key)) {\n      newProps[_key] = props[_key];\n    }\n  }\n\n  newProps[typePropName] = type; // Runtime labeling is an opt-in feature because:\n\n  return newProps;\n};\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serialized = _ref.serialized,\n      isStringTag = _ref.isStringTag;\n  registerStyles(cache, serialized, isStringTag);\n  useInsertionEffectAlwaysWithSyncFallback(function () {\n    return insertStyles(cache, serialized, isStringTag);\n  });\n\n  return null;\n};\n\nvar Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {\n  var cssProp = props.css; // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var WrappedComponent = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n\n  if (typeof props.className === 'string') {\n    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n\n  var serialized = serializeStyles(registeredStyles, undefined, React.useContext(ThemeContext));\n\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n\n  for (var _key2 in props) {\n    if (hasOwn.call(props, _key2) && _key2 !== 'css' && _key2 !== typePropName && (!isDevelopment )) {\n      newProps[_key2] = props[_key2];\n    }\n  }\n\n  newProps.className = className;\n\n  if (ref) {\n    newProps.ref = ref;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Insertion, {\n    cache: cache,\n    serialized: serialized,\n    isStringTag: typeof WrappedComponent === 'string'\n  }), /*#__PURE__*/React.createElement(WrappedComponent, newProps));\n});\n\nvar Emotion$1 = Emotion;\n\nexport { CacheProvider as C, Emotion$1 as E, ThemeContext as T, __unsafe_useEmotionCache as _, ThemeProvider as a, withTheme as b, createEmotionProps as c, hasOwn as h, isDevelopment as i, useTheme as u, withEmotionCache as w };\n","import { h as hasOwn, E as Emotion, c as createEmotionProps, w as withEmotionCache, T as ThemeContext, i as isDevelopment } from './emotion-element-f0de968e.browser.esm.js';\nexport { C as CacheProvider, T as ThemeContext, a as ThemeProvider, _ as __unsafe_useEmotionCache, u as useTheme, w as withEmotionCache, b as withTheme } from './emotion-element-f0de968e.browser.esm.js';\nimport * as React from 'react';\nimport { insertStyles, registerStyles, getRegisteredStyles } from '@emotion/utils';\nimport { useInsertionEffectWithLayoutFallback, useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\nimport { serializeStyles } from '@emotion/serialize';\nimport '@emotion/cache';\nimport '@babel/runtime/helpers/extends';\nimport '@emotion/weak-memoize';\nimport '../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport 'hoist-non-react-statics';\n\nvar jsx = function jsx(type, props) {\n  // eslint-disable-next-line prefer-rest-params\n  var args = arguments;\n\n  if (props == null || !hasOwn.call(props, 'css')) {\n    return React.createElement.apply(undefined, args);\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  createElementArgArray[1] = createEmotionProps(type, props);\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  }\n\n  return React.createElement.apply(null, createElementArgArray);\n};\n\n(function (_jsx) {\n  var JSX;\n\n  (function (_JSX) {})(JSX || (JSX = _jsx.JSX || (_jsx.JSX = {})));\n})(jsx || (jsx = {}));\n\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\n\nvar Global = /* #__PURE__ */withEmotionCache(function (props, cache) {\n\n  var styles = props.styles;\n  var serialized = serializeStyles([styles], undefined, React.useContext(ThemeContext));\n  // but it is based on a constant that will never change at runtime\n  // it's effectively like having two implementations and switching them out\n  // so it's not actually breaking anything\n\n\n  var sheetRef = React.useRef();\n  useInsertionEffectWithLayoutFallback(function () {\n    var key = cache.key + \"-global\"; // use case of https://github.com/emotion-js/emotion/issues/2675\n\n    var sheet = new cache.sheet.constructor({\n      key: key,\n      nonce: cache.sheet.nonce,\n      container: cache.sheet.container,\n      speedy: cache.sheet.isSpeedy\n    });\n    var rehydrating = false;\n    var node = document.querySelector(\"style[data-emotion=\\\"\" + key + \" \" + serialized.name + \"\\\"]\");\n\n    if (cache.sheet.tags.length) {\n      sheet.before = cache.sheet.tags[0];\n    }\n\n    if (node !== null) {\n      rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s\n\n      node.setAttribute('data-emotion', key);\n      sheet.hydrate([node]);\n    }\n\n    sheetRef.current = [sheet, rehydrating];\n    return function () {\n      sheet.flush();\n    };\n  }, [cache]);\n  useInsertionEffectWithLayoutFallback(function () {\n    var sheetRefCurrent = sheetRef.current;\n    var sheet = sheetRefCurrent[0],\n        rehydrating = sheetRefCurrent[1];\n\n    if (rehydrating) {\n      sheetRefCurrent[1] = false;\n      return;\n    }\n\n    if (serialized.next !== undefined) {\n      // insert keyframes\n      insertStyles(cache, serialized.next, true);\n    }\n\n    if (sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;\n      sheet.before = element;\n      sheet.flush();\n    }\n\n    cache.insert(\"\", serialized, sheet, false);\n  }, [cache, serialized.name]);\n  return null;\n});\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return serializeStyles(args);\n}\n\nfunction keyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name;\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n}\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serializedArr = _ref.serializedArr;\n  useInsertionEffectAlwaysWithSyncFallback(function () {\n\n    for (var i = 0; i < serializedArr.length; i++) {\n      insertStyles(cache, serializedArr[i], false);\n    }\n  });\n\n  return null;\n};\n\nvar ClassNames = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  var hasRendered = false;\n  var serializedArr = [];\n\n  var css = function css() {\n    if (hasRendered && isDevelopment) {\n      throw new Error('css can only be used during render');\n    }\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    serializedArr.push(serialized); // registration has to happen here as the result of this might get consumed by `cx`\n\n    registerStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var cx = function cx() {\n    if (hasRendered && isDevelopment) {\n      throw new Error('cx can only be used during render');\n    }\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  var content = {\n    css: css,\n    cx: cx,\n    theme: React.useContext(ThemeContext)\n  };\n  var ele = props.children(content);\n  hasRendered = true;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Insertion, {\n    cache: cache,\n    serializedArr: serializedArr\n  }), ele);\n});\n\nexport { ClassNames, Global, jsx as createElement, css, jsx, keyframes };\n"],"names":["EmotionCacheContext","React.createContext","createContext","HTMLElement","createCache","key","Provider","_jsx","JSX","withEmotionCache","func","forwardRef","props","ref","cache","useContext","ThemeContext","hasOwn","hasOwnProperty","typePropName","Insertion","_ref","serialized","isStringTag","registerStyles","useInsertionEffectAlwaysWithSyncFallback","insertStyles","Emotion$1","cssProp","css","undefined","registered","WrappedComponent","registeredStyles","className","getRegisteredStyles","serializeStyles","React.useContext","name","newProps","_key2","call","React.createElement","createElement","React.Fragment","Fragment","jsx","type","args","arguments","apply","argsLength","length","createElementArgArray","Array","Emotion","_key","createEmotionProps","i","_len","keyframes","insertable","styles","anim","toString","this"],"mappings":"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","x_google_ignoreList":[0,1]}