{"version":3,"file":"vendor--react-remove-scroll-bar.Dz-JErv0.js","sources":["../../../../node_modules/react-remove-scroll-bar/dist/es2015/constants.js","../../../../node_modules/react-remove-scroll-bar/dist/es2015/utils.js","../../../../node_modules/react-remove-scroll-bar/dist/es2015/component.js"],"sourcesContent":["export var zeroRightClassName = 'right-scroll-bar-position';\nexport var fullWidthClassName = 'width-before-scroll-bar';\nexport var noScrollbarsClassName = 'with-scroll-bars-hidden';\n/**\n * Name of a CSS variable containing the amount of \"hidden\" scrollbar\n * ! might be undefined ! use will fallback!\n */\nexport var removedBarSizeVariable = '--removed-body-scroll-bar-size';\n","export var zeroGap = {\n    left: 0,\n    top: 0,\n    right: 0,\n    gap: 0,\n};\nvar parse = function (x) { return parseInt(x || '', 10) || 0; };\nvar getOffset = function (gapMode) {\n    var cs = window.getComputedStyle(document.body);\n    var left = cs[gapMode === 'padding' ? 'paddingLeft' : 'marginLeft'];\n    var top = cs[gapMode === 'padding' ? 'paddingTop' : 'marginTop'];\n    var right = cs[gapMode === 'padding' ? 'paddingRight' : 'marginRight'];\n    return [parse(left), parse(top), parse(right)];\n};\nexport var getGapWidth = function (gapMode) {\n    if (gapMode === void 0) { gapMode = 'margin'; }\n    if (typeof window === 'undefined') {\n        return zeroGap;\n    }\n    var offsets = getOffset(gapMode);\n    var documentWidth = document.documentElement.clientWidth;\n    var windowWidth = window.innerWidth;\n    return {\n        left: offsets[0],\n        top: offsets[1],\n        right: offsets[2],\n        gap: Math.max(0, windowWidth - documentWidth + offsets[2] - offsets[0]),\n    };\n};\n","import * as React from 'react';\nimport { styleSingleton } from 'react-style-singleton';\nimport { fullWidthClassName, zeroRightClassName, noScrollbarsClassName, removedBarSizeVariable } from './constants';\nimport { getGapWidth } from './utils';\nvar Style = styleSingleton();\nexport var lockAttribute = 'data-scroll-locked';\n// important tip - once we measure scrollBar width and remove them\n// we could not repeat this operation\n// thus we are using style-singleton - only the first \"yet correct\" style will be applied.\nvar getStyles = function (_a, allowRelative, gapMode, important) {\n    var left = _a.left, top = _a.top, right = _a.right, gap = _a.gap;\n    if (gapMode === void 0) { gapMode = 'margin'; }\n    return \"\\n  .\".concat(noScrollbarsClassName, \" {\\n   overflow: hidden \").concat(important, \";\\n   padding-right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  body[\").concat(lockAttribute, \"] {\\n    overflow: hidden \").concat(important, \";\\n    overscroll-behavior: contain;\\n    \").concat([\n        allowRelative && \"position: relative \".concat(important, \";\"),\n        gapMode === 'margin' &&\n            \"\\n    padding-left: \".concat(left, \"px;\\n    padding-top: \").concat(top, \"px;\\n    padding-right: \").concat(right, \"px;\\n    margin-left:0;\\n    margin-top:0;\\n    margin-right: \").concat(gap, \"px \").concat(important, \";\\n    \"),\n        gapMode === 'padding' && \"padding-right: \".concat(gap, \"px \").concat(important, \";\"),\n    ]\n        .filter(Boolean)\n        .join(''), \"\\n  }\\n  \\n  .\").concat(zeroRightClassName, \" {\\n    right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  \\n  .\").concat(fullWidthClassName, \" {\\n    margin-right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  \\n  .\").concat(zeroRightClassName, \" .\").concat(zeroRightClassName, \" {\\n    right: 0 \").concat(important, \";\\n  }\\n  \\n  .\").concat(fullWidthClassName, \" .\").concat(fullWidthClassName, \" {\\n    margin-right: 0 \").concat(important, \";\\n  }\\n  \\n  body[\").concat(lockAttribute, \"] {\\n    \").concat(removedBarSizeVariable, \": \").concat(gap, \"px;\\n  }\\n\");\n};\nvar getCurrentUseCounter = function () {\n    var counter = parseInt(document.body.getAttribute(lockAttribute) || '0', 10);\n    return isFinite(counter) ? counter : 0;\n};\nexport var useLockAttribute = function () {\n    React.useEffect(function () {\n        document.body.setAttribute(lockAttribute, (getCurrentUseCounter() + 1).toString());\n        return function () {\n            var newCounter = getCurrentUseCounter() - 1;\n            if (newCounter <= 0) {\n                document.body.removeAttribute(lockAttribute);\n            }\n            else {\n                document.body.setAttribute(lockAttribute, newCounter.toString());\n            }\n        };\n    }, []);\n};\n/**\n * Removes page scrollbar and blocks page scroll when mounted\n */\nexport var RemoveScrollBar = function (_a) {\n    var noRelative = _a.noRelative, noImportant = _a.noImportant, _b = _a.gapMode, gapMode = _b === void 0 ? 'margin' : _b;\n    useLockAttribute();\n    /*\n     gap will be measured on every component mount\n     however it will be used only by the \"first\" invocation\n     due to singleton nature of <Style\n     */\n    var gap = React.useMemo(function () { return getGapWidth(gapMode); }, [gapMode]);\n    return React.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, !noImportant ? '!important' : '') });\n};\n"],"names":["zeroRightClassName","fullWidthClassName","zeroGap","left","top","right","gap","parse","x","parseInt","getGapWidth","gapMode","window","offsets","cs","getComputedStyle","document","body","getOffset","documentWidth","documentElement","clientWidth","windowWidth","innerWidth","Math","max","Style","styleSingleton","lockAttribute","getStyles","_a","allowRelative","important","concat","filter","Boolean","join","getCurrentUseCounter","counter","getAttribute","isFinite","RemoveScrollBar","noRelative","noImportant","_b","React.useEffect","setAttribute","toString","newCounter","removeAttribute","React.useMemo","React.createElement","createElement","styles"],"mappings":"oHAAU,IAACA,EAAqB,4BACrBC,EAAqB,0BCDrBC,EAAU,CACjBC,KAAM,EACNC,IAAK,EACLC,MAAO,EACPC,IAAK,GAELC,EAAQ,SAAUC,GAAK,OAAOC,SAASD,GAAK,GAAI,KAAO,CAAI,EAQpDE,EAAc,SAAUC,GAE/B,QADgB,IAAZA,IAAsBA,EAAU,UACd,oBAAXC,OACP,OAAOV,EAEX,IAAIW,EAZQ,SAAUF,GACtB,IAAIG,EAAKF,OAAOG,iBAAiBC,SAASC,MACtCd,EAAOW,EAAe,YAAZH,EAAwB,cAAgB,cAClDP,EAAMU,EAAe,YAAZH,EAAwB,aAAe,aAChDN,EAAQS,EAAe,YAAZH,EAAwB,eAAiB,eACxD,MAAO,CAACJ,EAAMJ,GAAOI,EAAMH,GAAMG,EAAMF,GAC3C,CAMkBa,CAAUP,GACpBQ,EAAgBH,SAASI,gBAAgBC,YACzCC,EAAcV,OAAOW,WACzB,MAAO,CACHpB,KAAMU,EAAQ,GACdT,IAAKS,EAAQ,GACbR,MAAOQ,EAAQ,GACfP,IAAKkB,KAAKC,IAAI,EAAGH,EAAcH,EAAgBN,EAAQ,GAAKA,EAAQ,IAE5E,ECxBIa,EAAQC,IACDC,EAAgB,qBAIvBC,EAAY,SAAUC,EAAIC,EAAepB,EAASqB,GAClD,IAAI7B,EAAO2B,EAAG3B,KAAMC,EAAM0B,EAAG1B,IAAKC,EAAQyB,EAAGzB,MAAOC,EAAMwB,EAAGxB,IAE7D,YADgB,IAAZK,IAAsBA,EAAU,UAC7B,QAAQsB,OFVgB,0BEUc,4BAA4BA,OAAOD,EAAW,yBAAyBC,OAAO3B,EAAK,OAAO2B,OAAOD,EAAW,mBAAmBC,OAAOL,EAAe,8BAA8BK,OAAOD,EAAW,8CAA8CC,OAAO,CACnSF,GAAiB,sBAAsBE,OAAOD,EAAW,KAC7C,WAAZrB,GACI,uBAAuBsB,OAAO9B,EAAM,0BAA0B8B,OAAO7B,EAAK,4BAA4B6B,OAAO5B,EAAO,kEAAkE4B,OAAO3B,EAAK,OAAO2B,OAAOD,EAAW,WACnN,YAAZrB,GAAyB,kBAAkBsB,OAAO3B,EAAK,OAAO2B,OAAOD,EAAW,MAE/EE,OAAOC,SACPC,KAAK,IAAK,kBAAkBH,OAAOjC,EAAoB,mBAAmBiC,OAAO3B,EAAK,OAAO2B,OAAOD,EAAW,mBAAmBC,OAAOhC,EAAoB,0BAA0BgC,OAAO3B,EAAK,OAAO2B,OAAOD,EAAW,mBAAmBC,OAAOjC,EAAoB,MAAMiC,OAAOjC,EAAoB,qBAAqBiC,OAAOD,EAAW,mBAAmBC,OAAOhC,EAAoB,MAAMgC,OAAOhC,EAAoB,4BAA4BgC,OAAOD,EAAW,uBAAuBC,OAAOL,EAAe,aAAaK,OFZ9e,iCEY6gB,MAAMA,OAAO3B,EAAK,aACnkB,EACI+B,EAAuB,WACvB,IAAIC,EAAU7B,SAASO,SAASC,KAAKsB,aAAaX,IAAkB,IAAK,IACzE,OAAOY,SAASF,GAAWA,EAAU,CACzC,EAkBWG,EAAkB,SAAUX,GACnC,IAAIY,EAAaZ,EAAGY,WAAYC,EAAcb,EAAGa,YAAaC,EAAKd,EAAGnB,QAASA,OAAiB,IAAPiC,EAAgB,SAAWA,EAjBpHC,EAAAA,WAAgB,WAEZ,OADA7B,SAASC,KAAK6B,aAAalB,GAAgBS,IAAyB,GAAGU,YAChE,WACH,IAAIC,EAAaX,IAAyB,EACtCW,GAAc,EACdhC,SAASC,KAAKgC,gBAAgBrB,GAG9BZ,SAASC,KAAK6B,aAAalB,EAAeoB,EAAWD,WAE5D,CACJ,GAAE,IAaH,IAAIzC,EAAM4C,WAAc,WAAc,OAAOxC,EAAYC,EAAS,GAAI,CAACA,IACvE,OAAOwC,EAAmBC,cAAC1B,EAAO,CAAE2B,OAAQxB,EAAUvB,GAAMoC,EAAY/B,EAAUgC,EAA6B,GAAf,eACpG","x_google_ignoreList":[0,1,2]}