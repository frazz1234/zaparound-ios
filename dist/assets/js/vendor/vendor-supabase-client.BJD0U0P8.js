import{H as e,n as t,A as s,P as n,a,S as i}from"./vendor-supabase-other.BhmW1H_P.js";import{R as r}from"./vendor-supabase-realtime.PMyDaGD3.js";let o="";o="undefined"!=typeof Deno?"deno":"undefined"!=typeof document?"web":"undefined"!=typeof navigator&&"ReactNative"===navigator.product?"react-native":"node";const c={headers:{"X-Client-Info":`supabase-js-${o}/2.49.4`}},h={schema:"public"},u={autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0,flowType:"implicit"},l={};var d=function(e,t,s,n){return new(s||(s=Promise))((function(a,i){function r(e){try{c(n.next(e))}catch(t){i(t)}}function o(e){try{c(n.throw(e))}catch(t){i(t)}}function c(e){var t;e.done?a(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(r,o)}c((n=n.apply(e,t||[])).next())}))};const f=e=>{let s;return s=e||("undefined"==typeof fetch?t:fetch),(...e)=>s(...e)},g=(t,s,n)=>{const a=f(n),i="undefined"==typeof Headers?e:Headers;return(e,n)=>d(void 0,void 0,void 0,(function*(){var r;const o=null!==(r=yield s())&&void 0!==r?r:t;let c=new i(null==n?void 0:n.headers);return c.has("apikey")||c.set("apikey",t),c.has("Authorization")||c.set("Authorization",`Bearer ${o}`),a(e,Object.assign(Object.assign({},n),{headers:c}))}))};var b=function(e,t,s,n){return new(s||(s=Promise))((function(a,i){function r(e){try{c(n.next(e))}catch(t){i(t)}}function o(e){try{c(n.throw(e))}catch(t){i(t)}}function c(e){var t;e.done?a(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(r,o)}c((n=n.apply(e,t||[])).next())}))};class p extends s{constructor(e){super(e)}}var v=function(e,t,s,n){return new(s||(s=Promise))((function(a,i){function r(e){try{c(n.next(e))}catch(t){i(t)}}function o(e){try{c(n.throw(e))}catch(t){i(t)}}function c(e){var t;e.done?a(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(r,o)}c((n=n.apply(e,t||[])).next())}))};class m{constructor(e,t,s){var a,i,r;if(this.supabaseUrl=e,this.supabaseKey=t,!e)throw new Error("supabaseUrl is required.");if(!t)throw new Error("supabaseKey is required.");const o=e.replace(/\/$/,"");this.realtimeUrl=`${o}/realtime/v1`.replace(/^http/i,"ws"),this.authUrl=`${o}/auth/v1`,this.storageUrl=`${o}/storage/v1`,this.functionsUrl=`${o}/functions/v1`;const d=`sb-${new URL(this.authUrl).hostname.split(".")[0]}-auth-token`,f=function(e,t){const{db:s,auth:n,realtime:a,global:i}=e,{db:r,auth:o,realtime:c,global:h}=t,u={db:Object.assign(Object.assign({},r),s),auth:Object.assign(Object.assign({},o),n),realtime:Object.assign(Object.assign({},c),a),global:Object.assign(Object.assign({},h),i),accessToken:()=>b(this,void 0,void 0,(function*(){return""}))};return e.accessToken?u.accessToken=e.accessToken:delete u.accessToken,u}(null!=s?s:{},{db:h,realtime:l,auth:Object.assign(Object.assign({},u),{storageKey:d}),global:c});this.storageKey=null!==(a=f.auth.storageKey)&&void 0!==a?a:"",this.headers=null!==(i=f.global.headers)&&void 0!==i?i:{},f.accessToken?(this.accessToken=f.accessToken,this.auth=new Proxy({},{get:(e,t)=>{throw new Error(`@supabase/supabase-js: Supabase Client is configured with the accessToken option, accessing supabase.auth.${String(t)} is not possible`)}})):this.auth=this._initSupabaseAuthClient(null!==(r=f.auth)&&void 0!==r?r:{},this.headers,f.global.fetch),this.fetch=g(t,this._getAccessToken.bind(this),f.global.fetch),this.realtime=this._initRealtimeClient(Object.assign({headers:this.headers,accessToken:this._getAccessToken.bind(this)},f.realtime)),this.rest=new n(`${o}/rest/v1`,{headers:this.headers,schema:f.db.schema,fetch:this.fetch}),f.accessToken||this._listenForAuthEvents()}get functions(){return new a(this.functionsUrl,{headers:this.headers,customFetch:this.fetch})}get storage(){return new i(this.storageUrl,this.headers,this.fetch)}from(e){return this.rest.from(e)}schema(e){return this.rest.schema(e)}rpc(e,t={},s={}){return this.rest.rpc(e,t,s)}channel(e,t={config:{}}){return this.realtime.channel(e,t)}getChannels(){return this.realtime.getChannels()}removeChannel(e){return this.realtime.removeChannel(e)}removeAllChannels(){return this.realtime.removeAllChannels()}_getAccessToken(){var e,t;return v(this,void 0,void 0,(function*(){if(this.accessToken)return yield this.accessToken();const{data:s}=yield this.auth.getSession();return null!==(t=null===(e=s.session)||void 0===e?void 0:e.access_token)&&void 0!==t?t:null}))}_initSupabaseAuthClient({autoRefreshToken:e,persistSession:t,detectSessionInUrl:s,storage:n,storageKey:a,flowType:i,lock:r,debug:o},c,h){const u={Authorization:`Bearer ${this.supabaseKey}`,apikey:`${this.supabaseKey}`};return new p({url:this.authUrl,headers:Object.assign(Object.assign({},u),c),storageKey:a,autoRefreshToken:e,persistSession:t,detectSessionInUrl:s,storage:n,flowType:i,lock:r,debug:o,fetch:h,hasCustomAuthorizationHeader:"Authorization"in this.headers})}_initRealtimeClient(e){return new r(this.realtimeUrl,Object.assign(Object.assign({},e),{params:Object.assign({apikey:this.supabaseKey},null==e?void 0:e.params)}))}_listenForAuthEvents(){return this.auth.onAuthStateChange(((e,t)=>{this._handleTokenChanged(e,"CLIENT",null==t?void 0:t.access_token)}))}_handleTokenChanged(e,t,s){"TOKEN_REFRESHED"!==e&&"SIGNED_IN"!==e||this.changedAccessToken===s?"SIGNED_OUT"===e&&(this.realtime.setAuth(),"STORAGE"==t&&this.auth.signOut(),this.changedAccessToken=void 0):this.changedAccessToken=s}}const y=(e,t,s)=>new m(e,t,s);export{y as c};
//# sourceMappingURL=vendor-supabase-client.BJD0U0P8.js.map
