{"version":3,"file":"vendor--micromark-util-resolve-all.U8fstr8o.js","sources":["../../../../node_modules/micromark-util-resolve-all/index.js"],"sourcesContent":["/**\n * @import {Event, Resolver, TokenizeContext} from 'micromark-util-types'\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {ReadonlyArray<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n"],"names":["resolveAll","constructs","events","context","called","index","length","resolve","includes","push"],"mappings":"AAgBO,SAASA,EAAWC,EAAYC,EAAQC,GAE7C,MAAMC,EAAS,GACf,IAAIC,GAAQ,EAEZ,OAASA,EAAQJ,EAAWK,QAAQ,CAClC,MAAMC,EAAUN,EAAWI,GAAOL,WAE9BO,IAAYH,EAAOI,SAASD,KAC9BL,EAASK,EAAQL,EAAQC,GACzBC,EAAOK,KAAKF,GAElB,CAEE,OAAOL,CACT","x_google_ignoreList":[0]}