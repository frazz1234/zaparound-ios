{"version":3,"file":"vendor---hcaptcha-react-hcaptcha.BYNRmVb_.js","sources":["../../../../node_modules/@hcaptcha/react-hcaptcha/dist/esm/utils.js","../../../../node_modules/@hcaptcha/react-hcaptcha/dist/esm/index.js"],"sourcesContent":["function getFrame(element) {\n  var doc = element && element.ownerDocument || document;\n  var win = doc.defaultView || doc.parentWindow || window;\n  return {\n    document: doc,\n    window: win\n  };\n}\nfunction getMountElement(element) {\n  return element || document.head;\n}\nexport { getFrame, getMountElement };","import _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport * as React from 'react';\nimport { hCaptchaLoader } from '@hcaptcha/loader';\nimport { getFrame, getMountElement } from './utils.js';\nvar HCaptcha = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(HCaptcha, _React$Component);\n  function HCaptcha(props) {\n    var _this;\n    _this = _React$Component.call(this, props) || this;\n\n    /**\n     * Internal reference to track hCaptcha API\n     *\n     * Required as window is relative to initialization in application\n     * not where the script and iFrames have been loaded.\n     */\n    _this._hcaptcha = undefined;\n\n    // API Methods\n    _this.renderCaptcha = _this.renderCaptcha.bind(_assertThisInitialized(_this));\n    _this.resetCaptcha = _this.resetCaptcha.bind(_assertThisInitialized(_this));\n    _this.removeCaptcha = _this.removeCaptcha.bind(_assertThisInitialized(_this));\n    _this.isReady = _this.isReady.bind(_assertThisInitialized(_this));\n    _this._onReady = null;\n\n    // Event Handlers\n    _this.loadCaptcha = _this.loadCaptcha.bind(_assertThisInitialized(_this));\n    _this.handleOnLoad = _this.handleOnLoad.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleExpire = _this.handleExpire.bind(_assertThisInitialized(_this));\n    _this.handleError = _this.handleError.bind(_assertThisInitialized(_this));\n    _this.handleOpen = _this.handleOpen.bind(_assertThisInitialized(_this));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_this));\n    _this.handleChallengeExpired = _this.handleChallengeExpired.bind(_assertThisInitialized(_this));\n    _this.ref = /*#__PURE__*/React.createRef();\n    _this.apiScriptRequested = false;\n    _this.sentryHub = null;\n    _this.captchaId = '';\n    _this.state = {\n      isApiReady: false,\n      isRemoved: false,\n      elementId: props.id\n    };\n    return _this;\n  }\n  var _proto = HCaptcha.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n    // Once captcha is mounted intialize hCaptcha - hCaptcha\n    var element = getMountElement(this.props.scriptLocation);\n    var frame = getFrame(element);\n    this._hcaptcha = frame.window.hcaptcha || undefined;\n    var isApiReady = typeof this._hcaptcha !== 'undefined';\n\n    /*\n     * Check if hCaptcha has already been loaded,\n     * If Yes, render the captcha\n     * If No, create script tag and wait to render the captcha\n     */\n    if (isApiReady) {\n      this.setState({\n        isApiReady: true\n      }, function () {\n        _this2.renderCaptcha();\n      });\n      return;\n    }\n    this.loadCaptcha();\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var hcaptcha = this._hcaptcha;\n    var captchaId = this.captchaId;\n    if (!this.isReady()) {\n      return;\n    }\n\n    // Reset any stored variables / timers when unmounting\n    hcaptcha.reset(captchaId);\n    hcaptcha.remove(captchaId);\n  };\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n    // Prevent component re-rendering when these internal state variables are updated\n    if (this.state.isApiReady !== nextState.isApiReady || this.state.isRemoved !== nextState.isRemoved) {\n      return false;\n    }\n    return true;\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this3 = this;\n    // Prop Keys that could change\n    var keys = ['sitekey', 'size', 'theme', 'tabindex', 'languageOverride', 'endpoint'];\n    // See if any props changed during component update\n    var match = keys.every(function (key) {\n      return prevProps[key] === _this3.props[key];\n    });\n\n    // If they have changed, remove current captcha and render a new one\n    if (!match) {\n      this.removeCaptcha(function () {\n        _this3.renderCaptcha();\n      });\n    }\n  };\n  _proto.loadCaptcha = function loadCaptcha() {\n    if (this.apiScriptRequested) {\n      return;\n    }\n    var _this$props = this.props,\n      apihost = _this$props.apihost,\n      assethost = _this$props.assethost,\n      endpoint = _this$props.endpoint,\n      host = _this$props.host,\n      imghost = _this$props.imghost,\n      hl = _this$props.languageOverride,\n      reCaptchaCompat = _this$props.reCaptchaCompat,\n      reportapi = _this$props.reportapi,\n      sentry = _this$props.sentry,\n      custom = _this$props.custom,\n      loadAsync = _this$props.loadAsync,\n      scriptLocation = _this$props.scriptLocation,\n      scriptSource = _this$props.scriptSource,\n      secureApi = _this$props.secureApi,\n      _this$props$cleanup = _this$props.cleanup,\n      cleanup = _this$props$cleanup === void 0 ? true : _this$props$cleanup;\n    var mountParams = {\n      render: 'explicit',\n      apihost: apihost,\n      assethost: assethost,\n      endpoint: endpoint,\n      hl: hl,\n      host: host,\n      imghost: imghost,\n      recaptchacompat: reCaptchaCompat === false ? 'off' : null,\n      reportapi: reportapi,\n      sentry: sentry,\n      custom: custom,\n      loadAsync: loadAsync,\n      scriptLocation: scriptLocation,\n      scriptSource: scriptSource,\n      secureApi: secureApi,\n      cleanup: cleanup\n    };\n    hCaptchaLoader(mountParams).then(this.handleOnLoad, this.handleError)[\"catch\"](this.handleError);\n    this.apiScriptRequested = true;\n  };\n  _proto.renderCaptcha = function renderCaptcha(onRender) {\n    var _this4 = this;\n    var onReady = this.props.onReady;\n    var isApiReady = this.state.isApiReady;\n    var captchaId = this.captchaId;\n\n    // Prevent calling hCaptcha render on two conditions:\n    // • API is not ready\n    // • Component has already been mounted\n    if (!isApiReady || captchaId) return;\n    var renderParams = Object.assign({\n      \"open-callback\": this.handleOpen,\n      \"close-callback\": this.handleClose,\n      \"error-callback\": this.handleError,\n      \"chalexpired-callback\": this.handleChallengeExpired,\n      \"expired-callback\": this.handleExpire,\n      \"callback\": this.handleSubmit\n    }, this.props, {\n      hl: this.props.hl || this.props.languageOverride,\n      languageOverride: undefined\n    });\n    var hcaptcha = this._hcaptcha;\n    //Render hCaptcha widget and provide necessary callbacks - hCaptcha\n    var id = hcaptcha.render(this.ref.current, renderParams);\n    this.captchaId = id;\n    this.setState({\n      isRemoved: false\n    }, function () {\n      onRender && onRender();\n      onReady && onReady();\n      _this4._onReady && _this4._onReady(id);\n    });\n  };\n  _proto.resetCaptcha = function resetCaptcha() {\n    var hcaptcha = this._hcaptcha;\n    var captchaId = this.captchaId;\n    if (!this.isReady()) {\n      return;\n    }\n    // Reset captcha state, removes stored token and unticks checkbox\n    hcaptcha.reset(captchaId);\n  };\n  _proto.removeCaptcha = function removeCaptcha(callback) {\n    var _this5 = this;\n    var hcaptcha = this._hcaptcha;\n    var captchaId = this.captchaId;\n    if (!this.isReady()) {\n      return;\n    }\n    this.setState({\n      isRemoved: true\n    }, function () {\n      _this5.captchaId = '';\n      hcaptcha.remove(captchaId);\n      callback && callback();\n    });\n  };\n  _proto.handleOnLoad = function handleOnLoad() {\n    var _this6 = this;\n    this.setState({\n      isApiReady: true\n    }, function () {\n      var element = getMountElement(_this6.props.scriptLocation);\n      var frame = getFrame(element);\n      _this6._hcaptcha = frame.window.hcaptcha;\n\n      // render captcha and wait for captcha id\n      _this6.renderCaptcha(function () {\n        // trigger onLoad if it exists\n\n        var onLoad = _this6.props.onLoad;\n        if (onLoad) onLoad();\n      });\n    });\n  };\n  _proto.handleSubmit = function handleSubmit(event) {\n    var onVerify = this.props.onVerify;\n    var isRemoved = this.state.isRemoved;\n    var hcaptcha = this._hcaptcha;\n    var captchaId = this.captchaId;\n    if (typeof hcaptcha === 'undefined' || isRemoved) return;\n    var token = hcaptcha.getResponse(captchaId); //Get response token from hCaptcha widget\n    var ekey = hcaptcha.getRespKey(captchaId); //Get current challenge session id from hCaptcha widget\n    if (onVerify) onVerify(token, ekey); //Dispatch event to verify user response\n  };\n  _proto.handleExpire = function handleExpire() {\n    var onExpire = this.props.onExpire;\n    var hcaptcha = this._hcaptcha;\n    var captchaId = this.captchaId;\n    if (!this.isReady()) {\n      return;\n    }\n    hcaptcha.reset(captchaId); // If hCaptcha runs into error, reset captcha - hCaptcha\n\n    if (onExpire) onExpire();\n  };\n  _proto.handleError = function handleError(event) {\n    var onError = this.props.onError;\n    var hcaptcha = this._hcaptcha;\n    var captchaId = this.captchaId;\n    if (this.isReady()) {\n      // If hCaptcha runs into error, reset captcha - hCaptcha\n      hcaptcha.reset(captchaId);\n    }\n    if (onError) onError(event);\n  };\n  _proto.isReady = function isReady() {\n    var _this$state = this.state,\n      isApiReady = _this$state.isApiReady,\n      isRemoved = _this$state.isRemoved;\n    return isApiReady && !isRemoved;\n  };\n  _proto.handleOpen = function handleOpen() {\n    if (!this.isReady() || !this.props.onOpen) {\n      return;\n    }\n    this.props.onOpen();\n  };\n  _proto.handleClose = function handleClose() {\n    if (!this.isReady() || !this.props.onClose) {\n      return;\n    }\n    this.props.onClose();\n  };\n  _proto.handleChallengeExpired = function handleChallengeExpired() {\n    if (!this.isReady() || !this.props.onChalExpired) {\n      return;\n    }\n    this.props.onChalExpired();\n  };\n  _proto.execute = function execute(opts) {\n    var _this7 = this;\n    if (opts === void 0) {\n      opts = null;\n    }\n    opts = typeof opts === 'object' ? opts : null;\n    try {\n      var hcaptcha = this._hcaptcha;\n      var captchaId = this.captchaId;\n      if (!this.isReady()) {\n        var _opts;\n        var onReady = new Promise(function (resolve, reject) {\n          _this7._onReady = function (id) {\n            try {\n              var _hcaptcha = _this7._hcaptcha;\n              if (opts && opts.async) {\n                _hcaptcha.execute(id, opts).then(resolve)[\"catch\"](reject);\n              } else {\n                resolve(_hcaptcha.execute(id, opts));\n              }\n            } catch (e) {\n              reject(e);\n            }\n          };\n        });\n        return (_opts = opts) != null && _opts.async ? onReady : null;\n      }\n      return hcaptcha.execute(captchaId, opts);\n    } catch (error) {\n      if (opts && opts.async) {\n        return Promise.reject(error);\n      }\n      return null;\n    }\n  };\n  _proto.close = function close() {\n    var hcaptcha = this._hcaptcha;\n    var captchaId = this.captchaId;\n    if (!this.isReady()) {\n      return;\n    }\n    return hcaptcha.close(captchaId);\n  };\n  _proto.setData = function setData(data) {\n    var hcaptcha = this._hcaptcha;\n    var captchaId = this.captchaId;\n    if (!this.isReady()) {\n      return;\n    }\n    if (data && typeof data !== \"object\") {\n      data = null;\n    }\n    hcaptcha.setData(captchaId, data);\n  };\n  _proto.getResponse = function getResponse() {\n    var hcaptcha = this._hcaptcha;\n    return hcaptcha.getResponse(this.captchaId);\n  };\n  _proto.getRespKey = function getRespKey() {\n    var hcaptcha = this._hcaptcha;\n    return hcaptcha.getRespKey(this.captchaId);\n  };\n  _proto.render = function render() {\n    var elementId = this.state.elementId;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.ref,\n      id: elementId\n    });\n  };\n  return HCaptcha;\n}(React.Component);\nexport default HCaptcha;"],"names":["getFrame","element","doc","ownerDocument","document","window","defaultView","parentWindow","getMountElement","head","HCaptcha","_React$Component","props","_this","call","this","_hcaptcha","undefined","renderCaptcha","bind","_assertThisInitialized","resetCaptcha","removeCaptcha","isReady","_onReady","loadCaptcha","handleOnLoad","handleSubmit","handleExpire","handleError","handleOpen","handleClose","handleChallengeExpired","ref","React.createRef","apiScriptRequested","sentryHub","captchaId","state","isApiReady","isRemoved","elementId","id","_inheritsLoose","_proto","prototype","componentDidMount","_this2","frame","scriptLocation","hcaptcha","setState","componentWillUnmount","reset","remove","shouldComponentUpdate","nextProps","nextState","componentDidUpdate","prevProps","_this3","every","key","_this$props","apihost","assethost","endpoint","host","imghost","hl","languageOverride","reCaptchaCompat","reportapi","sentry","custom","loadAsync","scriptSource","secureApi","_this$props$cleanup","cleanup","hCaptchaLoader","render","recaptchacompat","then","onRender","_this4","onReady","renderParams","Object","assign","callback","current","_this5","_this6","onLoad","event","onVerify","token","getResponse","ekey","getRespKey","onExpire","onError","_this$state","onOpen","onClose","onChalExpired","execute","opts","_this7","_opts","Promise","resolve","reject","async","e","error","close","setData","data","React.createElement","React.Component","Component"],"mappings":"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","x_google_ignoreList":[0,1]}