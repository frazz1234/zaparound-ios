{"version":3,"file":"vendor--style-to-js.DQsO4XA8.js","sources":["../../../../node_modules/style-to-js/cjs/utilities.js","../../../../node_modules/style-to-js/cjs/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.camelCase = void 0;\nvar CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9_-]+$/;\nvar HYPHEN_REGEX = /-([a-z])/g;\nvar NO_HYPHEN_REGEX = /^[^-]+$/;\nvar VENDOR_PREFIX_REGEX = /^-(webkit|moz|ms|o|khtml)-/;\nvar MS_VENDOR_PREFIX_REGEX = /^-(ms)-/;\n/**\n * Checks whether to skip camelCase.\n */\nvar skipCamelCase = function (property) {\n    return !property ||\n        NO_HYPHEN_REGEX.test(property) ||\n        CUSTOM_PROPERTY_REGEX.test(property);\n};\n/**\n * Replacer that capitalizes first character.\n */\nvar capitalize = function (match, character) {\n    return character.toUpperCase();\n};\n/**\n * Replacer that removes beginning hyphen of vendor prefix property.\n */\nvar trimHyphen = function (match, prefix) { return \"\".concat(prefix, \"-\"); };\n/**\n * CamelCases a CSS property.\n */\nvar camelCase = function (property, options) {\n    if (options === void 0) { options = {}; }\n    if (skipCamelCase(property)) {\n        return property;\n    }\n    property = property.toLowerCase();\n    if (options.reactCompat) {\n        // `-ms` vendor prefix should not be capitalized\n        property = property.replace(MS_VENDOR_PREFIX_REGEX, trimHyphen);\n    }\n    else {\n        // for non-React, remove first hyphen so vendor prefix is not capitalized\n        property = property.replace(VENDOR_PREFIX_REGEX, trimHyphen);\n    }\n    return property.replace(HYPHEN_REGEX, capitalize);\n};\nexports.camelCase = camelCase;\n//# sourceMappingURL=utilities.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar style_to_object_1 = __importDefault(require(\"style-to-object\"));\nvar utilities_1 = require(\"./utilities\");\n/**\n * Parses CSS inline style to JavaScript object (camelCased).\n */\nfunction StyleToJS(style, options) {\n    var output = {};\n    if (!style || typeof style !== 'string') {\n        return output;\n    }\n    (0, style_to_object_1.default)(style, function (property, value) {\n        // skip CSS comment\n        if (property && value) {\n            output[(0, utilities_1.camelCase)(property, options)] = value;\n        }\n    });\n    return output;\n}\nStyleToJS.default = StyleToJS;\nmodule.exports = StyleToJS;\n//# sourceMappingURL=index.js.map"],"names":["Object","defineProperty","utilities","value","camelCase","CUSTOM_PROPERTY_REGEX","HYPHEN_REGEX","NO_HYPHEN_REGEX","VENDOR_PREFIX_REGEX","MS_VENDOR_PREFIX_REGEX","capitalize","match","character","toUpperCase","trimHyphen","prefix","concat","property","options","test","skipCamelCase","toLowerCase","reactCompat","replace","style_to_object_1","this","__importDefault","mod","__esModule","default","require$$0","utilities_1","require$$1","StyleToJS","style","output"],"mappings":"2HACAA,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACrCD,EAAAE,eAAG,EACpB,IAAIC,EAAwB,qBACxBC,EAAe,YACfC,EAAkB,UAClBC,EAAsB,6BACtBC,EAAyB,UAYzBC,EAAa,SAAUC,EAAOC,GAC9B,OAAOA,EAAUC,aACrB,EAIIC,EAAa,SAAUH,EAAOI,GAAU,MAAO,GAAGC,OAAOD,EAAQ,IAAO,EAoB3Db,EAAAE,UAhBD,SAAUa,EAAUC,GAEhC,YADgB,IAAZA,IAAsBA,EAAU,CAAA,GAnBpB,SAAUD,GAC1B,OAAQA,GACJV,EAAgBY,KAAKF,IACrBZ,EAAsBc,KAAKF,EACnC,CAgBQG,CAAcH,GACPA,GAEXA,EAAWA,EAASI,eAGhBJ,EAFAC,EAAQI,YAEGL,EAASM,QAAQd,EAAwBK,GAIzCG,EAASM,QAAQf,EAAqBM,IAErCS,QAAQjB,EAAcI,GAC1C,EC3CA,IAGIc,GAHmBC,GAAQA,EAAKC,iBAAoB,SAAUC,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAEE,QAAWF,EACxD,GACwCG,GACpCC,EAAcC,EAIlB,SAASC,EAAUC,EAAOhB,GACtB,IAAIiB,EAAS,CAAE,EACf,OAAKD,GAA0B,iBAAVA,IAGrB,EAAIV,EAAkBK,SAASK,GAAO,SAAUjB,EAAUd,GAElDc,GAAYd,IACZgC,GAAO,EAAIJ,EAAY3B,WAAWa,EAAUC,IAAYf,EAEpE,IACWgC,GARIA,CASf,CACAF,EAAUJ,QAAUI,YACHA","x_google_ignoreList":[0,1]}