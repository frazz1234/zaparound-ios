{"version":3,"file":"vendor---tanstack-query-core.CIZi0Zbo.js","sources":["../../../../node_modules/@tanstack/query-core/build/modern/subscribable.js","../../../../node_modules/@tanstack/query-core/build/modern/utils.js","../../../../node_modules/@tanstack/query-core/build/modern/focusManager.js","../../../../node_modules/@tanstack/query-core/build/modern/onlineManager.js","../../../../node_modules/@tanstack/query-core/build/modern/thenable.js","../../../../node_modules/@tanstack/query-core/build/modern/retryer.js","../../../../node_modules/@tanstack/query-core/build/modern/notifyManager.js","../../../../node_modules/@tanstack/query-core/build/modern/removable.js","../../../../node_modules/@tanstack/query-core/build/modern/query.js","../../../../node_modules/@tanstack/query-core/build/modern/queryCache.js","../../../../node_modules/@tanstack/query-core/build/modern/mutation.js","../../../../node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../../../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../../../node_modules/@tanstack/query-core/build/modern/queryClient.js","../../../../node_modules/@tanstack/query-core/build/modern/queryObserver.js","../../../../node_modules/@tanstack/query-core/build/modern/mutationObserver.js"],"sourcesContent":["// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/utils.ts\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return !Object.keys(b).some((key) => !partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aItems = array ? a : Object.keys(a);\n    const aSize = aItems.length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      if ((!array && aItems.includes(key) || array) && a[key] === void 0 && b[key] === void 0) {\n        copy[key] = void 0;\n        equalItems++;\n      } else {\n        copy[key] = replaceEqualDeep(a[key], b[key]);\n        if (copy[key] === a[key] && a[key] !== void 0) {\n          equalItems++;\n        }\n      }\n    }\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n  return b;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n        throw error;\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/thenable.ts\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nexport {\n  pendingThenable\n};\n//# sourceMappingURL=thenable.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  const thenable = pendingThenable();\n  const cancel = (cancelOptions) => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort?.();\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess?.(value);\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError?.(value);\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/notifyManager.ts\nvar defaultScheduler = (cb) => setTimeout(cb, 0);\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = defaultScheduler;\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  defaultScheduler,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/removable.ts\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { canFetch, createRetryer, isCancelledError } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #client;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#client = config.client;\n    this.#cache = this.#client.getQueryCache();\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStale() {\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0;\n  }\n  isStaleByTime(staleTime = 0) {\n    return this.state.isInvalidated || this.state.data === void 0 || !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const queryFnContext = {\n        client: this.#client,\n        queryKey: this.queryKey,\n        meta: this.meta\n      };\n      addSignalProperty(queryFnContext);\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const context = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      client: this.#client,\n      state: this.state,\n      fetchFn\n    };\n    addSignalProperty(context);\n    this.options.behavior?.onFetch(\n      context,\n      this\n    );\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    const onError = (error) => {\n      if (!(isCancelledError(error) && error.silent)) {\n        this.#dispatch({\n          type: \"error\",\n          error\n        });\n      }\n      if (!isCancelledError(error)) {\n        this.#cache.config.onError?.(\n          error,\n          this\n        );\n        this.#cache.config.onSettled?.(\n          this.state.data,\n          error,\n          this\n        );\n      }\n      this.scheduleGc();\n    };\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      abort: abortController.abort.bind(abortController),\n      onSuccess: (data) => {\n        if (data === void 0) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(\n              `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n            );\n          }\n          onError(new Error(`${this.queryHash} data is undefined`));\n          return;\n        }\n        try {\n          this.setData(data);\n        } catch (error) {\n          onError(error);\n          return;\n        }\n        this.#cache.config.onSuccess?.(data, this);\n        this.#cache.config.onSettled?.(\n          data,\n          this.state.error,\n          this\n        );\n        this.scheduleGc();\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    return this.#retryer.start();\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n        case \"error\":\n          const error = action.error;\n          if (isCancelledError(error) && error.revert && this.#revertState) {\n            return { ...this.#revertState, fetchStatus: \"idle\" };\n          }\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (!restored) {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Set();\n    this.#scopes = /* @__PURE__ */ new Map();\n    this.#mutationId = 0;\n  }\n  #mutations;\n  #scopes;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.#mutations.add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = this.#scopes.get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        this.#scopes.set(scope, [mutation]);\n      }\n    }\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = this.#scopes.get(scope);\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === \"pending\"\n      );\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = this.#scopes.get(scope)?.find((m) => m !== mutation && m.state.isPaused);\n      return foundMutation?.continue() ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: \"removed\", mutation });\n      });\n      this.#mutations.clear();\n      this.#scopes.clear();\n    });\n  }\n  getAll() {\n    return Array.from(this.#mutations);\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id;\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const queryFnContext = {\n            client: context.client,\n            queryKey: context.queryKey,\n            pageParam: param,\n            direction: previous ? \"backward\" : \"forward\",\n            meta: context.options.meta\n          };\n          addSignalProperty(queryFnContext);\n          const page = await queryFn(\n            queryFnContext\n          );\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data)\n    return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam)\n    return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1)\n      return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0)\n      return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    const query = this.#queryCache.build(this, defaultedOptions);\n    const cachedData = query.state.data;\n    if (cachedData === void 0) {\n      return this.fetchQuery(options);\n    }\n    if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n      void this.prefetchQuery(defaultedOptions);\n    }\n    return Promise.resolve(cachedData);\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(\n      options.queryHash\n    )?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(\n        {\n          type: \"active\",\n          ...filters\n        },\n        options\n      );\n    });\n  }\n  cancelQueries(filters, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters?.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? \"active\"\n        },\n        options\n      );\n    });\n  }\n  refetchQueries(filters, options = {}) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","// src/queryObserver.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { fetchState } from \"./query.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale\n} from \"./utils.js\";\nvar QueryObserver = class extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.options = options;\n    this.#client = client;\n    this.#selectError = null;\n    this.#currentThenable = pendingThenable();\n    if (!this.options.experimental_prefetchInRender) {\n      this.#currentThenable.reject(\n        new Error(\"experimental_prefetchInRender feature flag is not enabled\")\n      );\n    }\n    this.bindMethods();\n    this.setOptions(options);\n  }\n  #client;\n  #currentQuery = void 0;\n  #currentQueryInitialState = void 0;\n  #currentResult = void 0;\n  #currentResultState;\n  #currentResultOptions;\n  #currentThenable;\n  #selectError;\n  #selectFn;\n  #selectResult;\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData;\n  #staleTimeoutId;\n  #refetchIntervalId;\n  #currentRefetchInterval;\n  #trackedProps = /* @__PURE__ */ new Set();\n  bindMethods() {\n    this.refetch = this.refetch.bind(this);\n  }\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this);\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch();\n      } else {\n        this.updateResult();\n      }\n      this.#updateTimers();\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect\n    );\n  }\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus\n    );\n  }\n  destroy() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.#clearStaleTimeout();\n    this.#clearRefetchInterval();\n    this.#currentQuery.removeObserver(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    const prevQuery = this.#currentQuery;\n    this.options = this.#client.defaultQueryOptions(options);\n    if (this.options.enabled !== void 0 && typeof this.options.enabled !== \"boolean\" && typeof this.options.enabled !== \"function\" && typeof resolveEnabled(this.options.enabled, this.#currentQuery) !== \"boolean\") {\n      throw new Error(\n        \"Expected enabled to be a boolean or a callback that returns a boolean\"\n      );\n    }\n    this.#updateQuery();\n    this.#currentQuery.setOptions(this.options);\n    if (prevOptions._defaulted && !shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getQueryCache().notify({\n        type: \"observerOptionsUpdated\",\n        query: this.#currentQuery,\n        observer: this\n      });\n    }\n    const mounted = this.hasListeners();\n    if (mounted && shouldFetchOptionally(\n      this.#currentQuery,\n      prevQuery,\n      this.options,\n      prevOptions\n    )) {\n      this.#executeFetch();\n    }\n    this.updateResult();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || resolveStaleTime(this.options.staleTime, this.#currentQuery) !== resolveStaleTime(prevOptions.staleTime, this.#currentQuery))) {\n      this.#updateStaleTimeout();\n    }\n    const nextRefetchInterval = this.#computeRefetchInterval();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || nextRefetchInterval !== this.#currentRefetchInterval)) {\n      this.#updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n  getOptimisticResult(options) {\n    const query = this.#client.getQueryCache().build(this.#client, options);\n    const result = this.createResult(query, options);\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      this.#currentResult = result;\n      this.#currentResultOptions = this.options;\n      this.#currentResultState = this.#currentQuery.state;\n    }\n    return result;\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  trackResult(result, onPropTracked) {\n    const trackedResult = {};\n    Object.keys(result).forEach((key) => {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n          this.trackProp(key);\n          onPropTracked?.(key);\n          return result[key];\n        }\n      });\n    });\n    return trackedResult;\n  }\n  trackProp(key) {\n    this.#trackedProps.add(key);\n  }\n  getCurrentQuery() {\n    return this.#currentQuery;\n  }\n  refetch({ ...options } = {}) {\n    return this.fetch({\n      ...options\n    });\n  }\n  fetchOptimistic(options) {\n    const defaultedOptions = this.#client.defaultQueryOptions(options);\n    const query = this.#client.getQueryCache().build(this.#client, defaultedOptions);\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n  fetch(fetchOptions) {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true\n    }).then(() => {\n      this.updateResult();\n      return this.#currentResult;\n    });\n  }\n  #executeFetch(fetchOptions) {\n    this.#updateQuery();\n    let promise = this.#currentQuery.fetch(\n      this.options,\n      fetchOptions\n    );\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop);\n    }\n    return promise;\n  }\n  #updateStaleTimeout() {\n    this.#clearStaleTimeout();\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery\n    );\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return;\n    }\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime);\n    const timeout = time + 1;\n    this.#staleTimeoutId = setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n  #computeRefetchInterval() {\n    return (typeof this.options.refetchInterval === \"function\" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? false;\n  }\n  #updateRefetchInterval(nextInterval) {\n    this.#clearRefetchInterval();\n    this.#currentRefetchInterval = nextInterval;\n    if (isServer || resolveEnabled(this.options.enabled, this.#currentQuery) === false || !isValidTimeout(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) {\n      return;\n    }\n    this.#refetchIntervalId = setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.#executeFetch();\n      }\n    }, this.#currentRefetchInterval);\n  }\n  #updateTimers() {\n    this.#updateStaleTimeout();\n    this.#updateRefetchInterval(this.#computeRefetchInterval());\n  }\n  #clearStaleTimeout() {\n    if (this.#staleTimeoutId) {\n      clearTimeout(this.#staleTimeoutId);\n      this.#staleTimeoutId = void 0;\n    }\n  }\n  #clearRefetchInterval() {\n    if (this.#refetchIntervalId) {\n      clearInterval(this.#refetchIntervalId);\n      this.#refetchIntervalId = void 0;\n    }\n  }\n  createResult(query, options) {\n    const prevQuery = this.#currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.#currentResult;\n    const prevResultState = this.#currentResultState;\n    const prevResultOptions = this.#currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.#currentQueryInitialState;\n    const { state } = query;\n    let newState = { ...state };\n    let isPlaceholderData = false;\n    let data;\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options)\n        };\n      }\n      if (options._optimisticResults === \"isRestoring\") {\n        newState.fetchStatus = \"idle\";\n      }\n    }\n    let { error, errorUpdatedAt, status } = newState;\n    if (options.select && newState.data !== void 0) {\n      if (prevResult && newState.data === prevResultState?.data && options.select === this.#selectFn) {\n        data = this.#selectResult;\n      } else {\n        try {\n          this.#selectFn = options.select;\n          data = options.select(newState.data);\n          data = replaceData(prevResult?.data, data, options);\n          this.#selectResult = data;\n          this.#selectError = null;\n        } catch (selectError) {\n          this.#selectError = selectError;\n        }\n      }\n    } else {\n      data = newState.data;\n    }\n    if (options.placeholderData !== void 0 && data === void 0 && status === \"pending\") {\n      let placeholderData;\n      if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === \"function\" ? options.placeholderData(\n          this.#lastQueryWithDefinedData?.state.data,\n          this.#lastQueryWithDefinedData\n        ) : options.placeholderData;\n        if (options.select && placeholderData !== void 0) {\n          try {\n            placeholderData = options.select(placeholderData);\n            this.#selectError = null;\n          } catch (selectError) {\n            this.#selectError = selectError;\n          }\n        }\n      }\n      if (placeholderData !== void 0) {\n        status = \"success\";\n        data = replaceData(\n          prevResult?.data,\n          placeholderData,\n          options\n        );\n        isPlaceholderData = true;\n      }\n    }\n    if (this.#selectError) {\n      error = this.#selectError;\n      data = this.#selectResult;\n      errorUpdatedAt = Date.now();\n      status = \"error\";\n    }\n    const isFetching = newState.fetchStatus === \"fetching\";\n    const isPending = status === \"pending\";\n    const isError = status === \"error\";\n    const isLoading = isPending && isFetching;\n    const hasData = data !== void 0;\n    const result = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === \"success\",\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount: newState.dataUpdateCount > queryInitialState.dataUpdateCount || newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === \"paused\",\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable\n    };\n    const nextResult = result;\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = (thenable) => {\n        if (nextResult.status === \"error\") {\n          thenable.reject(nextResult.error);\n        } else if (nextResult.data !== void 0) {\n          thenable.resolve(nextResult.data);\n        }\n      };\n      const recreateThenable = () => {\n        const pending = this.#currentThenable = nextResult.promise = pendingThenable();\n        finalizeThenableIfPossible(pending);\n      };\n      const prevThenable = this.#currentThenable;\n      switch (prevThenable.status) {\n        case \"pending\":\n          if (query.queryHash === prevQuery.queryHash) {\n            finalizeThenableIfPossible(prevThenable);\n          }\n          break;\n        case \"fulfilled\":\n          if (nextResult.status === \"error\" || nextResult.data !== prevThenable.value) {\n            recreateThenable();\n          }\n          break;\n        case \"rejected\":\n          if (nextResult.status !== \"error\" || nextResult.error !== prevThenable.reason) {\n            recreateThenable();\n          }\n          break;\n      }\n    }\n    return nextResult;\n  }\n  updateResult() {\n    const prevResult = this.#currentResult;\n    const nextResult = this.createResult(this.#currentQuery, this.options);\n    this.#currentResultState = this.#currentQuery.state;\n    this.#currentResultOptions = this.options;\n    if (this.#currentResultState.data !== void 0) {\n      this.#lastQueryWithDefinedData = this.#currentQuery;\n    }\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n    this.#currentResult = nextResult;\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n      const { notifyOnChangeProps } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === \"function\" ? notifyOnChangeProps() : notifyOnChangeProps;\n      if (notifyOnChangePropsValue === \"all\" || !notifyOnChangePropsValue && !this.#trackedProps.size) {\n        return true;\n      }\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps\n      );\n      if (this.options.throwOnError) {\n        includedProps.add(\"error\");\n      }\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key;\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n    this.#notify({ listeners: shouldNotifyListeners() });\n  }\n  #updateQuery() {\n    const query = this.#client.getQueryCache().build(this.#client, this.options);\n    if (query === this.#currentQuery) {\n      return;\n    }\n    const prevQuery = this.#currentQuery;\n    this.#currentQuery = query;\n    this.#currentQueryInitialState = query.state;\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n  onQueryUpdate() {\n    this.updateResult();\n    if (this.hasListeners()) {\n      this.#updateTimers();\n    }\n  }\n  #notify(notifyOptions) {\n    notifyManager.batch(() => {\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult);\n        });\n      }\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: \"observerResultsUpdated\"\n      });\n    });\n  }\n};\nfunction shouldLoadOnMount(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.state.data === void 0 && !(query.state.status === \"error\" && options.retryOnMount === false);\n}\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.data !== void 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\nfunction shouldFetchOn(query, options, field) {\n  if (resolveEnabled(options.enabled, query) !== false) {\n    const value = typeof field === \"function\" ? field(query) : field;\n    return value === \"always\" || value !== false && isStale(query, options);\n  }\n  return false;\n}\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return (query !== prevQuery || resolveEnabled(prevOptions.enabled, query) === false) && (!options.suspense || query.state.status !== \"error\") && isStale(query, options);\n}\nfunction isStale(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.isStaleByTime(resolveStaleTime(options.staleTime, query));\n}\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult) {\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  }\n  return false;\n}\nexport {\n  QueryObserver\n};\n//# sourceMappingURL=queryObserver.js.map","// src/mutationObserver.ts\nimport { getDefaultState } from \"./mutation.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { hashKey, shallowEqualObjects } from \"./utils.js\";\nvar MutationObserver = class extends Subscribable {\n  #client;\n  #currentResult = void 0;\n  #currentMutation;\n  #mutateOptions;\n  constructor(client, options) {\n    super();\n    this.#client = client;\n    this.setOptions(options);\n    this.bindMethods();\n    this.#updateResult();\n  }\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    this.options = this.#client.defaultMutationOptions(options);\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: \"observerOptionsUpdated\",\n        mutation: this.#currentMutation,\n        observer: this\n      });\n    }\n    if (prevOptions?.mutationKey && this.options.mutationKey && hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)) {\n      this.reset();\n    } else if (this.#currentMutation?.state.status === \"pending\") {\n      this.#currentMutation.setOptions(this.options);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this);\n    }\n  }\n  onMutationUpdate(action) {\n    this.#updateResult();\n    this.#notify(action);\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  reset() {\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = void 0;\n    this.#updateResult();\n    this.#notify();\n  }\n  mutate(variables, options) {\n    this.#mutateOptions = options;\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = this.#client.getMutationCache().build(this.#client, this.options);\n    this.#currentMutation.addObserver(this);\n    return this.#currentMutation.execute(variables);\n  }\n  #updateResult() {\n    const state = this.#currentMutation?.state ?? getDefaultState();\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === \"pending\",\n      isSuccess: state.status === \"success\",\n      isError: state.status === \"error\",\n      isIdle: state.status === \"idle\",\n      mutate: this.mutate,\n      reset: this.reset\n    };\n  }\n  #notify(action) {\n    notifyManager.batch(() => {\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables;\n        const context = this.#currentResult.context;\n        if (action?.type === \"success\") {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context);\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context);\n        } else if (action?.type === \"error\") {\n          this.#mutateOptions.onError?.(action.error, variables, context);\n          this.#mutateOptions.onSettled?.(\n            void 0,\n            action.error,\n            variables,\n            context\n          );\n        }\n      }\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult);\n      });\n    });\n  }\n};\nexport {\n  MutationObserver\n};\n//# sourceMappingURL=mutationObserver.js.map"],"names":["Subscribable","constructor","this","listeners","Set","subscribe","bind","listener","add","onSubscribe","delete","onUnsubscribe","hasListeners","size","isServer","window","globalThis","noop","isValidTimeout","value","Infinity","timeUntilStale","updatedAt","staleTime","Math","max","Date","now","resolveStaleTime","query","resolveEnabled","enabled","matchQuery","filters","type","exact","fetchStatus","predicate","queryKey","stale","queryHash","hashQueryKeyByOptions","options","partialMatchKey","isActive","isStale","state","matchMutation","mutation","status","mutationKey","hashKey","queryKeyHashFn","JSON","stringify","_","val","isPlainObject","Object","keys","sort","reduce","result","key","a","b","some","replaceEqualDeep","array","isPlainArray","aItems","aSize","length","bItems","bSize","copy","equalItems","i","includes","shallowEqualObjects","Array","isArray","o","hasObjectPrototype","ctor","prot","prototype","hasOwnProperty","getPrototypeOf","toString","call","replaceData","prevData","data","structuralSharing","addToEnd","items","item","newItems","slice","addToStart","skipToken","Symbol","ensureQueryFn","fetchOptions","queryFn","initialPromise","Promise","reject","Error","focusManager","focused","cleanup","setup","super","onFocus","addEventListener","removeEventListener","setEventListener","setFocused","isFocused","forEach","document","visibilityState","onlineManager","online","onOnline","onlineListener","offlineListener","setOnline","isOnline","pendingThenable","resolve","thenable","_resolve","_reject","finalize","assign","catch","reason","defaultRetryDelay","failureCount","min","canFetch","networkMode","CancelledError","revert","silent","isCancelledError","createRetryer","config","continueFn","isRetryCancelled","isResolved","canContinue","canRun","canStart","onSuccess","onError","pause","continueResolve","onPause","then","onContinue","run","promiseOrValue","fn","error","retry","retryDelay","delay","shouldRetry","timeout","onFail","setTimeout","promise","cancel","cancelOptions","abort","continue","cancelRetry","continueRetry","start","defaultScheduler","cb","notifyManager","queue","transactions","notifyFn","callback","batchNotifyFn","scheduleFn","schedule","push","batch","originalQueue","flush","batchCalls","args","setNotifyFunction","setBatchNotifyFunction","setScheduler","createNotifyManager","Removable","gcTimeout","destroy","clearGcTimeout","scheduleGc","gcTime","optionalRemove","updateGcTime","newGcTime","clearTimeout","Query","initialState","revertState","cache","client","retryer","defaultOptions","abortSignalConsumed","setOptions","observers","getQueryCache","initialData","hasData","initialDataUpdatedAt","dataUpdateCount","dataUpdatedAt","errorUpdateCount","errorUpdatedAt","fetchFailureCount","fetchFailureReason","fetchMeta","isInvalidated","getDefaultState","meta","remove","setData","newData","dispatch","manual","setState","setStateOptions","reset","observer","isDisabled","getObserversCount","getCurrentResult","isStaleByTime","find","x","shouldFetchOnWindowFocus","refetch","cancelRefetch","shouldFetchOnReconnect","addObserver","notify","removeObserver","filter","invalidate","fetch","abortController","AbortController","addSignalProperty","object","defineProperty","enumerable","get","signal","context","fetchFn","queryFnContext","persister","behavior","onFetch","onSettled","action","fetchState","reducer","onQueryUpdate","QueryCache","queries","Map","build","defaultQueryOptions","getQueryDefaults","has","set","queryInMap","clear","getAll","values","defaultedFilters","findAll","event","Mutation","mutationCache","mutationId","failureReason","isPaused","variables","submittedAt","execute","mutationFn","restored","onMutate","runNext","onMutationUpdate","MutationCache","mutations","scopes","defaultMutationOptions","scope","scopeFor","scopedMutations","index","indexOf","splice","mutationsWithSameScope","firstPendingMutation","m","foundMutation","from","resumePausedMutations","pausedMutations","all","map","id","infiniteQueryBehavior","pages","direction","fetchMore","oldPages","oldPageParams","pageParams","currentPage","async","cancelled","fetchPage","param","previous","pageParam","aborted","page","maxPages","addTo","oldData","getPreviousPageParam","getNextPageParam","remainingPages","initialPageParam","lastIndex","QueryClient","queryCache","queryDefaults","mutationDefaults","mountCount","unsubscribeFocus","unsubscribeOnline","mount","unmount","isFetching","isMutating","getQueryData","ensureQueryData","defaultedOptions","cachedData","fetchQuery","revalidateIfStale","prefetchQuery","getQueriesData","setQueryData","updater","input","functionalUpdate","setQueriesData","getQueryState","removeQueries","resetQueries","refetchQueries","cancelQueries","defaultedCancelOptions","promises","invalidateQueries","refetchType","throwOnError","fetchInfiniteQuery","prefetchInfiniteQuery","ensureInfiniteQueryData","getMutationCache","getDefaultOptions","setDefaultOptions","setQueryDefaults","defaults","queryDefault","setMutationDefaults","getMutationDefaults","_defaulted","refetchOnReconnect","suspense","QueryObserver","selectError","currentThenable","experimental_prefetchInRender","bindMethods","currentQuery","currentQueryInitialState","currentResult","currentResultState","currentResultOptions","selectFn","selectResult","lastQueryWithDefinedData","staleTimeoutId","refetchIntervalId","currentRefetchInterval","trackedProps","shouldFetchOnMount","executeFetch","updateResult","updateTimers","shouldFetchOn","refetchOnWindowFocus","clearStaleTimeout","clearRefetchInterval","prevOptions","prevQuery","updateQuery","mounted","shouldFetchOptionally","updateStaleTimeout","nextRefetchInterval","computeRefetchInterval","updateRefetchInterval","getOptimisticResult","createResult","optimisticResult","shouldAssignObserverCurrentProperties","trackResult","onPropTracked","trackedResult","configurable","trackProp","getCurrentQuery","fetchOptimistic","refetchInterval","nextInterval","setInterval","refetchIntervalInBackground","clearInterval","prevResult","prevResultState","prevResultOptions","queryInitialState","newState","isPlaceholderData","_optimisticResults","fetchOnMount","fetchOptionally","select","placeholderData","isPending","isError","isLoading","nextResult","isSuccess","isInitialLoading","isFetched","isFetchedAfterMount","isRefetching","isLoadingError","isRefetchError","finalizeThenableIfPossible","recreateThenable","pending","prevThenable","notifyOnChangeProps","notifyOnChangePropsValue","includedProps","typedKey","shouldNotifyListeners","notifyOptions","retryOnMount","shouldLoadOnMount","refetchOnMount","field","MutationObserver","currentMutation","mutateOptions","mutate","isIdle"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]}