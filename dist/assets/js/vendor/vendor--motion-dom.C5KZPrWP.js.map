{"version":3,"file":"vendor--motion-dom.C5KZPrWP.js","sources":["../../../../node_modules/motion-dom/dist/es/frameloop/order.mjs","../../../../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../../../../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../../../../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../../../../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../../../../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../../../../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../../../../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../../../../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../../../../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../../../../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../../../../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../../../../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../../../../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../../../../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../../../../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../../../../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../../../../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../../../../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../../../../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../../../../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../../../../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../../../../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../../../../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../../../../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../../../../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../../../../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../../../../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../../../../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../../../../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../../../../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../../../../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../../../../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../../../../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../../../../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../../../../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../../../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../../../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../../../../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../../../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../../../../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../../../../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../../../../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../../../../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../../../../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../../../../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../../../../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../../../../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../../../../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../../../../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../../../../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../../../../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../../../../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../../../../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../../../../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../../../../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../../../../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../../../../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../../../../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../../../../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../../../../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../../../../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../../../../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../../../../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../../../../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../../../../node_modules/motion-dom/dist/es/animation/utils/make-animation-instant.mjs","../../../../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../../../../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../../../../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../../../../node_modules/motion-dom/dist/es/animation/GroupAnimation.mjs","../../../../node_modules/motion-dom/dist/es/animation/GroupAnimationWithThen.mjs","../../../../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../../../../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../../../../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../../../../node_modules/motion-dom/dist/es/value/types/test.mjs","../../../../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../../../../node_modules/motion-dom/dist/es/value/types/auto.mjs","../../../../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../../../../node_modules/motion-dom/dist/es/value/types/int.mjs","../../../../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../../../../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../../../../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../../../../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../../../../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../../../../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../../../../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../../../../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../../../../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../../../../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../../../../node_modules/motion-dom/dist/es/value/index.mjs","../../../../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../../../../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../../../../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../../../../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../../../../node_modules/motion-dom/dist/es/gestures/hover.mjs","../../../../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../../../../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../../../../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../../../../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../../../../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../../../../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../../../../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../../../../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../../../../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../../../../node_modules/motion-dom/dist/es/value/types/utils/find.mjs"],"sourcesContent":["const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n    getAnimatableNone: (v) => {\n        const parsed = color.parse(v);\n        parsed.alpha = 0;\n        return color.transform(parsed);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : color.test(v) ? color.getAnimatableNone(v) : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`, \"color-not-animatable\");\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`, \"complex-values-different\");\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\", \"spring-duration-limit\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\", \"range-length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`, \"spring-two-frames\");\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `Mini animate() doesn't support \"type\" as a string.`, \"mini-spring\");\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys that might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","function makeAnimationInstant(options) {\n    options.duration = 0;\n    options.type === \"keyframes\";\n}\n\nexport { makeAnimationInstant };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    const subject = motionValue?.owner?.current;\n    /**\n     * We use this check instead of isHTMLElement() because we explicitly\n     * **don't** want elements in different timing contexts (i.e. popups)\n     * to be accelerated, as it's not possible to sync these animations\n     * properly with those driven from the main window frameloop.\n     */\n    if (!(subject instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { makeAnimationInstant } from './utils/make-animation-instant.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            makeAnimationInstant(options);\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". \"${isOriginAnimatable ? targetKeyframe : originKeyframe}\" is not an animatable value.`, \"value-not-animatable\");\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","class GroupAnimation {\n    constructor(animations) {\n        // Bound to accomadate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        return Promise.all(this.animations.map((animation) => animation.finished));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const subscriptions = this.animations.map((animation) => animation.attachTimeline(timeline));\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get state() {\n        return this.getAll(\"state\");\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupAnimation };\n","import { GroupAnimation } from './GroupAnimation.mjs';\n\nclass GroupAnimationWithThen extends GroupAnimation {\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n}\n\nexport { GroupAnimationWithThen };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`, \"max-css-var-depth\");\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v) {\n        if (!this.passiveEffect) {\n            this.updateAndNotify(v);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n"],"names":["stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","key","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","has","step","schedule","keepAlive","immediate","queue","add","cancel","delete","process","frameData","forEach","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","MotionGlobalConfig","useManualTiming","performance","now","Math","max","min","i","length","frame","cancelFrame","frameSteps","requestAnimationFrame","noop","clearTime","undefined","time","set","newTime","queueMicrotask","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","value","singleCssVariableRegex","test","split","trim","number","v","parse","parseFloat","transform","alpha","clamp","scale","default","sanitize","round","floatRegex","singleColorRegex","isColorString","type","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","getAnimatableNone","parsed","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","values","indexes","var","types","replace","parsedValue","push","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","isNaN","transformer","map","hueToRgb","p","q","t","mixImmediate","mixNumber","from","to","progress","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","Array","isArray","mixArray","mixObject","numValues","blendValue","origin","target","template","originStats","targetStats","mixVisibility","pipe","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","start","stop","generateLinearEasing","easing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","createGeneratorEasing","options","createGenerator","keyframes","ease","millisecondsToSeconds","calcGeneratorVelocity","resolveValue","current","prevT","velocityPerSecond","springDefaults","granular","findSpring","bounce","velocity","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","pow","f","initialGuess","result","rootIterations","approximateRoot","secondsToMilliseconds","stiffness","damping","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","visualDuration","restSpeed","restDelta","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","interpolate","input","isClamp","inputLength","invariant","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","fillOffset","offset","remaining","offsetProgress","defaultOffset","arr","keyframeValues","times","easingFunctions","isEasingArray","easingDefinitionToFunction","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","easeInOut","splice","applyToOptions","generatorOptions","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","speed","resolvedKeyframes","filter","index","transitionTypeMap","decay","tween","replaceTransitionType","transition","WithPromise","constructor","this","updateFinished","finished","_finished","Promise","resolve","notifyFinished","then","onResolve","onReject","percentToProgress","JSAnimation","super","startTime","isStopped","currentTime","holdTime","playbackSpeed","motionValue","updatedAt","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","driver","newSpeed","hasChanged","onPlay","complete","onComplete","onCancel","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","radToDeg","rad","rotate","angle","atan2","rebaseAngle","matrix2dParsers","x","y","translateX","translateY","scaleX","scaleY","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","readTransformValue","instance","getComputedStyle","transformPropOrder","transformProps","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","width","paddingLeft","paddingRight","height","paddingTop","paddingBottom","top","_bbox","left","bottom","right","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","Map","removedTransforms","visualElement","getValue","get","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","window","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","isAsync","scheduleResolve","currentValue","valueAsRead","readValue","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","supportsScrollTimeline","memo","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","cubicBezierAsString","supportedWaapiEasing","linear","easeIn","easeOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","isBezierDefinition","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","fill","iterations","direction","isGenerator","NativeAnimation","finishedTime","isPseudoElement","applyGeneratorOptions","animation","onfinish","keyframe","updateMotionValue","isCSSVar","style","setProperty","setStyle","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","anticipate","backInOut","circInOut","replaceStringEasing","NativeAnimationExtended","sampleAnimation","setWithVelocity","isAnimatable","makeAnimationInstant","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","subject","owner","HTMLElement","transformTemplate","getProps","supportsBrowserAnimation","catch","pendingTimeline","_onReject","finally","GroupAnimation","animations","runAll","all","getAll","propName","setAll","newValue","subscriptions","methodName","controls","GroupAnimationWithThen","splitCSSVariableRegex","getVariableValue","depth","fallback","exec","token1","token2","parseCSSVariable","resolved","getPropertyValue","trimmed","isNumericalString","getValueTransition","positionalKeys","testValueType","dimensionValueTypes","findDimensionValueType","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","scaleZ","distance","perspective","transformPerspective","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","isZeroValueString","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","resolveElements","elementOrSelector","scope","selectorCache","EventTarget","elements","querySelectorAll","getValueAsType","isHTMLElement","isObject","MotionValue","init","canTrackVelocity","events","updateAndNotify","setPrevFrameValue","prev","setCurrent","change","notify","dependents","dependent","dirty","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","SubscriptionManager","unsubscribe","getSize","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","addDependent","removeDependent","getPrevious","getVelocity","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","microtask","isDragging","isDragActive","setDragLock","axis","setupGesture","gestureAbortController","AbortController","passive","signal","abort","isValidHover","event","pointerType","hover","onHoverStart","eventOptions","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","removeEventListener","addEventListener","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","tagName","tabIndex","hasAttribute","isSVGElement","isSVGSVGElement","isMotionValue","valueTypes","findValueType"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104]}