{"version":3,"file":"vendor--trim-lines.C03Dth7Y.js","sources":["../../../../node_modules/trim-lines/index.js"],"sourcesContent":["const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n"],"names":["trimLines","value","source","String","search","match","exec","last","lines","push","trimLine","slice","index","length","join","start","end","startIndex","endIndex","code","codePointAt"],"mappings":"AAYO,SAASA,EAAUC,GACxB,MAAMC,EAASC,OAAOF,GAChBG,EAAS,YACf,IAAIC,EAAQD,EAAOE,KAAKJ,GACpBK,EAAO,EAEX,MAAMC,EAAQ,GAEd,KAAOH,GACLG,EAAMC,KACJC,EAASR,EAAOS,MAAMJ,EAAMF,EAAMO,OAAQL,EAAO,GAAG,GACpDF,EAAM,IAGRE,EAAOF,EAAMO,MAAQP,EAAM,GAAGQ,OAC9BR,EAAQD,EAAOE,KAAKJ,GAKtB,OAFAM,EAAMC,KAAKC,EAASR,EAAOS,MAAMJ,GAAOA,EAAO,GAAG,IAE3CC,EAAMM,KAAK,GACpB,CAYA,SAASJ,EAAST,EAAOc,EAAOC,GAC9B,IAAIC,EAAa,EACbC,EAAWjB,EAAMY,OAErB,GAAIE,EAAO,CACT,IAAII,EAAOlB,EAAMmB,YAAYH,GAE7B,KApDQ,IAoDDE,GAnDG,KAmDaA,GACrBF,IACAE,EAAOlB,EAAMmB,YAAYH,EAE/B,CAEE,GAAID,EAAK,CACP,IAAIG,EAAOlB,EAAMmB,YAAYF,EAAW,GAExC,KA7DQ,IA6DDC,GA5DG,KA4DaA,GACrBD,IACAC,EAAOlB,EAAMmB,YAAYF,EAAW,EAE1C,CAEE,OAAOA,EAAWD,EAAahB,EAAMU,MAAMM,EAAYC,GAAY,EACrE","x_google_ignoreList":[0]}