{"version":3,"file":"page-communityshare.BV0mcc5B.js","sources":["../../../../src/pages/CommunityShare.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { supabase } from '@/integrations/supabase/client';\nimport { useToast } from '@/hooks/use-toast';\nimport { Button } from '@/components/ui/button';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Users, Heart, Share2, ArrowLeft, MapPin, ExternalLink, Calendar, Reply, Loader2 } from 'lucide-react';\nimport { MediaDisplay } from '@/components/community/MediaDisplay';\nimport { LocationDisplay } from '@/components/community/LocationDisplay';\nimport { MediaUpload } from '@/components/community/MediaUpload';\nimport { StarRating } from '@/components/ui/star-rating';\nimport { cn } from \"@/lib/utils\";\nimport { Helmet } from 'react-helmet-async';\nimport { useTranslation } from 'react-i18next';\n\n  const CommunityShare = () => {\n    const { postId, locationSlug } = useParams();\n    const navigate = useNavigate();\n    const { toast } = useToast();\n    const { t } = useTranslation('community');\n    const [post, setPost] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [currentUser, setCurrentUser] = useState(null);\n    const [userLikes, setUserLikes] = useState({});\n    const [replies, setReplies] = useState([]);\n    const [replyContent, setReplyContent] = useState('');\n    const [replyMedia, setReplyMedia] = useState([]);\n    const [replyRating, setReplyRating] = useState(0);\n    const [isUploadingReply, setIsUploadingReply] = useState(false);\n    const [showReplies, setShowReplies] = useState(false);\n\n    // Generate meta tags for sharing and SEO\n    const generateMetaTags = () => {\n      if (!post) return null;\n      \n      // Create location-focused title for better SEO\n      const locationTitle = post.location \n        ? `${post.location} - Community Post on ZapAround`\n        : 'Community Post on ZapAround';\n      \n      // Create rich description with location focus\n      let description = '';\n      if (post.location) {\n        description = `Discover ${post.location} through our community. `;\n      }\n      description += (post.content || '').substring(0, 150) + ((post.content || '').length > 150 ? '...' : '');\n      \n      const imageUrl = post.media_urls?.[0]?.url || post.image_url || '/apple-touch-icon.png';\n      const currentLang = window.location.pathname.split('/')[1] || 'en';\n      const canonicalUrl = locationSlug \n        ? `${window.location.origin}/${currentLang}/community/share/${post.id}/${locationSlug}`\n        : `${window.location.origin}/${currentLang}/community/share/${post.id}`;\n      \n      // Generate structured data for better SEO\n      const structuredData = {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"Article\",\n        \"headline\": locationTitle,\n        \"description\": description,\n        \"image\": imageUrl,\n        \"author\": {\n          \"@type\": \"Person\",\n          \"name\": `${post.profile?.first_name || ''} ${post.profile?.last_name || ''}`.trim() || post.profile?.username || \"ZapAround User\"\n        },\n        \"publisher\": {\n          \"@type\": \"Organization\",\n          \"name\": \"ZapAround\",\n          \"url\": window.location.origin\n        },\n        \"datePublished\": post.created_at,\n        \"dateModified\": post.updated_at || post.created_at,\n        \"mainEntityOfPage\": {\n          \"@type\": \"WebPage\",\n          \"@id\": canonicalUrl\n        }\n      };\n      \n      // Add location data if available\n      if (post.location) {\n        structuredData[\"contentLocation\"] = {\n          \"@type\": \"Place\",\n          \"name\": post.location\n        };\n      }\n      \n      const altLangs = ['en', 'fr', 'es'].filter(l => l !== currentLang);\n      return {\n        title: locationTitle,\n        description,\n        image: imageUrl,\n        canonicalUrl,\n        structuredData,\n        alternates: altLangs.map(l => ({ lang: l, url: canonicalUrl.replace(`/${currentLang}/`, `/${l}/`) }))\n      };\n    };\n\n  useEffect(() => {\n    fetchPost();\n    fetchCurrentUser();\n    fetchReplies();\n  }, [postId]);\n\n  const fetchCurrentUser = async () => {\n    const { data: { user } } = await supabase.auth.getUser();\n    setCurrentUser(user);\n  };\n\n  const fetchPost = async () => {\n    try {\n      setLoading(true);\n      const { data, error } = await supabase\n        .from('community_posts')\n        .select(`\n          *,\n          likes:post_likes(count),\n          replies:post_replies(count),\n          profile:profiles!user_id (\n            username,\n            first_name,\n            last_name,\n            avatar_url\n          )\n        `)\n        .eq('id', postId)\n        .single();\n\n      if (error) throw error;\n\n      setPost(data);\n      \n      // Fetch user likes if user is logged in\n      if (currentUser) {\n        fetchUserLikes();\n      }\n    } catch (error) {\n      console.error('Error fetching post:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to fetch post. Please try again.',\n        variant: 'destructive',\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchUserLikes = async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) return;\n\n      const { data, error } = await supabase\n        .from('post_likes')\n        .select('post_id')\n        .eq('post_id', postId)\n        .eq('user_id', user.id);\n\n      if (error) throw error;\n\n      const likesMap = {};\n      data.forEach(like => {\n        likesMap[like.post_id] = true;\n      });\n      setUserLikes(likesMap);\n    } catch (error) {\n      console.error('Error fetching user likes:', error);\n    }\n  };\n\n  const handleLike = async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        toast({\n          title: 'Error',\n          description: 'You must be logged in to like posts.',\n          variant: 'destructive',\n        });\n        return;\n      }\n\n      if (userLikes[postId]) {\n        // Unlike\n        const { error } = await supabase\n          .from('post_likes')\n          .delete()\n          .eq('post_id', postId)\n          .eq('user_id', user.id);\n\n        if (error) throw error;\n\n        setUserLikes(prev => ({ ...prev, [postId]: false }));\n        setPost(prev => ({\n          ...prev,\n          likes: [{ count: (prev.likes?.[0]?.count || 1) - 1 }]\n        }));\n      } else {\n        // Like\n        const { error } = await supabase\n          .from('post_likes')\n          .insert([{ post_id: postId, user_id: user.id }]);\n\n        if (error) throw error;\n\n        setUserLikes(prev => ({ ...prev, [postId]: true }));\n        setPost(prev => ({\n          ...prev,\n          likes: [{ count: (prev.likes?.[0]?.count || 0) + 1 }]\n        }));\n      }\n    } catch (error) {\n      console.error('Error handling like:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to update like. Please try again.',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const handleReplyMediaChange = (media) => {\n    setReplyMedia(media);\n  };\n\n  const uploadReplyMedia = async (mediaFiles) => {\n    if (!mediaFiles || mediaFiles.length === 0) return [];\n\n    const uploadedMedia = [];\n    \n    for (const mediaFile of mediaFiles) {\n      try {\n        const fileExt = mediaFile.file.name.split('.').pop();\n        const fileName = `${Date.now()}-${Math.random().toString(36).substring(2)}.${fileExt}`;\n        const filePath = `community-replies/${fileName}`;\n\n        const { error: uploadError } = await supabase.storage\n          .from('community-media')\n          .upload(filePath, mediaFile.file);\n\n        if (uploadError) throw uploadError;\n\n        const { data: { publicUrl } } = supabase.storage\n          .from('community-media')\n          .getPublicUrl(filePath);\n\n        uploadedMedia.push({\n          id: mediaFile.id,\n          url: publicUrl,\n          type: mediaFile.type,\n          thumbnail: mediaFile.type === 'video' ? mediaFile.preview : undefined\n        });\n      } catch (error) {\n        console.error('Error uploading reply media:', error);\n        toast({\n          title: 'Error',\n          description: 'Failed to upload media. Please try again.',\n          variant: 'destructive',\n        });\n      }\n    }\n\n    return uploadedMedia;\n  };\n\n  const handleReply = async () => {\n    if (!currentUser) {\n      toast({\n        title: 'Error',\n        description: 'You must be logged in to reply.',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    if (!replyContent.trim() && replyMedia.length === 0) {\n      toast({\n        title: 'Error',\n        description: 'Please add some content or media to your reply.',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    try {\n      setIsUploadingReply(true);\n\n      // Upload media if any\n      const uploadedMedia = await uploadReplyMedia(replyMedia);\n\n      // Insert reply\n      const { data: reply, error } = await supabase\n        .from('post_replies')\n        .insert([{\n          post_id: postId,\n          user_id: currentUser.id,\n          content: replyContent.trim(),\n          media_urls: uploadedMedia,\n          rating: replyRating > 0 ? replyRating : null,\n          created_at: new Date().toISOString()\n        }])\n        .select(`\n          *,\n          profile:profiles!user_id (\n            username,\n            first_name,\n            last_name,\n            avatar_url\n          )\n        `)\n        .single();\n\n      if (error) throw error;\n\n      // Add reply to state\n      setReplies(prev => [reply, ...prev]);\n      \n      // Update post reply count\n      setPost(prev => ({\n        ...prev,\n        replies: [{ count: (prev.replies?.[0]?.count || 0) + 1 }]\n      }));\n\n      // Reset form\n      setReplyContent('');\n      setReplyMedia([]);\n      setReplyRating(0);\n\n      toast({\n        title: 'Success',\n        description: 'Reply posted successfully!',\n      });\n\n      // Show replies if not already shown\n      if (!showReplies) {\n        setShowReplies(true);\n      }\n    } catch (error) {\n      console.error('Error posting reply:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to post reply. Please try again.',\n        variant: 'destructive',\n      });\n    } finally {\n      setIsUploadingReply(false);\n    }\n  };\n\n  const fetchReplies = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('post_replies')\n        .select(`\n          *,\n          profile:profiles!user_id (\n            username,\n            first_name,\n            last_name,\n            avatar_url\n          )\n        `)\n        .eq('post_id', postId)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      setReplies(data || []);\n    } catch (error) {\n      console.error('Error fetching replies:', error);\n    }\n  };\n\n  const handleShareWithDevice = async () => {\n    // Get language from URL parameters or fallback to navigator language\n    const currentLang = window.location.pathname.split('/')[1] || (navigator.language || 'en').slice(0,2);\n    const shareUrl = locationSlug \n      ? `${window.location.origin}/${currentLang}/community/share/${post.id}/${locationSlug}`\n      : `${window.location.origin}/${currentLang}/community/share/${post.id}`;\n    const title = 'ZapAround';\n    const sharePrefix = t('share.checkFound', 'Check what I found on ZapAround');\n    const contentSnippet = (post.content || '').trim();\n    const limitedContent = contentSnippet.length > 220 ? contentSnippet.substring(0, 220) + '...' : contentSnippet;\n    const quotedContentLine = limitedContent ? `\\n'${contentSnippet}'` : '';\n    const placeLine = post.location ? `\\n${post.location}` : '';\n    const textPayload = `${sharePrefix}${quotedContentLine}${placeLine}\\n${shareUrl}`;\n\n    // Check if native sharing is available\n    if (typeof navigator !== 'undefined' && navigator.share) {\n      const shareData: any = { \n        title, \n        text: textPayload,\n        url: shareUrl\n      };\n\n      // Try to attach image if available and supported\n      try {\n        if (post.media_urls && post.media_urls.length > 0) {\n          const firstImage = post.media_urls.find((media: any) => media.type === 'image');\n          if (firstImage && firstImage.url) {\n            const response = await fetch(firstImage.url);\n            const blob = await response.blob();\n            const extension = (blob.type && blob.type.split('/')[1]) || 'jpg';\n            const file = new File([blob], `zaparound-share.${extension}`, { type: blob.type || 'image/jpeg' });\n            \n            // Check if files can be shared\n            if (navigator.canShare && navigator.canShare({ files: [file] })) {\n              shareData.files = [file];\n            }\n          }\n        }\n      } catch (error) {\n        // Continue without file attachment if it fails\n        console.log('File attachment failed, continuing with text-only share');\n      }\n\n      try {\n        await navigator.share(shareData);\n        return; // Successfully shared, exit function\n      } catch (error) {\n        // User cancelled or share failed, continue to fallback\n        console.log('Native share failed or was cancelled, using fallback');\n      }\n    }\n\n    // Fallback to clipboard copy if native sharing is not available or failed\n    try {\n      await navigator.clipboard.writeText(textPayload);\n      toast({\n        title: 'Link Copied!',\n        description: 'Post text and link have been copied to your clipboard.',\n      });\n    } catch (error) {\n      // Fallback for older browsers\n      const textArea = document.createElement('textarea');\n      textArea.value = textPayload;\n      document.body.appendChild(textArea);\n      textArea.select();\n      document.execCommand('copy');\n      document.body.removeChild(textArea);\n      \n      toast({\n        title: 'Link Copied!',\n        description: 'Post text and link have been copied to your clipboard.',\n      });\n    }\n  };\n\n  const handleCopyLink = async () => {\n    // Get language from URL parameters or fallback to navigator language\n    const currentLang = window.location.pathname.split('/')[1] || (navigator.language || 'en').slice(0,2);\n    const shareUrl = locationSlug \n      ? `${window.location.origin}/${currentLang}/community/share/${post.id}/${locationSlug}`\n      : `${window.location.origin}/${currentLang}/community/share/${post.id}`;\n    \n    try {\n      await navigator.clipboard.writeText(shareUrl);\n      toast({\n        title: 'Link Copied!',\n        description: 'Post link has been copied to your clipboard.',\n      });\n    } catch (error) {\n      // Fallback for older browsers\n      const textArea = document.createElement('textarea');\n      textArea.value = shareUrl;\n      document.body.appendChild(textArea);\n      textArea.select();\n      document.execCommand('copy');\n      document.body.removeChild(textArea);\n      \n      toast({\n        title: 'Link Copied!',\n        description: 'Post link has been copied to your clipboard.',\n      });\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-green-500 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading post...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!post) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold text-gray-800 mb-4\">Post Not Found</h1>\n          <p className=\"text-gray-600 mb-6\">The post you're looking for doesn't exist or has been removed.</p>\n          <Button onClick={() => {\n            // Navigate back to community with proper language prefix\n            const currentLang = window.location.pathname.split('/')[1] || 'en';\n            navigate(`/${currentLang}/community`);\n          }}>\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            Back to Community\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  // Generate meta description\n  const metaDescription = post.location \n    ? `Check out this amazing post about ${post.location} on ZapAround! ${post.content.substring(0, 150)}...`\n    : post.content.substring(0, 160) + (post.content.length > 160 ? '...' : '');\n\n  // Get first image for meta tags\n  const firstImage = post.media_urls && post.media_urls.length > 0 \n    ? post.media_urls.find(media => media.type === 'image')?.url \n    : post.image_url;\n\n  return (\n    <>\n      <Helmet>\n        {(() => {\n          const metaTags = generateMetaTags();\n          if (!metaTags) return null;\n          \n          return (\n            <>\n              <title>{metaTags.title}</title>\n              <meta name=\"description\" content={metaTags.description} />\n              \n              {/* Open Graph Meta Tags */}\n              <meta property=\"og:title\" content={metaTags.title} />\n              <meta property=\"og:description\" content={metaTags.description} />\n              <meta property=\"og:type\" content=\"article\" />\n              <meta property=\"og:url\" content={metaTags.canonicalUrl} />\n              <meta property=\"og:image\" content={metaTags.image} />\n              <meta property=\"og:site_name\" content=\"ZapAround\" />\n              <meta property=\"og:locale\" content={window.location.pathname.split('/')[1] || 'en'} />\n              \n              {/* Twitter Card Meta Tags */}\n              <meta name=\"twitter:card\" content=\"summary_large_image\" />\n              <meta name=\"twitter:title\" content={metaTags.title} />\n              <meta name=\"twitter:description\" content={metaTags.description} />\n              <meta name=\"twitter:image\" content={metaTags.image} />\n              <meta name=\"twitter:site\" content=\"@zaparounds\" />\n              \n              {/* SEO Meta Tags */}\n              <link rel=\"canonical\" href={metaTags.canonicalUrl} />\n              <meta name=\"robots\" content=\"index, follow\" />\n              <meta name=\"googlebot\" content=\"index, follow\" />\n\n              {/* hreflang alternates */}\n              {metaTags.alternates?.map((alt) => (\n                <link key={alt.lang} rel=\"alternate\" hrefLang={alt.lang} href={alt.url} />\n              ))}\n              {/* x-default points to English */}\n              <link\n                rel=\"alternate\"\n                hrefLang=\"x-default\"\n                href={metaTags.canonicalUrl.replace(/\\/[a-z]{2}\\//, '/en/')}\n              />\n              \n              {/* Location-specific meta tags for better SEO */}\n              {post.location && (\n                <>\n                  <meta name=\"geo.placename\" content={post.location} />\n                  <meta name=\"geo.region\" content={post.location} />\n                  <meta name=\"keywords\" content={`${post.location}, community, travel, ZapAround, ${post.content?.substring(0, 100) || ''}`} />\n                </>\n              )}\n              \n              {/* Structured Data JSON-LD */}\n              <script type=\"application/ld+json\">\n                {JSON.stringify(metaTags.structuredData)}\n              </script>\n            </>\n          );\n        })()}\n      </Helmet>\n\n      <div className=\"min-h-screen bg-gray-50\">\n        <div className=\"container max-w-4xl mx-auto px-4 py-8\">\n          {/* Header */}\n          <div className=\"mb-8\">\n            <Button\n              variant=\"ghost\"\n              onClick={() => {\n                // Navigate back to community with proper language prefix\n                const currentLang = window.location.pathname.split('/')[1] || 'en';\n                navigate(`/${currentLang}/community`);\n              }}\n              className=\"mb-4 flex items-center gap-2\"\n            >\n              <ArrowLeft className=\"h-4 w-4\" />\n              {t('navigation.title')}\n            </Button>\n            \n            <div className=\"bg-white rounded-xl shadow-sm p-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"flex items-center\">\n                  <div className=\"h-12 w-12 bg-gradient-to-br from-blue-100 to-blue-200 rounded-full flex items-center justify-center shadow-sm overflow-hidden\">\n                    {post.profile?.avatar_url ? (\n                      <img\n                        src={supabase.storage.from('avatars').getPublicUrl(post.profile.avatar_url).data.publicUrl}\n                                                            alt={post.profile.username || `${post.profile.first_name || ''} ${post.profile.last_name || ''}`.trim() || 'User'}\n                        className=\"w-full h-full object-cover\"\n                        onError={(e) => {\n                          e.currentTarget.style.display = 'none';\n                          e.currentTarget.parentElement.classList.remove('overflow-hidden');\n                        }}\n                      />\n                    ) : (\n                      <Users className=\"h-6 w-6 text-blue-500\" />\n                    )}\n                  </div>\n                  <div className=\"ml-4\">\n                    <p className=\"font-semibold text-gray-800\">\n                                                      {post.profile?.username || `${post.profile?.first_name || ''} ${post.profile?.last_name || ''}`.trim() || t('user.anonymous')}\n                    </p>\n                    <p className=\"text-sm text-gray-500\">\n                      {new Date(post.created_at).toLocaleString()}\n                    </p>\n                    {post.rating && (\n                      <div className=\"flex items-center gap-2 mt-1\">\n                        <StarRating\n                          rating={post.rating}\n                          size=\"sm\"\n                          readonly\n                        />\n                                                                <span className=\"text-xs text-gray-500\">\n                                          {post.rating} {post.rating !== 1 ? t('rating.stars') : t('rating.star')}\n                                        </span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center gap-2\">\n                  <DropdownMenu>\n                    <DropdownMenuTrigger asChild>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        className=\"h-8 w-8 p-0 hover:bg-gray-100\"\n                        title=\"Share post\"\n                      >\n                        <Share2 className=\"h-4 w-4 text-blue-500\" />\n                      </Button>\n                    </DropdownMenuTrigger>\n                    <DropdownMenuContent align=\"end\" className=\"w-48\">\n                      <DropdownMenuItem\n                        onClick={handleShareWithDevice}\n                        className=\"cursor-pointer\"\n                      >\n                        <Share2 className=\"h-4 w-4 mr-2\" />\n                        {t('postActions.shareWithDevice', 'Share with device')}\n                      </DropdownMenuItem>\n                      <DropdownMenuItem\n                        onClick={handleCopyLink}\n                        className=\"cursor-pointer\"\n                      >\n                        <ExternalLink className=\"h-4 w-4 mr-2\" />\n                        {t('postActions.copyLink', 'Copy link')}\n                      </DropdownMenuItem>\n                    </DropdownMenuContent>\n                  </DropdownMenu>\n                </div>\n              </div>\n\n              {/* Location */}\n              {post.location && (\n                <div className=\"mb-4\">\n                  <LocationDisplay\n                    location={post.location}\n                    placeId={post.place_id}\n                    placeLat={post.place_lat}\n                    placeLng={post.place_lng}\n                    placeTypes={post.place_types}\n                    placeRating={post.place_rating}\n                    placeUserRatingsTotal={post.place_user_ratings_total}\n                  />\n                </div>\n              )}\n\n              {/* Content */}\n              <div className=\"bg-gray-50 rounded-xl p-4 mb-4\">\n                <p className=\"text-gray-700 leading-relaxed text-lg\">{post.content}</p>\n                {(post.media_urls && post.media_urls.length > 0) || post.image_url ? (\n                  <div className=\"mt-4\">\n                    <MediaDisplay\n                      media={post.media_urls && post.media_urls.length > 0 ? post.media_urls : post.image_url}\n                      maxPreview={10}\n                    />\n                  </div>\n                ) : null}\n              </div>\n\n              {/* Actions */}\n              <div className=\"flex items-center justify-between pt-4 border-t\">\n                <div className=\"flex items-center gap-4\">\n                  <Button \n                    variant=\"ghost\" \n                    size=\"sm\" \n                    className={cn(\n                      \"flex items-center rounded-full px-4\",\n                      userLikes[postId] ? 'text-red-500 hover:bg-red-50' : 'hover:bg-gray-100'\n                    )}\n                    onClick={handleLike}\n                  >\n                    <Heart className={cn(\"h-4 w-4 mr-2\", userLikes[postId] ? 'fill-current' : '')} />\n                    {post.likes?.[0]?.count || 0} Likes\n                  </Button>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"flex items-center rounded-full px-4 hover:bg-gray-100\"\n                    onClick={() => setShowReplies(!showReplies)}\n                  >\n                    <Reply className=\"h-4 w-4 mr-2\" />\n                    {post.replies?.[0]?.count || 0} {t('replies.title')}\n                  </Button>\n                </div>\n                \n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => navigate('/community')}\n                  className=\"flex items-center gap-2\"\n                >\n                  <ExternalLink className=\"h-4 w-4\" />\n                  {t('navigation.title')}\n                </Button>\n              </div>\n\n              {/* Reply Section */}\n              {currentUser && (\n                <div className=\"mt-6 pt-4 border-t\">\n                  <div className=\"space-y-4\">\n                    <textarea\n                      value={replyContent}\n                      onChange={(e) => setReplyContent(e.target.value)}\n                      placeholder={t('replies.placeholder')}\n                      className=\"w-full p-3 border border-gray-200 rounded-lg resize-none focus:ring-2 focus:ring-green-500 focus:border-transparent\"\n                      rows={3}\n                    />\n                    \n                    {/* Reply Star Rating */}\n                    <div className=\"flex items-center gap-3\">\n                      <span className=\"text-sm font-medium text-gray-700\">{t('rating.ratePost')}</span>\n                      <StarRating\n                        rating={replyRating}\n                        onRatingChange={setReplyRating}\n                        size=\"sm\"\n                      />\n                      {replyRating > 0 && (\n                        <span className=\"text-sm text-gray-500\">\n                          {replyRating} {replyRating !== 1 ? t('rating.stars') : t('rating.star')}\n                        </span>\n                      )}\n                    </div>\n                    \n                    {/* Reply Media Upload */}\n                    <MediaUpload\n                      onMediaChange={handleReplyMediaChange}\n                      maxFiles={5}\n                      disabled={isUploadingReply}\n                    />\n                    \n                    <div className=\"flex justify-end\">\n                      <Button\n                        size=\"sm\"\n                        onClick={handleReply}\n                        disabled={isUploadingReply || (!replyContent.trim() && replyMedia.length === 0)}\n                        className={cn(\n                          \"relative px-6 py-2 bg-gradient-to-r from-[#10B981] to-[#059669] text-white border-none hover:from-[#059669] hover:to-[#047857] hover:scale-105 transition-all duration-300 shadow-lg rounded-full font-medium tracking-wide flex items-center gap-2\",\n                          (!replyContent.trim() && replyMedia.length === 0) && \"opacity-50 cursor-not-allowed\"\n                        )}\n                      >\n                        {isUploadingReply ? (\n                          <>\n                            <Loader2 className=\"h-4 w-4 animate-spin\" />\n                            {t('replies.posting')}\n                          </>\n                        ) : (\n                          t('replies.replyButton')\n                        )}\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Replies Display */}\n              {showReplies && (\n                <div className=\"mt-6 pt-4 border-t\">\n                  <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">{t('replies.title')}</h3>\n                  <div className=\"space-y-4\">\n                    {replies.length === 0 ? (\n                      <p className=\"text-gray-500 text-center py-4\">{t('replies.noReplies')}</p>\n                    ) : (\n                      replies.map((reply) => (\n                        <div key={reply.id} className=\"bg-gray-50 rounded-lg p-4\">\n                          <div className=\"flex items-start gap-3\">\n                            <div className=\"h-8 w-8 bg-gradient-to-br from-blue-100 to-blue-200 rounded-full flex items-center justify-center shadow-sm overflow-hidden flex-shrink-0\">\n                              {reply.profile?.avatar_url ? (\n                                <img\n                                  src={supabase.storage.from('avatars').getPublicUrl(reply.profile.avatar_url).data.publicUrl}\n                                                                          alt={reply.profile.username || `${reply.profile.first_name || ''} ${reply.profile.last_name || ''}`.trim() || 'User'}\n                                  className=\"w-full h-full object-cover\"\n                                  onError={(e) => {\n                                    e.currentTarget.style.display = 'none';\n                                    e.currentTarget.parentElement.classList.remove('overflow-hidden');\n                                  }}\n                                />\n                              ) : (\n                                <Users className=\"h-4 w-4 text-blue-500\" />\n                              )}\n                            </div>\n                            <div className=\"flex-1 min-w-0\">\n                              <div className=\"flex items-center gap-2 mb-1\">\n                                <p className=\"font-medium text-gray-800 text-sm\">\n                                                                          {reply.profile?.username || `${reply.profile?.first_name || ''} ${reply.profile?.last_name || ''}`.trim() || t('user.anonymous')}\n                                </p>\n                                <span className=\"text-xs text-gray-500\">\n                                  {new Date(reply.created_at).toLocaleString()}\n                                </span>\n                              </div>\n                              <p className=\"text-gray-700 text-sm mb-2\">{reply.content}</p>\n                              {reply.rating && (\n                                <div className=\"flex items-center gap-2 mb-2\">\n                                  <StarRating\n                                    rating={reply.rating}\n                                    size=\"sm\"\n                                    readonly\n                                  />\n                                  <span className=\"text-xs text-gray-500\">\n                                    {reply.rating} {reply.rating !== 1 ? t('rating.stars') : t('rating.star')}\n                                  </span>\n                                </div>\n                              )}\n                              {(reply.media_urls && reply.media_urls.length > 0) || reply.image_url ? (\n                                <div className=\"mt-2\">\n                                  <MediaDisplay\n                                    media={reply.media_urls && reply.media_urls.length > 0 ? reply.media_urls : reply.image_url}\n                                    maxPreview={3}\n                                  />\n                                </div>\n                              ) : null}\n                            </div>\n                          </div>\n                        </div>\n                      ))\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Call to Action */}\n          <div className=\"relative\">\n            {/* Shadow Square Background */}\n            <div className=\"absolute inset-0 bg-gradient-to-br from-[#61936f]/20 to-[#4a7c59]/20 rounded-3xl blur-2xl transform rotate-3 scale-105\"></div>\n            <div className=\"absolute inset-0 bg-gradient-to-tl from-[#10B981]/15 to-[#059669]/15 rounded-3xl blur-xl transform -rotate-2 scale-105\"></div>\n            \n            {/* Main Container */}\n            <div className=\"relative bg-white/95 backdrop-blur-sm rounded-3xl shadow-2xl border border-white/20 p-8 transform hover:scale-[1.02] transition-all duration-500 hover:shadow-3xl\">\n              {/* Inner Glow Effect */}\n              <div className=\"absolute inset-0 bg-gradient-to-r from-[#61936f]/5 to-[#10B981]/5 rounded-3xl\"></div>\n              \n              {/* Content */}\n              <div className=\"relative z-10 text-center\">\n                <h2 className=\"text-3xl font-bold mb-4 tracking-tight text-[#1d1d1e]\">\n                  {post.location ? t('communityShare.readyToExplore', { location: post.location }) : t('communityShare.readyToJoin')}\n                </h2>\n                <p className=\"text-lg mb-8 text-[#62626a] max-w-2xl mx-auto\">\n                  {post.location \n                    ? t('communityShare.discoverMore')\n                    : t('communityShare.shareStories')\n                  }\n                </p>\n                <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n                  <Button\n                    size=\"lg\"\n                    className=\"relative px-8 py-3 bg-gradient-to-r from-[#61936f] to-[#4a7c59] hover:from-[#4a7c59] hover:to-[#3d6b4a] text-white hover:scale-105 transition-all duration-300 shadow-lg rounded-full font-semibold tracking-wide min-w-[180px] border-0\"\n                    onClick={() => navigate('/community')}\n                  >\n                    {t('communityShare.exploreCommunity')}\n                  </Button>\n                  <Button\n                    size=\"lg\"\n                    variant=\"outline\"\n                    className=\"relative px-8 py-3 border-2 border-[#61936f] text-[#61936f] hover:bg-[#61936f] hover:text-white hover:scale-105 transition-all duration-300 rounded-full font-semibold tracking-wide min-w-[180px]\"\n                    onClick={() => navigate('/')}\n                  >\n                    {t('communityShare.startPlanning')}\n                  </Button>\n                </div>\n              </div>\n              \n              {/* Decorative Corner Elements */}\n              <div className=\"absolute top-4 left-4 w-8 h-8 border-l-2 border-t-2 border-[#61936f]/30 rounded-tl-2xl\"></div>\n              <div className=\"absolute top-4 right-4 w-8 h-8 border-r-2 border-t-2 border-[#61936f]/30 rounded-tr-2xl\"></div>\n              <div className=\"absolute bottom-4 left-4 w-8 h-8 border-l-2 border-b-2 border-[#61936f]/30 rounded-bl-2xl\"></div>\n              <div className=\"absolute bottom-4 right-4 w-8 h-8 border-r-2 border-b-2 border-[#61936f]/30 rounded-br-2xl\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CommunityShare; "],"names":["CommunityShare","postId","locationSlug","useParams","navigate","useNavigate","toast","useToast","t","useTranslation","post","setPost","useState","loading","setLoading","currentUser","setCurrentUser","userLikes","setUserLikes","replies","setReplies","replyContent","setReplyContent","replyMedia","setReplyMedia","replyRating","setReplyRating","isUploadingReply","setIsUploadingReply","showReplies","setShowReplies","useEffect","fetchPost","fetchCurrentUser","fetchReplies","async","data","user","supabase","auth","getUser","error","from","select","eq","single","fetchUserLikes","title","description","variant","id","likesMap","forEach","like","post_id","order","ascending","className","children","jsxs","jsx","location","content","substring","length","media_urls","find","media","type","image_url","Fragment","Helmet","metaTags","locationTitle","imageUrl","url","currentLang","window","pathname","split","canonicalUrl","origin","structuredData","headline","image","author","name","profile","first_name","last_name","trim","username","publisher","datePublished","created_at","dateModified","updated_at","mainEntityOfPage","altLangs","filter","l","alternates","map","lang","replace","generateMetaTags","property","rel","href","alt","hrefLang","stringify","Button","onClick","ArrowLeft","avatar_url","src","storage","getPublicUrl","publicUrl","onError","e","currentTarget","style","display","parentElement","classList","remove","Users","Date","toLocaleString","rating","StarRating","size","readonly","DropdownMenu","DropdownMenuTrigger","asChild","Share2","DropdownMenuContent","align","DropdownMenuItem","navigator","language","slice","shareUrl","sharePrefix","contentSnippet","textPayload","share","shareData","text","firstImage","response","fetch","blob","extension","file","File","canShare","files","clipboard","writeText","textArea","document","createElement","value","body","appendChild","execCommand","removeChild","ExternalLink","LocationDisplay","placeId","place_id","placeLat","place_lat","placeLng","place_lng","placeTypes","place_types","placeRating","place_rating","placeUserRatingsTotal","place_user_ratings_total","MediaDisplay","maxPreview","cn","delete","prev","likes","count","insert","user_id","Heart","Reply","onChange","target","placeholder","rows","onRatingChange","MediaUpload","onMediaChange","maxFiles","disabled","uploadedMedia","mediaFiles","mediaFile","fileExt","pop","filePath","now","Math","random","toString","uploadError","upload","push","thumbnail","preview","uploadReplyMedia","reply","toISOString","Loader2"],"mappings":"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"}