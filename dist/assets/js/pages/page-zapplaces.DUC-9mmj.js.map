{"version":3,"file":"page-zapplaces.DUC-9mmj.js","sources":["../../../../src/pages/ZapPlaces.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { createPlaceUrl, createPlaceSlug } from '@/utils/placeUtils';\nimport { useTranslation } from 'react-i18next';\nimport { motion } from 'framer-motion';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { \n  MapPin, \n  Star, \n  Clock, \n  Phone, \n  Globe, \n  ArrowLeft, \n  Heart,\n  Share2,\n  Navigation,\n  Calendar,\n  Users,\n  MessageCircle,\n  Image as ImageIcon,\n  ChevronLeft,\n  ChevronRight,\n  X\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { supabase } from '@/integrations/supabase/client';\nimport { useToast } from '@/hooks/use-toast';\nimport { getMapboxToken } from '@/utils/mapboxUtils';\nimport { useFavorites } from '@/hooks/useFavorites';\nimport { SEO } from '@/components/SEO';\nimport { Helmet } from 'react-helmet-async';\n\ninterface PlaceDetails {\n  place_id: string;\n  name: string;\n  formatted_address: string;\n  geometry: {\n    location: {\n      lat: number;\n      lng: number;\n    };\n  };\n  types: string[];\n  rating?: number;\n  user_ratings_total?: number;\n  opening_hours?: {\n    open_now: boolean;\n    weekday_text?: string[];\n  };\n  website?: string;\n  international_phone_number?: string;\n  reviews?: Array<{\n    author_name: string;\n    rating: number;\n    text: string;\n    time: number;\n    profile_photo_url?: string;\n  }>;\n  photos?: Array<{\n    photo_reference: string;\n    height: number;\n    width: number;\n  }>;\n  price_level?: number;\n  vicinity?: string;\n}\n\ninterface ZapPlacesPageState {\n  placeId: string;\n  name: string;\n  lat: number;\n  lng: number;\n  types: string[];\n  rating: number;\n  userRatingsTotal: number;\n}\n\nconst ZapPlaces = () => {\n  const { placeSlug } = useParams<{ placeSlug: string }>();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { t } = useTranslation('zap-places');\n  const language = (typeof navigator !== 'undefined' ? (document.documentElement.lang || navigator.language?.slice(0,2)) : 'en') || 'en';\n  const LOCALE_MAP: Record<string, string> = { en: 'en_US', fr: 'fr_FR', es: 'es_ES' };\n  const locale = LOCALE_MAP[language] || 'en_US';\n  const { toast } = useToast();\n  const { isFavorited, toggleFavorite } = useFavorites();\n  \n  const [placeDetails, setPlaceDetails] = useState<PlaceDetails | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [relatedPosts, setRelatedPosts] = useState([]);\n  const [loadingPosts, setLoadingPosts] = useState(false);\n  const [selectedImageIndex, setSelectedImageIndex] = useState<number | null>(null);\n  const [imageUrls, setImageUrls] = useState<string[]>([]);\n  const [isDragging, setIsDragging] = useState(false);\n  const [startX, setStartX] = useState(0);\n  const [scrollLeft, setScrollLeft] = useState(0);\n  const [mapboxToken, setMapboxToken] = useState<string | null>(null);\n  \n  const galleryRef = useRef<HTMLDivElement>(null);\n  const mapContainer = useRef<HTMLDivElement>(null);\n  const map = useRef<mapboxgl.Map | null>(null);\n \n\n  // Get state from navigation - placeId should be passed here\n  const state = location.state as ZapPlacesPageState;\n  let placeId = state?.placeId;\n  \n  // Fallback: check URL query parameters for placeId (for external links)\n  if (!placeId) {\n    const urlParams = new URLSearchParams(window.location.search);\n    placeId = urlParams.get('id');\n  }\n\n  // Check if current place is favorited\n  const isFavoriteState = isFavorited(placeId || '');\n\n  // Fetch Mapbox token securely\n  useEffect(() => {\n    const fetchMapboxToken = async () => {\n      try {\n        const token = await getMapboxToken();\n        setMapboxToken(token);\n      } catch (err) {\n        console.error('Error fetching Mapbox token:', err);\n        // Don't set error state here - let the map initialize without token\n        // The map will show a placeholder or error message instead\n      }\n    };\n\n    fetchMapboxToken();\n  }, []);\n\n\n\n  useEffect(() => {\n    if (placeId) {\n      fetchPlaceDetails();\n      fetchRelatedPosts();\n      // setIsFavorite(isFavoriteState); // This line is no longer needed as isFavorited handles state\n    }\n  }, [placeId]);\n\n  // Initialize Mapbox map when place details are loaded and token is available\n  useEffect(() => {\n    if (placeDetails?.geometry?.location && mapContainer.current && !map.current) {\n      const cleanup = initializeMap();\n      return cleanup; // Return cleanup function to prevent memory leak\n    }\n  }, [placeDetails, mapboxToken]);\n\n  const initializeMap = () => {\n    if (!placeDetails?.geometry?.location || !mapContainer.current) return;\n\n    // If no token is available, show a placeholder instead of failing\n    if (!mapboxToken) {\n      console.warn('Mapbox token not available, showing placeholder');\n      const placeholderDiv = document.createElement('div');\n      placeholderDiv.className = 'w-full h-full bg-gray-100 flex items-center justify-center text-gray-500';\n      placeholderDiv.innerHTML = `\n        <div class=\"text-center\">\n          <div class=\"text-2xl mb-2\">üó∫Ô∏è</div>\n          <p class=\"text-sm\">Map loading...</p>\n        </div>\n      `;\n      mapContainer.current.appendChild(placeholderDiv);\n      \n      // Return cleanup function\n      return () => {\n        if (mapContainer.current && placeholderDiv.parentNode) {\n          mapContainer.current.removeChild(placeholderDiv);\n        }\n      };\n    }\n\n    // Set Mapbox access token securely\n    mapboxgl.accessToken = mapboxToken;\n\n    const { lat, lng } = placeDetails.geometry.location;\n\n    // Create map\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v12',\n      center: [lng, lat],\n      zoom: 15,\n      attributionControl: false\n    });\n\n    // Add navigation controls\n    map.current.addControl(new mapboxgl.NavigationControl(), 'top-right');\n\n    // Add attribution\n    map.current.addControl(\n      new mapboxgl.AttributionControl({\n        compact: true\n      })\n    );\n\n    // Add popup\n    const popup = new mapboxgl.Popup({ offset: 25 })\n      .setHTML(`\n        <div class=\"p-2\">\n          <h3 class=\"font-semibold text-sm\">${placeDetails.name}</h3>\n          <p class=\"text-xs text-gray-600\">${placeDetails.formatted_address}</p>\n        </div>\n      `);\n\n    // Add marker with popup\n    new mapboxgl.Marker()\n      .setLngLat([lng, lat])\n      .setPopup(popup)\n      .addTo(map.current);\n\n    // Handle map load\n    map.current.on('load', () => {\n      if (map.current) {\n        map.current.resize();\n      }\n    });\n\n    // Return cleanup function to prevent memory leak\n    return () => {\n      if (map.current) {\n        map.current.remove();\n        map.current = null;\n      }\n    };\n  };\n\n  const fetchPlaceDetails = async () => {\n    try {\n      setLoading(true);\n      const { data, error } = await supabase.functions.invoke('google-places-search', {\n        body: {\n          action: 'details',\n          placeId: placeId,\n          fields: 'place_id,name,formatted_address,geometry,types,rating,user_ratings_total,opening_hours,website,international_phone_number,reviews,photos,price_level,vicinity',\n          language: 'en'\n        }\n      });\n\n      if (error) {\n        throw error;\n      }\n\n      if (data.status === 'OK' && data.result) {\n        setPlaceDetails(data.result);\n        // Fetch images if photos are available\n        if (data.result.photos && data.result.photos.length > 0) {\n          fetchPlaceImages(data.result.photos);\n        }\n      } else {\n        throw new Error('Place not found');\n      }\n    } catch (err) {\n      console.error('Error fetching place details:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load place details');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchPlaceImages = async (photos: PlaceDetails['photos']) => {\n    try {\n      const imagePromises = photos?.slice(0, 6).map(async (photo) => {\n        const { data, error } = await supabase.functions.invoke('google-places-search', {\n          body: {\n            action: 'photo',\n            photoReference: photo.photo_reference,\n            maxWidth: 800,\n            maxHeight: 600\n          }\n        });\n\n        if (error) {\n          console.error('Error fetching image:', error);\n          return null;\n        }\n\n        return data;\n      }) || [];\n\n      const images = await Promise.all(imagePromises);\n      const validImages = images.filter(img => img !== null) as string[];\n      setImageUrls(validImages);\n    } catch (err) {\n      console.error('Error fetching place images:', err);\n    }\n  };\n\n  const fetchRelatedPosts = async () => {\n    try {\n      setLoadingPosts(true);\n      const { data, error } = await supabase\n        .from('community_posts')\n        .select(`\n          *,\n          likes:post_likes(count),\n          replies:post_replies(count),\n                      profile:profiles!user_id (\n              username,\n              first_name,\n              last_name,\n              avatar_url\n            )\n        `)\n        .eq('place_id', placeId)\n        .order('created_at', { ascending: false })\n        .limit(5);\n\n      if (error) throw error;\n      setRelatedPosts(data || []);\n    } catch (err) {\n      console.error('Error fetching related posts:', err);\n    } finally {\n      setLoadingPosts(false);\n    }\n  };\n\n  const handleToggleFavorite = async () => {\n    if (!placeDetails && !state) {\n      toast({\n        title: 'Error',\n        description: 'Place details not available.',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    const favoriteData = {\n      place_id: placeId!,\n      place_name: placeDetails?.name || state?.name || '',\n      place_address: placeDetails?.formatted_address || '',\n      place_rating: placeDetails?.rating || state?.rating || 0,\n      place_lat: placeDetails?.geometry?.location?.lat ?? state?.lat ?? 0,\n      place_lng: placeDetails?.geometry?.location?.lng ?? state?.lng ?? 0,\n      place_types: placeDetails?.types || state?.types || []\n    };\n\n    await toggleFavorite(favoriteData);\n  };\n\n  const sharePlace = async () => {\n    if (navigator.share && placeDetails) {\n      try {\n        const shareUrl = createPlaceUrl(placeId!, placeDetails.name, language);\n        await navigator.share({\n          title: placeDetails.name,\n          text: `Check out ${placeDetails.name} on ZapAround!`,\n          url: `${window.location.origin}${shareUrl}`,\n        });\n      } catch (err) {\n        // Fallback to copying URL\n        copyToClipboard();\n      }\n    } else {\n      copyToClipboard();\n    }\n  };\n\n  const copyToClipboard = () => {\n    const shareUrl = createPlaceUrl(placeId!, placeDetails?.name || '', language);\n    const fullUrl = `${window.location.origin}${shareUrl}`;\n    navigator.clipboard.writeText(fullUrl);\n    toast({\n      title: 'Link Copied',\n      description: 'Place page link copied to clipboard.',\n    });\n  };\n\n  const openInMaps = () => {\n    if (placeDetails?.geometry?.location) {\n      const { lat, lng } = placeDetails.geometry.location;\n      const url = `https://www.google.com/maps/search/?api=1&query=${lat},${lng}`;\n      window.open(url, '_blank');\n    }\n  };\n\n  const getPlaceIcon = (types?: string[]) => {\n    if (!types || types.length === 0) return 'üìç';\n    \n    if (types.includes('restaurant') || types.includes('food')) {\n      return 'üçΩÔ∏è';\n    } else if (types.includes('tourist_attraction') || types.includes('point_of_interest')) {\n      return 'üèõÔ∏è';\n    } else if (types.includes('lodging') || types.includes('hotel')) {\n      return 'üè®';\n    } else if (types.includes('shopping_mall') || types.includes('store')) {\n      return 'üõçÔ∏è';\n    } else if (types.includes('park') || types.includes('natural_feature')) {\n      return 'üå≥';\n    } else if (types.includes('museum')) {\n      return 'üèõÔ∏è';\n    } else if (types.includes('amusement_park') || types.includes('entertainment')) {\n      return 'üé°';\n    } else {\n      return 'üìç';\n    }\n  };\n\n  const getPriceLevel = (level?: number) => {\n    if (!level) return null;\n    return '$'.repeat(level);\n  };\n\n  const openImageModal = (index: number) => {\n    setSelectedImageIndex(index);\n  };\n\n  const closeImageModal = () => {\n    setSelectedImageIndex(null);\n  };\n\n  const nextImage = () => {\n    if (selectedImageIndex !== null && imageUrls.length > 0) {\n      setSelectedImageIndex((selectedImageIndex + 1) % imageUrls.length);\n    }\n  };\n\n  const prevImage = () => {\n    if (selectedImageIndex !== null && imageUrls.length > 0) {\n      setSelectedImageIndex(selectedImageIndex === 0 ? imageUrls.length - 1 : selectedImageIndex - 1);\n    }\n  };\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    if (!galleryRef.current) return;\n    setIsDragging(true);\n    setStartX(e.pageX - galleryRef.current.offsetLeft);\n    setScrollLeft(galleryRef.current.scrollLeft);\n  };\n\n  const handleMouseMove = (e: React.MouseEvent) => {\n    if (!isDragging || !galleryRef.current) return;\n    e.preventDefault();\n    const x = e.pageX - galleryRef.current.offsetLeft;\n    const walk = (x - startX) * 2;\n    galleryRef.current.scrollLeft = scrollLeft - walk;\n  };\n\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n\n  const handleMouseLeave = () => {\n    setIsDragging(false);\n  };\n\n  const handleWheel = (e: React.WheelEvent) => {\n    if (!galleryRef.current) return;\n    e.preventDefault();\n    galleryRef.current.scrollLeft += e.deltaY;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-[#61936f] mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">{t('loading')}</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Check if we have placeId from navigation state or query parameters\n  if (!placeId) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Invalid Place URL</h2>\n          <p className=\"text-gray-600 mb-6\">This place page cannot be accessed directly. Please navigate to it from the community or map.</p>\n          <Button onClick={() => navigate(`/${language}/community`)}>\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            Go to Community\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  if (error || !placeDetails) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">{t('placeNotFound')}</h2>\n          <p className=\"text-gray-600 mb-6\">{error || t('placeNotFoundDescription')}</p>\n          <Button onClick={() => navigate(-1)}>\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            {t('goBack')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {/* SEO for Place detail */}\n      {placeDetails && (\n        <SEO\n          title={`${placeDetails.name} | ZapAround`}\n          description={`${placeDetails.formatted_address || ''}${placeDetails.rating ? ` ‚Ä¢ Rating ${placeDetails.rating.toFixed(1)}${placeDetails.user_ratings_total ? ` (${placeDetails.user_ratings_total})` : ''}` : ''}`.trim()}\n          image={imageUrls?.[0] || '/og-image.png'}\n          url={`/${language}/zap-places/${createPlaceSlug(placeDetails.name)}`}\n          locale={locale}\n          breadcrumbs={[\n            { name: 'Home', url: `/${language}/` },\n            { name: 'Place', url: `/${language}/zap-places/${createPlaceSlug(placeDetails.name)}` },\n          ]}\n          structuredData={{\n            '@context': 'https://schema.org',\n            '@type': 'Place',\n            name: placeDetails.name,\n            address: placeDetails.formatted_address || undefined,\n            url: `https://zaparound.com/${language}/zap-places/${createPlaceSlug(placeDetails.name)}`,\n            geo: placeDetails.geometry?.location\n              ? {\n                  '@type': 'GeoCoordinates',\n                  latitude: placeDetails.geometry.location.lat,\n                  longitude: placeDetails.geometry.location.lng,\n                }\n              : undefined,\n            aggregateRating: placeDetails.rating\n              ? {\n                  '@type': 'AggregateRating',\n                  ratingValue: placeDetails.rating,\n                  reviewCount: placeDetails.user_ratings_total || undefined,\n                }\n              : undefined,\n            openingHoursSpecification: placeDetails.opening_hours?.weekday_text\n              ? placeDetails.opening_hours.weekday_text.map((text) => ({ '@type': 'OpeningHoursSpecification', description: text }))\n              : undefined,\n            image: imageUrls && imageUrls.length > 0 ? imageUrls.slice(0, 3) : undefined,\n          }}\n        />\n      )}\n      <div className=\"min-h-screen bg-gray-50\">\n        {/* Header */}\n        <div className=\"bg-white shadow-sm border-b sticky top-0 z-50\">\n          <div className=\"container max-w-7xl mx-auto px-4 py-4\">\n            <div className=\"flex items-center justify-between\">\n              <Button\n                variant=\"ghost\"\n                onClick={() => navigate(-1)}\n                className=\"flex items-center space-x-2\"\n              >\n                <ArrowLeft className=\"h-4 w-4\" />\n                <span>{t('back')}</span>\n              </Button>\n              \n              <div className=\"flex items-center space-x-3\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={sharePlace}\n                  className=\"flex items-center space-x-2 bg-blue-50 border-blue-500 text-blue-600 hover:bg-blue-500 hover:text-white transition-colors duration-200\"\n                >\n                  <Share2 className=\"h-4 w-4\" />\n                  <span>{t('share')}</span>\n                </Button>\n                \n                <Button\n                  variant={isFavoriteState ? \"default\" : \"outline\"}\n                  size=\"sm\"\n                  onClick={handleToggleFavorite}\n                  className={`flex items-center space-x-2 transition-colors duration-200 ${\n                    isFavoriteState \n                      ? 'bg-red-500 text-white hover:bg-red-600' \n                      : 'bg-red-50 border-red-500 text-red-600 hover:bg-red-500 hover:text-white'\n                  }`}\n                >\n                  <Heart className={`h-4 w-4 ${isFavoriteState ? 'fill-current' : ''}`} />\n                  <span>{isFavoriteState ? t('saved') : t('save')}</span>\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"container max-w-7xl mx-auto px-4 py-8\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5 }}\n            className=\"space-y-6\"\n          >\n            {/* Place Header */}\n            <Card>\n              <CardHeader>\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex items-start space-x-4\">\n                    <div className=\"text-4xl\">{getPlaceIcon(placeDetails.types)}</div>\n                    <div className=\"flex-1\">\n                      <CardTitle className=\"text-2xl font-bold text-[#030303] mb-2\">\n                        {placeDetails.name}\n                      </CardTitle>\n                      <div className=\"flex items-center space-x-4 text-sm text-[#62626a]\">\n                        <div className=\"flex items-center space-x-1\">\n                          <MapPin className=\"h-4 w-4\" />\n                          <span>{placeDetails.formatted_address}</span>\n                        </div>\n                        {placeDetails.rating && (\n                          <div className=\"flex items-center space-x-1\">\n                            <Star className=\"h-4 w-4 text-yellow-500 fill-current\" />\n                            <span className=\"font-medium\">{placeDetails.rating.toFixed(1)}</span>\n                            {placeDetails.user_ratings_total && (\n                              <span>({placeDetails.user_ratings_total})</span>\n                            )}\n                          </div>\n                        )}\n                        {getPriceLevel(placeDetails.price_level) && (\n                          <Badge variant=\"secondary\">\n                            {getPriceLevel(placeDetails.price_level)}\n                          </Badge>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </CardHeader>\n            </Card>\n\n            {/* Image Gallery */}\n            {imageUrls.length > 0 && (\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <ImageIcon className=\"h-5 w-5\" />\n                    <span>{t('photos')}</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"relative\">\n                    <div \n                      ref={galleryRef}\n                      className=\"flex space-x-3 md:space-x-4 overflow-x-auto scrollbar-hide pb-2 -mb-2 snap-x snap-mandatory cursor-grab active:cursor-grabbing\"\n                      onMouseDown={handleMouseDown}\n                      onMouseMove={handleMouseMove}\n                      onMouseUp={handleMouseUp}\n                      onMouseLeave={handleMouseLeave}\n                      onWheel={handleWheel}\n                      style={{ userSelect: isDragging ? 'none' : 'auto' }}\n                    >\n                      {imageUrls.map((imageUrl, index) => (\n                        <div\n                          key={index}\n                          className=\"flex-shrink-0 w-48 h-36 md:w-64 md:h-48 rounded-lg overflow-hidden cursor-pointer hover:opacity-90 transition-opacity shadow-md snap-start\"\n                          onClick={(e) => {\n                            if (!isDragging) {\n                              openImageModal(index);\n                            }\n                          }}\n                          style={{ pointerEvents: isDragging ? 'none' : 'auto' }}\n                        >\n                          <img\n                            src={imageUrl}\n                            alt={`${placeDetails.name} - Photo ${index + 1}`}\n                            className=\"w-full h-full object-cover\"\n                            loading=\"lazy\"\n                            draggable={false}\n                          />\n                        </div>\n                      ))}\n                    </div>\n                    \n                    {/* Scroll indicator */}\n                    {imageUrls.length > 2 && (\n                      <div className=\"flex justify-center mt-4 space-x-2\">\n                        {Array.from({ length: Math.ceil(imageUrls.length / 2) }, (_, i) => (\n                          <div\n                            key={i}\n                            className=\"w-2 h-2 rounded-full bg-gray-300\"\n                          />\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n              {/* Main Content */}\n              <div className=\"lg:col-span-2 space-y-6\">\n                {/* Quick Actions */}\n                <Card>\n                  <CardContent className=\"pt-6\">\n                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                      <Button\n                        variant=\"outline\"\n                        onClick={openInMaps}\n                        className=\"flex flex-col items-center space-y-2 h-auto py-4\"\n                      >\n                        <Navigation className=\"h-5 w-5\" />\n                        <span className=\"text-sm\">{t('directions')}</span>\n                      </Button>\n                      \n                      {placeDetails.website && (\n                        <Button\n                          variant=\"outline\"\n                          onClick={() => window.open(placeDetails.website, '_blank')}\n                          className=\"flex flex-col items-center space-y-2 h-auto py-4\"\n                        >\n                          <Globe className=\"h-5 w-5\" />\n                          <span className=\"text-sm\">{t('website')}</span>\n                        </Button>\n                      )}\n                      \n                      {placeDetails.international_phone_number && (\n                        <Button\n                          variant=\"outline\"\n                          onClick={() => window.open(`tel:${placeDetails.international_phone_number}`)}\n                          className=\"flex flex-col items-center space-y-2 h-auto py-4\"\n                        >\n                          <Phone className=\"h-5 w-5\" />\n                          <span className=\"text-sm\">{t('call')}</span>\n                        </Button>\n                      )}\n                      \n                      <Button\n                        variant=\"outline\"\n                        onClick={() => navigate('/community', { state: { placeId } })}\n                        className=\"flex flex-col items-center space-y-2 h-auto py-4\"\n                      >\n                        <MessageCircle className=\"h-5 w-5\" />\n                        <span className=\"text-sm\">{t('posts')}</span>\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* Opening Hours */}\n                {placeDetails.opening_hours && (\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center space-x-2\">\n                        <Clock className=\"h-5 w-5\" />\n                        <span>{t('openingHours')}</span>\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-2\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Badge variant={placeDetails.opening_hours.open_now ? \"default\" : \"secondary\"}>\n                            {placeDetails.opening_hours.open_now ? t('openNow') : t('closed')}\n                          </Badge>\n                        </div>\n                        {placeDetails.opening_hours.weekday_text && (\n                          <div className=\"space-y-1\">\n                            {placeDetails.opening_hours.weekday_text.map((day, index) => (\n                              <div key={index} className=\"text-sm text-[#62626a]\">\n                                {day}\n                              </div>\n                            ))}\n                          </div>\n                        )}\n                      </div>\n                    </CardContent>\n                  </Card>\n                )}\n\n                {/* Reviews */}\n                {placeDetails.reviews && placeDetails.reviews.length > 0 && (\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center space-x-2\">\n                        <Users className=\"h-5 w-5\" />\n                        <span>{t('reviews')} ({placeDetails.reviews.length})</span>\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-4\">\n                        {placeDetails.reviews.slice(0, 3).map((review, index) => (\n                          <div key={index} className=\"border-b border-gray-100 pb-4 last:border-b-0\">\n                            <div className=\"flex items-center space-x-2 mb-2\">\n                              <div className=\"flex items-center space-x-1\">\n                                <Star className=\"h-4 w-4 text-yellow-500 fill-current\" />\n                                <span className=\"text-sm font-medium\">{review.rating}</span>\n                              </div>\n                              <span className=\"text-sm text-[#62626a]\">by {review.author_name}</span>\n                            </div>\n                            <p className=\"text-sm text-[#030303]\">{review.text}</p>\n                          </div>\n                        ))}\n                      </div>\n                    </CardContent>\n                  </Card>\n                )}\n\n                {/* Related Posts */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center space-x-2\">\n                      <MessageCircle className=\"h-5 w-5\" />\n                      <span>{t('communityPosts')}</span>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    {loadingPosts ? (\n                      <div className=\"text-center py-4\">\n                        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-[#61936f] mx-auto\"></div>\n                      </div>\n                    ) : relatedPosts.length > 0 ? (\n                      <div className=\"space-y-4\">\n                        {relatedPosts.map((post: any) => (\n                          <div key={post.id} className=\"border rounded-lg p-4 hover:shadow-md transition-shadow\">\n                            <div className=\"flex items-start space-x-3\">\n                              <div className=\"h-10 w-10 bg-gradient-to-br from-blue-100 to-blue-200 rounded-full flex items-center justify-center\">\n                                {post.profile?.avatar_url ? (\n                                  <img\n                                    src={post.profile.avatar_url}\n                                    alt={post.profile.username || 'User'}\n                                    className=\"w-full h-full object-cover rounded-full\"\n                                  />\n                                ) : (\n                                  <Users className=\"h-5 w-5 text-blue-500\" />\n                                )}\n                              </div>\n                              <div className=\"flex-1\">\n                                <div className=\"flex items-center space-x-2 mb-1\">\n                                  <span className=\"font-medium text-sm\">\n                                    {post.profile?.username || `${post.profile?.first_name || ''} ${post.profile?.last_name || ''}`.trim() || 'Anonymous'}\n                                  </span>\n                                  <span className=\"text-xs text-[#62626a]\">\n                                    {new Date(post.created_at).toLocaleDateString()}\n                                  </span>\n                                </div>\n                                <p className=\"text-sm text-[#030303] line-clamp-2\">{post.content}</p>\n                                <div className=\"flex items-center space-x-4 mt-2 text-xs text-[#62626a]\">\n                                  <span>{post.likes?.[0]?.count || 0} likes</span>\n                                  <span>{post.replies?.[0]?.count || 0} replies</span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    ) : (\n                      <div className=\"text-center py-8\">\n                        <MessageCircle className=\"h-12 w-12 text-gray-300 mx-auto mb-4\" />\n                        <p className=\"text-gray-500\">{t('noPosts')}</p>\n                        <Button\n                          onClick={() => navigate('/community', { state: { placeId } })}\n                          className=\"mt-4\"\n                        >\n                          {t('beFirstToPost')}\n                        </Button>\n                      </div>\n                    )}\n                  </CardContent>\n                </Card>\n              </div>\n\n              {/* Sidebar */}\n              <div className=\"space-y-6\">\n                {/* Quick Info */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle>{t('quickInfo')}</CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    {placeDetails.types && (\n                      <div>\n                        <h4 className=\"font-medium text-sm text-[#62626a] mb-2\">{t('categories')}</h4>\n                        <div className=\"flex flex-wrap gap-2\">\n                          {placeDetails.types.slice(0, 5).map((type, index) => (\n                            <Badge key={index} variant=\"outline\" className=\"text-xs\">\n                              {type.replace(/_/g, ' ')}\n                            </Badge>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                    \n                    {placeDetails.vicinity && (\n                      <div>\n                        <h4 className=\"font-medium text-sm text-[#62626a] mb-1\">{t('vicinity')}</h4>\n                        <p className=\"text-sm text-[#030303]\">{placeDetails.vicinity}</p>\n                      </div>\n                    )}\n                  </CardContent>\n                </Card>\n\n                {/* Interactive Map */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle>{t('location')}</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div \n                      ref={mapContainer}\n                      className=\"w-full h-64 rounded-lg overflow-hidden\"\n                      style={{ minHeight: '256px' }}\n                    />\n                  </CardContent>\n                </Card>\n              </div>\n            </div>\n          </motion.div>\n        </div>\n\n        {/* Image Modal */}\n        {selectedImageIndex !== null && imageUrls.length > 0 && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-90 z-50 flex items-center justify-center\">\n            <div className=\"relative max-w-4xl max-h-full p-4\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={closeImageModal}\n                className=\"absolute top-4 right-4 text-white hover:bg-white hover:text-black z-10\"\n              >\n                <X className=\"h-6 w-6\" />\n              </Button>\n              \n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={prevImage}\n                className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-white hover:bg-white hover:text-black z-10\"\n              >\n                <ChevronLeft className=\"h-8 w-8\" />\n              </Button>\n              \n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={nextImage}\n                className=\"absolute right-4 top-1/2 transform -translate-y-1/2 text-white hover:bg-white hover:text-black z-10\"\n              >\n                <ChevronRight className=\"h-8 w-8\" />\n              </Button>\n              \n              <img\n                src={imageUrls[selectedImageIndex]}\n                alt={`${placeDetails.name} - Photo ${selectedImageIndex + 1}`}\n                className=\"max-w-full max-h-full object-contain\"\n              />\n              \n              <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 text-white text-sm\">\n                {selectedImageIndex + 1} / {imageUrls.length}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ZapPlaces; "],"names":["ZapPlaces","placeSlug","useParams","location","useLocation","navigate","useNavigate","t","useTranslation","language","navigator","document","documentElement","lang","slice","locale","en","fr","es","toast","useToast","isFavorited","toggleFavorite","useFavorites","placeDetails","setPlaceDetails","useState","loading","setLoading","error","setError","relatedPosts","setRelatedPosts","loadingPosts","setLoadingPosts","selectedImageIndex","setSelectedImageIndex","imageUrls","setImageUrls","isDragging","setIsDragging","startX","setStartX","scrollLeft","setScrollLeft","mapboxToken","setMapboxToken","galleryRef","useRef","mapContainer","map","state","placeId","urlParams","URLSearchParams","window","search","get","isFavoriteState","useEffect","async","token","getMapboxToken","err","fetchMapboxToken","fetchPlaceDetails","fetchRelatedPosts","geometry","current","initializeMap","placeholderDiv","createElement","className","innerHTML","appendChild","parentNode","removeChild","mapboxgl","accessToken","lat","lng","Map","container","style","center","zoom","attributionControl","addControl","NavigationControl","AttributionControl","compact","popup","Popup","offset","setHTML","name","formatted_address","Marker","setLngLat","setPopup","addTo","on","resize","remove","data","supabase","functions","invoke","body","action","fields","status","result","Error","photos","length","fetchPlaceImages","message","imagePromises","photo","photoReference","photo_reference","maxWidth","maxHeight","validImages","Promise","all","filter","img","from","select","eq","order","ascending","limit","copyToClipboard","shareUrl","createPlaceUrl","fullUrl","origin","clipboard","writeText","title","description","getPriceLevel","level","repeat","children","jsxs","jsx","Button","onClick","ArrowLeft","Fragment","SEO","rating","toFixed","user_ratings_total","trim","image","url","createPlaceSlug","breadcrumbs","structuredData","address","geo","latitude","longitude","aggregateRating","ratingValue","reviewCount","openingHoursSpecification","opening_hours","weekday_text","text","variant","size","share","Share2","favoriteData","place_id","place_name","place_address","place_rating","place_lat","place_lng","place_types","types","Heart","motion","div","initial","opacity","y","animate","transition","duration","Card","CardHeader","includes","CardTitle","MapPin","Star","price_level","Badge","ImageIcon","CardContent","ref","onMouseDown","e","pageX","offsetLeft","onMouseMove","preventDefault","walk","onMouseUp","onMouseLeave","onWheel","deltaY","userSelect","imageUrl","index","openImageModal","pointerEvents","src","alt","draggable","Math","ceil","_","i","open","Navigation","website","Globe","international_phone_number","Phone","MessageCircle","Clock","open_now","day","reviews","Users","review","author_name","post","profile","avatar_url","username","first_name","last_name","Date","created_at","toLocaleDateString","content","likes","count","replies","id","type","replace","vicinity","minHeight","X","ChevronLeft","ChevronRight"],"mappings":"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"}