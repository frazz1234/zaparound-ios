{"version":3,"file":"page-blogcategory.UaM6MZTW.js","sources":["../../../../src/pages/BlogCategory.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { SEO } from '@/components/SEO';\nimport { BlogCard } from '@/components/blog/BlogCard';\nimport { BlogPagination } from '@/components/blog/BlogPagination';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Loader2, ArrowLeft, Tag, BookOpen, Calendar } from 'lucide-react';\nimport { supabase } from '@/integrations/supabase/client';\nimport { Blog } from '@/types/blog';\n\ninterface CategoryBlogs {\n  blogs: Blog[];\n  count: number;\n  totalPages: number;\n}\n\nexport default function BlogCategory() {\n  const { categorySlug, lang = 'en' } = useParams<{ categorySlug: string; lang: string }>();\n  const language = lang; // Keep the variable name for consistency with the rest of the component\n  const { t, i18n } = useTranslation(['blog']);\n  const navigate = useNavigate();\n  \n  const [categoryBlogs, setCategoryBlogs] = useState<CategoryBlogs>({ blogs: [], count: 0, totalPages: 0 });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [categoryInfo, setCategoryInfo] = useState<{ name: string; description: string; count: number } | null>(null);\n  \n  const postsPerPage = 9;\n\n  // Fetch blogs by category\n  const fetchCategoryBlogs = async (page: number = 1) => {\n    if (!categorySlug) return;\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const start = (page - 1) * postsPerPage;\n      const end = start + postsPerPage - 1;\n\n      // First, get the category name from the slug\n      const categoryName = categorySlug.replace(/-/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n\n      // Fetch blogs for this category\n      const { data: blogs, error: blogsError, count } = await supabase\n        .from('blogs')\n        .select('*', { count: 'exact' })\n        .eq('is_published', true)\n        .eq('category', categoryName)\n        .order('published_at', { ascending: false })\n        .range(start, end);\n\n      if (blogsError) {\n        console.error('Error fetching category blogs:', blogsError);\n        throw new Error('Failed to fetch category blogs');\n      }\n\n      // Get total count for this category\n      const { count: totalCount } = await supabase\n        .from('blogs')\n        .select('*', { count: 'exact', head: true })\n        .eq('is_published', true)\n        .eq('category', categoryName);\n\n      const totalPages = Math.ceil((totalCount || 0) / postsPerPage);\n\n      setCategoryBlogs({\n        blogs: blogs || [],\n        count: totalCount || 0,\n        totalPages\n      });\n\n      // Set category info for SEO\n      setCategoryInfo({\n        name: categoryName,\n        description: `${categoryName} travel articles, tips, and guides on ZapAround. Discover the best ${categoryName.toLowerCase()} destinations and experiences.`,\n        count: totalCount || 0\n      });\n\n    } catch (err) {\n      console.error('Error in fetchCategoryBlogs:', err);\n      setError(err instanceof Error ? err.message : 'Failed to fetch category blogs');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle page change\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n    fetchCategoryBlogs(page);\n    // Scroll to top\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  // Handle language change\n  const handleLanguageChange = (newLanguage: string) => {\n    const currentPath = window.location.pathname;\n    const newPath = currentPath.replace(`/${language}/`, `/${newLanguage}/`);\n    navigate(newPath);\n  };\n\n  useEffect(() => {\n    fetchCategoryBlogs(currentPage);\n  }, [categorySlug, currentPage]);\n\n  // Generate category-specific SEO data\n  const generateCategorySEO = () => {\n    if (!categoryInfo) return {};\n\n    const categoryName = categoryInfo.name;\n    const categorySlugFormatted = categorySlug || '';\n    \n    return {\n      title: `${categoryName} Travel Articles & Guides | ZapAround`,\n      description: categoryInfo.description,\n      keywords: `${categoryName}, travel, ${categoryName.toLowerCase()}, travel guide, travel tips, ZapAround, ${categoryName.toLowerCase()} destinations`,\n      url: `/${language}/blog/category/${categorySlugFormatted}`,\n      type: 'website' as const,\n      structuredData: {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"CollectionPage\",\n        \"name\": `${categoryName} Travel Articles`,\n        \"description\": categoryInfo.description,\n        \"url\": `https://zaparound.com/${language}/blog/category/${categorySlugFormatted}`,\n        \"mainEntity\": {\n          \"@type\": \"ItemList\",\n          \"numberOfItems\": categoryInfo.count,\n          \"itemListElement\": categoryBlogs.blogs.slice(0, 10).map((blog, index) => ({\n            \"@type\": \"ListItem\",\n            \"position\": index + 1,\n            \"item\": {\n              \"@type\": \"BlogPosting\",\n              \"headline\": blog[`title_${language}` as keyof Blog] || blog.title_en,\n              \"url\": `https://zaparound.com/${language}/blog/${blog.slug}`,\n              \"datePublished\": blog.published_at,\n              \"dateModified\": blog.updated_at,\n              \"author\": {\n                \"@type\": \"Organization\",\n                \"name\": \"ZapAround\"\n              },\n              \"publisher\": {\n                \"@type\": \"Organization\",\n                \"name\": \"ZapAround\",\n                \"logo\": {\n                  \"@type\": \"ImageObject\",\n                  \"url\": \"https://zaparound.com/zaparound-uploads/transparentnoliner.webp\"\n                }\n              }\n            }\n          }))\n        }\n      }\n    };\n  };\n\n  const seoData = generateCategorySEO();\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"flex flex-col items-center space-y-4\">\n          <Loader2 className=\"h-8 w-8 animate-spin\" />\n          <p className=\"text-muted-foreground\">{t('category.loading')}</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <SEO\n          title=\"Category Not Found | ZapAround\"\n          description=\"The requested blog category could not be found.\"\n          noindex={true}\n          nofollow={true}\n          url=\"/blog/category/not-found\"\n        />\n        <Alert variant=\"destructive\">\n          <AlertDescription>{error}</AlertDescription>\n        </Alert>\n        <Button onClick={() => navigate(`/${language}/blog`)} className=\"mt-4\">\n          <ArrowLeft className=\"mr-2 h-4 w-4\" />\n          {t('category.backToBlog')}\n        </Button>\n      </div>\n    );\n  }\n\n  if (!categoryInfo) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <SEO\n          title=\"Category Not Found | ZapAround\"\n          description=\"The requested blog category could not be found.\"\n          noindex={true}\n          nofollow={true}\n          url=\"/blog/category/not-found\"\n        />\n        <Alert>\n          <AlertDescription>{t('category.categoryNotFound')}</AlertDescription>\n        </Alert>\n        <Button onClick={() => navigate(`/${language}/blog`)} className=\"mt-4\">\n          <ArrowLeft className=\"mr-2 h-4 w-4\" />\n          {t('category.backToBlog')}\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <SEO\n        title={seoData.title}\n        description={seoData.description}\n        keywords={seoData.keywords}\n        url={seoData.url}\n        type={seoData.type}\n        structuredData={seoData.structuredData}\n        breadcrumbs={[\n          { name: 'Home', url: `/${language}/` },\n          { name: 'Blog', url: `/${language}/blog` },\n          { name: categoryInfo.name, url: `/${language}/blog/category/${categorySlug}` }\n        ]}\n      />\n\n      <div className=\"container mx-auto px-4 py-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <Button\n            variant=\"ghost\"\n            onClick={() => navigate(`/${language}/blog`)}\n            className=\"mb-4\"\n          >\n            <ArrowLeft className=\"mr-2 h-4 w-4\" />\n            {t('category.backToBlog')}\n          </Button>\n\n          <div className=\"flex items-center gap-3 mb-4\">\n            <Tag className=\"h-6 w-6 text-primary\" />\n            <Badge variant=\"secondary\" className=\"text-lg px-3 py-1\">\n              {categoryInfo.name}\n            </Badge>\n          </div>\n\n          <h1 className=\"text-4xl font-bold mb-4\">\n            {categoryInfo.name} {t('category.travelArticles')}\n          </h1>\n\n          <div className=\"flex items-center gap-6 text-muted-foreground mb-6\">\n            <div className=\"flex items-center gap-2\">\n              <BookOpen className=\"h-4 w-4\" />\n              <span>{categoryInfo.count} {t('category.articles')}</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Calendar className=\"h-4 w-4\" />\n              <span>{t('category.updatedRegularly')}</span>\n            </div>\n          </div>\n\n          <p className=\"text-lg text-muted-foreground max-w-3xl\">\n            {categoryInfo.description}\n          </p>\n        </div>\n\n\n\n        {/* Blog Posts */}\n        {categoryBlogs.blogs.length > 0 ? (\n          <>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8\">\n              {categoryBlogs.blogs.map((blog) => (\n                <BlogCard\n                  key={blog.id}\n                  blog={blog}\n                />\n              ))}\n            </div>\n\n            {/* Pagination */}\n            {categoryBlogs.totalPages > 1 && (\n              <BlogPagination\n                currentPage={currentPage}\n                totalPages={categoryBlogs.totalPages}\n                totalPosts={categoryBlogs.count}\n                postsPerPage={postsPerPage}\n                onPageChange={handlePageChange}\n              />\n            )}\n          </>\n        ) : (\n          <Card>\n            <CardContent className=\"py-12 text-center\">\n              <BookOpen className=\"h-12 w-12 mx-auto mb-4 text-muted-foreground\" />\n              <h3 className=\"text-xl font-semibold mb-2\">{t('category.noArticlesFound')}</h3>\n              <p className=\"text-muted-foreground mb-4\">\n                {t('category.noArticlesInCategory', { category: categoryInfo.name })}\n              </p>\n              <Button onClick={() => navigate(`/${language}/blog`)}>\n                {t('category.browseAllArticles')}\n              </Button>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Related Categories */}\n        <Card className=\"mt-12\">\n          <CardHeader>\n            <CardTitle>{t('category.otherCategories')}</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"flex flex-wrap gap-2\">\n              {['Hidden Gems', 'Travel Tips', 'Destinations', 'Culture', 'Food', 'Adventure'].map((cat) => {\n                const catSlug = cat.toLowerCase().replace(/\\s+/g, '-');\n                return (\n                  <Link\n                    key={cat}\n                    to={`/${language}/blog/category/${catSlug}`}\n                    className=\"inline-block\"\n                  >\n                    <Badge\n                      variant={cat === categoryInfo.name ? 'default' : 'outline'}\n                      className=\"cursor-pointer hover:bg-primary hover:text-primary-foreground transition-colors\"\n                    >\n                      {cat}\n                    </Badge>\n                  </Link>\n                );\n              })}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </>\n  );\n} "],"names":["BlogCategory","categorySlug","lang","useParams","language","t","i18n","useTranslation","navigate","useNavigate","categoryBlogs","setCategoryBlogs","useState","blogs","count","totalPages","loading","setLoading","error","setError","currentPage","setCurrentPage","categoryInfo","setCategoryInfo","fetchCategoryBlogs","async","page","start","end","categoryName","replace","l","toUpperCase","data","blogsError","supabase","from","select","eq","order","ascending","range","Error","totalCount","head","Math","ceil","name","description","toLowerCase","err","message","useEffect","seoData","categorySlugFormatted","title","keywords","url","type","structuredData","mainEntity","numberOfItems","itemListElement","slice","map","blog","index","position","item","headline","title_en","slug","datePublished","published_at","dateModified","updated_at","author","publisher","logo","generateCategorySEO","className","children","jsxs","jsx","Loader2","SEO","noindex","nofollow","Alert","variant","AlertDescription","Button","onClick","ArrowLeft","Fragment","breadcrumbs","Tag","Badge","BookOpen","Calendar","length","BlogCard","id","BlogPagination","totalPosts","postsPerPage","onPageChange","window","scrollTo","top","behavior","Card","CardContent","category","CardHeader","CardTitle","cat","catSlug","Link","to"],"mappings":"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"}