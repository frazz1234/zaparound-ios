{"version":3,"file":"page-contact.CXE39xNB.js","sources":["../../../../src/pages/Contact.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Mail } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { useTranslation } from 'react-i18next';\nimport { \n  Select, \n  SelectContent, \n  SelectItem, \n  SelectTrigger, \n  SelectValue\n} from \"@/components/ui/select\";\nimport { supabase } from \"@/integrations/supabase/client\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { SEO } from '@/components/SEO';\n\nexport default function Contact() {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    subject: \"\",\n    message: \"\",\n    phone: \"\",\n    category: \"general\",\n    preferredTime: \"any\"\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { toast } = useToast();\n  const { t, i18n } = useTranslation('contact');\n  const language = i18n.language;\n  const locale = language === 'en' ? 'en_US' : language === 'fr' ? 'fr_FR' : 'es_ES';\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const structuredData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"ContactPage\",\n    \"name\": t(\"title\"),\n    \"description\": t(\"subtitle\"),\n    \"url\": `https://zaparound.com/${language}/contact`,\n    \"mainEntity\": {\n      \"@type\": \"Organization\",\n      \"name\": \"ZapAround\",\n      \"contactPoint\": {\n        \"@type\": \"ContactPoint\",\n        \"contactType\": \"customer service\",\n        \"email\": \"hello@zaparound.com\",\n        \"url\": `https://zaparound.com/${language}/contact`\n      }\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    \n    try {\n      const response = await supabase.functions.invoke('send-contact-email', {\n        body: formData\n      });\n      \n      if (response.error) {\n        throw new Error(response.error.message || t(\"error.description\"));\n      }\n      \n      toast({\n        title: t(\"success.title\"),\n        description: t(\"success.description\"),\n      });\n      \n      setFormData({\n        name: \"\",\n        email: \"\",\n        subject: \"\",\n        message: \"\",\n        phone: \"\",\n        category: \"general\",\n        preferredTime: \"any\"\n      });\n    } catch (error) {\n      console.error('Error sending message:', error);\n      toast({\n        title: t(\"error.title\"),\n        description: t(\"error.description\"),\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <>\n      <SEO\n        title={t(\"title\")}\n        description={t(\"subtitle\")}\n        keywords=\"ZapAround contact, customer support, travel help, contact us, travel assistance, customer service\"\n        url={`/${language}/contact`}\n        locale={locale}\n        structuredData={structuredData}\n      />\n      \n      <div className=\"min-h-screen bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 py-16 sm:px-6 lg:px-8\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"text-center mb-16\"\n          >\n            <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">{t(\"title\")}</h1>\n            <p className=\"text-xl text-gray-600\">\n              {t(\"subtitle\")}\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n            {/* Contact Form */}\n            <motion.div\n              initial={{ opacity: 0, x: -20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ delay: 0.2 }}\n              className=\"bg-white p-8 rounded-lg shadow-md\"\n            >\n              <form onSubmit={handleSubmit} className=\"space-y-6\">\n                <div>\n                  <Label htmlFor=\"name\">{t(\"form.name\")}</Label>\n                  <Input\n                    id=\"name\"\n                    value={formData.name}\n                    onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                    placeholder={t(\"form.placeholders.name\")}\n                    required\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"email\">{t(\"form.email\")}</Label>\n                  <Input\n                    id=\"email\"\n                    type=\"email\"\n                    value={formData.email}\n                    onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n                    placeholder={t(\"form.placeholders.email\")}\n                    required\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"phone\">{t(\"form.phone\")}</Label>\n                  <Input\n                    id=\"phone\"\n                    type=\"tel\"\n                    value={formData.phone}\n                    onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\n                    placeholder={t(\"form.placeholders.phone\")}\n                  />\n                </div>\n\n                <div>\n                  <Label>{t(\"categories.title\")}</Label>\n                  <Select\n                    value={formData.category}\n                    onValueChange={(value) => setFormData({ ...formData, category: value })}\n                  >\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"general\">{t(\"categories.general\")}</SelectItem>\n                      <SelectItem value=\"support\">{t(\"categories.support\")}</SelectItem>\n                      <SelectItem value=\"booking\">{t(\"categories.booking\")}</SelectItem>\n                      <SelectItem value=\"feedback\">{t(\"categories.feedback\")}</SelectItem>\n                      <SelectItem value=\"partnership\">{t(\"categories.partnership\")}</SelectItem>\n                      <SelectItem value=\"other\">{t(\"categories.other\")}</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"subject\">{t(\"form.subject\")}</Label>\n                  <Input\n                    id=\"subject\"\n                    value={formData.subject}\n                    onChange={(e) => setFormData({ ...formData, subject: e.target.value })}\n                    placeholder={t(\"form.placeholders.subject\")}\n                    required\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"message\">{t(\"form.message\")}</Label>\n                  <Textarea\n                    id=\"message\"\n                    rows={5}\n                    value={formData.message}\n                    onChange={(e) => setFormData({ ...formData, message: e.target.value })}\n                    placeholder={t(\"form.placeholders.message\")}\n                    required\n                  />\n                </div>\n\n                <div>\n                  <Label>{t(\"preferences.timeframe\")}</Label>\n                  <Select\n                    value={formData.preferredTime}\n                    onValueChange={(value) => setFormData({ ...formData, preferredTime: value })}\n                  >\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"morning\">{t(\"preferences.times.morning\")}</SelectItem>\n                      <SelectItem value=\"afternoon\">{t(\"preferences.times.afternoon\")}</SelectItem>\n                      <SelectItem value=\"evening\">{t(\"preferences.times.evening\")}</SelectItem>\n                      <SelectItem value=\"any\">{t(\"preferences.times.any\")}</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <Button type=\"submit\" className=\"w-full\" disabled={isSubmitting} style={{ backgroundColor: '#72ba87', color: 'white', border: '1px solid #72ba87' }}>\n                  {isSubmitting ? t(\"actions.sending\") : t(\"actions.submit\")}\n                </Button>\n              </form>\n            </motion.div>\n\n            {/* Contact Information */}\n            <motion.div\n              initial={{ opacity: 0, x: 20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ delay: 0.4 }}\n              className=\"space-y-8\"\n            >\n              <Card>\n                <CardHeader>\n                  <CardTitle>{t(\"info.title\")}</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-gray-600 mb-6\">{t(\"info.response\")}</p>\n                  \n                  <div className=\"space-y-6\">\n                    <div>\n                      <h3 className=\"font-semibold mb-2\">{t(\"info.office.title\")}</h3>\n                      <div className=\"space-y-2 text-gray-600\">\n                        <p>{t(\"info.office.weekdays\")}</p>\n                        <p>{t(\"info.office.weekend\")}</p>\n                        <p className=\"text-sm italic\">{t(\"info.office.timezone\")}</p>\n                      </div>\n                    </div>\n\n                    <div className=\"flex items-center space-x-2\">\n                      <Mail className=\"h-4 w-4\" />\n                      <a href=\"mailto:hello@zaparound.com\" className=\"text-blue-600 hover:text-blue-800\">\n                        hello@zaparound.com\n                      </a>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"names":["Contact","formData","setFormData","useState","name","email","subject","message","phone","category","preferredTime","isSubmitting","setIsSubmitting","toast","useToast","t","i18n","useTranslation","language","locale","useEffect","window","scrollTo","structuredData","description","url","mainEntity","contactPoint","contactType","jsxs","Fragment","children","jsx","SEO","title","keywords","className","motion","div","initial","opacity","y","animate","x","transition","delay","onSubmit","async","e","preventDefault","response","supabase","functions","invoke","body","error","Error","variant","Label","htmlFor","Input","id","value","onChange","target","placeholder","required","type","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectItem","Textarea","rows","Button","disabled","style","backgroundColor","color","border","Card","CardHeader","CardTitle","CardContent","Mail","href"],"mappings":"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"}