{"version":3,"file":"page-mapdashboard.CQZ4zyKz.js","sources":["../../../../src/pages/MapDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { supabase } from '@/integrations/supabase/client';\nimport { useNavigate, useLocation, useParams } from 'react-router-dom';\n\nimport { useTranslation } from 'react-i18next';\nimport { MapPin, Navigation, Compass, Loader2, Mountain, Layers, ChevronLeft, ChevronRight, X, Crosshair, Lock, Sparkles, Car, PlaneTakeoff, CableCar, Heart, Map, UtensilsCrossed, Coffee, Hotel, ShoppingBag, Landmark, Palette, TreePine, Wine, Building, Settings, Menu, Satellite, Locate, ChevronDown } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { cn } from '@/lib/utils';\nimport { toast } from '@/components/ui/use-toast';\nimport { MapSearch } from '@/components/MapSearch';\nimport { useUserRole } from '@/hooks/useUserRole';\nimport { usePOIs, POI } from '@/hooks/usePOIs';\nimport { POIReviewDialog } from '@/components/POIReviewDialog';\nimport ReactDOMServer from 'react-dom/server';\nimport { useMapData, MapTripData, MapFavoriteData } from '@/hooks/useMapData';\nimport { useCheckpointCache } from '@/hooks/useCheckpointCache';\nimport { useMapCache } from '@/hooks/useMapCache';\nimport { useMarkerCache } from '@/hooks/useMarkerCache';\nimport { \n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport { cacheEventManager, CACHE_EVENTS, invalidateFavoriteCaches } from '../utils/cache';\nimport { createPlaceUrl, createPlaceSlug } from '@/utils/placeUtils';\n\n// Utility function to detect mobile devices\nconst isMobileDevice = () => {\n  return (\n    typeof window !== 'undefined' &&\n    (window.innerWidth < 768 ||\n    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n      navigator.userAgent\n    ))\n  );\n};\n\n// Utility function to parse coordinates in any format\nconst parseCoordinates = (coordsData: any): [number, number] | null => {\n  if (!coordsData) return null;\n  \n  try {\n    // Case 1: Already an array\n    if (Array.isArray(coordsData) && coordsData.length === 2) {\n      const [lng, lat] = coordsData;\n      if (typeof lng === 'number' && typeof lat === 'number') {\n        return [lng, lat];\n      }\n    }\n    \n    // Case 2: JSON string of an array\n    if (typeof coordsData === 'string') {\n      try {\n        const parsed = JSON.parse(coordsData);\n        if (Array.isArray(parsed) && parsed.length === 2) {\n          const [lng, lat] = parsed;\n          if (typeof lng === 'number' && typeof lat === 'number') {\n            return [lng, lat];\n          }\n        }\n      } catch {\n        // Not a valid JSON, try other formats\n      }\n      \n      // Case 3: String format \"lat, lng\" (e.g., \"46.8144, -71.2082\")\n      if (coordsData.includes(',')) {\n        const parts = coordsData.split(',').map(part => parseFloat(part.trim()));\n        if (parts.length === 2 && !isNaN(parts[0]) && !isNaN(parts[1])) {\n          // Convert from lat,lng to lng,lat for Mapbox\n          return [parts[1], parts[0]];\n        }\n      }\n    }\n    \n    return null;\n  } catch (e) {\n    console.error('Error parsing coordinates:', e, coordsData);\n    return null;\n  }\n};\n\n// Define marker colors for different trip types\nconst TRIP_TYPE_COLORS = {\n  zapout: '#10b981', // emerald\n  zaproad: '#f59e0b', // amber\n  zaptrip: '#0ea5e9', // sky\n  default: '#0ea5e9', // sky\n};\n\n// Define locale mapping\nconst LOCALE_MAP = { en: 'en_US', fr: 'fr_FR', es: 'es_ES' };\n\ntype TripData = {\n  id: string;\n  title: string;\n  type: 'zapout' | 'zaproad' | 'zaptrip';\n  coordinates: [number, number] | null;\n  location: string | null;\n  description?: string | null;\n  created_at: string;\n  // ZapRoad specific fields\n  starting_city?: string | null;\n  starting_city_coordinates?: string | null;\n  end_city?: string | null;\n  end_city_coordinates?: string | null;\n};\n\ntype FavoritePlace = {\n  id: number;\n  place_id: string;\n  place_name: string;\n  place_address: string;\n  place_rating: number;\n  place_lat: number;\n  place_lng: number;\n  place_types: string[];\n  created_at: string;\n};\n\ntype TravelMode = 'driving' | 'walking' | 'cycling';\n\n// Helper function to create external place URLs with placeId as query parameter\nconst createExternalPlaceUrl = (placeId: string, placeName: string, language: string = 'en'): string => {\n  const slug = createPlaceSlug(placeName);\n  return `/${language}/zap-places/${slug}?id=${placeId}`;\n};\n\nconst MapDashboard = () => {\n  const { t } = useTranslation(['navigation', 'common']);\n  const { i18n } = useTranslation();\n  const language = i18n.language;\n  const locale = LOCALE_MAP[language] || 'en_US';\n  \n\n  \n  const navigate = useNavigate();\n  const location = useLocation();\n  const { userRole } = useUserRole();\n  const mapContainer = useRef<HTMLDivElement | null>(null);\n  const map = useRef<mapboxgl.Map | null>(null);\n  const mapMarkers = useRef<mapboxgl.Marker[]>([]);\n  const checkpointMarkers = useRef<mapboxgl.Marker[]>([]);\n  const favoriteMarkers = useRef<mapboxgl.Marker[]>([]);\n  const poiMarkers = useRef<mapboxgl.Marker[]>([]);\n  const [selectedTrip, setSelectedTrip] = useState<MapTripData | null>(null);\n  \n  // Use the new caching hooks\n  const { \n    mapData, \n    loading: isLoading, \n    error,\n    fetchMapData, \n    fetchIncrementalData, \n    invalidateCache, \n    removeTripFromCache, \n    removeFavoriteFromCache,\n    refreshData \n  } = useMapData();\n  \n  const {\n    loading: checkpointLoading,\n    fetchZapoutCheckpoints,\n    fetchZaproadCheckpoints,\n    fetchZaptripCheckpoints,\n    invalidateCheckpointCache,\n    clearAllCheckpointCaches\n  } = useCheckpointCache();\n  \n  const {\n    getOrCreateMap,\n    cacheMarkers,\n    updateMapStyle,\n    clearCache: clearMapCache,\n    getCacheStats: getMapCacheStats,\n    addTerrainLayers\n  } = useMapCache();\n  \n  const {\n    setMap,\n    updateMarkers,\n    addMarkerClickHandler,\n    clearMarkers,\n    removeMarker,\n    getMarkerStats,\n    cleanup: cleanupMarkers\n  } = useMarkerCache();\n  \n  const [selectedPOI, setSelectedPOI] = useState<POI | null>(null);\n  const [activeFilter, setActiveFilter] = useState<string | null>(null);\n  const [mapStyle, setMapStyle] = useState<string>('mapbox://styles/mapbox/streets-v12');\n  const [travelMode, setTravelMode] = useState<TravelMode>('driving');\n  const [isMobile, setIsMobile] = useState(false);\n  const [sidebarVisible, setSidebarVisible] = useState(true);\n  const [touchStartX, setTouchStartX] = useState<number | null>(null);\n  const [isLocating, setIsLocating] = useState(false);\n  const locationMarker = useRef<mapboxgl.Marker | null>(null);\n  const pulsingDot = useRef<HTMLDivElement | null>(null);\n  const currentPopup = useRef<mapboxgl.Popup | null>(null);\n  const [showTerrain, setShowTerrain] = useState(true);\n  const [showFavorites, setShowFavorites] = useState(true);\n  const [showPOIs, setShowPOIs] = useState(true);\n  const [isReviewDialogOpen, setIsReviewDialogOpen] = useState(false);\n  const { lang } = useParams();\n  const [expandedCities, setExpandedCities] = useState<string[]>([]);\n\n  const isTier1 = userRole === 'tier1';\n\n  // POI hook - only fetch POIs, no review functionality\n  const { pois, loading: poisLoading, addPOIReview } = usePOIs();\n\n  // Extract trips and favorites from mapData\n  const trips = mapData.trips;\n  const favorites = mapData.favorites;\n\n  // Touch handlers for swipe gestures on mobile\n  const handleTouchStart = (e: React.TouchEvent) => {\n    if (!isMobile) return;\n    \n    // Don't handle touch if it's on the close button or accordion\n    const target = e.target as HTMLElement;\n    if (target.closest('button[aria-label=\"Close sidebar\"]') || \n        target.closest('[data-radix-accordion-trigger]') ||\n        target.closest('[data-radix-accordion-item]') ||\n        target.closest('[role=\"button\"]') ||\n        target.closest('button')) {\n      return;\n    }\n    \n    setTouchStartX(e.touches[0].clientX);\n  };\n\n  const handleTouchEnd = (e: React.TouchEvent) => {\n    if (!isMobile || touchStartX === null) return;\n    \n    // Don't handle touch if it's on the close button or accordion\n    const target = e.target as HTMLElement;\n    if (target.closest('button[aria-label=\"Close sidebar\"]') || \n        target.closest('[data-radix-accordion-trigger]') ||\n        target.closest('[data-radix-accordion-item]') ||\n        target.closest('[role=\"button\"]') ||\n        target.closest('button')) {\n      setTouchStartX(null);\n      return;\n    }\n    \n    const touchEndX = e.changedTouches[0].clientX;\n    const diffX = touchEndX - touchStartX;\n    \n    // Swipe left to close sidebar (when open)\n    if (diffX < -50 && sidebarVisible) {\n      setSidebarVisible(false);\n    }\n    \n    setTouchStartX(null);\n  };\n\n  // Check if device is mobile on component mount and window resize\n  useEffect(() => {\n    const checkMobile = () => {\n      const isMobileCheck = isMobileDevice();\n      setIsMobile(isMobileCheck);\n      \n      // When desktop, always show sidebar\n      if (!isMobileCheck) {\n        setSidebarVisible(true);\n      } else {\n        // When mobile, close sidebar by default\n        setSidebarVisible(false);\n      }\n    };\n    \n    // Initial check\n    checkMobile();\n    \n    // Add resize listener\n    window.addEventListener('resize', checkMobile);\n    \n    // Clean up\n    return () => {\n      window.removeEventListener('resize', checkMobile);\n    };\n  }, []);\n\n  // The data fetching is now handled by the useMapData hook\n  // No need for manual data fetching here\n\n  // Handle initial state from navigation\n  useEffect(() => {\n    if (location.state?.selectedTripId && location.state?.tripType) {\n      const selectedTrip = trips.find(trip => \n        trip.id === location.state.selectedTripId && \n        trip.type === location.state.tripType\n      );\n      \n      if (selectedTrip) {\n        handleTripClick(selectedTrip);\n      }\n    }\n  }, [trips, location.state]);\n\n  // Initialize map using cache\n  useEffect(() => {\n    if (!mapContainer.current) return;\n\n    // Check if device is mobile\n    const mobile = isMobileDevice();\n\n    // Use the cached map instance\n    const cachedMap = getOrCreateMap({\n      container: mapContainer.current,\n      style: mapStyle,\n      center: [2.3488, 48.8534], // Default to Paris\n      zoom: 3, // Lower zoom to show more of the world initially\n      pitch: 60,\n      bearing: 0,\n      showTerrain,\n      isMobile: mobile,\n    });\n\n    // Set the map reference\n    map.current = cachedMap;\n\n    // Set up marker cache with the map instance\n    setMap(cachedMap);\n\n    // Clean up on unmount\n    return () => {\n      cleanupMarkers();\n      clearMapCache();\n    };\n  }, [getOrCreateMap, setMap, cleanupMarkers, clearMapCache]);\n\n  // Update map style when mapStyle changes\n  useEffect(() => {\n    if (map.current) {\n      updateMapStyle(mapStyle);\n    }\n  }, [mapStyle, updateMapStyle]);\n\n  // Handle mobile orientation changes\n  useEffect(() => {\n    if (!isMobile) return;\n\n    const handleOrientationChange = () => {\n      // Resize the map after orientation change\n      if (map.current) {\n        setTimeout(() => {\n          map.current?.resize();\n          \n          // Recenter the map on the selected trip if there is one\n          if (selectedTrip?.coordinates) {\n            map.current?.flyTo({\n              center: selectedTrip.coordinates,\n              zoom: 13,\n              duration: 500,\n            });\n          }\n        }, 200);\n      }\n    };\n\n    // Add event listeners for orientation changes\n    window.addEventListener('orientationchange', handleOrientationChange);\n    window.addEventListener('resize', handleOrientationChange);\n\n    return () => {\n      window.removeEventListener('orientationchange', handleOrientationChange);\n      window.removeEventListener('resize', handleOrientationChange);\n    };\n  }, [isMobile, selectedTrip]);\n\n  // Handle map style change\n  const changeMapStyle = (style: string) => {\n    setMapStyle(style);\n  };\n\n  // Add trip markers to map\n  useEffect(() => {\n    if (!map.current || isLoading) return;\n    \n    console.log('MapDashboard: Updating markers with', trips.length, 'trips');\n    console.log('MapDashboard: Trip data:', trips);\n\n    // Clear existing markers\n    mapMarkers.current.forEach(marker => marker && marker.remove());\n    mapMarkers.current = [];\n\n    // Filter trips if a filter is active\n    const filteredTrips = activeFilter \n      ? trips.filter(trip => trip.type === activeFilter)\n      : trips;\n\n    // Add markers for trips with valid coordinates\n    const bounds = new mapboxgl.LngLatBounds();\n    let hasValidCoordinates = false;\n\n    filteredTrips.forEach(trip => {\n      if (!trip.coordinates) return;\n      \n      try {\n        const [lng, lat] = trip.coordinates;\n        \n        // Skip invalid coordinates\n        if (!lng || !lat || isNaN(lng) || isNaN(lat)) return;\n        \n        // Create marker element\n        const markerEl = document.createElement('div');\n        markerEl.className = 'map-marker';\n        markerEl.style.width = '30px';\n        markerEl.style.height = '30px';\n        markerEl.style.borderRadius = '50%';\n        markerEl.style.background = TRIP_TYPE_COLORS[trip.type] || TRIP_TYPE_COLORS.default;\n        markerEl.style.cursor = 'pointer';\n        markerEl.style.display = 'flex';\n        markerEl.style.alignItems = 'center';\n        markerEl.style.justifyContent = 'center';\n        markerEl.style.color = 'white';\n        markerEl.style.fontWeight = 'bold';\n        markerEl.style.fontSize = '14px';\n        markerEl.style.border = '2px solid white';\n        markerEl.style.boxShadow = '0 2px 4px rgba(0,0,0,0.3)';\n        \n        // Use icons instead of letters\n        let iconMarkup = '';\n        if (trip.type === 'zapout') {\n          iconMarkup = ReactDOMServer.renderToStaticMarkup(<CableCar className=\"w-5 h-5\" />);\n        } else if (trip.type === 'zaproad') {\n          iconMarkup = ReactDOMServer.renderToStaticMarkup(<Car className=\"w-5 h-5\" />);\n        } else if (trip.type === 'zaptrip') {\n          iconMarkup = ReactDOMServer.renderToStaticMarkup(<PlaneTakeoff className=\"w-5 h-5\" />);\n        }\n        markerEl.innerHTML = iconMarkup;\n        \n        // Add hover effect - REMOVING transform effects\n        markerEl.onmouseover = () => {\n          markerEl.style.zIndex = '10';\n          markerEl.style.boxShadow = '0 4px 8px rgba(0,0,0,0.3)';\n        };\n        markerEl.onmouseout = () => {\n          markerEl.style.zIndex = '1';\n          markerEl.style.boxShadow = '0 2px 4px rgba(0,0,0,0.3)';\n        };\n\n        // Create and add marker\n        const marker = new mapboxgl.Marker(markerEl)\n          .setLngLat([lng, lat])\n          .addTo(map.current!);\n        \n        // Add click handler\n        marker.getElement().addEventListener('click', () => {\n          handleTripClick(trip);\n        });\n        \n        // Store marker for cleanup\n        mapMarkers.current.push(marker);\n        \n        // Extend bounds\n        bounds.extend([lng, lat]);\n        hasValidCoordinates = true;\n      } catch (err) {\n        console.error(`Error creating marker for trip ${trip.id}:`, err);\n      }\n    });\n\n    // Fit bounds if we have valid coordinates\n    if (hasValidCoordinates && map.current) {\n      map.current.fitBounds(bounds, {\n        padding: 50,\n        maxZoom: 12,\n      });\n    }\n\n    // Add favorites to map\n    addFavoritesToMap();\n  }, [trips, isLoading, activeFilter]);\n\n  // Clear checkpoint markers\n  const clearCheckpointMarkers = () => {\n    // Remove all checkpoint markers\n    checkpointMarkers.current.forEach(marker => marker.remove());\n    checkpointMarkers.current = [];\n    console.log('Cleared all checkpoint markers');\n  };\n\n  // Navigate to trip details when clicking on trip card\n  const handleTripClick = (trip: MapTripData) => {\n    console.log('Trip clicked:', trip);\n    \n    // If this is the same trip as the currently selected one, deselect it\n    if (selectedTrip?.id === trip.id && selectedTrip?.type === trip.type) {\n      setSelectedTrip(null);\n      // Clear checkpoints and routes when deselecting\n      clearCheckpointsAndRoute();\n      // On mobile, keep sidebar open after deselection\n      if (isMobile) {\n        setSidebarVisible(true);\n      }\n      return;\n    }\n    \n    setSelectedTrip(trip);\n    \n    // On mobile, show the sidebar when a trip is selected\n    if (isMobile) {\n      setSidebarVisible(true);\n    }\n    \n    // Clear any existing checkpoints and routes\n    clearCheckpointsAndRoute();\n    \n    // Navigate to appropriate location based on trip type\n    if (trip.coordinates) {\n      const [lng, lat] = trip.coordinates;\n      console.log(`Flying to coordinates [${lng}, ${lat}] for trip: ${trip.id}`);\n      \n      // Add highlighting for the selected trip marker\n      mapMarkers.current.forEach(marker => {\n        const el = marker.getElement();\n        el.style.zIndex = '1'; // Reset z-index\n        el.style.boxShadow = '0 2px 4px rgba(0,0,0,0.3)'; // Reset shadow\n        \n        // Check if this marker belongs to the selected trip\n        const markerLngLat = marker.getLngLat();\n        if (markerLngLat.lng === lng && markerLngLat.lat === lat) {\n          // Highlight the selected marker without transform\n          el.style.zIndex = '10'; // Bring to front\n          el.style.boxShadow = `0 0 0 4px ${TRIP_TYPE_COLORS[trip.type]}`;\n        }\n      });\n      \n      map.current?.flyTo({\n        center: [lng, lat],\n        zoom: 13,\n        duration: 1500,\n      });\n      \n      // Use cached checkpoint data\n      console.log('Fetching cached checkpoints for:', trip.id);\n      displayCachedCheckpoints(trip);\n    } else {\n      console.warn('No coordinates available for trip:', trip.id);\n    }\n  };\n\n  // Handle view details button click\n  const handleViewDetails = (trip: TripData) => {\n    // Save the origin information in local storage\n    localStorage.setItem('tripDetailsPreviousPage', 'mapDashboard');\n    \n    switch (trip.type) {\n      case 'zapout':\n        navigate(`/${lang}/zapout/${trip.id}`);\n        break;\n      case 'zaproad':\n        navigate(`/${lang}/zaproad/${trip.id}`);\n        break;\n      case 'zaptrip':\n        navigate(`/${lang}/trips/${trip.id}`);\n        break;\n    }\n  };\n\n  // Add this function to get directions from Mapbox API\n  const getDirectionsRoute = async (points: [number, number][], mode: TravelMode = 'driving') => {\n    if (points.length < 2) return null;\n    \n    try {\n      // Format coordinates for the Mapbox Directions API\n      const coordinates = points.map(p => p.join(',')).join(';');\n      \n      // Call the Mapbox Directions API with the specified travel mode\n      // Add options to ensure the route passes through all waypoints exactly\n      const response = await fetch(\n        `https://api.mapbox.com/directions/v5/mapbox/${mode}/${coordinates}?` + \n        `geometries=geojson&overview=full&radiuses=${points.map(() => '50').join(';')}&` +\n        `approaches=${points.map(() => 'curb').join(';')}&` +\n        `waypoints=${points.map((_, i) => i).join(';')}&` +\n        `access_token=${mapboxgl.accessToken}`\n      );\n      \n      const data = await response.json();\n      \n      if (data.routes && data.routes.length > 0) {\n        return data.routes[0].geometry.coordinates;\n      }\n      \n      return null;\n    } catch (error) {\n      console.error('Error fetching directions:', error);\n      return null;\n    }\n  };\n\n  // New cached checkpoint functions using the useCheckpointCache hook\n  const displayCachedCheckpoints = async (trip: MapTripData) => {\n    try {\n      let cachedData;\n      \n      switch (trip.type) {\n        case 'zapout':\n          cachedData = await fetchZapoutCheckpoints(trip.id, travelMode);\n          break;\n        case 'zaproad':\n          cachedData = await fetchZaproadCheckpoints(trip.id, travelMode);\n          break;\n        case 'zaptrip':\n          cachedData = await fetchZaptripCheckpoints(trip.id);\n          break;\n        default:\n          return;\n      }\n      \n      if (!cachedData || !cachedData.checkpoints.length) {\n        console.log('No checkpoints found for trip:', trip.id);\n        return;\n      }\n      \n      // Clear existing checkpoint markers\n      clearCheckpointMarkers();\n      \n      // Add route if available\n      if (cachedData.routeGeometry && map.current) {\n        removeExistingRouteLayers();\n        \n        map.current.addSource('cached-route', {\n          type: 'geojson',\n          data: {\n            type: 'Feature',\n            properties: {},\n            geometry: {\n              type: 'LineString',\n              coordinates: cachedData.routeGeometry\n            }\n          }\n        });\n        \n        map.current.addLayer({\n          id: 'cached-route-line',\n          type: 'line',\n          source: 'cached-route',\n          layout: {\n            'line-join': 'round',\n            'line-cap': 'round'\n          },\n          paint: {\n            'line-color': TRIP_TYPE_COLORS[trip.type],\n            'line-width': 4,\n            'line-opacity': 0.8\n          }\n        });\n        \n        map.current.addLayer({\n          id: 'cached-route-glow',\n          type: 'line',\n          source: 'cached-route',\n          layout: {\n            'line-join': 'round',\n            'line-cap': 'round'\n          },\n          paint: {\n            'line-color': '#ffffff',\n            'line-width': 7,\n            'line-opacity': 0.4,\n            'line-blur': 2\n          }\n        }, 'cached-route-line');\n      }\n      \n      // Add checkpoint markers\n      cachedData.checkpoints.forEach((checkpoint, index) => {\n        const markerEl = document.createElement('div');\n        markerEl.style.width = index === 0 ? '32px' : '24px';\n        markerEl.style.height = index === 0 ? '32px' : '24px';\n        markerEl.style.borderRadius = '50%';\n        markerEl.style.background = TRIP_TYPE_COLORS[trip.type];\n        markerEl.style.color = 'white';\n        markerEl.style.fontWeight = 'bold';\n        markerEl.style.display = 'flex';\n        markerEl.style.alignItems = 'center';\n        markerEl.style.justifyContent = 'center';\n        markerEl.style.fontSize = index === 0 ? '14px' : '12px';\n        markerEl.style.border = '2px solid white';\n        markerEl.style.boxShadow = '0 2px 6px rgba(0,0,0,0.3)';\n        markerEl.textContent = index === 0 ? '📍' : index.toString();\n        \n        // Add hover effect\n        markerEl.style.transition = 'box-shadow 0.2s ease';\n        markerEl.onmouseover = () => {\n          markerEl.style.zIndex = '10';\n          markerEl.style.boxShadow = '0 4px 8px rgba(0,0,0,0.3)';\n        };\n        markerEl.onmouseout = () => {\n          markerEl.style.zIndex = '1';\n          markerEl.style.boxShadow = '0 2px 6px rgba(0,0,0,0.3)';\n        };\n        \n        // Create popup\n        const popupContent = `\n          <div class=\"p-3 bg-white rounded-lg shadow-lg border border-gray-200\">\n            <div class=\"flex items-center space-x-2 mb-2\">\n              <div class=\"w-4 h-4 bg-${trip.type === 'zapout' ? 'emerald' : trip.type === 'zaproad' ? 'amber' : 'sky'}-500 rounded-full flex items-center justify-center\">\n                <svg width=\"8\" height=\"8\" viewBox=\"0 0 24 24\" fill=\"white\">\n                  <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"/>\n                </svg>\n              </div>\n              <h3 class=\"font-semibold text-sm\">${checkpoint.name}</h3>\n            </div>\n            <p class=\"text-xs text-gray-600\">${checkpoint.address}</p>\n          </div>\n        `;\n        \n        const popup = new mapboxgl.Popup({\n          offset: 25,\n          closeButton: false,\n          className: 'trip-popup'\n        }).setHTML(popupContent);\n        \n        const marker = new mapboxgl.Marker(markerEl)\n          .setLngLat(checkpoint.coordinates)\n          .setPopup(popup)\n          .addTo(map.current!);\n        \n        // Add click handler\n        markerEl.addEventListener('click', () => {\n          if (currentPopup.current) {\n            currentPopup.current.remove();\n          }\n          currentPopup.current = popup;\n        });\n        \n        popup.on('close', () => {\n          if (currentPopup.current === popup) {\n            currentPopup.current = null;\n          }\n        });\n        \n        checkpointMarkers.current.push(marker);\n      });\n      \n      // Fit bounds to show all checkpoints\n      const bounds = new mapboxgl.LngLatBounds();\n      cachedData.checkpoints.forEach(checkpoint => {\n        bounds.extend(checkpoint.coordinates);\n      });\n      \n      map.current?.fitBounds(bounds, {\n        padding: 70,\n        duration: 1000\n      });\n      \n    } catch (error) {\n      console.error('Error displaying cached checkpoints:', error);\n    }\n  };\n\n  // Old checkpoint functions removed - now using cached versions from useCheckpointCache hook\n\n  // Helper function to remove any existing route layers and sources\n  const removeExistingRouteLayers = () => {\n    if (!map.current) return;\n    \n    try {\n      // Remove layers first\n      const layers = ['zaproad-route-line', 'zaproad-route-glow'];\n      layers.forEach(layer => {\n        if (map.current?.getLayer(layer)) {\n          map.current.removeLayer(layer);\n        }\n      });\n      \n      // Then remove sources\n      const sources = ['zaproad-route'];\n      sources.forEach(source => {\n        if (map.current?.getSource(source)) {\n          map.current.removeSource(source);\n        }\n      });\n\n      // Update the route source data if it exists\n      const routeSource = map.current.getSource('route') as mapboxgl.GeoJSONSource;\n      if (routeSource) {\n        routeSource.setData({\n          type: 'Feature',\n          properties: {},\n          geometry: {\n            type: 'LineString',\n            coordinates: []\n          }\n        });\n      }\n    } catch (e) {\n      console.error('Error removing existing route layers:', e);\n    }\n  };\n\n  // Clear checkpoints and route when deselecting\n  const clearCheckpointsAndRoute = () => {\n    // Clear checkpoint markers\n    clearCheckpointMarkers();\n    \n    // Clear route layers\n    removeExistingRouteLayers();\n    \n    // Clear POI markers\n    poiMarkers.current.forEach(marker => marker.remove());\n    poiMarkers.current = [];\n  };\n\n  // Add custom pulsing dot creation\n  const createPulsingDot = () => {\n    // Remove existing pulsing dot if any\n    if (pulsingDot.current) {\n      pulsingDot.current.remove();\n    }\n\n    // Create main container\n    const el = document.createElement('div');\n    el.className = 'location-marker';\n    el.style.width = '32px';\n    el.style.height = '32px';\n    el.style.position = 'relative';\n\n    // Create the map pin image\n    const pin = document.createElement('img');\n    pin.src = '/icons/iconloaction.png';\n    pin.style.width = '100%';\n    pin.style.height = '100%';\n    pin.style.objectFit = 'contain';\n    el.appendChild(pin);\n    \n    pulsingDot.current = el;\n    return el;\n  };\n\n  // Update geolocate function\n  const handleGeolocate = () => {\n    setIsLocating(true);\n    \n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          \n          // Remove existing location marker if any\n          if (locationMarker.current) {\n            locationMarker.current.remove();\n          }\n\n          // Create and add new marker\n          const markerEl = createPulsingDot();\n          locationMarker.current = new mapboxgl.Marker({\n            element: markerEl,\n            anchor: 'center'\n          })\n            .setLngLat([longitude, latitude])\n            .addTo(map.current!);\n\n          // Add a success toast with a fun message\n\n          \n          map.current?.flyTo({\n            center: [longitude, latitude],\n            zoom: 14,\n            duration: 1500\n          });\n          \n          setIsLocating(false);\n        },\n        (error) => {\n          console.error('Geolocation error:', error);\n          toast({\n            title: t('error'),\n            description: \"Oops! Couldn't find you. Are you using a teleporter? 🚀\",\n            variant: \"destructive\",\n          });\n          setIsLocating(false);\n        },\n        {\n          enableHighAccuracy: true,\n          timeout: 5000,\n          maximumAge: 0\n        }\n      );\n    } else {\n      toast({\n        title: t('error'),\n        description: \"Looks like your device doesn't support location services. Time to get a new compass! 🧭\",\n        variant: \"destructive\",\n      });\n      setIsLocating(false);\n    }\n  };\n\n  // Add cleanup for location marker in the cleanup effect\n  useEffect(() => {\n    return () => {\n      if (locationMarker.current) {\n        locationMarker.current.remove();\n      }\n      if (pulsingDot.current) {\n        pulsingDot.current.remove();\n      }\n      // Clear all markers\n      mapMarkers.current.forEach(marker => marker.remove());\n      favoriteMarkers.current.forEach(marker => marker.remove());\n      poiMarkers.current.forEach(marker => marker.remove());\n      checkpointMarkers.current.forEach(marker => marker.remove());\n    };\n  }, []);\n\n  // Add this function to create a custom marker element\n  const createPinMarker = (location?: any) => {\n    // Helper functions for category emoji and color (matching the logic from addPOIsToMap)\n    const getCategoryEmoji = (category?: string, placeType?: string[]) => {\n      if (placeType?.includes('address')) {\n        return '🏠';\n      }\n      \n      if (placeType?.includes('poi')) {\n        if (!category) return '📍';\n        \n        switch (category) {\n          case 'restaurant':\n            return '🍽️';\n          case 'food':\n            return '🍽️';\n          case 'cafe':\n            return '🍽️';\n          case 'coffee':\n            return '🍽️';\n          case 'hotel':\n            return '🏨';\n          case 'lodging':\n            return '🏨';\n          case 'bar':\n            return '🍺';\n          case 'nightlife':\n            return '🍺';\n          case 'museum':\n            return '🏛️';\n          case 'art':\n            return '🏛️';\n          case 'park':\n            return '🌳';\n          case 'nature':\n            return '🌳';\n          case 'shopping':\n            return '🛍️';\n          case 'store':\n            return '🛍️';\n          case 'entertainment':\n            return '🎉';\n          case 'attraction':\n            return '🎡';\n          default:\n            return '📍';\n        }\n      }\n      \n      return '📍';\n    };\n\n    const getCategoryColor = (category?: string, placeType?: string[]) => {\n      if (placeType?.includes('address')) {\n        return '#6b7280'; // Gray for addresses\n      }\n      \n      if (placeType?.includes('poi')) {\n        switch (category) {\n          case 'restaurant':\n          case 'food':\n            return '#ef4444'; // Red\n          case 'cafe':\n          case 'coffee':\n            return '#8b5cf6'; // Purple\n          case 'hotel':\n          case 'lodging':\n            return '#3b82f6'; // Blue\n          case 'bar':\n          case 'nightlife':\n            return '#f59e0b'; // Amber\n          case 'museum':\n          case 'art':\n            return '#10b981'; // Emerald\n          case 'park':\n          case 'nature':\n            return '#059669'; // Green\n          case 'shopping':\n          case 'store':\n            return '#ec4899'; // Pink\n          case 'entertainment':\n          case 'attraction':\n            return '#f97316'; // Orange\n          default:\n            return '#6b7280'; // Gray\n        }\n      }\n      \n      return '#6b7280'; // Default gray\n    };\n\n    // Get category information from location if available\n    const category = location?.properties?.category || location?.type;\n    const placeType = location?.place_type || location?.properties?.place_type;\n    \n    // Get emoji and color based on category\n    const categoryEmoji = getCategoryEmoji(category, placeType);\n    const categoryColor = getCategoryColor(category, placeType);\n\n    const el = document.createElement('div');\n    el.className = 'pin-marker';\n    \n    // Create the main icon container (matching the style from addPOIsToMap)\n    const iconContainer = document.createElement('div');\n    iconContainer.style.width = '40px';\n    iconContainer.style.height = '40px';\n    iconContainer.style.background = categoryColor;\n    iconContainer.style.borderRadius = '50%';\n    iconContainer.style.border = '3px solid white';\n    iconContainer.style.boxShadow = '0 2px 4px rgba(0,0,0,0.3)';\n    iconContainer.style.display = 'flex';\n    iconContainer.style.alignItems = 'center';\n    iconContainer.style.justifyContent = 'center';\n    iconContainer.style.fontSize = '14px';\n    iconContainer.style.overflow = 'hidden';\n    iconContainer.style.transition = 'box-shadow 0.2s ease';\n    iconContainer.style.transform = 'none';\n\n    // Use emoji for category representation\n    iconContainer.textContent = categoryEmoji;\n\n    // Add the icon container to the main element\n    el.appendChild(iconContainer);\n    \n    el.style.fontSize = '32px';\n    el.style.transform = 'translate(-50%, -50%)';\n    el.style.cursor = 'pointer';\n    el.style.display = 'flex';\n    el.style.alignItems = 'center';\n    el.style.justifyContent = 'center';\n    \n    return el;\n  };\n\n  // Update the handleLocationSelect function\n  const handleLocationSelect = (location: any) => {\n    if (!map.current || !location.center) return;\n\n    // Skip marker creation for zapplaces (database POIs)\n    if (location.properties?.source === 'database_poi') {\n      // For zapplaces, just fly to the location without creating a marker\n      // since they already have their own markers on the map\n      map.current.flyTo({\n        center: location.center,\n        zoom: location.zoom || 15,\n        duration: 1500\n      });\n      return;\n    }\n\n    // Remove existing location marker if any\n    if (locationMarker.current) {\n      locationMarker.current.remove();\n    }\n\n    // Create a pin marker for the selected location with category information\n    const markerEl = createPinMarker(location);\n    locationMarker.current = new mapboxgl.Marker({\n      element: markerEl,\n      anchor: 'center'\n    })\n      .setLngLat(location.center)\n      .addTo(map.current);\n\n    // Add a bounce animation to the marker\n    const bounce = () => {\n      markerEl.style.transform = 'translate(-50%, -50%) translateY(-10px)';\n      setTimeout(() => {\n        markerEl.style.transform = 'translate(-50%, -50%)';\n      }, 200);\n    };\n    bounce();\n\n    // Fly to the location\n    map.current.flyTo({\n      center: location.center,\n      zoom: location.zoom || 15,\n      duration: 1500\n    });\n\n    // Show success toast\n\n  };\n\n  const handleUpgradeClick = () => {\n    navigate('/pricing');\n  };\n\n  // Add favorites to map\n  const addFavoritesToMap = () => {\n    if (!map.current) return;\n\n    // Always clear existing favorite markers first\n    favoriteMarkers.current.forEach(marker => marker.remove());\n    favoriteMarkers.current = [];\n\n    // Only add markers if showFavorites is true\n    if (!showFavorites) return;\n\n    favorites.forEach(favorite => {\n      if (favorite.place_lat && favorite.place_lng) {\n        // Create custom marker element for favorites\n        const el = document.createElement('div');\n        el.className = 'favorite-marker';\n        el.style.width = '24px';\n        el.style.height = '24px';\n        el.style.background = '#ef4444'; // Red color for favorites\n        el.style.borderRadius = '50%';\n        el.style.border = '2px solid white';\n        el.style.boxShadow = '0 2px 4px rgba(0,0,0,0.3)';\n        el.style.cursor = 'pointer';\n        el.style.display = 'flex';\n        el.style.alignItems = 'center';\n        el.style.justifyContent = 'center';\n        el.innerHTML = '<svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"white\"><path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"/></svg>';\n\n        // Create marker\n        const marker = new mapboxgl.Marker(el)\n          .setLngLat([favorite.place_lng, favorite.place_lat])\n          .addTo(map.current);\n\n        // Create popup\n        const popup = new mapboxgl.Popup({ \n          offset: 25,\n          closeButton: false,\n          className: 'favorite-popup'\n        })\n          .setHTML(`\n            <div class=\"p-3 bg-white rounded-lg shadow-lg border border-gray-200\">\n              <div class=\"flex items-center space-x-2 mb-2\">\n                <div class=\"w-4 h-4 bg-red-500 rounded-full flex items-center justify-center\">\n                  <svg width=\"8\" height=\"8\" viewBox=\"0 0 24 24\" fill=\"white\">\n                    <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"/>\n                  </svg>\n                </div>\n                <h3 class=\"font-semibold text-sm\">${favorite.place_name}</h3>\n              </div>\n              <p class=\"text-xs text-gray-600 mb-2\">${favorite.place_address}</p>\n              ${favorite.place_rating ? `\n                <div class=\"flex items-center space-x-1 mb-2\">\n                  <span class=\"text-yellow-500 text-xs\">★</span>\n                  <span class=\"text-xs text-gray-600\">${favorite.place_rating.toFixed(1)}</span>\n                </div>\n              ` : ''}\n              <div class=\"flex space-x-2\">\n                <button onclick=\"window.open('${createExternalPlaceUrl(favorite.place_id, favorite.place_name, 'en')}', '_blank')\" class=\"text-xs bg-blue-500 text-white px-2 py-1 rounded hover:bg-blue-600 transition-colors\">\n                  ${t('favorites.viewDetails')}\n                </button>\n                <button onclick=\"getFavoriteDirections(${favorite.id})\" class=\"text-xs bg-green-500 text-white px-2 py-1 rounded hover:bg-green-600 transition-colors flex items-center justify-center space-x-1\">\n                  <svg class=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7\"/>\n                  </svg>\n                  <span>${t('pois.directions')}</span>\n                </button>\n              </div>\n            </div>\n          `);\n\n        marker.setPopup(popup);\n        favoriteMarkers.current.push(marker);\n      }\n    });\n  };\n\n  // Remove favorite function (called from popup)\n  const removeFavorite = async (favoriteId: number) => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        console.error('No user found for removing favorite');\n        return;\n      }\n\n      const { error } = await supabase\n        .from('favorites')\n        .delete()\n        .eq('id', favoriteId);\n\n      if (error) throw error;\n\n      // Remove from cache using the hook function\n      removeFavoriteFromCache(favoriteId);\n      \n      // Emit cache invalidation events\n      cacheEventManager.emit(CACHE_EVENTS.FAVORITE_REMOVED);\n      await invalidateFavoriteCaches(user.id);\n      \n      toast({\n        title: t('favorites.removed'),\n        description: t('favorites.removedMessage'),\n      });\n    } catch (error) {\n      console.error('Error removing favorite:', error);\n      toast({\n        title: t('favorites.error'),\n        description: t('favorites.errorMessage'),\n        variant: 'destructive',\n      });\n    }\n  };\n\n  // Add global function for popup buttons\n  useEffect(() => {\n    (window as any).removeFavorite = removeFavorite;\n    (window as any).getFavoriteDirections = (favoriteId: number) => {\n      const favorite = favorites.find(fav => fav.id === favoriteId);\n      if (favorite) {\n        getFavoriteDirections(favorite);\n      }\n    };\n    return () => {\n      delete (window as any).removeFavorite;\n      delete (window as any).getFavoriteDirections;\n    };\n  }, [favorites]);\n\n  // Add custom CSS for favorite popups and accordion touch handling\n  useEffect(() => {\n    // Inject custom CSS to hide default Mapbox popup styling and improve accordion touch handling\n    const style = document.createElement('style');\n    style.textContent = `\n      .favorite-popup .mapboxgl-popup-content,\n      .trip-popup .mapboxgl-popup-content,\n      .poi-popup .mapboxgl-popup-content {\n        background: transparent !important;\n        border: none !important;\n        box-shadow: none !important;\n        padding: 0 !important;\n        margin: 0 !important;\n      }\n      .favorite-popup .mapboxgl-popup-tip,\n      .trip-popup .mapboxgl-popup-tip,\n      .poi-popup .mapboxgl-popup-tip {\n        display: none !important;\n      }\n      \n      /* POI Marker specific styles - simplified for better positioning */\n      .poi-marker {\n        pointer-events: auto !important;\n      }\n      \n      /* Ensure markers don't disappear on hover */\n      .mapboxgl-marker {\n        pointer-events: auto !important;\n      }\n      \n      /* Improve accordion touch handling on mobile */\n      [data-radix-accordion-trigger] {\n        touch-action: manipulation !important;\n        -webkit-tap-highlight-color: transparent !important;\n        user-select: none !important;\n      }\n      \n      /* Ensure accordion content is properly touchable */\n      [data-radix-accordion-content] {\n        touch-action: pan-y !important;\n      }\n      \n      /* Prevent touch events from interfering with accordion on mobile */\n      @media (max-width: 768px) {\n        [data-radix-accordion-item] {\n          touch-action: manipulation !important;\n        }\n        \n        /* Ensure sidebar content is visible above mobile navbar */\n        .sidebar-content {\n          padding-bottom: 6rem !important;\n          margin-bottom: 1rem !important;\n        }\n      }\n    `;\n    document.head.appendChild(style);\n\n    return () => {\n      document.head.removeChild(style);\n    };\n  }, []);\n\n  // Update favorites on map when showFavorites changes\n  useEffect(() => {\n    if (map.current) {\n      console.log('Favorites data changed, updating map markers. Count:', favorites.length);\n      addFavoritesToMap();\n    }\n  }, [showFavorites, favorites, addFavoritesToMap]);\n\n  // Debug logging for favorites data changes\n  useEffect(() => {\n    console.log('Favorites data updated in MapDashboard:', {\n      count: favorites.length,\n      favorites: favorites.map(f => ({ id: f.id, name: f.place_name }))\n    });\n  }, [favorites]);\n\n  // Add POIs to map\n  const addPOIsToMap = () => {\n    if (!map.current) return;\n\n    // Always clear existing POI markers first\n    poiMarkers.current.forEach(marker => marker.remove());\n    poiMarkers.current = [];\n\n    // Only add markers if showPOIs is true\n    if (!showPOIs) return;\n\n    pois.forEach(poi => {\n      if (poi.lat && poi.lng) {\n        // Get category icon and color\n        const getCategoryIcon = (categories: string[]) => {\n          if (categories.includes('restaurant') || categories.includes('food')) {\n            return '🍽️';\n          } else if (categories.includes('hotel') || categories.includes('lodging')) {\n            return '🏨';\n          } else if (categories.includes('cafe') || categories.includes('coffee')) {\n            return '☕';\n          } else if (categories.includes('bar') || categories.includes('nightlife')) {\n            return '🍺';\n          } else if (categories.includes('museum') || categories.includes('art')) {\n            return '🏛️';\n          } else if (categories.includes('park') || categories.includes('nature')) {\n            return '🌳';\n          } else if (categories.includes('shopping') || categories.includes('store')) {\n            return '🛍️';\n          } else if (categories.includes('entertainment') || categories.includes('attraction')) {\n            return '🎡';\n          } else {\n            return '📍';\n          }\n        };\n\n        const getCategoryColor = (categories: string[]) => {\n          if (categories.includes('restaurant') || categories.includes('food')) {\n            return '#ef4444'; // Red\n          } else if (categories.includes('hotel') || categories.includes('lodging')) {\n            return '#3b82f6'; // Blue\n          } else if (categories.includes('cafe') || categories.includes('coffee')) {\n            return '#8b5cf6'; // Purple\n          } else if (categories.includes('bar') || categories.includes('nightlife')) {\n            return '#f59e0b'; // Amber\n          } else if (categories.includes('museum') || categories.includes('art')) {\n            return '#10b981'; // Emerald\n          } else if (categories.includes('park') || categories.includes('nature')) {\n            return '#059669'; // Green\n          } else if (categories.includes('shopping') || categories.includes('store')) {\n            return '#ec4899'; // Pink\n          } else if (categories.includes('entertainment') || categories.includes('attraction')) {\n            return '#f97316'; // Orange\n          } else {\n            return '#6b7280'; // Gray\n          }\n        };\n\n        const categoryIcon = getCategoryIcon(poi.categories);\n        const categoryColor = getCategoryColor(poi.categories);\n\n        // Create custom marker element for POIs - using same logic as favorites but smaller size\n        const el = document.createElement('div');\n        el.className = 'poi-marker';\n        el.setAttribute('data-marker-type', 'poi');\n        el.style.width = '28px';\n        el.style.height = '28px';\n        el.style.background = categoryColor;\n        el.style.borderRadius = '50%';\n        el.style.border = '2px solid white';\n        el.style.boxShadow = '0 2px 4px rgba(0,0,0,0.3)';\n        el.style.cursor = 'pointer';\n        el.style.display = 'flex';\n        el.style.alignItems = 'center';\n        el.style.justifyContent = 'center';\n        el.style.fontSize = '12px';\n        el.style.transition = 'box-shadow 0.2s ease';\n\n        // Use category image if available, otherwise fall back to emoji\n        if (poi.category_image_url) {\n          console.log('Creating marker with image for:', poi.name, 'Image URL:', poi.category_image_url);\n          const img = document.createElement('img');\n          img.src = poi.category_image_url;\n          img.style.width = '20px';\n          img.style.height = '20px';\n          img.style.objectFit = 'cover';\n          img.style.borderRadius = '50%';\n          img.style.backgroundColor = 'white';\n          img.style.padding = '2px';\n          img.alt = poi.category_name || 'POI';\n          img.style.transition = 'all 0.2s ease';\n          img.onerror = () => {\n            console.log('Image failed to load for:', poi.name, poi.category_image_url);\n            // Fallback to emoji if image fails to load\n            el.textContent = categoryIcon;\n          };\n          img.onload = () => {\n            console.log('Image loaded successfully for:', poi.name);\n          };\n          el.appendChild(img);\n        } else {\n          console.log('Creating marker with emoji for:', poi.name, 'Category:', poi.category_name, 'Category ID:', poi.poi_category_id, 'Image URL:', poi.category_image_url);\n          el.textContent = categoryIcon;\n        }\n\n        // Add rating display if there are reviews - positioned absolutely relative to the marker\n        if (poi.average_rating && poi.average_rating > 0) {\n          const ratingContainer = document.createElement('div');\n          ratingContainer.style.position = 'absolute';\n          ratingContainer.style.bottom = '-18px';\n          ratingContainer.style.left = '50%';\n          ratingContainer.style.transform = 'translateX(-50%)';\n          ratingContainer.style.background = '#ffffff';\n          ratingContainer.style.border = '1px solid #e5e7eb';\n          ratingContainer.style.borderRadius = '8px';\n          ratingContainer.style.padding = '2px 4px';\n          ratingContainer.style.fontSize = '10px';\n          ratingContainer.style.fontWeight = 'bold';\n          ratingContainer.style.color = '#f59e0b';\n          ratingContainer.style.boxShadow = '0 1px 2px rgba(0,0,0,0.1)';\n          ratingContainer.style.whiteSpace = 'nowrap';\n          ratingContainer.style.zIndex = '2';\n          ratingContainer.style.transition = 'all 0.2s ease';\n          \n          // Format rating based on rating type\n          let ratingText = '';\n          if (poi.rating_type === 'out_of_5') {\n            ratingText = `${poi.average_rating.toFixed(1)}/5★`;\n          } else if (poi.rating_type === 'percentage') {\n            ratingText = `${poi.average_rating.toFixed(0)}%★`;\n          } else {\n            // Default to out_of_10\n            ratingText = `${poi.average_rating.toFixed(1)}/10★`;\n          }\n          \n          ratingContainer.textContent = ratingText;\n          \n          el.appendChild(ratingContainer);\n        }\n\n        // Add hover effect - only change shadow and image size, no transform\n        el.onmouseover = () => {\n          el.style.zIndex = '10';\n          el.style.boxShadow = '0 4px 8px rgba(0,0,0,0.3)';\n          const img = el.firstChild as HTMLImageElement | null;\n          if (img && img.tagName === 'IMG') {\n            img.style.width = '24px';\n            img.style.height = '24px';\n          }\n        };\n        el.onmouseout = () => {\n          el.style.zIndex = '1';\n          el.style.boxShadow = '0 2px 4px rgba(0,0,0,0.3)';\n          const img = el.firstChild as HTMLImageElement | null;\n          if (img && img.tagName === 'IMG') {\n            img.style.width = '20px';\n            img.style.height = '20px';\n          }\n        };\n\n        // Create marker using same logic as favorites\n        const marker = new mapboxgl.Marker(el)\n          .setLngLat([poi.lng, poi.lat])\n          .addTo(map.current);\n\n        // Create popup content\n        const popupContent = `\n          <div class=\"p-3 bg-white/95 backdrop-blur-sm rounded-lg shadow-lg border border-gray-200 max-w-xs\">\n            <div class=\"flex items-center space-x-2 mb-2\">\n              ${poi.category_image_url ? `\n                <img src=\"${poi.category_image_url}\" alt=\"${poi.category_name || 'POI'}\" style=\"width: 32px; height: 32px; object-fit: cover; border-radius: 50%;\" />\n              ` : `\n                <div class=\"w-8 h-8 rounded-full flex items-center justify-center text-white text-sm\" style=\"background: ${categoryColor}\">\n                  ${categoryIcon}\n                </div>\n              `}\n              <h3 class=\"font-semibold text-sm text-gray-900 truncate\">${poi.name}</h3>\n            </div>\n            <p class=\"text-xs text-gray-600 mb-2 truncate\">${poi.address}</p>\n            ${poi.average_rating && poi.average_rating > 0 ? `\n              <div class=\"flex items-center space-x-1 mb-2\">\n                <span class=\"text-yellow-500 text-xs\">★</span>\n                <span class=\"text-xs text-gray-600\">${poi.average_rating.toFixed(1)}/10</span>\n                \n              </div>\n            ` : ''}\n            ${poi.description ? `\n              <p class=\"text-xs text-gray-600 mb-2 line-clamp-2\">${poi.description}</p>\n            ` : ''}\n            ${poi.category_name ? `\n              <div class=\"flex items-center space-x-1 mb-2\">\n                <svg class=\"w-3 h-3 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"/>\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"/>\n                </svg>\n                <span class=\"text-xs text-gray-500\">${poi.category_name}</span>\n              </div>\n            ` : ''}\n            <div class=\"flex space-x-2\">\n              ${poi.url ? `\n                <button class=\"visit-btn flex-1 text-xs bg-blue-500/90 text-white px-2 py-1 rounded hover:bg-blue-600 transition-colors flex items-center justify-center space-x-1\" data-url=\"${poi.url}\">\n                  <svg class=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"/>\n                  </svg>\n                  <span>${t('pois.visit')}</span>\n                </button>\n              ` : ''}\n              <button class=\"directions-btn flex-1 text-xs bg-green-500/90 text-white px-2 py-1 rounded hover:bg-green-600 transition-colors flex items-center justify-center space-x-1\" data-lat=\"${poi.lat}\" data-lng=\"${poi.lng}\" data-name=\"${poi.name}\">\n                <svg class=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7\"/>\n                </svg>\n                <span>${t('pois.directions')}</span>\n              </button>\n            </div>\n          </div>\n        `;\n\n        // Create popup\n        const popup = new mapboxgl.Popup({ \n          offset: 25,\n          closeButton: false,\n          className: 'poi-popup'\n        }).setHTML(popupContent);\n\n        // Set popup on marker\n        marker.setPopup(popup);\n\n        // Add click handler to marker element\n        marker.getElement().addEventListener('click', () => {\n          // Close current popup if exists\n          if (currentPopup.current) {\n            currentPopup.current.remove();\n          }\n          // Set new current popup\n          currentPopup.current = popup;\n        });\n\n        // Add event listener for popup close\n        popup.on('close', () => {\n          if (currentPopup.current === popup) {\n            currentPopup.current = null;\n          }\n        });\n\n        // Add event listeners for popup buttons after popup is opened\n        popup.on('open', () => {\n          const popupElement = popup.getElement();\n          if (popupElement) {\n            // Handle visit button\n            const visitBtn = popupElement.querySelector('.visit-btn');\n            if (visitBtn) {\n              visitBtn.addEventListener('click', (e) => {\n                e.stopPropagation();\n                const url = visitBtn.getAttribute('data-url');\n                if (url) {\n                  window.open(url, '_blank');\n                }\n              });\n            }\n\n            // Handle directions button\n            const directionsBtn = popupElement.querySelector('.directions-btn');\n            if (directionsBtn) {\n              directionsBtn.addEventListener('click', (e) => {\n                e.stopPropagation();\n                const lat = directionsBtn.getAttribute('data-lat');\n                const lng = directionsBtn.getAttribute('data-lng');\n                const name = directionsBtn.getAttribute('data-name');\n                if (lat && lng && name) {\n                  handlePOIDirectionsClick(lat, lng, name);\n                }\n              });\n            }\n          }\n        });\n\n        poiMarkers.current.push(marker);\n      }\n    });\n  };\n\n  // Handle POI review click\n  const handlePOIReviewClick = (poiId: string) => {\n    const poi = pois.find(p => p.id === poiId);\n    if (poi) {\n      setSelectedPOI(poi);\n      setIsReviewDialogOpen(true);\n    }\n  };\n\n  // Add global function for POI review popup buttons\n  useEffect(() => {\n    (window as any).openPOIReview = handlePOIReviewClick;\n    return () => {\n      delete (window as any).openPOIReview;\n    };\n  }, [pois]);\n\n  // Function to get category from place types\n  const getFavoriteCategory = (placeTypes: string[] | null | undefined): string => {\n    // Handle null/undefined placeTypes\n    if (!placeTypes || !Array.isArray(placeTypes)) {\n      return 'other';\n    }\n    \n    if (placeTypes.includes('restaurant') || placeTypes.includes('food')) {\n      return 'restaurant';\n    } else if (placeTypes.includes('hotel') || placeTypes.includes('lodging')) {\n      return 'hotel';\n    } else if (placeTypes.includes('cafe') || placeTypes.includes('coffee')) {\n      return 'cafe';\n    } else if (placeTypes.includes('bar') || placeTypes.includes('nightlife')) {\n      return 'bar';\n    } else if (placeTypes.includes('museum') || placeTypes.includes('art')) {\n      return 'museum';\n    } else if (placeTypes.includes('park') || placeTypes.includes('nature')) {\n      return 'park';\n    } else if (placeTypes.includes('shopping') || placeTypes.includes('store')) {\n      return 'shopping';\n    } else if (placeTypes.includes('entertainment') || placeTypes.includes('attraction')) {\n      return 'entertainment';\n    } else {\n      return 'other';\n    }\n  };\n\n  // Update POIs on map when showPOIs changes\n  useEffect(() => {\n    if (map.current) {\n      addPOIsToMap();\n    }\n  }, [showPOIs, pois, addPOIsToMap]);\n\n  // Group favorites by category\n  const groupedFavorites = favorites.reduce((acc, favorite) => {\n    const category = getFavoriteCategory(favorite.place_types);\n    if (!acc[category]) {\n      acc[category] = [];\n    }\n    acc[category].push(favorite);\n    return acc;\n  }, {} as Record<string, FavoritePlace[]>);\n\n  // Group trips by city when \"All\" filter is selected\n  // For ZapRoad trips, we use the arrival city (end_city) instead of departure city (starting_city)\n  const groupedTripsByCity = trips.reduce((acc, trip) => {\n    const city = trip.location || 'Unknown Location';\n    if (!acc[city]) {\n      acc[city] = [];\n    }\n    acc[city].push(trip);\n    return acc;\n  }, {} as Record<string, TripData[]>);\n\n  // Sort cities alphabetically\n  const sortedCities = Object.keys(groupedTripsByCity).sort((a, b) => {\n    if (a === 'Unknown Location') return 1;\n    if (b === 'Unknown Location') return -1;\n    return a.localeCompare(b);\n  });\n\n  // Function to get category icon\n  const getCategoryIcon = (category: string) => {\n    switch (category) {\n      case 'restaurant':\n        return <UtensilsCrossed className=\"w-4 h-4\" />;\n      case 'hotel':\n        return <Hotel className=\"w-4 h-4\" />;\n      case 'cafe':\n        return <Coffee className=\"w-4 h-4\" />;\n      case 'bar':\n        return <Wine className=\"w-4 h-4\" />;\n      case 'museum':\n        return <Landmark className=\"w-4 h-4\" />;\n      case 'park':\n        return <TreePine className=\"w-4 h-4\" />;\n      case 'shopping':\n        return <ShoppingBag className=\"w-4 h-4\" />;\n      case 'entertainment':\n        return <Palette className=\"w-4 h-4\" />;\n      default:\n        return <MapPin className=\"w-4 h-4\" />;\n    }\n  };\n\n  // Function to get category color\n  const getCategoryColor = (category: string) => {\n    switch (category) {\n      case 'restaurant':\n        return 'bg-red-500';\n      case 'hotel':\n        return 'bg-blue-500';\n      case 'cafe':\n        return 'bg-purple-500';\n      case 'bar':\n        return 'bg-amber-500';\n      case 'museum':\n        return 'bg-emerald-500';\n      case 'park':\n        return 'bg-green-500';\n      case 'shopping':\n        return 'bg-pink-500';\n      case 'entertainment':\n        return 'bg-orange-500';\n      default:\n        return 'bg-gray-500';\n    }\n  };\n\n  // Function to get category display name\n  const getCategoryDisplayName = (category: string) => {\n    return t(`favorites.categories.${category}`, { defaultValue: t('favorites.categories.other') });\n  };\n\n    // Function to fly to favorite location\n  const flyToFavorite = (favorite: FavoritePlace) => {\n    if (!map.current || !favorite.place_lat || !favorite.place_lng) return;\n    \n    // Fly to the location with animation\n    map.current.flyTo({\n      center: [favorite.place_lng, favorite.place_lat],\n      zoom: 15,\n      duration: 2000,\n      essential: true\n    });\n\n    // Add a bounce effect to the favorite marker\n    const favoriteMarker = favoriteMarkers.current.find(marker => {\n      const lngLat = marker.getLngLat();\n      return lngLat.lng === favorite.place_lng && lngLat.lat === favorite.place_lat;\n    });\n\n    if (favoriteMarker) {\n      // Create bounce animation\n      const bounce = () => {\n        favoriteMarker.getElement().style.transform = 'scale(1.2)';\n        setTimeout(() => {\n          favoriteMarker.getElement().style.transform = 'scale(1)';\n        }, 200);\n      };\n      bounce();\n    }\n  };\n\n  // Function to get directions to favorite using address\n  const getFavoriteDirections = (favorite: FavoritePlace) => {\n    // Use the place address for navigation\n    const destinationAddress = favorite.place_address || favorite.place_name;\n    \n    if (!destinationAddress) {\n      console.error('No address information available for directions', favorite);\n      return;\n    }\n\n    // Create Google Maps URL with address\n    const encodedAddress = encodeURIComponent(destinationAddress);\n    const googleMapsUrl = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n    \n    // Check if we're on mobile and can use the Google Maps app\n    if (navigator.userAgent.match(/iPhone|iPad|iPod|Android/i)) {\n      // Try to open Google Maps app first\n      const googleMapsAppUrl = `comgooglemaps://?q=${encodedAddress}`;\n      \n      // Create a hidden iframe to test if the app is available\n      const iframe = document.createElement('iframe');\n      iframe.style.display = 'none';\n      iframe.src = googleMapsAppUrl;\n      \n      // Set a timeout to fallback to web version\n      const timeout = setTimeout(() => {\n        window.open(googleMapsUrl, '_blank');\n      }, 1000);\n      \n      // If the app opens, clear the timeout\n      iframe.onload = () => {\n        clearTimeout(timeout);\n      };\n      \n      document.body.appendChild(iframe);\n      \n      // Remove the iframe after a short delay\n      setTimeout(() => {\n        document.body.removeChild(iframe);\n      }, 2000);\n    } else {\n      // On desktop, open in new tab\n      window.open(googleMapsUrl, '_blank');\n    }\n  };\n\n  // Handle POI directions click\n  const handlePOIDirectionsClick = (lat: string, lng: string, name: string) => {\n    // Open Google Maps directions\n    const url = `https://www.google.com/maps/dir/?api=1&destination=${lat},${lng}&travelmode=driving`;\n    window.open(url, '_blank');\n  };\n\n  // Add global function for POI directions popup buttons\n  useEffect(() => {\n    (window as any).openDirections = handlePOIDirectionsClick;\n    return () => {\n      delete (window as any).openDirections;\n    };\n  }, []);\n\n  return (\n    <>\n\n\n      <div className=\"relative w-full h-[calc(100vh-64px)] overflow-hidden\">\n        <div \n          ref={mapContainer} \n          className=\"absolute inset-0 bg-gray-100\"\n          style={{ touchAction: 'none', background: '#fcfcfc' }}\n        />\n        \n        {/* Rest of the existing map components */}\n        <MapSearch \n          map={map}\n          onLocationSelect={handleLocationSelect}\n        />\n\n        {/* Loading overlay */}\n        {isLoading && (\n          <div className=\"absolute inset-0 flex items-center justify-center bg-white/80 z-10\">\n            <div className=\"flex flex-col items-center\">\n              <Loader2 className=\"w-12 h-12 text-blue-500 animate-spin mb-4\" />\n              <p className=\"text-gray-600\">{t('loading')}</p>\n            </div>\n          </div>\n        )}\n        \n        {/* Error message */}\n        {error && (\n          <div className=\"absolute inset-0 flex items-center justify-center bg-white/90 z-10\">\n            <div className=\"bg-white p-6 rounded-lg shadow-lg max-w-md\">\n              <h3 className=\"text-xl font-semibold text-red-600 mb-2\">Error</h3>\n              <p className=\"text-gray-700 mb-4\">{error}</p>\n              <Button \n                onClick={() => window.location.reload()}\n                className=\"w-full\"\n              >\n                Retry\n              </Button>\n            </div>\n          </div>\n        )}\n        \n        {/* Map style and location buttons */}\n        <div className={cn(\n          \"absolute z-10 flex flex-col gap-2\",\n          isMobile ? \"top-32 right-4\" : \"top-4 right-16\"\n        )}>\n          <button\n            className={cn(\n              \"p-2 rounded-full shadow-md bg-white hover:bg-gray-100 transition-colors\",\n              \"disabled:opacity-50 disabled:cursor-not-allowed\"\n            )}\n            title=\"Find my location\"\n            onClick={handleGeolocate}\n            disabled={isLocating}\n          >\n            <Crosshair className={cn(\n              \"w-5 h-5 text-gray-700\",\n              isLocating && \"animate-spin\"\n            )} />\n          </button>\n          <button\n            className={cn(\n              \"p-2 rounded-full shadow-md bg-white hover:bg-gray-100 transition-colors\",\n              mapStyle === 'mapbox://styles/mapbox/streets-v12' && \"ring-2 ring-blue-500\"\n            )}\n            title=\"Streets view\"\n            onClick={() => changeMapStyle('mapbox://styles/mapbox/streets-v12')}\n          >\n            <Layers className=\"w-5 h-5 text-gray-700\" />\n          </button>\n          <button\n            className={cn(\n              \"p-2 rounded-full shadow-md bg-white hover:bg-gray-100 transition-colors\",\n              mapStyle === 'mapbox://styles/mapbox/outdoors-v12' && \"ring-2 ring-green-500\"\n            )}\n            title=\"Nature view\"\n            onClick={() => changeMapStyle('mapbox://styles/mapbox/outdoors-v12')}\n          >\n            <Mountain className=\"w-5 h-5 text-gray-700\" />\n          </button>\n          <button\n            className={cn(\n              \"p-2 rounded-full shadow-md bg-white hover:bg-gray-100 transition-colors\",\n              mapStyle === 'mapbox://styles/mapbox/satellite-streets-v12' && \"ring-2 ring-purple-500\"\n            )}\n            title=\"Satellite view\"\n            onClick={() => changeMapStyle('mapbox://styles/mapbox/satellite-streets-v12')}\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"text-gray-700\">\n              <circle cx=\"12\" cy=\"12\" r=\"10\" />\n              <circle cx=\"12\" cy=\"12\" r=\"4\" />\n              <line x1=\"4.93\" y1=\"4.93\" x2=\"9.17\" y2=\"9.17\" />\n              <line x1=\"14.83\" y1=\"14.83\" x2=\"19.07\" y2=\"19.07\" />\n              <line x1=\"14.83\" y1=\"9.17\" x2=\"19.07\" y2=\"4.93\" />\n              <line x1=\"4.93\" y1=\"19.07\" x2=\"9.17\" y2=\"14.83\" />\n            </svg>\n          </button>\n          <button\n            className={cn(\n              \"p-2 rounded-full shadow-md bg-white hover:bg-gray-100 transition-colors\",\n              showFavorites && \"ring-2 ring-red-500\"\n            )}\n            title={t('favorites.toggle')}\n            onClick={() => setShowFavorites(!showFavorites)}\n          >\n            <Heart className={cn(\n              \"w-5 h-5\",\n              showFavorites ? \"text-red-500 fill-red-500\" : \"text-gray-700\"\n            )} />\n          </button>\n          <button\n            className={cn(\n              \"p-2 rounded-full shadow-md bg-white hover:bg-gray-100 transition-colors\",\n              showPOIs && \"ring-2 ring-green-500\"\n            )}\n            title={t('pois.toggle')}\n            onClick={() => setShowPOIs(!showPOIs)}\n          >\n            <Map className={cn(\n              \"w-5 h-5\",\n              showPOIs ? \"text-green-500\" : \"text-gray-700\"\n            )} />\n          </button>\n        </div>\n        \n        {/* Mobile sidebar toggle button - only visible when sidebar is closed */}\n        {isMobile && !sidebarVisible && (\n          <div className=\"absolute top-1/2 -translate-y-1/2 left-0 z-50\">\n            <button\n              onClick={() => setSidebarVisible(true)}\n              className=\"bg-white rounded-r-lg shadow-lg border border-gray-200 p-3 flex items-center justify-center\"\n              aria-label=\"Open sidebar\"\n            >\n              <ChevronRight className=\"w-7 h-7 text-gray-700\" />\n            </button>\n          </div>\n        )}\n        \n        {/* Travel mode selector (show only when a zaproad route is selected) */}\n        {selectedTrip?.type === 'zaproad' && (\n          <div className={cn(\n            \"absolute bottom-4 z-10 bg-white/90 rounded-lg shadow-md p-2\",\n            isMobile ? \"right-4 left-4 flex justify-center\" : \"right-4\"\n          )}>\n            <div className=\"flex flex-col gap-2\">\n              <p className=\"text-xs font-medium text-gray-500 mb-1\">Route type:</p>\n              <div className=\"flex gap-1\">\n                <button\n                  className={cn(\n                    \"px-3 py-1 text-xs rounded-full transition-colors\",\n                    travelMode === 'driving' ? \"bg-green-600 text-white\" : \"bg-white text-gray-700\"\n                  )}\n                  onClick={() => {\n                    setTravelMode('driving');\n                    if (selectedTrip) displayCachedCheckpoints(selectedTrip);\n                  }}\n                >\n                  Driving\n                </button>\n                <button\n                  className={cn(\n                    \"px-3 py-1 text-xs rounded-full transition-colors\",\n                    travelMode === 'walking' ? \"bg-green-600 text-white\" : \"bg-white text-gray-700\"\n                  )}\n                  onClick={() => {\n                    setTravelMode('walking');\n                    if (selectedTrip) displayCachedCheckpoints(selectedTrip);\n                  }}\n                >\n                  Walking\n                </button>\n                <button\n                  className={cn(\n                    \"px-3 py-1 text-xs rounded-full transition-colors\",\n                    travelMode === 'cycling' ? \"bg-green-600 text-white\" : \"bg-white text-gray-700\"\n                  )}\n                  onClick={() => {\n                    setTravelMode('cycling');\n                    if (selectedTrip) displayCachedCheckpoints(selectedTrip);\n                  }}\n                >\n                  Cycling\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Floating sidebar with responsive handling */}\n      <div \n        className={cn(\n          \"absolute top-0 left-0 h-full bg-white/90 backdrop-blur-sm shadow-lg z-30 overflow-hidden transition-all duration-300 ease-in-out flex flex-col\",\n          isMobile \n            ? sidebarVisible \n              ? \"w-full md:w-80 translate-x-0\" \n              : \"w-0 -translate-x-full\"\n            : \"w-80 translate-x-0\"\n        )}\n        onTouchStart={handleTouchStart}\n        onTouchEnd={handleTouchEnd}\n      >\n        {/* Sidebar header with mobile close button */}\n        <div className=\"p-4 border-b\">\n          <div className=\"flex justify-between items-center\">\n            <h1 className=\"text-2xl font-bold\">{t('dashboard')}</h1>\n            {isMobile && sidebarVisible && (\n              <button\n                onClick={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  setSidebarVisible(false);\n                }}\n                className=\"p-3 rounded-full hover:bg-gray-100 active:bg-gray-200 touch-manipulation\"\n                aria-label=\"Close sidebar\"\n                style={{ minWidth: '44px', minHeight: '44px' }}\n              >\n                <X className=\"w-6 h-6 text-gray-500\" />\n              </button>\n            )}\n          </div>\n          \n          {/* Filter buttons */}\n          <div className={cn(\n            \"flex flex-wrap gap-2 mt-5\",\n            isMobile && \"justify-center\"\n          )}>\n            <button \n              onClick={() => setActiveFilter(null)}\n              className={cn(\n                \"px-3 py-1 text-xs rounded-full transition-colors\",\n                !activeFilter \n                  ? \"bg-gray-800 text-white\" \n                  : \"bg-gray-100 text-gray-700 hover:bg-gray-200\"\n              )}\n            >\n              All\n            </button>\n            <button \n              onClick={() => setActiveFilter('zapout')}\n              className={cn(\n                \"px-3 py-1 text-xs rounded-full transition-colors flex items-center\",\n                activeFilter === 'zapout'\n                  ? \"bg-emerald-600 text-white\" \n                  : \"bg-emerald-100 text-emerald-700 hover:bg-emerald-200\"\n              )}\n            >\n              <CableCar className=\"w-3 h-3 mr-1\" />\n              Zapout\n            </button>\n            <button \n              onClick={() => setActiveFilter('zaproad')}\n              className={cn(\n                \"px-3 py-1 text-xs rounded-full transition-colors flex items-center\",\n                activeFilter === 'zaproad'\n                  ? \"bg-amber-600 text-white\" \n                  : \"bg-amber-100 text-amber-700 hover:bg-amber-200\"\n              )}\n            >\n              <Car className=\"w-3 h-3 mr-1\" />\n              Zaproad\n            </button>\n            <button \n              onClick={() => setActiveFilter('zaptrip')}\n              className={cn(\n                \"px-3 py-1 text-xs rounded-full transition-colors flex items-center\",\n                activeFilter === 'zaptrip'\n                  ? \"bg-sky-600 text-white\" \n                  : \"bg-sky-100 text-sky-700 hover:bg-sky-200\"\n              )}\n            >\n              <PlaneTakeoff className=\"w-3 h-3 mr-1\" />\n              Zaptrip\n            </button>\n          </div>\n        </div>\n        \n        <div className={cn(\n          \"flex-1 overflow-y-auto p-2 sidebar-content\",\n          isMobile && \"pb-24\" // Add bottom padding on mobile to account for navbar\n        )}>\n          {/* Trip cards */}\n          <AnimatePresence>\n            {activeFilter ? (\n              // Show filtered trips (by type)\n              trips.filter(t => t.type === activeFilter).map((trip) => (\n                <motion.div\n                  key={`${trip.type}-${trip.id}`}\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  exit={{ opacity: 0, x: -100 }}\n                  transition={{ duration: 0.2 }}\n                  className={cn(\n                    \"mb-3 p-3 rounded-lg shadow-sm cursor-pointer transition-all\",\n                    selectedTrip?.id === trip.id && selectedTrip?.type === trip.type\n                      ? \"ring-2 bg-white\"\n                      : \"bg-white/70 hover:bg-white\",\n                    trip.type === 'zapout' && \"ring-emerald-500 hover:ring-1\",\n                    trip.type === 'zaproad' && \"ring-amber-500 hover:ring-1\",\n                    trip.type === 'zaptrip' && \"ring-sky-500 hover:ring-1\"\n                  )}\n                  onClick={() => handleTripClick(trip)}\n                >\n                  <div className=\"flex items-start gap-3\">\n                    <div \n                      className={cn(\n                        \"w-10 h-10 rounded-full flex items-center justify-center text-white\",\n                        trip.type === 'zapout' && \"bg-emerald-500\",\n                        trip.type === 'zaproad' && \"bg-amber-500\",\n                        trip.type === 'zaptrip' && \"bg-sky-500\"\n                      )}\n                    >\n                      {trip.type === 'zapout' && <CableCar className=\"w-5 h-5\" />}\n                      {trip.type === 'zaproad' && <Car className=\"w-5 h-5\" />}\n                      {trip.type === 'zaptrip' && <PlaneTakeoff className=\"w-5 h-5\" />}\n                    </div>\n                    <div className=\"flex-1 min-w-0\">\n                      <h3 className=\"font-medium text-gray-900 truncate\">{trip.title}</h3>\n                      <p className=\"text-sm text-gray-500 truncate\">\n                        {trip.type === 'zaproad' && trip.starting_city && trip.end_city \n                          ? `${trip.starting_city} → ${trip.end_city}`\n                          : trip.location || 'No location'\n                        }\n                      </p>\n                      <div className=\"mt-2 flex justify-between items-center\">\n                        <span className=\"text-xs text-gray-400\">\n                          {new Date(trip.created_at).toLocaleDateString()}\n                        </span>\n                        <div className=\"flex gap-1\">\n                          <Button \n                            variant=\"outline\" \n                            size=\"sm\"\n                            className=\"text-xs h-7 w-7 p-0\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleViewDetails(trip);\n                            }}\n                            title=\"View Details\"\n                          >\n                            <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"/>\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"/>\n                            </svg>\n                          </Button>\n                          <Button \n                            variant=\"outline\" \n                            size=\"sm\"\n                            className=\"text-xs h-7 w-7 p-0\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleTripClick(trip);\n                            }}\n                            title=\"Show on Map\"\n                          >\n                            <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7\"/>\n                            </svg>\n                          </Button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </motion.div>\n              ))\n            ) : (\n              // Show trips grouped by city when \"All\" is selected\n              <Accordion \n                type=\"multiple\" \n                className=\"w-full\"\n                value={expandedCities}\n                onValueChange={setExpandedCities}\n              >\n                {sortedCities.map((city) => (\n                  <AccordionItem key={city} value={city} className=\"border-none\">\n                    <AccordionTrigger \n                      className=\"px-3 py-3 hover:no-underline hover:bg-gray-50 rounded-lg transition-colors touch-manipulation min-h-[44px] w-full text-left\"\n                      style={{ \n                        minHeight: '44px',\n                        WebkitTapHighlightColor: 'transparent',\n                        touchAction: 'manipulation'\n                      }}\n                    >\n                      <div className=\"flex items-center gap-3 w-full\">\n                        <MapPin className=\"w-4 h-4 text-gray-500\" />\n                        <div className=\"flex-1 text-left\">\n                          <span className=\"font-semibold text-gray-700 text-sm\">{city}</span>\n                          <span className=\"text-xs text-gray-500 ml-2\">({groupedTripsByCity[city].length})</span>\n                        </div>\n                      </div>\n                    </AccordionTrigger>\n                    <AccordionContent className=\"pt-2\" style={{ touchAction: 'pan-y' }}>\n                      <div className=\"space-y-3\">\n                        <AnimatePresence>\n                          {groupedTripsByCity[city].map((trip) => (\n                            <motion.div\n                              key={`${trip.type}-${trip.id}`}\n                              initial={{ opacity: 0, y: 20 }}\n                              animate={{ opacity: 1, y: 0 }}\n                              exit={{ opacity: 0, x: -100 }}\n                              transition={{ duration: 0.2 }}\n                              className={cn(\n                                \"p-3 rounded-lg shadow-sm cursor-pointer transition-all\",\n                                selectedTrip?.id === trip.id && selectedTrip?.type === trip.type\n                                  ? \"ring-2 bg-white\"\n                                  : \"bg-white/70 hover:bg-white\",\n                                trip.type === 'zapout' && \"ring-emerald-500 hover:ring-1\",\n                                trip.type === 'zaproad' && \"ring-amber-500 hover:ring-1\",\n                                trip.type === 'zaptrip' && \"ring-sky-500 hover:ring-1\"\n                              )}\n                              onClick={() => handleTripClick(trip)}\n                            >\n                              <div className=\"flex items-start gap-3\">\n                                <div \n                                  className={cn(\n                                    \"w-10 h-10 rounded-full flex items-center justify-center text-white\",\n                                    trip.type === 'zapout' && \"bg-emerald-500\",\n                                    trip.type === 'zaproad' && \"bg-amber-500\",\n                                    trip.type === 'zaptrip' && \"bg-sky-500\"\n                                  )}\n                                >\n                                  {trip.type === 'zapout' && <CableCar className=\"w-5 h-5\" />}\n                                  {trip.type === 'zaproad' && <Car className=\"w-5 h-5\" />}\n                                  {trip.type === 'zaptrip' && <PlaneTakeoff className=\"w-5 h-5\" />}\n                                </div>\n                                <div className=\"flex-1 min-w-0\">\n                                  <h3 className=\"font-medium text-gray-900 truncate\">{trip.title}</h3>\n                                  <p className=\"text-sm text-gray-500 truncate\">\n                                    {trip.type === 'zaproad' && trip.starting_city && trip.end_city \n                                      ? `${trip.starting_city} → ${trip.end_city}`\n                                      : trip.location || 'No location'\n                                    }\n                                  </p>\n                                  <div className=\"mt-2 flex justify-between items-center\">\n                                    <span className=\"text-xs text-gray-400\">\n                                      {new Date(trip.created_at).toLocaleDateString()}\n                                    </span>\n                                    <div className=\"flex gap-1\">\n                                      <Button \n                                        variant=\"outline\" \n                                        size=\"sm\"\n                                        className=\"text-xs h-7 w-7 p-0\"\n                                        onClick={(e) => {\n                                          e.stopPropagation();\n                                          handleViewDetails(trip);\n                                        }}\n                                        title=\"View Details\"\n                                      >\n                                        <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"/>\n                                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"/>\n                                        </svg>\n                                      </Button>\n                                      <Button \n                                        variant=\"outline\" \n                                        size=\"sm\"\n                                        className=\"text-xs h-7 w-7 p-0\"\n                                        onClick={(e) => {\n                                          e.stopPropagation();\n                                          handleTripClick(trip);\n                                        }}\n                                        title=\"Show on Map\"\n                                      >\n                                        <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7\"/>\n                                        </svg>\n                                      </Button>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </motion.div>\n                          ))}\n                        </AnimatePresence>\n                      </div>\n                    </AccordionContent>\n                  </AccordionItem>\n                ))}\n              </Accordion>\n            )}\n          </AnimatePresence>\n          \n          {/* Favorites section */}\n          {favorites.length > 0 && (\n            <div className={cn(\n              \"mt-6 border-t pt-4\",\n              isMobile && \"mb-8\" // Add extra margin bottom on mobile\n            )}>\n              <div className=\"flex items-center gap-2 mb-3\">\n                <Heart className=\"w-4 h-4 text-red-500\" />\n                <h3 className=\"font-medium text-gray-900\">{t('favorites.title')}</h3>\n                <span className=\"text-xs bg-red-100 text-red-600 px-2 py-1 rounded-full\">\n                  {favorites.length}\n                </span>\n              </div>\n              \n              <Accordion type=\"multiple\" className=\"w-full\">\n                {Object.entries(groupedFavorites).map(([category, categoryFavorites]) => (\n                  <AccordionItem key={category} value={category} className=\"border-none\">\n                    <AccordionTrigger \n                      className=\"px-3 py-3 hover:no-underline hover:bg-gray-50 rounded-lg transition-colors touch-manipulation min-h-[44px] w-full text-left\"\n                      style={{ \n                        minHeight: '44px',\n                        WebkitTapHighlightColor: 'transparent',\n                        touchAction: 'manipulation'\n                      }}\n                    >\n                      <div className=\"flex items-center gap-3 w-full\">\n                        <div className={cn(\"w-8 h-8 rounded-full flex items-center justify-center text-white\", getCategoryColor(category))}>\n                          {getCategoryIcon(category)}\n                        </div>\n                        <div className=\"flex-1 text-left\">\n                          <span className=\"font-medium text-gray-900\">{getCategoryDisplayName(category)}</span>\n                          <span className=\"text-xs text-gray-500 ml-2\">({categoryFavorites.length})</span>\n                        </div>\n                      </div>\n                    </AccordionTrigger>\n                    <AccordionContent className=\"pt-2\" style={{ touchAction: 'pan-y' }}>\n                      <div className=\"space-y-2\">\n                        <AnimatePresence>\n                          {categoryFavorites.map((favorite) => (\n                            <motion.div\n                              key={favorite.id}\n                              initial={{ opacity: 0, y: 10 }}\n                              animate={{ opacity: 1, y: 0 }}\n                              exit={{ opacity: 0, x: -50 }}\n                              transition={{ duration: 0.2 }}\n                              className=\"p-3 rounded-lg shadow-sm bg-white/70 hover:bg-white transition-all border border-gray-100 cursor-pointer hover:shadow-md\"\n                              onClick={() => flyToFavorite(favorite)}\n                            >\n                              <div className=\"flex items-start gap-3\">\n                                <div className=\"w-8 h-8 rounded-full bg-red-500 flex items-center justify-center text-white\">\n                                  <Heart className=\"w-4 h-4\" />\n                                </div>\n                                <div className=\"flex-1 min-w-0\">\n                                  <h4 className=\"font-medium text-gray-900 truncate text-sm\">{favorite.place_name}</h4>\n                                  <p className=\"text-xs text-gray-500 truncate\">\n                                    {favorite.place_address}\n                                  </p>\n                                  {favorite.place_rating && (\n                                    <div className=\"flex items-center gap-1 mt-1\">\n                                      <span className=\"text-yellow-500 text-xs\">★</span>\n                                      <span className=\"text-xs text-gray-600\">{favorite.place_rating.toFixed(1)}</span>\n                                    </div>\n                                  )}\n                                  <div className=\"mt-2 flex gap-1\">\n                                    <Button \n                                      variant=\"outline\" \n                                      size=\"sm\"\n                                      className=\"text-xs h-6 w-6 p-0\"\n                                      onClick={(e) => {\n                                        e.stopPropagation();\n                                        window.open(createExternalPlaceUrl(favorite.place_id, favorite.place_name, 'en'), '_blank');\n                                      }}\n                                      title={t('favorites.viewDetails')}\n                                    >\n                                      <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"/>\n                                      </svg>\n                                    </Button>\n                                    <Button \n                                      variant=\"outline\" \n                                      size=\"sm\"\n                                      className=\"text-xs h-6 w-6 p-0 text-green-600 border-green-200 hover:bg-green-50\"\n                                      onClick={(e) => {\n                                        e.stopPropagation();\n                                        getFavoriteDirections(favorite);\n                                      }}\n                                      title={t('pois.directions')}\n                                    >\n                                      <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7\"/>\n                                      </svg>\n                                    </Button>\n                                    <Button \n                                      variant=\"outline\" \n                                      size=\"sm\"\n                                      className=\"text-xs h-6 w-6 p-0 text-red-600 border-red-200 hover:bg-red-50\"\n                                      onClick={(e) => {\n                                        e.stopPropagation();\n                                        removeFavorite(favorite.id);\n                                      }}\n                                      title={t('favorites.remove')}\n                                    >\n                                      <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"/>\n                                      </svg>\n                                    </Button>\n                                  </div>\n                                </div>\n                              </div>\n                            </motion.div>\n                          ))}\n                        </AnimatePresence>\n                      </div>\n                    </AccordionContent>\n                  </AccordionItem>\n                ))}\n              </Accordion>\n            </div>\n          )}\n          \n          {/* Empty state */}\n          {trips.length === 0 && !isLoading && (\n            <div className={cn(\n              \"flex flex-col items-center justify-center p-6 h-60\",\n              isMobile && \"mb-8\" // Add extra margin bottom on mobile\n            )}>\n              <div className=\"bg-gray-100 p-4 rounded-full mb-4\">\n                <CableCar className=\"w-8 h-8 text-gray-400\" />\n              </div>\n              <h3 className=\"text-lg font-medium text-gray-700 mb-1\">No trips found</h3>\n              <p className=\"text-sm text-gray-500 text-center\">\n                Start by creating a new adventure\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* POI Review Dialog */}\n      <POIReviewDialog\n        poi={selectedPOI}\n        isOpen={isReviewDialogOpen}\n        onClose={() => {\n          setIsReviewDialogOpen(false);\n          setSelectedPOI(null);\n        }}\n        onSubmit={async (poiId, rating, notes) => {\n          await addPOIReview(poiId, rating, notes);\n        }}\n      />\n    </>\n  );\n};\n\nexport default MapDashboard;\n"],"names":["isMobileDevice","window","innerWidth","test","navigator","userAgent","TRIP_TYPE_COLORS","zapout","zaproad","zaptrip","default","createExternalPlaceUrl","placeId","placeName","language","createPlaceSlug","MapDashboard","t","useTranslation","i18n","navigate","useNavigate","location","useLocation","useUserRole","mapContainer","useRef","map","mapMarkers","checkpointMarkers","favoriteMarkers","poiMarkers","selectedTrip","setSelectedTrip","useState","mapData","loading","isLoading","error","removeFavoriteFromCache","useMapData","fetchZapoutCheckpoints","fetchZaproadCheckpoints","fetchZaptripCheckpoints","useCheckpointCache","getOrCreateMap","updateMapStyle","clearCache","clearMapCache","useMapCache","setMap","cleanup","cleanupMarkers","useMarkerCache","selectedPOI","setSelectedPOI","activeFilter","setActiveFilter","mapStyle","setMapStyle","travelMode","setTravelMode","isMobile","setIsMobile","sidebarVisible","setSidebarVisible","touchStartX","setTouchStartX","isLocating","setIsLocating","locationMarker","pulsingDot","currentPopup","showTerrain","setShowTerrain","showFavorites","setShowFavorites","showPOIs","setShowPOIs","isReviewDialogOpen","setIsReviewDialogOpen","lang","useParams","expandedCities","setExpandedCities","pois","addPOIReview","usePOIs","trips","favorites","useEffect","checkMobile","isMobileCheck","addEventListener","removeEventListener","state","selectedTripId","tripType","find","trip","id","type","handleTripClick","current","mobile","cachedMap","container","style","center","zoom","pitch","bearing","handleOrientationChange","setTimeout","resize","coordinates","flyTo","duration","changeMapStyle","forEach","marker","remove","filteredTrips","filter","bounds","mapboxgl","LngLatBounds","hasValidCoordinates","lng","lat","isNaN","markerEl","document","createElement","className","width","height","borderRadius","background","cursor","display","alignItems","justifyContent","color","fontWeight","fontSize","border","boxShadow","iconMarkup","ReactDOMServer","renderToStaticMarkup","jsx","CableCar","Car","PlaneTakeoff","innerHTML","onmouseover","zIndex","onmouseout","Marker","setLngLat","addTo","getElement","push","extend","err","fitBounds","padding","maxZoom","addFavoritesToMap","clearCheckpointMarkers","clearCheckpointsAndRoute","el","markerLngLat","getLngLat","displayCachedCheckpoints","handleViewDetails","localStorage","setItem","async","cachedData","checkpoints","length","routeGeometry","removeExistingRouteLayers","addSource","data","properties","geometry","addLayer","source","layout","paint","checkpoint","index","textContent","toString","transition","popupContent","name","address","popup","Popup","offset","closeButton","setHTML","setPopup","on","layer","getLayer","removeLayer","getSource","removeSource","routeSource","setData","e","favorite","place_lat","place_lng","place_name","place_address","place_rating","toFixed","place_id","removeFavorite","favoriteId","user","supabase","auth","getUser","from","delete","eq","cacheEventManager","emit","CACHE_EVENTS","FAVORITE_REMOVED","invalidateFavoriteCaches","toast","title","description","variant","getFavoriteDirections","fav","head","appendChild","removeChild","addPOIsToMap","poi","getCategoryIcon","getCategoryColor","categories","includes","categoryIcon","categoryColor","setAttribute","category_image_url","img","src","objectFit","backgroundColor","alt","category_name","onerror","onload","average_rating","ratingContainer","position","bottom","left","transform","whiteSpace","ratingText","rating_type","firstChild","tagName","url","popupElement","visitBtn","querySelector","stopPropagation","getAttribute","open","directionsBtn","handlePOIDirectionsClick","handlePOIReviewClick","poiId","p","openPOIReview","groupedFavorites","reduce","acc","category","placeTypes","place_types","Array","isArray","groupedTripsByCity","city","sortedCities","Object","keys","sort","a","b","localeCompare","UtensilsCrossed","Hotel","Coffee","Wine","Landmark","TreePine","ShoppingBag","Palette","MapPin","getCategoryDisplayName","defaultValue","destinationAddress","encodedAddress","encodeURIComponent","googleMapsUrl","match","googleMapsAppUrl","iframe","timeout","clearTimeout","body","openDirections","jsxs","Fragment","children","ref","touchAction","MapSearch","onLocationSelect","placeType","place_type","categoryEmoji","getCategoryEmoji","iconContainer","overflow","createPinMarker","element","anchor","Loader2","Button","onClick","reload","cn","geolocation","getCurrentPosition","latitude","longitude","coords","pin","createPulsingDot","enableHighAccuracy","maximumAge","disabled","Crosshair","Layers","Mountain","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","Heart","Map","ChevronRight","onTouchStart","target","closest","touches","clientX","onTouchEnd","changedTouches","preventDefault","minWidth","minHeight","X","AnimatePresence","motion","div","initial","opacity","y","animate","exit","x","starting_city","end_city","Date","created_at","toLocaleDateString","size","d","Accordion","value","onValueChange","AccordionItem","AccordionTrigger","WebkitTapHighlightColor","AccordionContent","entries","categoryFavorites","essential","favoriteMarker","lngLat","flyToFavorite","POIReviewDialog","isOpen","onClose","onSubmit","rating","notes"],"mappings":"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"}