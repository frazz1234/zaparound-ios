{"version":3,"file":"page-faq.BvLv1ipb.js","sources":["../../../../src/pages/FAQ.tsx"],"sourcesContent":["import { useTranslation } from 'react-i18next';\nimport { motion } from 'framer-motion';\nimport { useState, useMemo, useEffect } from 'react';\nimport { Search, ChevronRight, MessageCircle, Lightbulb, Settings, Shield } from 'lucide-react';\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from '@/components/ui/accordion';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { SEO } from '@/components/SEO';\n\nconst LOCALE_MAP = { en: 'en_US', fr: 'fr_FR', es: 'es_ES' };\n\nexport default function FAQ() {\n  const { t, i18n } = useTranslation('faq');\n  const language = i18n.language;\n  const locale = LOCALE_MAP[language] || 'en_US';\n  \n\n  \n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [expandedItems, setExpandedItems] = useState<string[]>([]);\n\n  const questions = t('questions', { returnObjects: true });\n  const categories = t('categories', { returnObjects: true });\n\n  // Scroll to top when component mounts\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const structuredData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": Object.entries(questions).map(([key, question]: [string, any]) => ({\n      \"@type\": \"Question\",\n      \"name\": question.question,\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": question.answer\n      }\n    }))\n  };\n\n  const getCategoryIcon = (category: string) => {\n    switch (category) {\n      case 'general':\n        return <MessageCircle className=\"h-5 w-5\" />;\n      case 'features':\n        return <Lightbulb className=\"h-5 w-5\" />;\n      case 'technical':\n        return <Settings className=\"h-5 w-5\" />;\n      default:\n        return <Shield className=\"h-5 w-5\" />;\n    }\n  };\n\n  const filteredQuestions = useMemo(() => {\n    return Object.entries(questions).filter(([key, question]: [string, any]) => {\n      const matchesSearch = question.question.toLowerCase().includes(searchQuery.toLowerCase()) ||\n                          question.answer.toLowerCase().includes(searchQuery.toLowerCase());\n      const matchesCategory = selectedCategory === 'all' || question.category === selectedCategory;\n      return matchesSearch && matchesCategory;\n    });\n  }, [questions, searchQuery, selectedCategory]);\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 0.5\n      }\n    }\n  };\n\n  return (\n    <>\n      <SEO\n        title={t('title')}\n        description={t('subtitle')}\n        keywords=\"ZapAround FAQ, frequently asked questions, travel help, travel support, travel questions, travel assistance\"\n        url={`/${language}/faq`}\n        locale={locale}\n        structuredData={structuredData}\n      />\n\n      <motion.div\n        initial=\"hidden\"\n        animate=\"visible\"\n        variants={containerVariants}\n        className=\"min-h-screen bg-gradient-to-b from-[#fcfcfc] to-white\"\n      >\n        <div className=\"container mx-auto px-4 py-12 max-w-5xl\">\n          {/* Hero Section */}\n          <motion.div variants={itemVariants} className=\"text-center mb-12\">\n            <h1 className=\"text-4xl md:text-5xl font-bold text-[#1d1d1e] mb-4\">{t('title')}</h1>\n            <p className=\"text-lg text-[#62626a] max-w-2xl mx-auto\">\n             {t('subtitle')}\n            </p>\n          </motion.div>\n\n          {/* Search and Categories */}\n          <motion.div variants={itemVariants} className=\"mb-12\">\n            <Card className=\"bg-white shadow-lg border-none overflow-hidden\">\n              <CardContent className=\"p-6 space-y-6\">\n                {/* Search Bar */}\n                <div className=\"relative\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-[#62626a] h-5 w-5\" />\n                  <Input\n                    type=\"text\"\n                    placeholder={t('searchPlaceholder')}\n                    value={searchQuery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                    className=\"pl-10 w-full bg-gray-50 border-gray-200 focus:ring-2 focus:ring-[#61936f] focus:border-transparent\"\n                  />\n                </div>\n\n                {/* Category Filters */}\n                <div className=\"flex flex-wrap gap-2 justify-center\">\n                  {Object.entries(categories).map(([key, label]) => (\n                    <Button\n                      key={key}\n                      variant={selectedCategory === key ? \"default\" : \"outline\"}\n                      onClick={() => setSelectedCategory(key)}\n                      className={`rounded-full px-6 ${\n                        selectedCategory === key \n                          ? 'bg-[#1d1d1e] text-white hover:bg-[#62626a]' \n                          : 'hover:bg-gray-100'\n                      }`}\n                    >\n                      <span className=\"flex items-center gap-2\">\n                        {getCategoryIcon(key)}\n                        {label}\n                      </span>\n                    </Button>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </motion.div>\n\n          {/* FAQ Accordion */}\n          <motion.div variants={itemVariants} className=\"space-y-4\">\n            {filteredQuestions.map(([key, question]: [string, any], index) => (\n              <motion.div\n                key={key}\n                variants={itemVariants}\n                custom={index}\n                className=\"bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow\"\n              >\n                <Accordion\n                  type=\"single\"\n                  collapsible\n                  value={expandedItems.includes(key) ? key : undefined}\n                  onValueChange={(value) => {\n                    if (value) {\n                      setExpandedItems([...expandedItems, key]);\n                    } else {\n                      setExpandedItems(expandedItems.filter(item => item !== key));\n                    }\n                  }}\n                >\n                  <AccordionItem value={key} className=\"border-none\">\n                    <AccordionTrigger className=\"px-6 py-4 text-left hover:no-underline\">\n                      <div className=\"flex items-start gap-4\">\n                        <div className={`p-2 rounded-full ${\n                          question.category === 'general' ? 'bg-blue-100 text-blue-700' :\n                          question.category === 'features' ? 'bg-green-100 text-green-700' :\n                          'bg-purple-100 text-purple-700'\n                        }`}>\n                          {getCategoryIcon(question.category)}\n                        </div>\n                        <div className=\"flex-1\">\n                          <h3 className=\"text-lg font-medium text-[#1d1d1e] pr-8\">{question.question}</h3>\n                          <p className=\"text-sm text-[#62626a] mt-1\">\n                            {t(`categories.${question.category}`)}\n                          </p>\n                        </div>\n                      </div>\n                    </AccordionTrigger>\n                    <AccordionContent className=\"px-6 pb-4 pt-0\">\n                      <div className=\"ml-16\">\n                        <p\n                          className=\"text-[#62626a] leading-relaxed\"\n                          dangerouslySetInnerHTML={{ __html: question.answer }}\n                        />\n                      </div>\n                    </AccordionContent>\n                  </AccordionItem>\n                </Accordion>\n              </motion.div>\n            ))}\n          </motion.div>\n\n          {/* No Results Message */}\n          {filteredQuestions.length === 0 && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              className=\"text-center py-12\"\n            >\n              <div className=\"bg-gray-50 rounded-lg p-8 max-w-md mx-auto\">\n                <Search className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                <h3 className=\"text-xl font-semibold text-[#1d1d1e] mb-2\">No questions found</h3>\n                <p className=\"text-[#62626a]\">\n                  Try adjusting your search terms or browse all categories to find what you're looking for.\n                </p>\n                <Button\n                  variant=\"outline\"\n                  onClick={() => {\n                    setSearchQuery('');\n                    setSelectedCategory('all');\n                  }}\n                  className=\"mt-4\"\n                >\n                  Clear filters\n                </Button>\n              </div>\n            </motion.div>\n          )}\n        </div>\n      </motion.div>\n    </>\n  );\n} "],"names":["LOCALE_MAP","en","fr","es","FAQ","t","i18n","useTranslation","language","locale","searchQuery","setSearchQuery","useState","selectedCategory","setSelectedCategory","expandedItems","setExpandedItems","questions","returnObjects","categories","useEffect","window","scrollTo","structuredData","mainEntity","Object","entries","map","key","question","name","acceptedAnswer","text","answer","getCategoryIcon","category","jsx","MessageCircle","className","Lightbulb","Settings","Shield","filteredQuestions","useMemo","filter","matchesSearch","toLowerCase","includes","matchesCategory","itemVariants","hidden","opacity","y","visible","transition","duration","jsxs","Fragment","children","SEO","title","description","keywords","url","motion","div","initial","animate","variants","staggerChildren","Card","CardContent","Search","Input","type","placeholder","value","onChange","e","target","label","Button","variant","onClick","index","custom","Accordion","collapsible","onValueChange","item","AccordionItem","AccordionTrigger","AccordionContent","dangerouslySetInnerHTML","__html","length"],"mappings":"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"}