{"version":3,"file":"page-booking.Cdc16yQW.js","sources":["../../../../src/pages/booking/FlightBooking.tsx","../../../../src/pages/booking/FlightBookingDetails.tsx","../../../../src/pages/booking/HotelBooking.tsx"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { FlightFilters, FlightFilters as FlightFiltersType } from '@/components/booking/FlightFilters';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Calendar } from '@/components/ui/calendar';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"@/components/ui/collapsible\";\nimport { Plane, Clock, Luggage, Wifi, Coffee, ArrowRight, ArrowDown, User, Briefcase, CheckCircle, XCircle, Info, ShieldCheck, Ticket, Calendar as CalendarIcon, Search, ChevronDown, ChevronUp } from 'lucide-react';\nimport { format } from 'date-fns';\nimport { cn } from '@/lib/utils';\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { supabase } from '@/integrations/supabase/client';\nimport { flightDataPersistence, FlightSearchData } from '@/utils/flightDataPersistence';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\nimport FlightBookingLoadingDialog from '@/components/FlightBookingLoadingDialog';\nimport { Menubar } from '@/components/ui/menubar';\nimport { ToggleGroup, ToggleGroupItem } from '@/components/ui/toggle-group';\nimport AirportSelector from '@/components/booking/AirportSelector';\n\ninterface FlightOffer {\n  id: string;\n  total_amount: string;\n  total_currency: string;\n  base_amount?: string;\n  base_currency?: string;\n  conditions: {\n    change_before_departure?: {\n      allowed: boolean;\n      penalty_amount: string | null;\n      penalty_currency: string | null;\n    } | null;\n    refund_before_departure?: {\n      allowed: boolean;\n      penalty_amount: string | null;\n      penalty_currency: string | null;\n    } | null;\n  };\n  slices: Array<{\n    segments: Array<{\n      origin: {\n        iata_code: string;\n        name: string;\n      };\n      destination: {\n        iata_code: string;\n        name: string;\n      };\n      departing_at: string;\n      arriving_at: string;\n      marketing_carrier: {\n        name: string;\n        iata_code: string;\n      };\n      operating_carrier: {\n        name: string;\n        iata_code: string;\n        logo_symbol_url?: string;\n      };\n      origin_terminal?: string;\n      destination_terminal?: string;\n      aircraft?: {\n        iata_code: string;\n        name: string;\n        id: string;\n      };\n    }>;\n    conditions?: {\n      change_before_departure?: {\n        allowed: boolean;\n        penalty_amount: string | null;\n        penalty_currency: string | null;\n      } | null;\n    };\n  }>;\n  passengers: Array<{\n    id: string;\n    title: string;\n    given_name: string;\n    family_name: string;\n    email: string;\n    phone_number: string;\n    gender: string;\n    born_on: string;\n  }>;\n  // Add these for converted price display\n  converted_amount?: string;\n  converted_currency?: string;\n}\n\ninterface BookingFormData {\n  id: string;\n  title: string;\n  given_name: string;\n  family_name: string;\n  email: string;\n  phone_number: string;\n  gender: string;\n  born_on: string;\n}\n\nexport function FlightBooking() {\n  const { t, i18n } = useTranslation();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const { toast } = useToast();\n  \n  // Search state\n  const [departureDate, setDepartureDate] = useState<Date>();\n  const [returnDate, setReturnDate] = useState<Date>();\n  const [tripType, setTripType] = useState('roundtrip');\n  const [passengerCounts, setPassengerCounts] = useState({\n    adults: 1,\n    children: 0,\n    infantsInSeat: 0,\n    infantsOnLap: 0\n  });\n  const [cabinClass, setCabinClass] = useState('economy');\n  const [origin, setOrigin] = useState('');\n  const [destination, setDestination] = useState('');\n  \n  // Popover state management\n  const [isDepartureDateOpen, setIsDepartureDateOpen] = useState(false);\n  const [isReturnDateOpen, setIsReturnDateOpen] = useState(false);\n  \n  // Results state\n  const [isLoading, setIsLoading] = useState(false);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [searchResults, setSearchResults] = useState(null);\n  const [lastSearchParams, setLastSearchParams] = useState<string>('');\n  const [searchTimestamp, setSearchTimestamp] = useState<number>(0);\n  \n  // UI state\n  const [selectedOffer, setSelectedOffer] = useState<FlightOffer | null>(null);\n  const [showBookingForm, setShowBookingForm] = useState(false);\n  const [bookingFormData, setBookingFormData] = useState<BookingFormData>({\n    id: `pas_${Math.random().toString(36).substr(2, 9)}`,\n    title: '',\n    given_name: '',\n    family_name: '',\n    email: '',\n    phone_number: '',\n    gender: '',\n    born_on: ''\n  });\n  const [isBooking, setIsBooking] = useState(false);\n  const [bookingConfirmation, setBookingConfirmation] = useState<any>(null);\n  const [currency, setCurrency] = useState('USD');\n  const [exchangeRates, setExchangeRates] = useState<{ [key: string]: number }>({});\n  const [showCurrencyNotice, setShowCurrencyNotice] = useState(false);\n  const [convertedOffers, setConvertedOffers] = useState<any>(null);\n  const lastRatesFetch = useRef<number>(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const OFFERS_PER_PAGE = 10;\n  const offersRef = useRef<HTMLDivElement | null>(null);\n  // Track the last processed search parameters to prevent duplicate auto-searches\n  const lastAutoSearchParams = useRef<string>('');\n  const [currentSort, setCurrentSort] = useState<'best' | 'direct' | 'cheapest' | 'fastest'>('best');\n  const [expandedCards, setExpandedCards] = useState<Set<string>>(new Set());\n  const [activeFilters, setActiveFilters] = useState<FlightFiltersType>({\n    airlines: [],\n    stops: 'any',\n    bags: 'any',\n    priceRange: [0, 5000],\n    connectingAirports: [],\n    duration: [0, 24],\n  });\n  \n  // Timing state\n  const [timeRemaining, setTimeRemaining] = useState<number>(0);\n  const [isExpired, setIsExpired] = useState<boolean>(false);\n  const [isStale, setIsStale] = useState<boolean>(false);\n  const [needsRefresh, setNeedsRefresh] = useState<boolean>(false);\n  const [refreshReason, setRefreshReason] = useState<'expired' | 'stale' | null>(null);\n  const [searchTiming, setSearchTiming] = useState<{\n    search_started_at: string;\n    supplier_timeout: number;\n    expires_at: string | null;\n    created_at: string | null;\n  } | null>(null);\n\n\n  // Handle departure date selection\n  const handleDepartureDateSelect = (date: Date | undefined) => {\n    setDepartureDate(date);\n    if (date) {\n      // Close departure date popover\n      setIsDepartureDateOpen(false);\n      \n      // If it's a round trip, automatically open return date popover\n      if (tripType === 'roundtrip') {\n        setIsReturnDateOpen(true);\n      }\n    }\n  };\n\n  // Handle return date selection\n  const handleReturnDateSelect = (date: Date | undefined) => {\n    setReturnDate(date);\n    if (date) {\n      // Close return date popover\n      setIsReturnDateOpen(false);\n    }\n  };\n\n  // State management functions\n  const getCurrentSearchParams = () => ({\n    origin,\n    destination,\n    departureDate: departureDate?.toISOString().split('T')[0] || '',\n    returnDate: returnDate?.toISOString().split('T')[0],\n    passengers: passengerCounts.adults + passengerCounts.children + passengerCounts.infantsInSeat + passengerCounts.infantsOnLap,\n    cabinClass,\n    currency,\n    maxConnections: 1\n  });\n\n  const saveSearchState = async (results: any) => {\n    const searchParams = getCurrentSearchParams();\n    const searchId = await flightDataPersistence.saveFlightData(\n      searchParams,\n      results,\n      results.timing || null,\n      selectedOffer?.id,\n      { currentStep: 'search' }\n    );\n    setSearchTimestamp(Date.now());\n    \n    // Update URL with search ID for better caching\n    const searchUrl = flightDataPersistence.createSearchUrl(searchParams, i18n.language);\n    window.history.replaceState({}, '', searchUrl);\n    \n    console.log('Search saved with ID:', searchId);\n    console.log('Search URL created:', searchUrl);\n  };\n\n  const loadSearchState = async (): Promise<FlightSearchData | null> => {\n    const searchParams = getCurrentSearchParams();\n    return await flightDataPersistence.loadFlightData(searchParams);\n  };\n\n  const restoreSearchState = async () => {\n    // First try to get search ID from URL\n    const searchIdFromUrl = flightDataPersistence.getSearchIdFromUrl(window.location.href);\n    console.log('restoreSearchState - Search ID from URL:', searchIdFromUrl);\n    \n    if (searchIdFromUrl) {\n      // Try to load data by search ID\n      const searchData = await flightDataPersistence.loadFlightDataBySearchId(searchIdFromUrl);\n      console.log('restoreSearchState - Loaded data by search ID:', searchData);\n      if (searchData) {\n        await restoreSearchData(searchData);\n        return;\n      }\n    }\n    \n    // Fallback to loading by search parameters\n    const searchData = await loadSearchState();\n    console.log('restoreSearchState - Loaded data by search params:', searchData);\n    if (searchData) {\n      await restoreSearchData(searchData);\n    }\n  };\n\n  const restoreSearchData = async (searchData: FlightSearchData) => {\n    // Check if data needs refresh\n    const refreshCheck = await flightDataPersistence.needsRefresh(searchData.searchParams);\n    \n    if (refreshCheck.needsRefresh) {\n      setNeedsRefresh(true);\n      setRefreshReason(refreshCheck.reason);\n      \n      // Show warning about expired/stale data\n      const message = refreshCheck.reason === 'expired' \n        ? 'Flight offers have expired. Refreshing search...'\n        : 'Flight data is stale. Refreshing search...';\n      \n      toast({\n        title: 'Data Refresh Required',\n        description: message,\n        duration: 3000,\n      });\n      \n      // Auto-refresh in background\n      setIsRefreshing(true);\n      handleSearch(true);\n    } else {\n      // Data is fresh, restore it\n      setSearchResults(searchData.searchResults);\n      setSearchTimestamp(searchData.searchTimestamp);\n      setSearchTiming(searchData.timing);\n      setSelectedOffer(searchData.selectedOfferId ? \n        searchData.searchResults.data.offers.find((o: any) => o.id === searchData.selectedOfferId) : null\n      );\n      \n      // Restore form state from cached data\n      const params = searchData.searchParams;\n      setOrigin(params.origin);\n      setDestination(params.destination);\n      if (params.departureDate) {\n        setDepartureDate(new Date(params.departureDate));\n      }\n      if (params.returnDate) {\n        setReturnDate(new Date(params.returnDate));\n      }\n      setCabinClass(params.cabinClass);\n      setCurrency(params.currency);\n      \n      // Restore passenger counts (simplified - assumes all passengers are adults)\n      setPassengerCounts({\n        adults: params.passengers,\n        children: 0,\n        infantsInSeat: 0,\n        infantsOnLap: 0\n      });\n      \n    }\n  };\n\n  const toggleCard = (offerId: string) => {\n    const newExpanded = new Set(expandedCards);\n    if (newExpanded.has(offerId)) {\n      newExpanded.delete(offerId);\n    } else {\n      newExpanded.add(offerId);\n    }\n    setExpandedCards(newExpanded);\n  };\n\n  const handleFiltersChange = (filters: FlightFiltersType) => {\n    setActiveFilters(filters);\n  };\n\n  // Helper function to get duration in hours\n  const getDurationInHours = (segments: any[]) => {\n    if (!segments.length) return 0;\n    \n    const firstSegment = segments[0];\n    const lastSegment = segments[segments.length - 1];\n    \n    const departure = new Date(firstSegment.departing_at);\n    const arrival = new Date(lastSegment.arriving_at);\n    \n    return (arrival.getTime() - departure.getTime()) / (1000 * 60 * 60);\n  };\n\n  // Filter flight offers based on active filters\n  const getFilteredOffers = () => {\n    const offersToFilter = convertedOffers || (searchResults?.data?.offers || []);\n    if (!offersToFilter.length) return [];\n\n    return offersToFilter.filter(offer => {\n      // Filter by airlines\n      if (activeFilters.airlines.length > 0) {\n        const offerAirline = offer.slices[0]?.segments[0]?.marketing_carrier?.iata_code;\n        if (!offerAirline || !activeFilters.airlines.includes(offerAirline)) {\n          return false;\n        }\n      }\n\n      // Filter by stops\n      if (activeFilters.stops !== 'any') {\n        const totalStops = offer.slices.reduce((total, slice) => {\n          return total + Math.max(0, slice.segments.length - 1);\n        }, 0);\n\n        switch (activeFilters.stops) {\n          case 'nonstop':\n            if (totalStops > 0) return false;\n            break;\n          case '1_or_fewer':\n            if (totalStops > 1) return false;\n            break;\n          case '2_or_fewer':\n            if (totalStops > 2) return false;\n            break;\n        }\n      }\n\n      // Filter by price range\n      const offerPrice = offer.converted_amount \n        ? parseFloat(offer.converted_amount) \n        : parseFloat(offer.total_amount);\n      \n      if (offerPrice < activeFilters.priceRange[0] || offerPrice > activeFilters.priceRange[1]) {\n        return false;\n      }\n\n      // Filter by duration\n      const totalDuration = offer.slices.reduce((total, slice) => {\n        const sliceDuration = getDurationInHours(slice.segments);\n        return total + sliceDuration;\n      }, 0);\n\n      if (totalDuration < activeFilters.duration[0] || totalDuration > activeFilters.duration[1]) {\n        return false;\n      }\n\n      // Filter by connecting airports\n      if (activeFilters.connectingAirports.length > 0) {\n        const offerConnectingAirports = offer.slices.flatMap(slice => \n          slice.segments.slice(1, -1).map(segment => segment.origin?.iata_code)\n        ).filter(Boolean);\n\n        const hasMatchingAirport = offerConnectingAirports.some(airport => \n          activeFilters.connectingAirports.includes(airport!)\n        );\n\n        if (!hasMatchingAirport) return false;\n      }\n\n      return true;\n    });\n  };\n\n  // Calculate total passengers\n  const totalPassengers = passengerCounts.adults + passengerCounts.children + passengerCounts.infantsInSeat + passengerCounts.infantsOnLap;\n\n  // Update passenger count with validation\n  const updatePassengerCount = (type: keyof typeof passengerCounts, increment: number) => {\n    const newCounts = { ...passengerCounts };\n    const newValue = newCounts[type] + increment;\n    \n    // Validation rules\n    if (type === 'adults') {\n      if (newValue >= 1 && newValue <= 9) {\n        newCounts[type] = newValue;\n      }\n    } else if (type === 'children') {\n      if (newValue >= 0 && newValue <= 8 && totalPassengers + increment <= 9) {\n        newCounts[type] = newValue;\n      }\n    } else if (type === 'infantsInSeat') {\n      if (newValue >= 0 && newValue <= 4 && totalPassengers + increment <= 9) {\n        newCounts[type] = newValue;\n      }\n    } else if (type === 'infantsOnLap') {\n      if (newValue >= 0 && newValue <= 4 && totalPassengers + increment <= 9) {\n        newCounts[type] = newValue;\n      }\n    }\n    \n    setPassengerCounts(newCounts);\n  };\n\n  // Fetch exchange rates if needed\n  const fetchExchangeRates = async (base: string) => {\n    if (exchangeRates[base] && Date.now() - lastRatesFetch.current < 1000 * 60 * 5) return exchangeRates[base]; // 5 min cache\n    try {\n      const response = await fetch(`https://open.er-api.com/v6/latest/${base}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch exchange rates');\n      }\n      const data = await response.json();\n      if (data.result === 'success') {\n        setExchangeRates((prev) => ({ ...prev, [base]: data.rates }));\n        lastRatesFetch.current = Date.now();\n        return data.rates;\n      } else {\n        throw new Error('Invalid response from exchange rate API');\n      }\n    } catch (e) {\n      console.error('Error fetching exchange rates:', e);\n      // Keep existing rates if available\n      return exchangeRates[base];\n    }\n  };\n\n  // Format currency amount with proper locale\n  const formatAmount = (amount: number, currency: string) => {\n    const formatter = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: currency,\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n    return formatter.format(amount);\n  };\n\n  // Calculate time remaining until offer expires\n  const calculateTimeRemaining = (expiresAt: string | null, searchStartedAt: string | null) => {\n    if (!expiresAt) return 0;\n    \n    const now = new Date().getTime();\n    const expiryTime = new Date(expiresAt).getTime();\n    const remaining = Math.max(0, expiryTime - now);\n    \n    return remaining;\n  };\n\n  // Format time remaining as MM:SS\n  const formatTimeRemaining = (milliseconds: number) => {\n    if (milliseconds <= 0) return '00:00';\n    \n    const totalSeconds = Math.floor(milliseconds / 1000);\n    const minutes = Math.floor(totalSeconds / 60);\n    const seconds = totalSeconds % 60;\n    \n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  // When searchResults change, check for currency mismatch and convert if needed\n  useEffect(() => {\n    if (!searchResults?.data?.offers || !searchResults.data.offers.length) {\n      setShowCurrencyNotice(false);\n      setConvertedOffers(null);\n      return;\n    }\n    \n    // Set timing information from search results\n    if (searchResults.timing) {\n      setSearchTiming(searchResults.timing);\n    }\n    \n    // Reset stale state for fresh search results\n    if (searchResults?.data?.offers && searchResults.data.offers.length > 0) {\n      setIsStale(false);\n      setNeedsRefresh(false);\n      setRefreshReason(null);\n    }\n    \n    const offerCurrency = searchResults.data.offers[0].total_currency;\n    if (offerCurrency !== currency) {\n      setShowCurrencyNotice(true);\n      // Convert offers when currency changes\n      const convertOffers = async () => {\n        const rates = await fetchExchangeRates(offerCurrency);\n        if (rates && rates[currency]) {\n          // Convert all offers for display\n          const offers = searchResults.data.offers.map((offer: any) => ({\n            ...offer,\n            converted_amount: (parseFloat(offer.total_amount) * rates[currency]).toFixed(2),\n            converted_currency: currency\n          }));\n          setConvertedOffers(offers);\n        } else {\n          setConvertedOffers(null);\n        }\n      };\n      convertOffers();\n    } else {\n      setShowCurrencyNotice(false);\n      setConvertedOffers(null);\n    }\n    \n    // Also fetch exchange rates for penalty currencies if they exist\n    const fetchPenaltyCurrencyRates = async () => {\n      const penaltyCurrencies = new Set<string>();\n      \n      searchResults.data.offers.forEach((offer: any) => {\n        if (offer.conditions?.change_before_departure?.penalty_currency) {\n          penaltyCurrencies.add(offer.conditions.change_before_departure.penalty_currency);\n        }\n        if (offer.conditions?.refund_before_departure?.penalty_currency) {\n          penaltyCurrencies.add(offer.conditions.refund_before_departure.penalty_currency);\n        }\n      });\n      \n      // Fetch rates for each unique penalty currency\n      for (const penaltyCurrency of penaltyCurrencies) {\n        if (penaltyCurrency !== currency && !exchangeRates[penaltyCurrency]) {\n          await fetchExchangeRates(penaltyCurrency);\n        }\n      }\n    };\n    \n    fetchPenaltyCurrencyRates();\n    // eslint-disable-next-line\n  }, [searchResults]); // Only depend on searchResults changes\n\n  // Handle currency changes when search results already exist\n  useEffect(() => {\n    if (!searchResults?.data?.offers || !searchResults.data.offers.length) {\n      return;\n    }\n    const offerCurrency = searchResults.data.offers[0].total_currency;\n    if (offerCurrency !== currency) {\n      setShowCurrencyNotice(true);\n      // Convert offers when currency changes\n      const convertOffers = async () => {\n        const rates = await fetchExchangeRates(offerCurrency);\n        if (rates && rates[currency]) {\n          // Convert all offers for display\n          const offers = searchResults.data.offers.map((offer: any) => ({\n            ...offer,\n            converted_amount: (parseFloat(offer.total_amount) * rates[currency]).toFixed(2),\n            converted_currency: currency\n          }));\n          setConvertedOffers(offers);\n        } else {\n          setConvertedOffers(null);\n        }\n      };\n      convertOffers();\n    } else {\n      setShowCurrencyNotice(false);\n      setConvertedOffers(null);\n    }\n    \n    // Also fetch exchange rates for penalty currencies when currency changes\n    const fetchPenaltyCurrencyRates = async () => {\n      const penaltyCurrencies = new Set<string>();\n      \n      searchResults.data.offers.forEach((offer: any) => {\n        if (offer.conditions?.change_before_departure?.penalty_currency) {\n          penaltyCurrencies.add(offer.conditions.change_before_departure.penalty_currency);\n        }\n        if (offer.conditions?.refund_before_departure?.penalty_currency) {\n          penaltyCurrencies.add(offer.conditions.refund_before_departure.penalty_currency);\n        }\n      });\n      \n      // Fetch rates for each unique penalty currency\n      for (const penaltyCurrency of penaltyCurrencies) {\n        if (penaltyCurrency !== currency) {\n          await fetchExchangeRates(penaltyCurrency);\n        }\n      }\n    };\n    \n    fetchPenaltyCurrencyRates();\n  }, [currency]); // Only depend on currency changes\n\n  // Handle countdown timer for offer expiration\n  useEffect(() => {\n    const updateTimer = async () => {\n      const searchParams = getCurrentSearchParams();\n      const timeRemaining = await flightDataPersistence.getTimeRemaining(searchParams);\n      \n      if (timeRemaining > 0) {\n        setTimeRemaining(timeRemaining);\n        setIsExpired(false);\n        \n        // Auto-refresh logic: If less than 2 minutes remaining, suggest refresh\n        if (timeRemaining < 2 * 60 * 1000 && !isRefreshing && !isExpired) {\n          toast({\n            title: \"Offers Expiring Soon\",\n            description: \"Flight offers will expire in less than 2 minutes. Consider refreshing to get updated prices.\",\n            duration: 5000,\n          });\n        }\n      } else {\n        setTimeRemaining(0);\n        setIsExpired(true);\n      }\n    };\n\n    // Update immediately\n    updateTimer();\n\n    // Update every second\n    const interval = setInterval(updateTimer, 1000);\n    return () => clearInterval(interval);\n  }, [searchTiming, searchResults]);\n\n  // Check for stale offers based on search timestamp\n  useEffect(() => {\n    if (searchTimestamp > 0) {\n      const now = Date.now();\n      const searchAge = now - searchTimestamp;\n      const maxAge = 30 * 60 * 1000; // 30 minutes\n      setIsStale(searchAge > maxAge);\n    } else {\n      // Only mark as stale if we have search results but no timestamp AND no timing info\n      // This indicates truly old cached data without proper timing information\n      setIsStale(\n        searchResults?.data?.offers && \n        searchResults.data.offers.length > 0 && \n        !searchTiming?.expires_at &&\n        !searchTiming?.search_started_at\n      );\n    }\n  }, [searchTimestamp, searchResults, searchTiming]);\n\n  // Handle URL search parameters and auto-search in a single effect\n  useEffect(() => {\n    const urlOrigin = searchParams.get('origin');\n    const urlDestination = searchParams.get('destination');\n    const urlDepartureDate = searchParams.get('departureDate');\n    const urlReturnDate = searchParams.get('returnDate');\n    const urlTripType = searchParams.get('tripType');\n    const urlAdults = searchParams.get('adults');\n    const urlChildren = searchParams.get('children');\n    const urlInfantsInSeat = searchParams.get('infantsInSeat');\n    const urlInfantsOnLap = searchParams.get('infantsOnLap');\n    const urlCabinClass = searchParams.get('cabinClass');\n\n    console.log('URL Parameters:', {\n      urlOrigin,\n      urlDestination,\n      urlDepartureDate,\n      urlCabinClass\n    });\n\n    // Set values from URL parameters\n    if (urlOrigin) setOrigin(urlOrigin);\n    if (urlDestination) setDestination(urlDestination);\n    if (urlDepartureDate) setDepartureDate(new Date(urlDepartureDate));\n    if (urlReturnDate) setReturnDate(new Date(urlReturnDate));\n    if (urlTripType) setTripType(urlTripType);\n    if (urlCabinClass) setCabinClass(urlCabinClass);\n    \n    if (urlAdults) setPassengerCounts(prev => ({ ...prev, adults: parseInt(urlAdults) }));\n    if (urlChildren) setPassengerCounts(prev => ({ ...prev, children: parseInt(urlChildren) }));\n    if (urlInfantsInSeat) setPassengerCounts(prev => ({ ...prev, infantsInSeat: parseInt(urlInfantsInSeat) }));\n    if (urlInfantsOnLap) setPassengerCounts(prev => ({ ...prev, infantsOnLap: parseInt(urlInfantsOnLap) }));\n\n    // Check if we have a search ID in the URL - if so, try to restore from cache first\n    const searchIdFromUrl = flightDataPersistence.getSearchIdFromUrl(window.location.href);\n    if (searchIdFromUrl) {\n      console.log('Found search ID in URL, attempting to restore from cache:', searchIdFromUrl);\n      restoreSearchState();\n      return;\n    }\n\n    // If no URL parameters, try to restore from cache\n    if (!urlOrigin && !urlDestination) {\n      restoreSearchState();\n      return;\n    }\n\n    // Create a unique key for the current search parameters\n    const currentParamsKey = `${urlOrigin}-${urlDestination}-${urlDepartureDate}-${urlReturnDate}-${urlAdults}-${urlChildren}-${urlInfantsInSeat}-${urlInfantsOnLap}-${urlCabinClass}`;\n\n    // Auto-search if we have all required URL parameters and haven't already searched with these exact params\n    if (urlOrigin && urlDestination && urlDepartureDate && urlCabinClass && \n        lastAutoSearchParams.current !== currentParamsKey) {\n      \n      console.log('Triggering auto-search with URL parameters');\n      lastAutoSearchParams.current = currentParamsKey;\n      \n      // Format dates properly (same as regular search)\n      const formattedDepartureDate = urlDepartureDate; // URL dates are already in YYYY-MM-DD format\n      const formattedReturnDate = urlReturnDate || undefined;\n      \n      // Use the URL parameters directly for the search\n      const searchRequest = {\n        origin: urlOrigin.toUpperCase(),\n        destination: urlDestination.toUpperCase(),\n        departureDate: formattedDepartureDate,\n        returnDate: formattedReturnDate,\n        passengers: parseInt(urlAdults || '1') + \n                   parseInt(urlChildren || '0') + \n                   parseInt(urlInfantsInSeat || '0') + \n                   parseInt(urlInfantsOnLap || '0'),\n        passengerTypes: {\n          adults: parseInt(urlAdults || '1'),\n          children: parseInt(urlChildren || '0'),\n          infantsInSeat: parseInt(urlInfantsInSeat || '0'),\n          infantsOnLap: parseInt(urlInfantsOnLap || '0')\n        },\n        cabinClass: urlCabinClass.toLowerCase(),\n        maxConnections: 1,\n        currency\n      };\n\n      console.log('Auto-search request:', searchRequest);\n\n      // Perform the search directly\n      const performSearch = async () => {\n        try {\n          console.log('Starting auto-search...');\n          setIsLoading(true);\n          \n          console.log('Calling Supabase function with request:', searchRequest);\n          const { data: searchResults, error } = await supabase.functions.invoke('duffel-search', {\n            body: searchRequest\n          });\n\n          console.log('Supabase function response received');\n          console.log('Error:', error);\n          console.log('Data:', searchResults);\n\n          if (error) {\n            console.error('Supabase function error:', error);\n            throw new Error(error.message || 'Failed to search for flights');\n          }\n\n          if (!searchResults) {\n            console.error('No search results received from Supabase function');\n            throw new Error('No search results received');\n          }\n\n          console.log('Auto-search completed successfully with results:', searchResults);\n          setSearchResults(searchResults);\n          saveSearchState(searchResults);\n        } catch (error: any) {\n          console.error('Error in auto-search:', error);\n          console.error('Error stack:', error.stack);\n          toast({\n            title: \"Search Failed\",\n            description: error.message || \"Failed to search for flights. Please try again.\",\n            variant: \"destructive\",\n          });\n        } finally {\n          console.log('Auto-search cleanup: setting loading to false');\n          setIsLoading(false);\n        }\n      };\n\n      // Execute search immediately since we already have deduplication\n      performSearch();\n    }\n  }, [searchParams, currency]);\n\n  // Reset page when new results come in\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [searchResults, convertedOffers]);\n\n  const handleSearch = async (silent: boolean = false) => {\n    try {\n      if (!silent) {\n        setIsLoading(true);\n      }\n\n      // Validate inputs\n      if (!origin || !destination || !departureDate || !cabinClass) {\n        toast({\n          title: \"Missing Information\",\n          description: \"Please fill in all required fields\",\n          variant: \"destructive\",\n        });\n        return;\n      }\n\n      // Format dates\n      const formattedDepartureDate = departureDate.toISOString().split('T')[0];\n      const formattedReturnDate = returnDate ? returnDate.toISOString().split('T')[0] : undefined;\n\n      // Create search request\n      const searchRequest = {\n        origin: origin.toUpperCase(),\n        destination: destination.toUpperCase(),\n        departureDate: formattedDepartureDate,\n        returnDate: formattedReturnDate,\n        passengers: totalPassengers,\n        passengerTypes: {\n          adults: passengerCounts.adults,\n          children: passengerCounts.children,\n          infantsInSeat: passengerCounts.infantsInSeat,\n          infantsOnLap: passengerCounts.infantsOnLap\n        },\n        cabinClass: cabinClass.toLowerCase(),\n        maxConnections: 1,\n        currency,// Limit results to prevent memory issues\n      };\n\n      console.log('Sending search request:', searchRequest);\n\n      const { data: searchResults, error } = await supabase.functions.invoke('duffel-search', {\n        body: searchRequest\n      });\n\n      if (error) {\n        console.error('Supabase function error:', error);\n        throw new Error(error.message || 'Failed to search for flights');\n      }\n\n      if (!searchResults) {\n        throw new Error('No search results received');\n      }\n\n      console.log('Search results:', searchResults);\n      setSearchResults(searchResults);\n      saveSearchState(searchResults);\n    } catch (error) {\n      console.error('Error searching flights:', error);\n      toast({\n        title: \"Search Failed\",\n        description: error.message || \"Failed to search for flights. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      if (!silent) {\n        setIsLoading(false);\n      }\n      setIsRefreshing(false);\n    }\n  };\n\n  const formatTime = (dateString: string) => {\n    try {\n      // Log the incoming date string\n     \n      \n      // Parse the ISO string\n      const date = new Date(dateString);\n      \n      // Log the parsed date\n     \n      \n      if (isNaN(date.getTime())) {\n        console.error('Invalid date string:', dateString);\n        return 'N/A';\n      }\n\n      // Format with timezone consideration\n      return format(date, 'HH:mm');\n    } catch (error) {\n      console.error('Error formatting time:', error);\n      return 'N/A';\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    try {\n      // Parse the ISO string\n      const date = new Date(dateString);\n      \n      if (isNaN(date.getTime())) {\n        console.error('Invalid date string:', dateString);\n        return 'N/A';\n      }\n\n      // Format with timezone consideration\n      return format(date, 'MMM d, yyyy');\n    } catch (error) {\n      console.error('Error formatting date:', error);\n      return 'N/A';\n    }\n  };\n\n  const formatPhoneNumber = (phone: string) => {\n    // Remove all non-digit characters\n    const cleaned = phone.replace(/\\D/g, '');\n    // Ensure it starts with 1 (US/Canada)\n    const withCountryCode = cleaned.startsWith('1') ? cleaned : `1${cleaned}`;\n    // Format as E.164 (e.g., +1234567890)\n    return `+${withCountryCode}`;\n  };\n\n  const handleBooking = async () => {\n    try {\n      setIsBooking(true);\n\n          // Check if offers have expired or are stale\n    if (isExpired || isStale) {\n      toast({\n        title: \"Offers Expired\",\n        description: \"The flight offers have expired or are too old. Please refresh the search to get updated prices.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n      // Validate form data\n      if (!bookingFormData.title || !bookingFormData.given_name || !bookingFormData.family_name || \n          !bookingFormData.email || !bookingFormData.phone_number || !bookingFormData.gender || !bookingFormData.born_on) {\n        toast({\n          title: \"Missing Information\",\n          description: \"Please fill in all required passenger information\",\n          variant: \"destructive\",\n        });\n        return;\n      }\n\n      // Get the passenger ID from the offer\n      if (!selectedOffer?.passengers?.[0]?.id) {\n        throw new Error('No passenger ID found in the offer');\n      }\n\n      // Create booking request\n      const bookingRequest = {\n        offerId: selectedOffer?.id,\n        passengers: [{\n          ...bookingFormData,\n          id: selectedOffer.passengers[0].id,\n          gender: bookingFormData.gender === 'male' ? 'm' : 'f',\n          phone_number: formatPhoneNumber(bookingFormData.phone_number),\n          born_on: new Date(bookingFormData.born_on).toISOString().split('T')[0]\n        }],\n        payments: [{\n          type: \"balance\",\n          currency: currency || selectedOffer?.total_currency || \"USD\",\n          amount: selectedOffer?.total_amount || \"0\"\n        }]\n      };\n\n      const { data: bookingResults, error } = await supabase.functions.invoke('duffel-booking', {\n        body: bookingRequest\n      });\n\n      if (error) {\n        throw error;\n      }\n\n      // Store booking confirmation\n      setBookingConfirmation(bookingResults);\n\n      // Show success message\n      toast({\n        title: \"Booking Successful\",\n        description: \"Your flight has been booked successfully!\",\n      });\n\n      // Reset form and state\n      setShowBookingForm(false);\n      setSelectedOffer(null);\n      setSearchResults(null);\n      setBookingFormData({\n        id: '',\n        title: '',\n        given_name: '',\n        family_name: '',\n        email: '',\n        phone_number: '',\n        gender: '',\n        born_on: ''\n      });\n\n    } catch (error) {\n      console.error('Error booking flight:', error);\n      toast({\n        title: \"Booking Failed\",\n        description: error.message || \"Failed to book the flight\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsBooking(false);\n    }\n  };\n\n  const renderBookingForm = () => {\n    if (!showBookingForm || !selectedOffer) return null;\n\n    return (\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n        <div className=\"bg-white rounded-lg p-6 max-w-md w-full max-h-[90vh] overflow-y-auto\">\n          <h2 className=\"text-2xl font-semibold mb-4\">Passenger Information</h2>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"text-sm font-medium\">Title</label>\n              <Select \n                value={bookingFormData.title} \n                onValueChange={(value) => setBookingFormData({ ...bookingFormData, title: value })}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select title\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"mr\">Mr</SelectItem>\n                  <SelectItem value=\"mrs\">Mrs</SelectItem>\n                  <SelectItem value=\"ms\">Ms</SelectItem>\n                  <SelectItem value=\"dr\">Dr</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div>\n              <label className=\"text-sm font-medium\">First Name</label>\n              <Input\n                value={bookingFormData.given_name}\n                onChange={(e) => setBookingFormData({ ...bookingFormData, given_name: e.target.value })}\n                placeholder=\"Enter first name\"\n              />\n            </div>\n\n            <div>\n              <label className=\"text-sm font-medium\">Last Name</label>\n              <Input\n                value={bookingFormData.family_name}\n                onChange={(e) => setBookingFormData({ ...bookingFormData, family_name: e.target.value })}\n                placeholder=\"Enter last name\"\n              />\n            </div>\n\n            <div>\n              <label className=\"text-sm font-medium\">Email</label>\n              <Input\n                type=\"email\"\n                value={bookingFormData.email}\n                onChange={(e) => setBookingFormData({ ...bookingFormData, email: e.target.value })}\n                placeholder=\"Enter email\"\n              />\n            </div>\n\n            <div>\n              <label className=\"text-sm font-medium\">Phone Number</label>\n              <div className=\"flex gap-2\">\n                <Select \n                  value={bookingFormData.phone_number.split('+')[1]?.substring(0, 2) || '1'} \n                  onValueChange={(value) => {\n                    const currentNumber = bookingFormData.phone_number.replace(/\\D/g, '');\n                    const newNumber = currentNumber.length > 2 ? currentNumber.substring(2) : '';\n                    setBookingFormData({ \n                      ...bookingFormData, \n                      phone_number: `+${value}${newNumber}`\n                    });\n                  }}\n                >\n                  <SelectTrigger className=\"w-[100px]\">\n                    <SelectValue placeholder=\"+1\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"1\">+1 (US/CA)</SelectItem>\n                    <SelectItem value=\"44\">+44 (UK)</SelectItem>\n                    <SelectItem value=\"33\">+33 (FR)</SelectItem>\n                    <SelectItem value=\"49\">+49 (DE)</SelectItem>\n                    <SelectItem value=\"61\">+61 (AU)</SelectItem>\n                  </SelectContent>\n                </Select>\n                <Input\n                  type=\"tel\"\n                  value={bookingFormData.phone_number.replace(/\\D/g, '').substring(2)}\n                  onChange={(e) => {\n                    const countryCode = bookingFormData.phone_number.split('+')[1]?.substring(0, 2) || '1';\n                    const newNumber = e.target.value.replace(/\\D/g, '');\n                    if (newNumber.length <= 10) {\n                      setBookingFormData({ \n                        ...bookingFormData, \n                        phone_number: `+${countryCode}${newNumber}`\n                      });\n                    }\n                  }}\n                  placeholder=\"Enter phone number\"\n                  className=\"flex-1\"\n                />\n              </div>\n              <p className=\"text-xs text-gray-500 mt-1\">\n                Enter your phone number without spaces or special characters\n              </p>\n            </div>\n\n            <div>\n              <label className=\"text-sm font-medium\">Gender</label>\n              <Select \n                value={bookingFormData.gender} \n                onValueChange={(value) => setBookingFormData({ ...bookingFormData, gender: value })}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select gender\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"male\">Male</SelectItem>\n                  <SelectItem value=\"female\">Female</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div>\n              <label className=\"text-sm font-medium\">Date of Birth</label>\n              <Input\n                type=\"date\"\n                value={bookingFormData.born_on}\n                onChange={(e) => setBookingFormData({ ...bookingFormData, born_on: e.target.value })}\n              />\n            </div>\n          </div>\n\n          <div className=\"mt-6 flex justify-end space-x-4\">\n            <Button\n              variant=\"outline\"\n              onClick={() => setShowBookingForm(false)}\n              disabled={isBooking}\n            >\n              Cancel\n            </Button>\n            <Button\n              className=\"bg-[#72ba87] hover:bg-[#61936f] text-white\"\n              onClick={handleBooking}\n              disabled={isBooking}\n            >\n              {isBooking ? (\n                <>\n                  <div className=\"mr-2 h-4 w-4 animate-spin rounded-full border-2 border-white border-t-transparent\"></div>\n                  Booking...\n                </>\n              ) : (\n                'Confirm Booking'\n              )}\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // Add sorting functions\n  const sortOffers = (offers: FlightOffer[], sortType: string) => {\n    if (!offers || offers.length === 0) return offers;\n\n    const sortedOffers = [...offers];\n\n    switch (sortType) {\n      case 'cheapest':\n        return sortedOffers.sort((a, b) => {\n          const priceA = parseFloat(a.converted_amount || a.total_amount);\n          const priceB = parseFloat(b.converted_amount || b.total_amount);\n          return priceA - priceB;\n        });\n\n      case 'fastest':\n        return sortedOffers.sort((a, b) => {\n          const getTotalDuration = (offer: FlightOffer) => {\n            return offer.slices.reduce((total, slice) => {\n              if (!slice.segments.length) return total;\n              const start = new Date(slice.segments[0].departing_at);\n              const end = new Date(slice.segments[slice.segments.length - 1].arriving_at);\n              return total + (end.getTime() - start.getTime());\n            }, 0);\n          };\n          return getTotalDuration(a) - getTotalDuration(b);\n        });\n\n      case 'direct':\n        return sortedOffers.sort((a, b) => {\n          const getTotalStops = (offer: FlightOffer) => {\n            return offer.slices.reduce((total, slice) => {\n              return total + Math.max(0, slice.segments.length - 1);\n            }, 0);\n          };\n          return getTotalStops(a) - getTotalStops(b);\n        });\n\n      case 'best':\n      default:\n        // Best: combination of price, duration, and stops\n        return sortedOffers.sort((a, b) => {\n          const getScore = (offer: FlightOffer) => {\n            const price = parseFloat(offer.converted_amount || offer.total_amount);\n            const totalDuration = offer.slices.reduce((total, slice) => {\n              if (!slice.segments.length) return total;\n              const start = new Date(slice.segments[0].departing_at);\n              const end = new Date(slice.segments[slice.segments.length - 1].arriving_at);\n              return total + (end.getTime() - start.getTime());\n            }, 0);\n            const totalStops = offer.slices.reduce((total, slice) => {\n              return total + Math.max(0, slice.segments.length - 1);\n            }, 0);\n            \n            // Normalize values (price in hundreds, duration in hours, stops as is)\n            const normalizedPrice = price / 100;\n            const normalizedDuration = totalDuration / (1000 * 60 * 60); // Convert to hours\n            const normalizedStops = totalStops;\n            \n            // Weighted score (lower is better)\n            return normalizedPrice * 0.5 + normalizedDuration * 0.3 + normalizedStops * 0.2;\n          };\n          return getScore(a) - getScore(b);\n        });\n    }\n  };\n\n  const renderFlightOffers = () => {\n    const offersToShowAll = convertedOffers || (searchResults?.data?.offers || []);\n    if (!offersToShowAll.length) {\n      console.log('No offers data available');\n      return null;\n    }\n    \n    // Apply filters first, then sort\n    const filteredOffers = getFilteredOffers();\n    const sortedOffers = sortOffers(filteredOffers, currentSort);\n    \n    // Filter out expired offers\n    const validOffers = sortedOffers.filter(offer => {\n      if (!searchTiming?.expires_at) return true; // No timing info, assume valid\n      \n      const now = new Date().getTime();\n      const expiryTime = new Date(searchTiming.expires_at).getTime();\n      const bufferTime = expiryTime - (5 * 60 * 1000); // 5 minutes buffer\n      \n      return now < bufferTime;\n    });\n\n    // Show warning if some offers are expired\n    if (validOffers.length < sortedOffers.length) {\n      const expiredCount = sortedOffers.length - validOffers.length;\n      console.log(`${expiredCount} offers have expired and been filtered out`);\n    }\n\n    // If all offers are expired, show message\n    if (validOffers.length === 0) {\n      return (\n        <div className=\"text-center py-8\">\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-6\">\n            <div className=\"flex items-center justify-center mb-4\">\n              <Clock className=\"h-8 w-8 text-red-500\" />\n            </div>\n            <h3 className=\"text-lg font-semibold text-red-800 mb-2\">All Offers Have Expired</h3>\n            <p className=\"text-red-600 mb-4\">The flight offers have expired. Please refresh your search to get current prices.</p>\n            <Button \n              onClick={() => handleSearch(false)}\n              className=\"bg-red-600 hover:bg-red-700 text-white\"\n            >\n              Refresh Search\n            </Button>\n          </div>\n        </div>\n      );\n    }\n    \n    const totalPages = Math.ceil(validOffers.length / OFFERS_PER_PAGE);\n    const startIdx = (currentPage - 1) * OFFERS_PER_PAGE;\n    const endIdx = startIdx + OFFERS_PER_PAGE;\n    const offersToShow = validOffers.slice(startIdx, endIdx);\n\n    return (\n      <div ref={offersRef} className=\"space-y-6\">\n        {offersToShow.map((offer: FlightOffer) => {\n          if (!offer?.slices?.length) {\n            console.log('Invalid offer structure:', offer);\n            return null;\n          }\n          // Helper function to format penalty amount with currency conversion\n          const formatPenalty = (amount: string | null, penaltyCurrency: string | null) => {\n            if (amount === null || penaltyCurrency === null) return 'Unknown';\n            \n            // If the penalty currency matches the user's selected currency, show as is\n            if (penaltyCurrency === currency) {\n              return `${amount} ${penaltyCurrency}`;\n            }\n            \n            // If we have exchange rates and the penalty currency is different, convert it\n            if (exchangeRates[penaltyCurrency] && exchangeRates[penaltyCurrency][currency]) {\n              const convertedAmount = (parseFloat(amount) * exchangeRates[penaltyCurrency][currency]).toFixed(2);\n              return `${convertedAmount} ${currency}`;\n            }\n            \n            // Fallback: show original amount with original currency\n            return `${amount} ${penaltyCurrency}`;\n          };\n          // Helper function to get condition status\n          const getConditionStatus = (condition: { allowed: boolean; penalty_amount: string | null; penalty_currency: string | null; } | null | undefined) => {\n            if (!condition) return { text: 'Unknown', color: 'text-gray-500', icon: Info };\n            if (!condition.allowed) return { text: 'Not allowed', color: 'text-red-500', icon: XCircle };\n            if (condition.penalty_amount === '0.00') return { text: 'Free', color: 'text-green-500', icon: CheckCircle };\n            return {\n              text: `Fee: ${formatPenalty(condition.penalty_amount, condition.penalty_currency)}`,\n              color: 'text-yellow-500',\n              icon: Info\n            };\n          };\n          // Calculate total duration\n          const getDuration = (segments: any[]) => {\n            if (!segments.length) return '';\n            const start = new Date(segments[0].departing_at);\n            const end = new Date(segments[segments.length - 1].arriving_at);\n            const diff = (end.getTime() - start.getTime()) / 1000 / 60; // minutes\n            const h = Math.floor(diff / 60);\n            const m = Math.round(diff % 60);\n            return `${h}h${m > 0 ? ` ${m}m` : ''}`;\n          };\n          // Count stops\n          const getStops = (segments: any[]) => Math.max(0, segments.length - 1);\n\n          // Check if offer is close to expiring\n          const isCloseToExpiring = () => {\n            if (!searchTiming?.expires_at) return false;\n            const now = new Date().getTime();\n            const expiryTime = new Date(searchTiming.expires_at).getTime();\n            const timeUntilExpiry = expiryTime - now;\n            return timeUntilExpiry < (10 * 60 * 1000); // Less than 10 minutes\n          };\n\n          // Main card\n          return (\n            <Collapsible key={offer.id} open={expandedCards.has(offer.id)} onOpenChange={() => toggleCard(offer.id)}>\n              <Card className={`overflow-hidden border rounded-2xl shadow-md bg-white ${\n                isCloseToExpiring() \n                  ? 'border-orange-300 bg-orange-50' \n                  : 'border-[#e5e5e5]'\n              }`}>\n                <CollapsibleTrigger asChild>\n                  <div className=\"p-4 cursor-pointer hover:bg-gray-50 transition-colors\">\n                    {/* Compact View */}\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center gap-4 flex-1\">\n                        {/* Airline Logo */}\n                        <div className=\"flex items-center gap-3\">\n                          {offer.slices[0]?.segments[0]?.operating_carrier?.logo_symbol_url ? (\n                            <img\n                              src={offer.slices[0].segments[0].operating_carrier.logo_symbol_url}\n                              alt={offer.slices[0].segments[0].operating_carrier.name + ' logo'}\n                              className=\"w-8 h-8 object-contain rounded-full border border-[#e5e5e5] bg-white shadow-sm\"\n                              loading=\"lazy\"\n                              onError={e => { e.currentTarget.style.display = 'none'; }}\n                            />\n                          ) : (\n                            <div className=\"w-8 h-8 rounded-full bg-[#f3f3f3] flex items-center justify-center\">\n                              <Plane className=\"w-4 h-4 text-[#61936f]\" />\n                            </div>\n                          )}\n                        </div>\n                        \n                        {/* Flight Times and Route */}\n                        <div className=\"flex items-center gap-3 flex-1\">\n                          <div className=\"text-center\">\n                            <div className=\"font-bold text-lg text-[#1d1d1e]\">\n                              {formatTime(offer.slices[0]?.segments[0]?.departing_at)}\n                            </div>\n                            <div className=\"text-xs text-[#62626a]\">\n                              {offer.slices[0]?.segments[0]?.origin?.iata_code}\n                            </div>\n                          </div>\n                          \n                          {/* Expiry Warning Badge */}\n                          {isCloseToExpiring() && (\n                            <div className=\"flex items-center gap-1 px-2 py-1 rounded-full text-xs font-medium bg-orange-100 text-orange-700 border border-orange-200\">\n                              <Clock className=\"h-3 w-3\" />\n                              <span>Expires Soon</span>\n                            </div>\n                          )}\n                          \n                          <div className=\"flex flex-col items-center\">\n                            <div className=\"text-xs text-[#62626a] font-medium\">\n                              {getDuration(offer.slices[0]?.segments)}\n                            </div>\n                            <div className=\"flex items-center gap-1\">\n                              {getStops(offer.slices[0]?.segments) === 0 ? (\n                                <span className=\"text-xs text-[#61936f]\">Nonstop</span>\n                              ) : (\n                                <span className=\"text-xs text-[#eab308]\">{getStops(offer.slices[0]?.segments)} stop{getStops(offer.slices[0]?.segments) > 1 ? 's' : ''}</span>\n                              )}\n                            </div>\n                          </div>\n                          \n                          <div className=\"text-center\">\n                            <div className=\"font-bold text-lg text-[#1d1d1e]\">\n                              {formatTime(offer.slices[0]?.segments[offer.slices[0]?.segments.length - 1]?.arriving_at)}\n                            </div>\n                            <div className=\"text-xs text-[#62626a]\">\n                              {offer.slices[0]?.segments[offer.slices[0]?.segments.length - 1]?.destination?.iata_code}\n                            </div>\n                          </div>\n                        </div>\n                        \n                        {/* Airline Name */}\n                        <div className=\"flex-1\">\n                          <div className=\"font-medium text-sm text-[#1d1d1e]\">\n                            {offer.slices[0]?.segments[0]?.marketing_carrier?.name || 'Unknown Airline'}\n                          </div>\n                          <div className=\"text-xs text-[#62626a]\">\n                            {tripType === 'roundtrip' ? 'round trip' : 'one way'}\n                          </div>\n                        </div>\n                      </div>\n                      \n                      {/* Price and Expand Button */}\n                      <div className=\"flex items-center gap-4\">\n                        <div className=\"text-right\">\n                          <div className=\"text-xl font-bold text-[#61936f]\">\n                            {offer.converted_amount\n                              ? formatAmount(parseFloat(offer.converted_amount), offer.converted_currency)\n                              : formatAmount(parseFloat(offer.total_amount), offer.total_currency)}\n                          </div>\n                          {offer.converted_amount && (\n                            <span className=\"block text-xs text-gray-400\">({formatAmount(parseFloat(offer.total_amount), offer.total_currency)} USD)</span>\n                          )}\n                        </div>\n                        \n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          className=\"p-1\"\n                        >\n                          {expandedCards.has(offer.id) ? (\n                            <ChevronUp className=\"w-4 h-4\" />\n                          ) : (\n                            <ChevronDown className=\"w-4 h-4\" />\n                          )}\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                </CollapsibleTrigger>\n                \n                <CollapsibleContent>\n                  <div className=\"px-4 pb-4 border-t border-gray-100\">\n                    {/* Expanded View - Full Details */}\n                    <div className=\"pt-4 space-y-4\">\n                      {/* Flight Segments */}\n                      {offer.slices.map((slice, sliceIndex) => {\n                        if (!slice?.segments?.length) return null;\n                        const stops = getStops(slice.segments);\n                        return (\n                          <div key={sliceIndex} className=\"mb-4\">\n                            {sliceIndex > 0 && <Separator className=\"my-4\" />}\n                            <div className=\"flex flex-col md:flex-row md:items-center md:gap-6\">\n                              {/* Times and Airports */}\n                              <div className=\"flex-1 flex flex-col md:flex-row md:items-center gap-4\">\n                                {/* Departure */}\n                                <div className=\"flex flex-col items-center min-w-[80px]\">\n                                  <div className=\"font-bold text-lg text-[#1d1d1e]\">{formatTime(slice.segments[0].departing_at)}</div>\n                                  <div className=\"text-xs text-[#62626a]\">{slice.segments[0].origin?.iata_code}</div>\n                                  <div className=\"text-xs text-[#62626a]\">{formatDate(slice.segments[0].departing_at)}</div>\n                                </div>\n                                {/* Arrow/Stops */}\n                                <div className=\"flex flex-col items-center flex-1\">\n                                  <div className=\"flex items-center gap-2\">\n                                    <ArrowRight className=\"w-5 h-5 text-[#61936f]\" />\n                                    <span className=\"text-xs text-[#62626a] font-medium\">\n                                      {getDuration(slice.segments)}\n                                    </span>\n                                    <ArrowRight className=\"w-5 h-5 text-[#61936f] rotate-180\" />\n                                  </div>\n                                  <div className=\"flex items-center gap-1 mt-1\">\n                                    {stops === 0 ? (\n                                      <span className=\"text-xs text-[#61936f] flex items-center gap-1\"><CheckCircle className=\"w-4 h-4\" /> Nonstop</span>\n                                    ) : (\n                                      <span className=\"text-xs text-[#eab308] flex items-center gap-1\"><ArrowDown className=\"w-4 h-4\" /> {stops} stop{stops > 1 ? 's' : ''}</span>\n                                    )}\n                                  </div>\n                                </div>\n                                {/* Arrival */}\n                                <div className=\"flex flex-col items-center min-w-[80px]\">\n                                  <div className=\"font-bold text-lg text-[#1d1d1e]\">{formatTime(slice.segments[slice.segments.length-1].arriving_at)}</div>\n                                  <div className=\"text-xs text-[#62626a]\">{slice.segments[slice.segments.length-1].destination?.iata_code}</div>\n                                  <div className=\"text-xs text-[#62626a]\">{formatDate(slice.segments[slice.segments.length-1].arriving_at)}</div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        );\n                      })}\n                      \n                      {/* Amenities and Class */}\n                      <div className=\"flex flex-wrap gap-4 items-center\">\n                        <div className=\"flex items-center gap-2 bg-[#f3f3f3] rounded px-3 py-1\">\n                          <User className=\"w-4 h-4 text-[#61936f]\" />\n                          <div className=\"text-xs text-[#1d1d1e] flex flex-wrap gap-1\">\n                            {passengerCounts.adults > 0 && (\n                              <span>{passengerCounts.adults} Adult{passengerCounts.adults > 1 ? 's' : ''}</span>\n                            )}\n                            {passengerCounts.children > 0 && (\n                              <span>{passengerCounts.children} Child{passengerCounts.children > 1 ? 'ren' : ''}</span>\n                            )}\n                            {passengerCounts.infantsInSeat > 0 && (\n                              <span>{passengerCounts.infantsInSeat} Infant{passengerCounts.infantsInSeat > 1 ? 's' : ''} (seat)</span>\n                            )}\n                            {passengerCounts.infantsOnLap > 0 && (\n                              <span>{passengerCounts.infantsOnLap} Infant{passengerCounts.infantsOnLap > 1 ? 's' : ''} (lap)</span>\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"flex items-center gap-2 bg-[#f3f3f3] rounded px-3 py-1\">\n                          <Briefcase className=\"w-4 h-4 text-[#61936f]\" />\n                          <span className=\"text-xs text-[#1d1d1e] capitalize\">\n                            {cabinClass === 'premium_economy' ? 'Premium Economy' : \n                             cabinClass === 'business' ? 'Business' : \n                             cabinClass === 'first' ? 'First' : \n                             'Economy'}\n                          </span>\n                        </div>\n                        <div className=\"flex items-center gap-2 bg-[#f3f3f3] rounded px-3 py-1\">\n                          <Luggage className=\"w-4 h-4 text-[#61936f]\" />\n                          <span className=\"text-xs text-[#1d1d1e]\">Baggage info</span>\n                        </div>\n                        <div className=\"flex items-center gap-2 bg-[#f3f3f3] rounded px-3 py-1\">\n                          <Wifi className=\"w-4 h-4 text-[#61936f]\" />\n                          <span className=\"text-xs text-[#1d1d1e]\">Wi-Fi</span>\n                        </div>\n                        <div className=\"flex items-center gap-2 bg-[#f3f3f3] rounded px-3 py-1\">\n                          <Coffee className=\"w-4 h-4 text-[#61936f]\" />\n                          <span className=\"text-xs text-[#1d1d1e]\">Snacks</span>\n                        </div>\n                      </div>\n                      \n                      {/* Booking Conditions */}\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <div className=\"flex items-center gap-2\">\n                          <ShieldCheck className=\"w-4 h-4 text-[#61936f]\" />\n                          <span className=\"font-medium text-[#1d1d1e]\">Changes:</span>\n                          {(() => {\n                            const status = getConditionStatus(offer.conditions?.change_before_departure);\n                            const Icon = status.icon;\n                            return (\n                              <span className={`ml-2 text-xs ${status.color} flex items-center gap-1`}><Icon className=\"w-4 h-4\" />{status.text}</span>\n                            );\n                          })()}\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <Ticket className=\"w-4 h-4 text-[#61936f]\" />\n                          <span className=\"font-medium text-[#1d1d1e]\">Refunds:</span>\n                          {(() => {\n                            const status = getConditionStatus(offer.conditions?.refund_before_departure);\n                            const Icon = status.icon;\n                            return (\n                              <span className={`ml-2 text-xs ${status.color} flex items-center gap-1`}><Icon className=\"w-4 h-4\" />{status.text}</span>\n                            );\n                          })()}\n                        </div>\n                      </div>\n                      \n                      {/* Select Flight Button */}\n                      <div className=\"flex justify-end pt-4\">\n                        <Button \n                          className=\"bg-[#1d1d1e] hover:bg-[#61936f] text-white font-semibold px-6 py-2 rounded-lg\"\n                          onClick={async () => {\n                            // Validate offer is still valid before selection\n                            if (searchTiming?.expires_at) {\n                              const now = new Date().getTime();\n                              const expiryTime = new Date(searchTiming.expires_at).getTime();\n                              const bufferTime = expiryTime - (5 * 60 * 1000); // 5 minutes buffer\n                              \n                              if (now >= bufferTime) {\n                                toast({\n                                  title: \"Offer Expired\",\n                                  description: \"This flight offer has expired. Please refresh your search to get current prices.\",\n                                  variant: \"destructive\",\n                                });\n                                return;\n                              }\n                            }\n                            \n                            // Store the selected offer in localStorage\n                            localStorage.setItem('selectedFlightOffer', JSON.stringify(offer));\n                            \n                            // Save selected offer to persistence\n                            const searchParams = getCurrentSearchParams();\n                            await flightDataPersistence.updateSelectedOffer(searchParams, offer.id);\n                            \n                            // Create flight details URL with search context\n                            const flightDetailsUrl = flightDataPersistence.createFlightDetailsUrl(\n                              offer.id, \n                              searchParams, \n                              i18n.language\n                            );\n                            \n                            console.log('Flight selection - Search params:', searchParams);\n                            console.log('Flight selection - Flight details URL:', flightDetailsUrl);\n                            \n                            // Navigate to the booking details page\n                            navigate(flightDetailsUrl);\n                          }}\n                        >\n                          Select Flight\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                </CollapsibleContent>\n              </Card>\n            </Collapsible>\n          );\n        })}\n        {/* Paging Controls */}\n        {totalPages > 1 && (\n          <div className=\"flex justify-center gap-4 mt-6\">\n            <Button\n              variant=\"outline\"\n              onClick={() => setCurrentPage((p) => Math.max(1, p - 1))}\n              disabled={currentPage === 1}\n            >\n              Previous\n            </Button>\n            <span className=\"text-[#62626a]\">Page {currentPage} of {totalPages}</span>\n            <Button\n              variant=\"outline\"\n              onClick={() => setCurrentPage((p) => Math.min(totalPages, p + 1))}\n              disabled={currentPage === totalPages}\n            >\n              Next\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const renderBookingConfirmation = () => {\n    if (!bookingConfirmation) return null;\n\n    return (\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n        <div className=\"bg-white rounded-lg p-6 max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n          <div className=\"text-center mb-6\">\n            <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <svg className=\"w-8 h-8 text-green-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\" />\n              </svg>\n            </div>\n            <h2 className=\"text-2xl font-semibold text-gray-900\">Booking Confirmed!</h2>\n            <p className=\"text-gray-600 mt-2\">Your flight has been successfully booked.</p>\n          </div>\n\n          <div className=\"space-y-6\">\n            {/* Booking Reference */}\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <h3 className=\"font-medium text-gray-900\">Booking Reference</h3>\n              <p className=\"text-2xl font-mono mt-2\">{bookingConfirmation.data?.booking_reference || 'N/A'}</p>\n            </div>\n\n            {/* Flight Details */}\n            <div>\n              <h3 className=\"font-medium text-gray-900 mb-4\">Flight Details</h3>\n              {bookingConfirmation.data?.slices?.map((slice: any, index: number) => (\n                <div key={index} className=\"mb-6 last:mb-0\">\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <div className=\"flex items-center\">\n                      <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center mr-3\">\n                        <Plane className=\"w-4 h-4 text-blue-600\" />\n                      </div>\n                      <div>\n                        <p className=\"font-medium\">\n                          {slice.origin?.iata_code} → {slice.destination?.iata_code}\n                        </p>\n                        <p className=\"text-sm text-gray-500\">\n                          {formatDate(slice.segments[0]?.departing_at)}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      <p className=\"font-medium\">{slice.segments[0]?.marketing_carrier?.name}</p>\n                      <p className=\"text-sm text-gray-500\">\n                        Flight {slice.segments[0]?.marketing_carrier?.iata_code}\n                      </p>\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <p className=\"text-sm text-gray-500\">Departure</p>\n                      <p className=\"font-medium\">{formatTime(slice.segments[0]?.departing_at)}</p>\n                      <p className=\"text-sm\">{slice.origin?.name}</p>\n                      {slice.segments[0]?.origin_terminal && (\n                        <p className=\"text-sm text-gray-500\">Terminal {slice.segments[0].origin_terminal}</p>\n                      )}\n                    </div>\n                    <div>\n                      <p className=\"text-sm text-gray-500\">Arrival</p>\n                      <p className=\"font-medium\">{formatTime(slice.segments[0]?.arriving_at)}</p>\n                      <p className=\"text-sm\">{slice.destination?.name}</p>\n                      {slice.segments[0]?.destination_terminal && (\n                        <p className=\"text-sm text-gray-500\">Terminal {slice.segments[0].destination_terminal}</p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* Passenger Information */}\n            <div>\n              <h3 className=\"font-medium text-gray-900 mb-4\">Passenger Information</h3>\n              {bookingConfirmation.data?.passengers?.map((passenger: any) => (\n                <div key={passenger.id} className=\"bg-gray-50 p-4 rounded-lg mb-4 last:mb-0\">\n                  <p className=\"font-medium\">\n                    {passenger.title} {passenger.given_name} {passenger.family_name}\n                  </p>\n                  <p className=\"text-sm text-gray-500\">{passenger.email}</p>\n                </div>\n              ))}\n            </div>\n\n            {/* Price Information */}\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <h3 className=\"font-medium text-gray-900 mb-2\">Price Details</h3>\n              <div className=\"space-y-2\">\n                {bookingConfirmation.data?.base_amount && bookingConfirmation.data?.base_currency && (\n                  <>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-600\">Base Fare</span>\n                      <span className=\"font-medium\">\n                        {bookingConfirmation.data.base_currency} {bookingConfirmation.data.base_amount}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-600\">Taxes & Fees</span>\n                      <span className=\"font-medium\">\n                        {bookingConfirmation.data.total_currency} {(parseFloat(bookingConfirmation.data.total_amount) - parseFloat(bookingConfirmation.data.base_amount)).toFixed(2)}\n                      </span>\n                    </div>\n                    <Separator />\n                  </>\n                )}\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-600\">Total Amount</span>\n                  <span className=\"text-xl font-semibold\">\n                    {bookingConfirmation.data?.total_amount} {bookingConfirmation.data?.total_currency}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"mt-8 flex justify-end space-x-4\">\n            <Button\n              variant=\"outline\"\n              onClick={() => {\n                setBookingConfirmation(null);\n                // Optionally redirect to a bookings page or home\n                navigate(`/${i18n.language}/bookings`);\n              }}\n            >\n              View All Bookings\n            </Button>\n            <Button\n              className=\"bg-[#72ba87] hover:bg-[#61936f] text-white\"\n              onClick={() => {\n                setBookingConfirmation(null);\n                // Reset the form and start a new search\n                setOrigin('');\n                setDestination('');\n                setDepartureDate(undefined);\n                setReturnDate(undefined);\n                setPassengerCounts({ adults: 1, children: 0, infantsInSeat: 0, infantsOnLap: 0 });\n                setCabinClass('');\n              }}\n            >\n              Book Another Flight\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-[#fcfcfc]\">\n      {/* Waiting Popup */}\n      <FlightBookingLoadingDialog isOpen={isLoading} />\n\n\n      {/* Sticky Search Bar */}\n      <div className=\"sticky top-16 z-20 bg-white border-b border-[#e5e5e5] shadow-sm\">\n        {/* Search Form */}\n        <div className=\"px-4 pb-4 flex justify-center\">\n          <div className=\"max-w-6xl w-full\">\n            <form\n              onSubmit={e => { e.preventDefault(); handleSearch(); }}\n              className=\"flex flex-col gap-4 justify-center w-full pt-8\"\n              role=\"search\"\n              aria-label=\"Flight search form\"\n            >\n              {/* Trip Type Selection - Positioned Above */}\n              <div className=\"flex justify-left w-full items-end\">\n                <ToggleGroup \n                  type=\"single\" \n                  value={tripType} \n                  onValueChange={(value) => value && setTripType(value as 'roundtrip' | 'oneway')}\n                  className=\"justify-center\"\n                  id=\"trip-type\"\n                >\n                  <ToggleGroupItem \n                    value=\"roundtrip\" \n                    className=\"px-3 py-1.5 text-sm data-[state=on]:text-[#61936f] data-[state=on]:border-[#61936f] data-[state=on]:bg-[#61936f]/5 hover:bg-[#61936f]/10 data-[state=off]:bg-transparent data-[state=off]:text-[#62626a] data-[state=off]:border-[#e5e5e5]\"\n                  >\n                    Round Trip\n                  </ToggleGroupItem>\n                  <ToggleGroupItem \n                    value=\"oneway\" \n                    className=\"px-3 py-1.5 text-sm data-[state=on]:text-[#61936f] data-[state=on]:border-[#61936f] data-[state=on]:bg-[#61936f]/5 hover:bg-[#61936f]/10 data-[state=off]:bg-transparent data-[state=off]:text-[#62626a] data-[state=off]:border-[#e5e5e5]\"\n                  >\n                    One Way\n                  </ToggleGroupItem>\n                </ToggleGroup>\n              </div>\n              \n              {/* Search Form Elements */}\n              <div className=\"flex flex-col lg:flex-row gap-4 items-end justify-center w-full\">\n              {/* From */}\n              <div className=\"w-full md:w-auto\">\n                <label htmlFor=\"from\" className=\"sr-only\">From</label>\n                <AirportSelector\n                  value={origin}\n                  onChange={setOrigin}\n                  placeholder=\"From\"\n                  className=\"min-w-[200px]\"\n                />\n              </div>\n              {/* To */}\n              <div className=\"w-full md:w-auto\">\n                <label htmlFor=\"to\" className=\"sr-only\">To</label>\n                <AirportSelector\n                  value={destination}\n                  onChange={setDestination}\n                  placeholder=\"To\"\n                  className=\"min-w-[200px]\"\n                />\n              </div>\n              {/* Passengers - Hidden on mobile, will be moved after currency */}\n              <div className=\"hidden md:block w-full md:w-auto\">\n                <label htmlFor=\"passengers\" className=\"sr-only\">Passengers</label>\n                <Popover>\n                  <PopoverTrigger asChild>\n                    <Button\n                      variant=\"outline\"\n                      className=\"w-16 justify-center text-left font-normal\"\n                      id=\"passengers\"\n                      type=\"button\"\n                    >\n                      <User className=\"mr-2 h-4 w-4\" />\n                      {totalPassengers}\n                    </Button>\n                  </PopoverTrigger>\n                  <PopoverContent className=\"w-80 p-4\" align=\"start\">\n                    <div className=\"space-y-4\">\n                      <h4 className=\"font-medium leading-none\">Passengers</h4>\n                      <div className=\"space-y-3\">\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <p className=\"text-sm font-medium\">Adults</p>\n                            <p className=\"text-xs text-muted-foreground\">Age 12+</p>\n                          </div>\n                          <div className=\"flex items-center gap-2\">\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => updatePassengerCount('adults', -1)}\n                              disabled={passengerCounts.adults <= 1}\n                              className=\"h-8 w-8 p-0\"\n                            >\n                              -\n                            </Button>\n                            <span className=\"w-8 text-center text-sm\">{passengerCounts.adults}</span>\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => updatePassengerCount('adults', 1)}\n                              disabled={passengerCounts.adults >= 9 || totalPassengers >= 9}\n                              className=\"h-8 w-8 p-0\"\n                            >\n                              +\n                            </Button>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <p className=\"text-sm font-medium\">Children</p>\n                            <p className=\"text-xs text-muted-foreground\">Age 2-11</p>\n                          </div>\n                          <div className=\"flex items-center gap-2\">\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => updatePassengerCount('children', -1)}\n                              disabled={passengerCounts.children <= 0}\n                              className=\"h-8 w-8 p-0\"\n                            >\n                              -\n                            </Button>\n                            <span className=\"w-8 text-center text-sm\">{passengerCounts.children}</span>\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => updatePassengerCount('children', 1)}\n                              disabled={passengerCounts.children >= 8 || totalPassengers >= 9}\n                              className=\"h-8 w-8 p-0\"\n                            >\n                              +\n                            </Button>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <p className=\"text-sm font-medium\">Infants (In seat)</p>\n                            <p className=\"text-xs text-muted-foreground\">Under 2 with seat</p>\n                          </div>\n                          <div className=\"flex items-center gap-2\">\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => updatePassengerCount('infantsInSeat', -1)}\n                              disabled={passengerCounts.infantsInSeat <= 0}\n                              className=\"h-8 w-8 p-0\"\n                            >\n                              -\n                            </Button>\n                            <span className=\"w-8 text-center text-sm\">{passengerCounts.infantsInSeat}</span>\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => updatePassengerCount('infantsInSeat', 1)}\n                              disabled={passengerCounts.infantsInSeat >= 4 || totalPassengers >= 9}\n                              className=\"h-8 w-8 p-0\"\n                            >\n                              +\n                            </Button>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <p className=\"text-sm font-medium\">Infants (On lap)</p>\n                            <p className=\"text-xs text-muted-foreground\">Under 2 without seat</p>\n                          </div>\n                          <div className=\"flex items-center gap-2\">\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => updatePassengerCount('infantsOnLap', -1)}\n                              disabled={passengerCounts.infantsOnLap <= 0}\n                              className=\"h-8 w-8 p-0\"\n                            >\n                              -\n                            </Button>\n                            <span className=\"w-8 text-center text-sm\">{passengerCounts.infantsOnLap}</span>\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => updatePassengerCount('infantsOnLap', 1)}\n                              disabled={passengerCounts.infantsOnLap >= 4 || totalPassengers >= 9}\n                              className=\"h-8 w-8 p-0\"\n                            >\n                              +\n                            </Button>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"pt-3 border-t\">\n                        <p className=\"text-sm text-muted-foreground\">\n                          Total: {totalPassengers} passenger{totalPassengers !== 1 ? 's' : ''}\n                        </p>\n                      </div>\n                    </div>\n                  </PopoverContent>\n                </Popover>\n              </div>\n              {/* Departure Date */}\n              <div className=\"w-full md:w-auto\">\n                <label htmlFor=\"departure-date\" className=\"sr-only\">Departure Date</label>\n                <Popover open={isDepartureDateOpen} onOpenChange={setIsDepartureDateOpen}>\n                  <PopoverTrigger asChild>\n                    <Button\n                      variant=\"outline\"\n                      className={cn(\n                        \"w-full min-w-[140px] justify-start text-left font-normal\",\n                        !departureDate && \"text-muted-foreground\"\n                      )}\n                      id=\"departure-date\"\n                      type=\"button\"\n                    >\n                      <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                      {departureDate ? format(departureDate, \"PPP\") : \"Departure\"}\n                    </Button>\n                  </PopoverTrigger>\n                  <PopoverContent className=\"w-auto p-0\">\n                                          <Calendar\n                        mode=\"single\"\n                        selected={departureDate}\n                        onSelect={handleDepartureDateSelect}\n                        initialFocus\n                        disabled={(date) => {\n                          // Disable only past dates (before today), allow today\n                          const today = new Date();\n                          today.setHours(0, 0, 0, 0);\n                          const checkDate = new Date(date);\n                          checkDate.setHours(0, 0, 0, 0);\n                          \n                          return checkDate < today;\n                        }}\n                      />\n                  </PopoverContent>\n                </Popover>\n              </div>\n              {/* Return Date (only for round trip) */}\n              {tripType === 'roundtrip' && (\n                <div className=\"w-full md:w-auto\">\n                  <label htmlFor=\"return-date\" className=\"sr-only\">Return Date</label>\n                  <Popover open={isReturnDateOpen} onOpenChange={setIsReturnDateOpen}>\n                    <PopoverTrigger asChild>\n                      <Button\n                        variant=\"outline\"\n                        className={cn(\n                          \"w-full min-w-[140px] justify-start text-left font-normal\",\n                          !returnDate && \"text-muted-foreground\"\n                        )}\n                        id=\"return-date\"\n                        type=\"button\"\n                      >\n                        <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                        {returnDate ? format(returnDate, \"PPP\") : \"Return\"}\n                      </Button>\n                    </PopoverTrigger>\n                    <PopoverContent className=\"w-auto p-0\">\n                      <Calendar\n                        mode=\"single\"\n                        selected={returnDate}\n                        onSelect={handleReturnDateSelect}\n                        initialFocus\n                        disabled={(date) => {\n                          // Disable past dates and dates before or equal to departure date\n                          const today = new Date();\n                          today.setHours(0, 0, 0, 0);\n                          const departure = departureDate ? new Date(departureDate) : today;\n                          departure.setHours(0, 0, 0, 0);\n                          const checkDate = new Date(date);\n                          checkDate.setHours(0, 0, 0, 0);\n                          \n                          return checkDate < today || (departureDate && checkDate <= departure);\n                        }}\n                      />\n                    </PopoverContent>\n                  </Popover>\n                </div>\n              )}\n              {/* Class */}\n              <div className=\"w-full md:w-auto\">\n                <label htmlFor=\"class\" className=\"sr-only\">Class</label>\n                <Select value={cabinClass} onValueChange={setCabinClass}>\n                  <SelectTrigger id=\"class\" className=\"w-full min-w-[120px]\">\n                    <SelectValue placeholder=\"Class\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"economy\">Economy</SelectItem>\n                    <SelectItem value=\"premium_economy\">Premium Economy</SelectItem>\n                    <SelectItem value=\"business\">Business</SelectItem>\n                    <SelectItem value=\"first\">First</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              {/* Currency */}\n              <div className=\"w-full md:w-auto\">\n                <label htmlFor=\"currency\" className=\"sr-only\">Currency</label>\n                <Select value={currency} onValueChange={setCurrency}>\n                  <SelectTrigger id=\"currency\" className=\"w-20\">\n                    <SelectValue placeholder=\"Currency\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"USD\">USD</SelectItem>\n                    <SelectItem value=\"EUR\">EUR</SelectItem>\n                    <SelectItem value=\"GBP\">GBP</SelectItem>\n                    <SelectItem value=\"CAD\">CAD</SelectItem>\n                    <SelectItem value=\"AUD\">AUD</SelectItem>\n                    <SelectItem value=\"JPY\">JPY</SelectItem>\n                    <SelectItem value=\"CHF\">CHF</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              {/* Passengers - Mobile only, positioned after currency */}\n              <div className=\"block md:hidden w-full md:w-auto\">\n                <label htmlFor=\"passengers-mobile\" className=\"sr-only\">Passengers</label>\n                <Popover>\n                  <PopoverTrigger asChild>\n                    <Button\n                      variant=\"outline\"\n                      className=\"w-16 justify-center text-left font-normal\"\n                      id=\"passengers-mobile\"\n                      type=\"button\"\n                    >\n                      <User className=\"mr-2 h-4 w-4\" />\n                      {totalPassengers}\n                    </Button>\n                  </PopoverTrigger>\n                  <PopoverContent className=\"w-80 p-4\" align=\"start\">\n                    <div className=\"space-y-4\">\n                      <h4 className=\"font-medium leading-none\">Passengers</h4>\n                      <div className=\"space-y-3\">\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <p className=\"text-sm font-medium\">Adults</p>\n                            <p className=\"text-xs text-muted-foreground\">Age 12+</p>\n                          </div>\n                          <div className=\"flex items-center gap-2\">\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => updatePassengerCount('adults', -1)}\n                              disabled={passengerCounts.adults <= 1}\n                              className=\"h-8 w-8 p-0\"\n                            >\n                              -\n                            </Button>\n                            <span className=\"w-8 text-center text-sm\">{passengerCounts.adults}</span>\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => updatePassengerCount('adults', 1)}\n                              disabled={passengerCounts.adults >= 9 || totalPassengers >= 9}\n                              className=\"h-8 w-8 p-0\"\n                            >\n                              +\n                            </Button>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <p className=\"text-sm font-medium\">Children</p>\n                            <p className=\"text-xs text-muted-foreground\">Age 2-11</p>\n                          </div>\n                          <div className=\"flex items-center gap-2\">\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => updatePassengerCount('children', -1)}\n                              disabled={passengerCounts.children <= 0}\n                              className=\"h-8 w-8 p-0\"\n                            >\n                              -\n                            </Button>\n                            <span className=\"w-8 text-center text-sm\">{passengerCounts.children}</span>\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => updatePassengerCount('children', 1)}\n                              disabled={passengerCounts.children >= 8 || totalPassengers >= 9}\n                              className=\"h-8 w-8 p-0\"\n                            >\n                              +\n                            </Button>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <p className=\"text-sm font-medium\">Infants (In seat)</p>\n                            <p className=\"text-xs text-muted-foreground\">Under 2 with seat</p>\n                          </div>\n                          <div className=\"flex items-center gap-2\">\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => updatePassengerCount('infantsInSeat', -1)}\n                              disabled={passengerCounts.infantsInSeat <= 0}\n                              className=\"h-8 w-8 p-0\"\n                            >\n                              -\n                            </Button>\n                            <span className=\"w-8 text-center text-sm\">{passengerCounts.infantsInSeat}</span>\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => updatePassengerCount('infantsInSeat', 1)}\n                              disabled={passengerCounts.infantsInSeat >= 4 || totalPassengers >= 9}\n                              className=\"h-8 w-8 p-0\"\n                            >\n                              +\n                            </Button>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <p className=\"text-sm font-medium\">Infants (On lap)</p>\n                            <p className=\"text-xs text-muted-foreground\">Under 2 without seat</p>\n                          </div>\n                          <div className=\"flex items-center gap-2\">\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => updatePassengerCount('infantsOnLap', -1)}\n                              disabled={passengerCounts.infantsOnLap <= 0}\n                              className=\"h-8 w-8 p-0\"\n                            >\n                              -\n                            </Button>\n                            <span className=\"w-8 text-center text-sm\">{passengerCounts.infantsOnLap}</span>\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => updatePassengerCount('infantsOnLap', 1)}\n                              disabled={passengerCounts.infantsOnLap >= 4 || totalPassengers >= 9}\n                              className=\"h-8 w-8 p-0\"\n                            >\n                              +\n                            </Button>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"pt-3 border-t\">\n                        <p className=\"text-sm text-muted-foreground\">\n                          Total: {totalPassengers} passenger{totalPassengers !== 1 ? 's' : ''}\n                        </p>\n                      </div>\n                    </div>\n                  </PopoverContent>\n                </Popover>\n              </div>\n              {/* Search Button */}\n              <div className=\"w-full md:w-auto\">\n                <Button\n                  className=\"w-full min-w-[120px] bg-gradient-to-r from-[#10B981] to-[#059669] text-white border-none hover:from-[#059669] hover:to-[#047857] hover:scale-105 transition-all duration-300 shadow-lg rounded-full font-medium tracking-wide\"\n                  type=\"submit\"\n                  disabled={isLoading}\n                  aria-label=\"Search flights\"\n                >\n                  <span className=\"flex items-center gap-2\">\n                    {isLoading ? (\n                      <>\n                        <div className=\"h-4 w-4 animate-spin rounded-full border-2 border-white border-t-transparent\"></div>\n                        Searching...\n                      </>\n                    ) : (\n                      <>\n                        <Search className=\"h-4 w-4\" />\n                        Search\n                      </>\n                    )}\n                  </span>\n                </Button>\n              </div>\n              </div>\n            </form>\n          </div>\n        </div>\n\n        {/* Sort Options */}\n        {(searchResults?.data?.offers && searchResults.data.offers.length > 0) && (\n          <div className=\"px-4 pb-4\">\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm font-medium text-[#62626a]\">Sort by:</span>\n              <ToggleGroup \n                type=\"single\" \n                value={currentSort} \n                onValueChange={(value) => value && setCurrentSort(value as 'best' | 'direct' | 'cheapest' | 'fastest')}\n                className=\"justify-start\"\n              >\n                <ToggleGroupItem \n                  value=\"best\" \n                  className=\"px-4 py-1 text-xs data-[state=on]:bg-[#61936f] data-[state=on]:text-white data-[state=on]:border-[#61936f] hover:bg-[#61936f]/10\"\n                >\n                  Best\n                </ToggleGroupItem>\n                <ToggleGroupItem \n                  value=\"direct\" \n                  className=\"px-4 py-1 text-xs data-[state=on]:bg-[#61936f] data-[state=on]:text-white data-[state=on]:border-[#61936f] hover:bg-[#61936f]/10\"\n                >\n                  Most Direct\n                </ToggleGroupItem>\n                <ToggleGroupItem \n                  value=\"cheapest\" \n                  className=\"px-4 py-1 text-xs data-[state=on]:bg-[#61936f] data-[state=on]:text-white data-[state=on]:border-[#61936f] hover:bg-[#61936f]/10\"\n                >\n                  Cheapest\n                </ToggleGroupItem>\n                <ToggleGroupItem \n                  value=\"fastest\" \n                  className=\"px-4 py-1 text-xs data-[state=on]:bg-[#61936f] data-[state=on]:text-white data-[state=on]:border-[#61936f] hover:bg-[#61936f]/10\"\n                >\n                  Fastest\n                </ToggleGroupItem>\n              </ToggleGroup>\n              <span className=\"text-xs text-[#62626a] ml-2\">\n                ({currentSort === 'best' ? 'Price + Duration + Stops' : \n                  currentSort === 'direct' ? 'Fewest stops' : \n                  currentSort === 'cheapest' ? 'Lowest price' : 'Shortest duration'})\n              </span>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Main Content: Results and Booking Logic */}\n      <div className=\"max-w-5xl mx-auto px-2 md:px-0 pt-8\">\n        {/* Filters */}\n        {searchResults && searchResults.data.offers && searchResults.data.offers.length > 0 && (\n          <FlightFilters onFiltersChange={handleFiltersChange} />\n        )}\n        \n        {/* Search Results */}\n        {searchResults && (\n          <div className=\"mt-8\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"flex items-center gap-4\">\n                <h2 className=\"text-2xl font-semibold text-[#1d1d1e]\">Available Flights</h2>\n                {searchTiming?.expires_at && (\n                  <div className={`flex items-center gap-2 px-3 py-1 rounded-full text-sm font-medium ${\n                    isExpired \n                      ? 'bg-red-100 text-red-700 border border-red-200' \n                      : timeRemaining < 60000 \n                        ? 'bg-orange-100 text-orange-700 border border-orange-200' \n                        : 'bg-green-100 text-green-700 border border-green-200'\n                  }`}>\n                    <Clock className=\"h-4 w-4\" />\n                    {isExpired ? (\n                      <span>Offers Expired</span>\n                    ) : (\n                      <span>Expires in {flightDataPersistence.formatTimeRemaining(timeRemaining)}</span>\n                    )}\n                  </div>\n                )}\n                {/* Show warning for stale offers */}\n                {searchResults?.data?.offers && searchResults.data.offers.length > 0 && isStale && (\n                  <div className=\"flex items-center gap-2 px-3 py-1 rounded-full text-sm font-medium bg-yellow-100 text-yellow-700 border border-yellow-200\">\n                    <Clock className=\"h-4 w-4\" />\n                    <span>Offers may be expired - Refresh recommended</span>\n                  </div>\n                )}\n              </div>\n              <div className=\"flex items-center gap-3\">\n                {searchTimestamp > 0 && (\n                  <div className=\"text-sm text-[#62626a]\">\n                    {t('search.lastUpdated')}: {new Date(searchTimestamp).toLocaleTimeString()}\n                  </div>\n                )}\n                {isRefreshing && (\n                  <div className=\"flex items-center gap-2 text-sm text-[#61936f]\">\n                    <div className=\"h-4 w-4 animate-spin rounded-full border-2 border-[#61936f] border-t-transparent\"></div>\n                    {t('search.refreshing')}\n                  </div>\n                )}\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => handleSearch(true)}\n                  disabled={isRefreshing}\n                  className=\"text-[#61936f] border-[#61936f] hover:bg-[#61936f] hover:text-white\"\n                >\n                  <Search className=\"h-4 w-4 mr-1\" />\n                  {t('search.refresh')}\n                </Button>\n              </div>\n            </div>\n            {showCurrencyNotice && (\n              <div className=\"bg-blue-50 border-l-4 border-blue-500 text-blue-700 p-4 mb-4\">\n                <div className=\"flex items-start\">\n                  <div className=\"flex-shrink-0\">\n                    <svg className=\"h-5 w-5 text-blue-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </div>\n                  <div className=\"ml-3\">\n                    <p className=\"text-sm\">\n                      <strong>Currency Conversion:</strong> Original prices are in {searchResults?.data?.offers[0]?.total_currency}. \n                      Converted prices in {currency} are shown for your convenience using real-time exchange rates.\n                    </p>\n                  </div>\n                </div>\n              </div>\n            )}\n            {renderFlightOffers()}\n          </div>\n        )}\n        {/* Additional Information */}\n        <div className=\"mt-8 grid grid-cols-1 md:grid-cols-3 gap-6\">\n          <div className=\"bg-white rounded-lg p-6 shadow-md\">\n            <h3 className=\"font-semibold mb-2 text-[#1d1d1e]\">Best Price Guarantee</h3>\n            <p className=\"text-sm text-[#62626a]\">We guarantee the best prices for your flights</p>\n          </div>\n          <div className=\"bg-white rounded-lg p-6 shadow-md\">\n            <h3 className=\"font-semibold mb-2 text-[#1d1d1e]\">24/7 Support</h3>\n            <p className=\"text-sm text-[#62626a]\">Our team is always here to help you</p>\n          </div>\n          <div className=\"bg-white rounded-lg p-6 shadow-md\">\n            <h3 className=\"font-semibold mb-2 text-[#1d1d1e]\">Flexible Booking</h3>\n            <p className=\"text-sm text-[#62626a]\">Free cancellation on most flights</p>\n          </div>\n        </div>\n        {/* Add the booking form */}\n        {renderBookingForm()}\n        {/* Add the booking confirmation modal */}\n        {renderBookingConfirmation()}\n      </div>\n    </div>\n  );\n} ","import { useState, useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"@/components/ui/collapsible\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { \n  Plane, \n  Clock, \n  MapPin, \n  Calendar, \n  CalendarIcon,\n  User, \n  Users, \n  Luggage, \n  ChevronDown, \n  ChevronUp,\n  ArrowRight,\n  ArrowLeft,\n  CheckCircle,\n  AlertCircle,\n  Info\n} from 'lucide-react';\nimport { format } from 'date-fns';\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { supabase } from '@/integrations/supabase/client';\nimport { flightDataPersistence, FlightSearchData } from '@/utils/flightDataPersistence';\nimport { cn } from '@/lib/utils';\nimport { PhoneInput } from '@/components/ui/phone-input';\nimport { DatePicker } from '@/components/ui/date-picker';\nimport { AncillariesStep } from '@/components/booking/AncillariesStep';\nimport { AuthModal } from '@/components/auth/AuthModal';\nimport { useProfile } from '@/hooks/useProfile';\nimport { useSecurePassport } from '@/hooks/useSecurePassport';\nimport { useDevMode } from '@/hooks/useDevMode';\n\n\n\ninterface FlightOffer {\n  id: string;\n  total_amount: string;\n  total_currency: string;\n  base_amount?: string;\n  base_currency?: string;\n  conditions: {\n    change_before_departure?: {\n      allowed: boolean;\n      penalty_amount: string | null;\n      penalty_currency: string | null;\n    } | null;\n    refund_before_departure?: {\n      allowed: boolean;\n      penalty_amount: string | null;\n      penalty_currency: string | null;\n    } | null;\n  };\n  slices: Array<{\n    segments: Array<{\n      origin: {\n        iata_code: string;\n        name: string;\n      };\n      destination: {\n        iata_code: string;\n        name: string;\n      };\n      departing_at: string;\n      arriving_at: string;\n      marketing_carrier: {\n        name: string;\n        iata_code: string;\n      };\n      operating_carrier: {\n        name: string;\n        iata_code: string;\n        logo_symbol_url?: string;\n      };\n      origin_terminal?: string;\n      destination_terminal?: string;\n      aircraft?: {\n        iata_code: string;\n        name: string;\n        id: string;\n      };\n    }>;\n  }>;\n  passengers: Array<{\n    id: string;\n    title: string;\n    given_name: string;\n    family_name: string;\n    email: string;\n    phone_number: string;\n    gender: string;\n    born_on: string;\n  }>;\n}\n\ninterface PassengerFormData {\n  id: string;\n  title: string;\n  given_name: string;\n  family_name: string;\n  email: string;\n  phone_number: string;\n  phone_country_code: string;\n  gender: string;\n  born_on: string;\n  passport_number: string;\n  passport_country: string;\n  passport_expiry: string;\n  luggage?: {\n    checked: number;\n    carry_on: number;\n  };\n}\n\ninterface LuggageOption {\n  type: 'checked' | 'carry_on';\n  weight: string;\n  price: number;\n  currency: string;\n}\n\nconst PASSPORT_COUNTRIES = [\n  { code: \"US\", name: \"United States\" },\n  { code: \"FR\", name: \"France\" },\n  { code: \"ES\", name: \"Spain\" },\n  { code: \"GB\", name: \"United Kingdom\" },\n  { code: \"CA\", name: \"Canada\" },\n  { code: \"DE\", name: \"Germany\" },\n  { code: \"IT\", name: \"Italy\" },\n  { code: \"JP\", name: \"Japan\" },\n  { code: \"AU\", name: \"Australia\" },\n  // ... add more as needed\n];\n\nexport function FlightBookingDetails() {\n  const { t, i18n } = useTranslation('booking');\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const { isDev, getDevModeBadge } = useDevMode();\n  const { toast } = useToast();\n  const [selectedOffer, setSelectedOffer] = useState<FlightOffer | null>(null);\n  const [passengerForms, setPassengerForms] = useState<PassengerFormData[]>([]);\n  const [expandedPassengers, setExpandedPassengers] = useState<Set<string>>(new Set());\n  const [isBooking, setIsBooking] = useState(false);\n  const [currentStep, setCurrentStep] = useState<'passengers' | 'ancillaries' | 'luggage' | 'payment'>('passengers');\n  \n  // Currency state\n  const [currency, setCurrency] = useState('USD');\n  const [exchangeRates, setExchangeRates] = useState<{ [key: string]: number }>({});\n  const lastRatesFetch = { current: 0 };\n  \n  // Timing state\n  const [timeRemaining, setTimeRemaining] = useState<number>(0);\n  const [isExpired, setIsExpired] = useState<boolean>(false);\n  const [isStale, setIsStale] = useState<boolean>(false);\n  const [searchTiming, setSearchTiming] = useState<{\n    search_started_at: string;\n    supplier_timeout: number;\n    expires_at: string | null;\n    created_at: string | null;\n  } | null>(null);\n  \n  // Luggage options\n  const luggageOptions: LuggageOption[] = [\n    { type: 'checked', weight: '23kg', price: 30, currency: 'USD' },\n    { type: 'checked', weight: '32kg', price: 50, currency: 'USD' },\n    { type: 'carry_on', weight: '7kg', price: 0, currency: 'USD' },\n    { type: 'carry_on', weight: '10kg', price: 15, currency: 'USD' },\n  ];\n\n  // Ancillaries state\n  const [ancillariesPayload, setAncillariesPayload] = useState<any>(null);\n  const [ancillariesMetadata, setAncillariesMetadata] = useState<any>(null);\n  \n  // Authentication state\n  const [showAuthModal, setShowAuthModal] = useState(false);\n  const [pendingBooking, setPendingBooking] = useState(false);\n  \n  // Payment state\n  const [paymentProcessing, setPaymentProcessing] = useState(false);\n  \n  // Profile state for \"Fill with my info\" functionality\n  const { profile } = useProfile();\n  const { passportData } = useSecurePassport();\n\n  useEffect(() => {\n    const loadData = async () => {\n      const offerId = searchParams.get('offerId');\n      if (!offerId) {\n        navigate(`/${i18n.language}/booking/internal-flights`);\n        return;\n      }\n\n      // In a real app, you would fetch the offer details from your backend\n      // For now, we'll simulate this with localStorage or redirect back\n      const storedOffer = localStorage.getItem('selectedFlightOffer');\n      if (storedOffer) {\n        const offer = JSON.parse(storedOffer);\n        setSelectedOffer(offer);\n        \n        // Initialize passenger forms based on the offer\n        const initialPassengers = offer.passengers.map((passenger: any, index: number) => ({\n          id: passenger.id,\n          title: '',\n          given_name: '',\n          family_name: '',\n          email: '',\n          phone_number: '',\n          phone_country_code: '',\n          gender: '',\n          born_on: '',\n          passport_number: '',\n          passport_country: '',\n          passport_expiry: '',\n          luggage: {\n            checked: 0,\n            carry_on: 0\n          }\n        }));\n        setPassengerForms(initialPassengers);\n        \n        // Expand first passenger by default\n        if (initialPassengers.length > 0) {\n          setExpandedPassengers(new Set([initialPassengers[0].id]));\n        }\n        \n        // Set currency from the offer\n        if (offer.total_currency) {\n          setCurrency(offer.total_currency);\n        }\n        \n        // Fetch exchange rates for penalty currencies\n        const fetchPenaltyCurrencyRates = async () => {\n          const penaltyCurrencies = new Set<string>();\n          \n          if (offer.conditions?.change_before_departure?.penalty_currency) {\n            penaltyCurrencies.add(offer.conditions.change_before_departure.penalty_currency);\n          }\n          if (offer.conditions?.refund_before_departure?.penalty_currency) {\n            penaltyCurrencies.add(offer.conditions.refund_before_departure.penalty_currency);\n          }\n          \n          // Fetch rates for each unique penalty currency\n          for (const penaltyCurrency of penaltyCurrencies) {\n            if (penaltyCurrency !== offer.total_currency) {\n              await fetchExchangeRates(penaltyCurrency);\n            }\n          }\n        };\n        \n        await fetchPenaltyCurrencyRates();\n        \n        // First try to get search ID from URL\n        const searchIdFromUrl = flightDataPersistence.getSearchIdFromUrl(window.location.href);\n        console.log('FlightBookingDetails - Current URL:', window.location.href);\n        console.log('FlightBookingDetails - Search ID from URL:', searchIdFromUrl);\n        \n        if (searchIdFromUrl) {\n          // Try to load data by search ID\n          const searchData = await flightDataPersistence.loadFlightDataBySearchId(searchIdFromUrl);\n          console.log('FlightBookingDetails - Loaded search data by ID:', searchData);\n          if (searchData) {\n            setSearchTiming(searchData.timing);\n            setCurrency(searchData.searchParams.currency);\n            \n            // Restore user progress if available\n            if (searchData.userProgress && searchData.userProgress.currentStep !== 'search') {\n              setCurrentStep(searchData.userProgress.currentStep as 'passengers' | 'ancillaries' | 'luggage' | 'payment');\n              if (searchData.userProgress.passengerForms) {\n                setPassengerForms(searchData.userProgress.passengerForms);\n              }\n              if (searchData.userProgress.ancillariesPayload) {\n                setAncillariesPayload(searchData.userProgress.ancillariesPayload);\n              }\n            }\n          }\n        } else {\n        // Fallback to loading by search parameters\n        const searchParams = {\n          origin: offer.slices[0]?.segments[0]?.origin?.iata_code || '',\n          destination: offer.slices[0]?.segments[0]?.destination?.iata_code || '',\n          departureDate: offer.slices[0]?.segments[0]?.departing_at?.split('T')[0] || '',\n          returnDate: offer.slices.length > 1 ? offer.slices[1]?.segments[0]?.departing_at?.split('T')[0] : undefined,\n          passengers: offer.passengers.length,\n          cabinClass: 'economy', // Default, could be enhanced\n          currency: offer.total_currency,\n          maxConnections: 1\n        };\n        \n        const searchData = flightDataPersistence.loadFlightData(searchParams);\n        if (searchData) {\n          setSearchTiming(searchData.timing);\n          setCurrency(searchData.searchParams.currency);\n          \n          // Restore user progress if available\n          if (searchData.userProgress && searchData.userProgress.currentStep !== 'search') {\n            setCurrentStep(searchData.userProgress.currentStep as 'passengers' | 'ancillaries' | 'luggage' | 'payment');\n            if (searchData.userProgress.passengerForms) {\n              setPassengerForms(searchData.userProgress.passengerForms);\n            }\n            if (searchData.userProgress.ancillariesPayload) {\n              setAncillariesPayload(searchData.userProgress.ancillariesPayload);\n            }\n          }\n        }\n      }\n    } else {\n      navigate(`/${i18n.language}/booking/internal-flights`);\n    }\n    };\n    \n    loadData();\n  }, [searchParams, navigate, i18n.language]);\n\n  // Handle countdown timer for offer expiration\n  useEffect(() => {\n    if (!selectedOffer) return;\n    \n    const updateTimer = async () => {\n      // First try to get search ID from URL\n      const searchIdFromUrl = flightDataPersistence.getSearchIdFromUrl(window.location.href);\n      \n      if (searchIdFromUrl) {\n        // Use search ID to get time remaining\n        const searchData = await flightDataPersistence.loadFlightDataBySearchId(searchIdFromUrl);\n        if (searchData && searchData.timing.expires_at) {\n          const now = new Date().getTime();\n          const expiryTime = new Date(searchData.timing.expires_at).getTime();\n          const timeRemaining = Math.max(0, expiryTime - now);\n          \n          if (timeRemaining > 0) {\n            setTimeRemaining(timeRemaining);\n            setIsExpired(false);\n            \n            // Auto-refresh logic: If less than 2 minutes remaining, suggest refresh\n            if (timeRemaining < 2 * 60 * 1000 && !isExpired) {\n              toast({\n                title: \"Offer Expiring Soon\",\n                description: \"This flight offer will expire in less than 2 minutes. Please complete your booking quickly or refresh to get updated prices.\",\n                duration: 5000,\n              });\n            }\n          } else {\n            setTimeRemaining(0);\n            setIsExpired(true);\n          }\n        }\n      } else {\n        // Fallback to search parameters\n        const searchParams = {\n          origin: selectedOffer.slices[0]?.segments[0]?.origin?.iata_code || '',\n          destination: selectedOffer.slices[0]?.segments[0]?.destination?.iata_code || '',\n          departureDate: selectedOffer.slices[0]?.segments[0]?.departing_at?.split('T')[0] || '',\n          returnDate: selectedOffer.slices.length > 1 ? selectedOffer.slices[1]?.segments[0]?.departing_at?.split('T')[0] : undefined,\n          passengers: selectedOffer.passengers.length,\n          cabinClass: 'economy',\n          currency: selectedOffer.total_currency,\n          maxConnections: 1\n        };\n        \n        const timeRemaining = await flightDataPersistence.getTimeRemaining(searchParams);\n        \n        if (timeRemaining > 0) {\n          setTimeRemaining(timeRemaining);\n          setIsExpired(false);\n          \n          // Auto-refresh logic: If less than 2 minutes remaining, suggest refresh\n          if (timeRemaining < 2 * 60 * 1000 && !isExpired) {\n            toast({\n              title: \"Offer Expiring Soon\",\n              description: \"This flight offer will expire in less than 2 minutes. Please complete your booking quickly or refresh to get updated prices.\",\n              duration: 5000,\n            });\n          }\n        } else {\n          setTimeRemaining(0);\n          setIsExpired(true);\n        }\n      }\n    };\n\n    // Update immediately\n    updateTimer();\n\n    // Update every second\n    const interval = setInterval(updateTimer, 1000);\n    return () => clearInterval(interval);\n  }, [searchTiming, selectedOffer]);\n\n  // Check for stale offers based on stored timing\n  useEffect(() => {\n    if (searchTiming?.search_started_at) {\n      const now = new Date().getTime();\n      const searchStart = new Date(searchTiming.search_started_at).getTime();\n      const searchAge = now - searchStart;\n      const maxAge = 30 * 60 * 1000; // 30 minutes\n      setIsStale(searchAge > maxAge);\n    } else {\n      // Only mark as stale if we have no timing info at all (indicating old cached data)\n      setIsStale(false);\n    }\n  }, [searchTiming]);\n\n  const togglePassenger = (passengerId: string) => {\n    const newExpanded = new Set(expandedPassengers);\n    if (newExpanded.has(passengerId)) {\n      newExpanded.delete(passengerId);\n    } else {\n      newExpanded.add(passengerId);\n    }\n    setExpandedPassengers(newExpanded);\n  };\n\n  const updatePassengerForm = (passengerId: string, field: keyof PassengerFormData, value: any) => {\n    setPassengerForms(prev => prev.map(passenger => \n      passenger.id === passengerId \n        ? { ...passenger, [field]: value }\n        : passenger\n    ));\n  };\n\n    const updateLuggage = (passengerId: string, type: 'checked' | 'carry_on', value: number) => {\n    setPassengerForms(prev => prev.map(passenger =>\n      passenger.id === passengerId\n        ? {\n            ...passenger,\n            luggage: {\n              ...passenger.luggage,\n              [type]: value\n            }\n          }\n        : passenger\n    ));\n  };\n\n  // Fill passenger form with profile information\n  const fillWithProfileInfo = (passengerId: string) => {\n    if (!profile) {\n      toast({\n        title: \"No Profile Information\",\n        description: \"Please complete your profile information first.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    const profileData = {\n              given_name: profile.first_name || '',\n        family_name: profile.last_name || '',\n      email: profile.email || '',\n      born_on: profile.birth_date || '',\n      passport_number: passportData?.passport_number || '',\n      passport_country: passportData?.passport_country || '',\n      passport_expiry: passportData?.passport_expiry_date || '',\n    };\n\n    setPassengerForms(prev => prev.map(passenger =>\n      passenger.id === passengerId\n        ? { ...passenger, ...profileData }\n        : passenger\n    ));\n\n    toast({\n      title: \"Profile Information Filled\",\n      description: \"Your profile information has been filled in.\",\n    });\n  };\n\n  const validatePassengerForm = (passenger: PassengerFormData): string[] => {\n    const errors: string[] = [];\n    \n    if (!passenger.title) errors.push(t('validation.titleRequired'));\n    if (!passenger.given_name) errors.push(t('validation.firstNameRequired'));\n    if (!passenger.family_name) errors.push(t('validation.lastNameRequired'));\n    if (!passenger.email) errors.push(t('validation.emailRequired'));\n    if (!passenger.phone_number) errors.push(t('validation.phoneRequired'));\n    if (!passenger.gender) errors.push(t('validation.genderRequired'));\n    if (!passenger.born_on) errors.push(t('validation.birthDateRequired'));\n    \n    // Email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (passenger.email && !emailRegex.test(passenger.email)) {\n      errors.push(t('validation.invalidEmail'));\n    }\n    \n    // Phone validation (E.164 format)\n    if (passenger.phone_number && passenger.phone_country_code) {\n      const fullPhone = `${passenger.phone_country_code}${passenger.phone_number.replace(/[^\\d]/g, '')}`;\n      const phoneRegex = /^\\+[1-9]\\d{1,14}$/;\n      if (!phoneRegex.test(fullPhone) || fullPhone.length < 8 || fullPhone.length > 15) {\n        errors.push(t('validation.invalidPhone'));\n      }\n    } else if (!passenger.phone_number || !passenger.phone_country_code) {\n      errors.push(t('validation.phoneRequired'));\n    }\n    \n    return errors;\n  };\n\n  const validateAllPassengers = (): boolean => {\n    for (const passenger of passengerForms) {\n      const errors = validatePassengerForm(passenger);\n      if (errors.length > 0) {\n        toast({\n          title: t('booking.validationError'),\n          description: `${t('booking.missingInfoDesc')} ${passenger.given_name || 'Unknown'}: ${errors.join(', ')}`,\n          variant: \"destructive\",\n        });\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const handleNextStep = () => {\n    if (currentStep === 'passengers') {\n      if (validateAllPassengers()) {\n        setCurrentStep('ancillaries');\n        // Update user progress in persistence\n        if (selectedOffer) {\n          const searchParams = {\n            origin: selectedOffer.slices[0]?.segments[0]?.origin?.iata_code || '',\n            destination: selectedOffer.slices[0]?.segments[0]?.destination?.iata_code || '',\n            departureDate: selectedOffer.slices[0]?.segments[0]?.departing_at?.split('T')[0] || '',\n            returnDate: selectedOffer.slices.length > 1 ? selectedOffer.slices[1]?.segments[0]?.departing_at?.split('T')[0] : undefined,\n            passengers: selectedOffer.passengers.length,\n            cabinClass: 'economy',\n            currency: selectedOffer.total_currency,\n            maxConnections: 1\n          };\n          flightDataPersistence.updateUserProgress(searchParams, { \n            currentStep: 'ancillaries',\n            passengerForms \n          });\n        }\n      }\n    } else if (currentStep === 'ancillaries') {\n      setCurrentStep('luggage');\n      // Update user progress\n      if (selectedOffer) {\n        const searchParams = {\n          origin: selectedOffer.slices[0]?.segments[0]?.origin?.iata_code || '',\n          destination: selectedOffer.slices[0]?.segments[0]?.destination?.iata_code || '',\n          departureDate: selectedOffer.slices[0]?.segments[0]?.departing_at?.split('T')[0] || '',\n          returnDate: selectedOffer.slices.length > 1 ? selectedOffer.slices[1]?.segments[0]?.departing_at?.split('T')[0] : undefined,\n          passengers: selectedOffer.passengers.length,\n          cabinClass: 'economy',\n          currency: selectedOffer.total_currency,\n          maxConnections: 1\n        };\n        flightDataPersistence.updateUserProgress(searchParams, { \n          currentStep: 'luggage',\n          ancillariesPayload \n        });\n      }\n    } else if (currentStep === 'luggage') {\n      setCurrentStep('payment');\n      // Update user progress\n      if (selectedOffer) {\n        const searchParams = {\n          origin: selectedOffer.slices[0]?.segments[0]?.origin?.iata_code || '',\n          destination: selectedOffer.slices[0]?.segments[0]?.destination?.iata_code || '',\n          departureDate: selectedOffer.slices[0]?.segments[0]?.departing_at?.split('T')[0] || '',\n          returnDate: selectedOffer.slices.length > 1 ? selectedOffer.slices[1]?.segments[0]?.departing_at?.split('T')[0] : undefined,\n          passengers: selectedOffer.passengers.length,\n          cabinClass: 'economy',\n          currency: selectedOffer.total_currency,\n          maxConnections: 1\n        };\n        flightDataPersistence.updateUserProgress(searchParams, { \n          currentStep: 'payment',\n          luggageSelections: passengerForms.map(p => p.luggage)\n        });\n      }\n    }\n  };\n\n  const handlePreviousStep = () => {\n    if (currentStep === 'ancillaries') {\n      setCurrentStep('passengers');\n    } else if (currentStep === 'luggage') {\n      setCurrentStep('ancillaries');\n    } else if (currentStep === 'payment') {\n      setCurrentStep('luggage');\n    }\n  };\n\n  const handleAncillariesSelected = (payload: any, metadata: any) => {\n    setAncillariesPayload(payload);\n    setAncillariesMetadata(metadata);\n  };\n\n  const handleBooking = async () => {\n    if (!validateAllPassengers()) return;\n    \n    // Additional validation for offer expiration\n    if (searchTiming?.expires_at) {\n      const now = new Date().getTime();\n      const expiryTime = new Date(searchTiming.expires_at).getTime();\n      const bufferTime = expiryTime - (5 * 60 * 1000); // 5 minutes buffer\n      \n      if (now >= bufferTime) {\n        toast({\n          title: \"Offer Expired\",\n          description: \"This flight offer has expired. Please refresh your search to get current prices.\",\n          variant: \"destructive\",\n        });\n        return;\n      }\n    }\n    \n    // Check if offers have expired or are stale\n    if (isExpired || isStale) {\n      toast({\n        title: \"Offers Expired\",\n        description: \"The flight offers have expired or are too old. Please refresh the search to get updated prices.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n    \n    // Check if user is authenticated\n    const { data: { session } } = await supabase.auth.getSession();\n    \n    if (!session) {\n      // User is not authenticated, show auth modal\n      setPendingBooking(true);\n      setShowAuthModal(true);\n      return;\n    }\n    \n    // User is authenticated, proceed with Stripe payment\n    await initiateStripePayment();\n  };\n  \n  const initiateStripePayment = async () => {\n    if (!selectedOffer) return;\n    \n    setPaymentProcessing(true);\n    \n    try {\n      // Calculate additional fees\n      const luggageFees = passengerForms.reduce((total, p) => {\n        const checkedPrice = luggageOptions.find(opt => opt.type === 'checked' && opt.weight === '23kg')?.price || 0;\n        const carryOnPrice = luggageOptions.find(opt => opt.type === 'carry_on' && opt.weight === '10kg')?.price || 0;\n        return total + (p.luggage?.checked || 0) * checkedPrice + (p.luggage?.carry_on || 0) * carryOnPrice;\n      }, 0);\n\n      const ancillariesFees = ancillariesMetadata ? \n        (parseFloat(ancillariesMetadata.offer_total_amount) - parseFloat(selectedOffer?.total_amount || '0')) : 0;\n\n      const totalAmount = calculateTotalPrice();\n\n      // Prepare flight details\n      const flightDetails = {\n        origin: selectedOffer.slices[0]?.segments[0]?.origin?.iata_code || '',\n        destination: selectedOffer.slices[0]?.segments[0]?.destination?.iata_code || '',\n        departureDate: selectedOffer.slices[0]?.segments[0]?.departing_at?.split('T')[0] || '',\n        returnDate: selectedOffer.slices.length > 1 ? selectedOffer.slices[1]?.segments[0]?.departing_at?.split('T')[0] : undefined,\n        airline: selectedOffer.slices[0]?.segments[0]?.marketing_carrier?.name || '',\n        flightNumber: selectedOffer.slices[0]?.segments[0]?.marketing_carrier?.iata_code || ''\n      };\n\n      // Create payment request\n      const paymentRequest = {\n        offerId: selectedOffer.id,\n        passengers: passengerForms.map(passenger => {\n          const phoneNumber = `${passenger.phone_country_code}${passenger.phone_number.replace(/[^\\d]/g, '')}`;\n          return {\n            id: passenger.id,\n            title: passenger.title,\n            given_name: passenger.given_name,\n            family_name: passenger.family_name,\n            email: passenger.email,\n            phone_number: phoneNumber,\n            gender: passenger.gender === 'male' ? 'm' : 'f',\n            born_on: passenger.born_on,\n          };\n        }),\n        amount: totalAmount.toFixed(2),\n        currency: selectedOffer.total_currency,\n        base_amount: selectedOffer.base_amount,\n        base_currency: selectedOffer.base_currency,\n        luggage_fees: luggageFees.toFixed(2),\n        ancillaries_fees: ancillariesFees.toFixed(2),\n        ancillaries: ancillariesPayload,\n        flightDetails\n      };\n\n      console.log('Creating Stripe checkout session:', JSON.stringify(paymentRequest, null, 2));\n\n      // Call our Stripe payment function\n      const { data, error } = await supabase.functions.invoke('stripe-flight-payment', {\n        body: paymentRequest,\n        headers: {\n          'Authorization': `Bearer ${(await supabase.auth.getSession()).data.session?.access_token}`\n        }\n      });\n\n      if (error) {\n        console.error('Error creating checkout session:', error);\n        toast({\n          title: \"Payment Error\",\n          description: error.message || \"Failed to create checkout session\",\n          variant: \"destructive\",\n        });\n        return;\n      }\n\n      console.log('Checkout session created:', data);\n      \n      // Redirect to Stripe Checkout\n      if (data.url) {\n        window.location.href = data.url;\n      } else {\n        toast({\n          title: \"Payment Error\",\n          description: \"No checkout URL received\",\n          variant: \"destructive\",\n        });\n      }\n\n    } catch (error: any) {\n      console.error('Error initiating payment:', error);\n      toast({\n        title: \"Payment Error\",\n        description: error.message || \"Failed to initiate payment\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setPaymentProcessing(false);\n    }\n  };\n  \n  const performBooking = async () => {\n    setIsBooking(true);\n    try {\n      // Calculate additional fees\n      const luggageFees = passengerForms.reduce((total, p) => {\n        const checkedPrice = luggageOptions.find(opt => opt.type === 'checked' && opt.weight === '23kg')?.price || 0;\n        const carryOnPrice = luggageOptions.find(opt => opt.type === 'carry_on' && opt.weight === '10kg')?.price || 0;\n        return total + (p.luggage?.checked || 0) * checkedPrice + (p.luggage?.carry_on || 0) * carryOnPrice;\n      }, 0);\n\n      const ancillariesFees = ancillariesMetadata ? \n        (parseFloat(ancillariesMetadata.offer_total_amount) - parseFloat(selectedOffer?.total_amount || '0')) : 0;\n\n      // Create booking request\n      const bookingRequest = {\n        offerId: selectedOffer?.id,\n        passengers: passengerForms.map(passenger => {\n          const phoneNumber = `${passenger.phone_country_code}${passenger.phone_number.replace(/[^\\d]/g, '')}`;\n          console.log(`Passenger ${passenger.id} phone: ${passenger.phone_country_code} + ${passenger.phone_number} = ${phoneNumber}`);\n          \n          return {\n            id: passenger.id,\n            title: passenger.title,\n            given_name: passenger.given_name,\n            family_name: passenger.family_name,\n            email: passenger.email,\n            phone_number: phoneNumber, // Include country code and clean number\n            gender: passenger.gender === 'male' ? 'm' : 'f',\n            born_on: passenger.born_on, // Send the date as is, let Duffel handle validation\n          };\n        }),\n        payments: [{\n          type: \"balance\",\n          currency: selectedOffer?.total_currency || \"USD\",\n          amount: selectedOffer?.total_amount || \"0\" // Send original offer amount to Duffel\n        }],\n        luggage_fees: luggageFees.toFixed(2),\n        ancillaries_fees: ancillariesFees.toFixed(2),\n        // Include base amount information if available\n        base_amount: selectedOffer?.base_amount,\n        base_currency: selectedOffer?.base_currency,\n        // Include ancillaries data if available\n        ancillaries: ancillariesPayload ? ancillariesPayload : undefined\n      };\n\n      console.log('Sending booking request:', JSON.stringify(bookingRequest, null, 2));\n      \n      // Check authentication before making the request\n      const { data: { session }, error: authError } = await supabase.auth.getSession();\n      \n      console.log('Auth check - Session:', session ? 'Available' : 'None');\n      console.log('Auth check - Error:', authError);\n      console.log('Auth check - Token:', session?.access_token ? 'Present' : 'Missing');\n      \n      if (authError || !session?.access_token) {\n        console.error('Authentication error:', authError);\n        toast({\n          title: \"Authentication Error\",\n          description: \"Please log in again to complete your booking.\",\n          variant: \"destructive\",\n        });\n        return;\n      }\n      \n      console.log('Session token available, making booking request...');\n      \n      const { data: bookingResults, error } = await supabase.functions.invoke('duffel-booking', {\n        body: bookingRequest,\n        headers: {\n          'Authorization': `Bearer ${session.access_token}`\n        }\n      });\n\n      if (error) throw error;\n\n      toast({\n        title: t('booking.bookingSuccessful'),\n        description: t('booking.bookingSuccessfulDesc'),\n      });\n\n      // Redirect to bookings page\n      navigate(`/${i18n.language}/bookings`);\n    } catch (error: any) {\n      console.error('Error booking flight:', error);\n      console.error('Error details:', error);\n      \n      let errorMessage = error.message || t('booking.bookingFailed');\n      \n      // Handle specific error types\n      if (error.status === 401) {\n        errorMessage = \"Authentication failed. Please log in again to complete your booking.\";\n      } else if (error.error) {\n        errorMessage = error.error;\n      }\n      \n      toast({\n        title: t('booking.bookingFailed'),\n        description: errorMessage,\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsBooking(false);\n    }\n  };\n  \n  const handleAuthSuccess = async () => {\n    setShowAuthModal(false);\n    \n    if (pendingBooking) {\n      setPendingBooking(false);\n      // Proceed with booking after successful authentication\n      await performBooking();\n    }\n  };\n\n  const formatTime = (dateString: string) => {\n    return format(new Date(dateString), 'HH:mm');\n  };\n\n  const formatDate = (dateString: string) => {\n    return format(new Date(dateString), 'MMM dd, yyyy');\n  };\n\n  const getDuration = (segments: any[]) => {\n    if (!segments.length) return '0h 0m';\n    \n    const firstSegment = segments[0];\n    const lastSegment = segments[segments.length - 1];\n    \n    const departure = new Date(firstSegment.departing_at);\n    const arrival = new Date(lastSegment.arriving_at);\n    \n    const diffMs = arrival.getTime() - departure.getTime();\n    const diffHrs = Math.floor(diffMs / (1000 * 60 * 60));\n    const diffMins = Math.floor((diffMs % (1000 * 60 * 60)) / (1000 * 60));\n    \n    return `${diffHrs}h ${diffMins}m`;\n  };\n\n  const getStops = (segments: any[]) => {\n    const stops = Math.max(0, segments.length - 1);\n    if (stops === 0) return t('flight.direct');\n    if (stops === 1) return `1 ${t('flight.stop')}`;\n    return `${stops} ${t('flight.stops')}`;\n  };\n\n  // Fetch exchange rates if needed\n  const fetchExchangeRates = async (base: string) => {\n    if (exchangeRates[base] && Date.now() - lastRatesFetch.current < 1000 * 60 * 5) return exchangeRates[base]; // 5 min cache\n    try {\n      const response = await fetch(`https://open.er-api.com/v6/latest/${base}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch exchange rates');\n      }\n      const data = await response.json();\n      if (data.result === 'success') {\n        setExchangeRates((prev) => ({ ...prev, [base]: data.rates }));\n        lastRatesFetch.current = Date.now();\n        return data.rates;\n      } else {\n        throw new Error('Invalid response from exchange rate API');\n      }\n    } catch (e) {\n      console.error('Error fetching exchange rates:', e);\n      return exchangeRates[base];\n    }\n  };\n\n  // Calculate time remaining until offer expires\n  const calculateTimeRemaining = (expiresAt: string | null, searchStartedAt: string | null) => {\n    if (!expiresAt) return 0;\n    \n    const now = new Date().getTime();\n    const expiryTime = new Date(expiresAt).getTime();\n    const remaining = Math.max(0, expiryTime - now);\n    \n    return remaining;\n  };\n\n  // Format time remaining as MM:SS\n  const formatTimeRemaining = (milliseconds: number) => {\n    if (milliseconds <= 0) return '00:00';\n    \n    const totalSeconds = Math.floor(milliseconds / 1000);\n    const minutes = Math.floor(totalSeconds / 60);\n    const seconds = totalSeconds % 60;\n    \n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  // Helper function to format penalty amount with currency conversion\n  const formatPenalty = (amount: string | null, penaltyCurrency: string | null) => {\n    if (amount === null || penaltyCurrency === null) return 'Unknown';\n    \n    // If the penalty currency matches the user's selected currency, show as is\n    if (penaltyCurrency === currency) {\n      return `${amount} ${penaltyCurrency}`;\n    }\n    \n    // If we have exchange rates and the penalty currency is different, convert it\n    if (exchangeRates[penaltyCurrency] && exchangeRates[penaltyCurrency][currency]) {\n      const convertedAmount = (parseFloat(amount) * exchangeRates[penaltyCurrency][currency]).toFixed(2);\n      return `${convertedAmount} ${currency}`;\n    }\n    \n    // Fallback: show original amount with original currency\n    return `${amount} ${penaltyCurrency}`;\n  };\n\n  const calculateTotalPrice = () => {\n    if (!selectedOffer) return 0;\n    \n    let basePrice = parseFloat(selectedOffer.total_amount);\n    let luggagePrice = 0;\n    let ancillariesPrice = 0;\n    \n    // Calculate luggage costs\n    passengerForms.forEach(passenger => {\n      if (passenger.luggage) {\n        const checkedOption = luggageOptions.find(opt => opt.type === 'checked' && opt.weight === '23kg');\n        const carryOnOption = luggageOptions.find(opt => opt.type === 'carry_on' && opt.weight === '10kg');\n        \n        if (checkedOption) luggagePrice += passenger.luggage.checked * checkedOption.price;\n        if (carryOnOption) luggagePrice += passenger.luggage.carry_on * carryOnOption.price;\n      }\n    });\n    \n    // Calculate ancillaries costs\n    if (ancillariesMetadata) {\n      ancillariesPrice = parseFloat(ancillariesMetadata.offer_total_amount) - basePrice;\n    }\n    \n    return basePrice + luggagePrice + ancillariesPrice;\n  };\n\n  if (!selectedOffer) {\n    return (\n      <div className=\"min-h-screen bg-[#fcfcfc] flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-[#61936f] mx-auto mb-4\"></div>\n          <p className=\"text-[#1d1d1e]\">{t('details.title')}</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#fcfcfc]\">\n      {/* Header */}\n      <div className=\"bg-white border-b border-gray-200 sticky top-0 z-10\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center space-x-4\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={async () => {\n                  // Get search ID from current URL\n                  const searchIdFromUrl = flightDataPersistence.getSearchIdFromUrl(window.location.href);\n                  console.log('Go back to research - Current URL:', window.location.href);\n                  console.log('Go back to research - Search ID from URL:', searchIdFromUrl);\n                  \n                  if (searchIdFromUrl) {\n                    // Load search data to get original search parameters\n                    const searchData = await flightDataPersistence.loadFlightDataBySearchId(searchIdFromUrl);\n                    console.log('Go back to research - Loaded search data:', searchData);\n                    if (searchData) {\n                      // Create search URL with original parameters\n                      const searchUrl = flightDataPersistence.createSearchUrl(searchData.searchParams, i18n.language);\n                      console.log('Go back to research - Created search URL:', searchUrl);\n                      navigate(searchUrl);\n                    } else {\n                      // Fallback to basic flights URL\n                      console.log('Go back to research - No search data found, using fallback URL');\n                      navigate(`/${i18n.language}/booking/internal-flights`);\n                    }\n                  } else {\n                    // No search ID, go to basic flights URL\n                    console.log('Go back to research - No search ID found, using fallback URL');\n                    navigate(`/${i18n.language}/booking/internal-flights`);\n                  }\n                }}\n                className=\"text-[#1d1d1e] hover:text-[#61936f]\"\n              >\n                <ArrowLeft className=\"h-4 w-4 mr-2\" />\n                {t('details.backToSearch')}\n              </Button>\n              <Separator orientation=\"vertical\" className=\"h-6\" />\n              <h1 className=\"text-lg font-semibold text-[#1d1d1e]\">\n                {t('details.title')}\n              </h1>\n              {searchTiming?.expires_at && (\n                <div className={`flex items-center gap-2 px-3 py-1 rounded-full text-sm font-medium ${\n                  isExpired \n                    ? 'bg-red-100 text-red-700 border border-red-200' \n                    : timeRemaining < 60000 \n                      ? 'bg-orange-100 text-orange-700 border border-orange-200' \n                      : 'bg-green-100 text-green-700 border border-green-200'\n                }`}>\n                  <Clock className=\"h-4 w-4\" />\n                  {isExpired ? (\n                    <span>Offers Expired</span>\n                  ) : (\n                    <span>Expires in {flightDataPersistence.formatTimeRemaining(timeRemaining)}</span>\n                  )}\n                </div>\n              )}\n              {/* Show warning for stale offers */}\n              {isStale && (\n                <div className=\"flex items-center gap-2 px-3 py-1 rounded-full text-sm font-medium bg-yellow-100 text-yellow-700 border border-yellow-200\">\n                  <Clock className=\"h-4 w-4\" />\n                  <span>Offers may be expired - Refresh recommended</span>\n                </div>\n              )}\n            </div>\n            \n            {/* Progress Steps */}\n            <div className=\"hidden md:flex items-center space-x-4\">\n              <div className={cn(\n                \"flex items-center space-x-2\",\n                currentStep === 'passengers' ? \"text-[#61936f]\" : \"text-[#62626a]\"\n              )}>\n                <div className={cn(\n                  \"w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium\",\n                  currentStep === 'passengers' ? \"bg-[#61936f] text-white\" : \"bg-gray-200 text-gray-600\"\n                )}>\n                  1\n                </div>\n                <span className=\"text-sm font-medium\">{t('steps.passengers')}</span>\n              </div>\n              <ArrowRight className=\"h-4 w-4 text-[#62626a]\" />\n              <div className={cn(\n                \"flex items-center space-x-2\",\n                currentStep === 'ancillaries' ? \"text-[#61936f]\" : \"text-[#62626a]\"\n              )}>\n                <div className={cn(\n                  \"w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium\",\n                  currentStep === 'ancillaries' ? \"bg-[#61936f] text-white\" : \"bg-gray-200 text-gray-600\"\n                )}>\n                  2\n                </div>\n                <span className=\"text-sm font-medium\">{t('steps.ancillaries')}</span>\n              </div>\n              <ArrowRight className=\"h-4 w-4 text-[#62626a]\" />\n              <div className={cn(\n                \"flex items-center space-x-2\",\n                currentStep === 'luggage' ? \"text-[#61936f]\" : \"text-[#62626a]\"\n              )}>\n                <div className={cn(\n                  \"w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium\",\n                  currentStep === 'luggage' ? \"bg-[#61936f] text-white\" : \"bg-gray-200 text-gray-600\"\n                )}>\n                  3\n                </div>\n                <span className=\"text-sm font-medium\">{t('steps.luggage')}</span>\n              </div>\n              <ArrowRight className=\"h-4 w-4 text-[#62626a]\" />\n              <div className={cn(\n                \"flex items-center space-x-2\",\n                currentStep === 'payment' ? \"text-[#61936f]\" : \"text-[#62626a]\"\n              )}>\n                <div className={cn(\n                  \"w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium\",\n                  currentStep === 'payment' ? \"bg-[#61936f] text-white\" : \"bg-gray-200 text-gray-600\"\n                )}>\n                  4\n                </div>\n                <span className=\"text-sm font-medium\">{t('steps.payment')}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Flight Details - Left Side */}\n          <div className=\"lg:col-span-1\">\n            <Card className=\"sticky top-24\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Plane className=\"h-5 w-5 text-[#61936f]\" />\n                  <span>{t('flight.details')}</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                {/* Flight Summary */}\n                <div className=\"space-y-4\">\n                  {selectedOffer.slices.map((slice, index) => (\n                    <div key={index} className=\"space-y-3\">\n                      <div className=\"flex items-center justify-between\">\n                        <Badge variant=\"outline\" className=\"text-[#61936f] border-[#61936f]\">\n                          {index === 0 ? t('flight.outbound') : t('flight.return')}\n                        </Badge>\n                        <span className=\"text-sm text-[#62626a]\">\n                          {formatDate(slice.segments[0].departing_at)}\n                        </span>\n                      </div>\n                      \n                      <div className=\"space-y-3\">\n                        {slice.segments.map((segment, segIndex) => (\n                          <div key={segIndex} className=\"space-y-2\">\n                            <div className=\"flex items-center justify-between\">\n                              <div className=\"flex items-center space-x-3\">\n                                <div className=\"text-center\">\n                                  <p className=\"font-semibold text-lg\">\n                                    {formatTime(segment.departing_at)}\n                                  </p>\n                                  <p className=\"text-sm text-[#62626a]\">\n                                    {segment.origin.iata_code}\n                                  </p>\n                                </div>\n                                <div className=\"flex-1 flex items-center justify-center\">\n                                  <div className=\"flex-1 h-px bg-gray-300\"></div>\n                                  <Plane className=\"h-4 w-4 text-[#61936f] mx-2\" />\n                                  <div className=\"flex-1 h-px bg-gray-300\"></div>\n                                </div>\n                                <div className=\"text-center\">\n                                  <p className=\"font-semibold text-lg\">\n                                    {formatTime(segment.arriving_at)}\n                                  </p>\n                                  <p className=\"text-sm text-[#62626a]\">\n                                    {segment.destination.iata_code}\n                                  </p>\n                                </div>\n                              </div>\n                            </div>\n                            \n                            <div className=\"flex items-center justify-between text-sm text-[#62626a]\">\n                              <div className=\"flex items-center space-x-2\">\n                                <Clock className=\"h-3 w-3\" />\n                                <span>{getDuration([segment])}</span>\n                              </div>\n                              <div className=\"flex items-center space-x-2\">\n                                <MapPin className=\"h-3 w-3\" />\n                                <span>{getStops([segment])}</span>\n                              </div>\n                            </div>\n                            \n                            <div className=\"bg-gray-50 p-3 rounded-lg\">\n                              <div className=\"flex items-center justify-between\">\n                                <div>\n                                  <p className=\"font-medium text-sm\">\n                                    {segment.marketing_carrier.name}\n                                  </p>\n                                  <p className=\"text-xs text-[#62626a]\">\n                                    {t('flight.flight')} {segment.marketing_carrier.iata_code}\n                                  </p>\n                                </div>\n                                {segment.aircraft && (\n                                  <div className=\"text-right\">\n                                    <p className=\"text-xs text-[#62626a]\">\n                                      {segment.aircraft.name}\n                                    </p>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n\n                <Separator />\n\n                {/* Price Summary */}\n                <div className=\"space-y-3\">\n                  <h3 className=\"font-semibold text-[#1d1d1e]\">{t('payment.priceBreakdown')}</h3>\n                  <div className=\"space-y-2 text-sm\">\n                    {selectedOffer.base_amount && selectedOffer.base_currency && (\n                      <>\n                        <div className=\"flex justify-between\">\n                          <span>Base Fare</span>\n                          <span>{selectedOffer.base_currency} {selectedOffer.base_amount}</span>\n                        </div>\n                        <div className=\"flex justify-between text-gray-500\">\n                          <span>Taxes & Fees</span>\n                          <span>{selectedOffer.total_currency} {(parseFloat(selectedOffer.total_amount) - parseFloat(selectedOffer.base_amount)).toFixed(2)}</span>\n                        </div>\n                        <Separator />\n                      </>\n                    )}\n                    <div className=\"flex justify-between\">\n                      <span>{t('payment.baseFare')}</span>\n                      <span>{selectedOffer.total_currency} {selectedOffer.total_amount}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>{t('payment.luggageFees')}</span>\n                      <span>USD {passengerForms.reduce((total, p) => {\n                        const checkedPrice = luggageOptions.find(opt => opt.type === 'checked' && opt.weight === '23kg')?.price || 0;\n                        const carryOnPrice = luggageOptions.find(opt => opt.type === 'carry_on' && opt.weight === '10kg')?.price || 0;\n                        return total + (p.luggage?.checked || 0) * checkedPrice + (p.luggage?.carry_on || 0) * carryOnPrice;\n                      }, 0)}</span>\n                    </div>\n                    {ancillariesMetadata && (\n                      <div className=\"flex justify-between\">\n                        <span>{t('payment.ancillariesFees')}</span>\n                        <span>{ancillariesMetadata.offer_total_currency} {(parseFloat(ancillariesMetadata.offer_total_amount) - parseFloat(selectedOffer.total_amount)).toFixed(2)}</span>\n                      </div>\n                    )}\n                    <Separator />\n                    <div className=\"flex justify-between font-semibold\">\n                      <span>{t('payment.total')}</span>\n                      <div className=\"flex items-center gap-2\">\n                        {isDev && (\n                          <Badge variant=\"secondary\" className=\"text-xs\">\n                            {getDevModeBadge()}\n                          </Badge>\n                        )}\n                        <span className={isDev ? \"line-through text-gray-500\" : \"\"}>\n                          {selectedOffer.total_currency} {calculateTotalPrice().toFixed(2)}\n                        </span>\n                        {isDev && (\n                          <span className=\"text-green-600 font-bold\">\n                            {selectedOffer.total_currency} 0.00\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Booking Conditions */}\n                <div className=\"space-y-3\">\n                  <h3 className=\"font-semibold text-[#1d1d1e]\">{t('booking.conditions')}</h3>\n                  <div className=\"space-y-2 text-sm\">\n                    <div className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"h-4 w-4 text-green-500\" />\n                      <span>\n                        {t('booking.changes')}: {selectedOffer.conditions.change_before_departure?.allowed ? t('booking.allowed') : t('booking.notAllowed')}\n                        {selectedOffer.conditions.change_before_departure?.allowed && selectedOffer.conditions.change_before_departure?.penalty_amount && (\n                          <span className=\"text-yellow-600 ml-2\">\n                            (Fee: {formatPenalty(selectedOffer.conditions.change_before_departure.penalty_amount, selectedOffer.conditions.change_before_departure.penalty_currency)})\n                          </span>\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center space-x-2\">\n                      <CheckCircle className=\"h-4 w-4 text-green-500\" />\n                      <span>\n                        {t('booking.refunds')}: {selectedOffer.conditions.refund_before_departure?.allowed ? t('booking.allowed') : t('booking.notAllowed')}\n                        {selectedOffer.conditions.refund_before_departure?.allowed && selectedOffer.conditions.refund_before_departure?.penalty_amount && (\n                          <span className=\"text-yellow-600 ml-2\">\n                            (Fee: {formatPenalty(selectedOffer.conditions.refund_before_departure.penalty_amount, selectedOffer.conditions.refund_before_departure.penalty_currency)})\n                          </span>\n                        )}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Passenger Forms - Right Side */}\n          <div className=\"lg:col-span-2 space-y-6\">\n            {currentStep === 'passengers' && (\n              <div className=\"space-y-6\">\n                <div>\n                  <h2 className=\"text-2xl font-semibold text-[#1d1d1e] mb-2\">\n                    {t('details.passengerInfo')}\n                  </h2>\n                  <p className=\"text-[#62626a]\">\n                    {t('details.passengerInfoDesc')}\n                  </p>\n                </div>\n\n                {passengerForms.map((passenger, index) => (\n                  <Card key={passenger.id}>\n                    <Collapsible \n                      open={expandedPassengers.has(passenger.id)}\n                      onOpenChange={() => togglePassenger(passenger.id)}\n                    >\n                      <CollapsibleTrigger asChild>\n                        <CardHeader className=\"cursor-pointer hover:bg-gray-50 transition-colors\">\n                          <div className=\"flex items-center justify-between\">\n                            <div className=\"flex items-center space-x-3\">\n                              <div className=\"w-8 h-8 bg-[#61936f] text-white rounded-full flex items-center justify-center text-sm font-medium\">\n                                {index + 1}\n                              </div>\n                              <div>\n                                                              <CardTitle className=\"text-lg\">\n                                {t('details.passenger')} {index + 1}\n                              </CardTitle>\n                              <CardDescription>\n                                {passenger.given_name && passenger.family_name \n                                  ? `${passenger.given_name} ${passenger.family_name}`\n                                  : t('details.clickToAddDetails')\n                                }\n                              </CardDescription>\n                              </div>\n                            </div>\n                            {expandedPassengers.has(passenger.id) ? (\n                              <ChevronUp className=\"h-5 w-5 text-[#62626a]\" />\n                            ) : (\n                              <ChevronDown className=\"h-5 w-5 text-[#62626a]\" />\n                            )}\n                          </div>\n                        </CardHeader>\n                      </CollapsibleTrigger>\n                      \n                      <CollapsibleContent>\n                        <CardContent className=\"space-y-4\">\n                          {/* Fill with profile info button */}\n                          {profile && (\n                            <div className=\"flex justify-end mb-4\">\n                              <Button\n                                type=\"button\"\n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={() => fillWithProfileInfo(passenger.id)}\n                                className=\"text-sm\"\n                              >\n                                <User className=\"h-4 w-4 mr-2\" />\n                                {t('passenger.fillWithMyInfo')}\n                              </Button>\n                            </div>\n                          )}\n                          \n                          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                            <div>\n                              <Label htmlFor={`title-${passenger.id}`}>{t('passenger.title')}</Label>\n                              <Select \n                                value={passenger.title} \n                                onValueChange={(value) => updatePassengerForm(passenger.id, 'title', value)}\n                              >\n                                <SelectTrigger>\n                                  <SelectValue placeholder={t('passenger.selectTitle')} />\n                                </SelectTrigger>\n                                <SelectContent>\n                                  <SelectItem value=\"mr\">{t('passenger.mr')}</SelectItem>\n                                  <SelectItem value=\"mrs\">{t('passenger.mrs')}</SelectItem>\n                                  <SelectItem value=\"ms\">{t('passenger.ms')}</SelectItem>\n                                  <SelectItem value=\"dr\">{t('passenger.dr')}</SelectItem>\n                                  <SelectItem value=\"miss\">{t('passenger.miss')}</SelectItem>\n                                  <SelectItem value=\"master\">{t('passenger.master')}</SelectItem>\n                                </SelectContent>\n                              </Select>\n                            </div>\n\n                            <div>\n                              <Label htmlFor={`gender-${passenger.id}`}>{t('passenger.gender')}</Label>\n                              <Select \n                                value={passenger.gender} \n                                onValueChange={(value) => updatePassengerForm(passenger.id, 'gender', value)}\n                              >\n                                <SelectTrigger>\n                                  <SelectValue placeholder={t('passenger.selectGender')} />\n                                </SelectTrigger>\n                                <SelectContent>\n                                  <SelectItem value=\"male\">{t('passenger.male')}</SelectItem>\n                                  <SelectItem value=\"female\">{t('passenger.female')}</SelectItem>\n                                </SelectContent>\n                              </Select>\n                            </div>\n\n                            <div>\n                              <Label htmlFor={`given-name-${passenger.id}`}>{t('passenger.firstName')}</Label>\n                              <Input\n                                id={`given-name-${passenger.id}`}\n                                value={passenger.given_name}\n                                onChange={(e) => updatePassengerForm(passenger.id, 'given_name', e.target.value)}\n                                placeholder={t('passenger.enterFirstName')}\n                              />\n                            </div>\n\n                            <div>\n                              <Label htmlFor={`family-name-${passenger.id}`}>{t('passenger.lastName')}</Label>\n                              <Input\n                                id={`family-name-${passenger.id}`}\n                                value={passenger.family_name}\n                                onChange={(e) => updatePassengerForm(passenger.id, 'family_name', e.target.value)}\n                                placeholder={t('passenger.enterLastName')}\n                              />\n                            </div>\n\n                            <div>\n                              <Label htmlFor={`email-${passenger.id}`}>{t('passenger.email')}</Label>\n                              <Input\n                                id={`email-${passenger.id}`}\n                                type=\"email\"\n                                value={passenger.email}\n                                onChange={(e) => updatePassengerForm(passenger.id, 'email', e.target.value)}\n                                placeholder={t('passenger.enterEmail')}\n                              />\n                            </div>\n\n                            <div>\n                              <Label htmlFor={`phone-${passenger.id}`}>{t('passenger.phoneNumber')}</Label>\n                              <PhoneInput\n                                value={passenger.phone_number || ''}\n                                onChange={val => updatePassengerForm(passenger.id, 'phone_number', val)}\n                                countryCode={passenger.phone_country_code || '+1'}\n                                onCountryCodeChange={val => updatePassengerForm(passenger.id, 'phone_country_code', val)}\n                              />\n                            </div>\n\n                            <div>\n                              <DatePicker\n                                date={passenger.born_on ? (() => {\n                                  const [year, month, day] = passenger.born_on.split('-').map(Number);\n                                  return new Date(year, month - 1, day);\n                                })() : undefined}\n                                setDate={date => updatePassengerForm(passenger.id, 'born_on', date ? `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}` : '')}\n                                label={t('passenger.dateOfBirth')}\n                                placeholder={t('passenger.selectDateOfBirth')}\n                                maxYear={new Date().getFullYear()}\n                                disabledDates={(date) => date > new Date()}\n                              />\n                            </div>\n                            <div className=\"space-y-2\">\n                              <Label>{t('passenger.passportNumber')}</Label>\n                              <Input\n                                value={passenger.passport_number}\n                                onChange={e => updatePassengerForm(passenger.id, 'passport_number', e.target.value)}\n                                placeholder={t('passenger.enterPassportNumber')}\n                              />\n                            </div>\n                            <div className=\"space-y-2\">\n                              <Label>{t('passenger.passportCountry')}</Label>\n                              <Select\n                                value={passenger.passport_country}\n                                onValueChange={val => updatePassengerForm(passenger.id, 'passport_country', val)}\n                              >\n                                <SelectTrigger>\n                                  <SelectValue placeholder={t('passenger.selectPassportCountry')} />\n                                </SelectTrigger>\n                                <SelectContent>\n                                  {PASSPORT_COUNTRIES.map(c => (\n                                    <SelectItem key={c.code} value={c.code}>{c.name}</SelectItem>\n                                  ))}\n                                </SelectContent>\n                              </Select>\n                            </div>\n                            <div className=\"space-y-2\">\n                              <DatePicker\n                                date={passenger.passport_expiry ? (() => {\n                                  const [year, month, day] = passenger.passport_expiry.split('-').map(Number);\n                                  return new Date(year, month - 1, day);\n                                })() : undefined}\n                                setDate={date => updatePassengerForm(passenger.id, 'passport_expiry', date ? `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}` : '')}\n                                label={t('passenger.passportExpiry')}\n                                placeholder={t('passenger.selectPassportExpiry')}\n                                minYear={new Date().getFullYear()}\n                                maxYear={new Date().getFullYear() + 20}\n                                disabledDates={(date) => date < new Date()}\n                              />\n                            </div>\n                          </div>\n                        </CardContent>\n                      </CollapsibleContent>\n                    </Collapsible>\n                  </Card>\n                ))}\n\n                <div className=\"flex justify-end\">\n                  <Button\n                    onClick={handleNextStep}\n                    className=\"bg-[#61936f] hover:bg-[#4a7a5a] text-white\"\n                  >\n                    {t('navigation.continueToAncillaries')}\n                    <ArrowRight className=\"h-4 w-4 ml-2\" />\n                  </Button>\n                </div>\n              </div>\n            )}\n\n            {currentStep === 'ancillaries' && selectedOffer && (\n              <AncillariesStep\n                offerId={selectedOffer.id}\n                passengers={passengerForms}\n                onAncillariesSelected={handleAncillariesSelected}\n                onBack={handlePreviousStep}\n                onContinue={handleNextStep}\n                selectedAncillaries={ancillariesPayload}\n                ancillariesMetadata={ancillariesMetadata}\n              />\n            )}\n\n            {currentStep === 'luggage' && (\n              <div className=\"space-y-6\">\n                <div>\n                  <h2 className=\"text-2xl font-semibold text-[#1d1d1e] mb-2\">\n                    Luggage Selection\n                  </h2>\n                  <p className=\"text-[#62626a]\">\n                    Choose your luggage options for each passenger.\n                  </p>\n                </div>\n\n                {passengerForms.map((passenger, index) => (\n                  <Card key={passenger.id}>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center space-x-2\">\n                        <Luggage className=\"h-5 w-5 text-[#61936f]\" />\n                        <span>Passenger {index + 1}: {passenger.given_name} {passenger.family_name}</span>\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent className=\"space-y-6\">\n                      {/* Checked Luggage */}\n                      <div className=\"space-y-3\">\n                        <h3 className=\"font-medium text-[#1d1d1e]\">Checked Luggage</h3>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                          {luggageOptions.filter(opt => opt.type === 'checked').map((option) => (\n                            <div\n                              key={option.weight}\n                              className={cn(\n                                \"border rounded-lg p-4 cursor-pointer transition-colors\",\n                                (passenger.luggage?.checked || 0) > 0\n                                  ? \"border-[#61936f] bg-[#61936f]/5\"\n                                  : \"border-gray-200 hover:border-gray-300\"\n                              )}\n                              onClick={() => updateLuggage(passenger.id, 'checked', \n                                (passenger.luggage?.checked || 0) > 0 ? 0 : 1\n                              )}\n                            >\n                              <div className=\"flex items-center justify-between\">\n                                <div>\n                                  <p className=\"font-medium\">{option.weight}</p>\n                                  <p className=\"text-sm text-[#62626a]\">Checked bag</p>\n                                </div>\n                                <div className=\"text-right\">\n                                  <p className=\"font-medium\">\n                                    {option.price === 0 ? 'Free' : `$${option.price}`}\n                                  </p>\n                                </div>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n\n                      {/* Carry-on Luggage */}\n                      <div className=\"space-y-3\">\n                        <h3 className=\"font-medium text-[#1d1d1e]\">Carry-on Luggage</h3>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                          {luggageOptions.filter(opt => opt.type === 'carry_on').map((option) => (\n                            <div\n                              key={option.weight}\n                              className={cn(\n                                \"border rounded-lg p-4 cursor-pointer transition-colors\",\n                                (passenger.luggage?.carry_on || 0) > 0\n                                  ? \"border-[#61936f] bg-[#61936f]/5\"\n                                  : \"border-gray-200 hover:border-gray-300\"\n                              )}\n                              onClick={() => updateLuggage(passenger.id, 'carry_on', \n                                (passenger.luggage?.carry_on || 0) > 0 ? 0 : 1\n                              )}\n                            >\n                              <div className=\"flex items-center justify-between\">\n                                <div>\n                                  <p className=\"font-medium\">{option.weight}</p>\n                                  <p className=\"text-sm text-[#62626a]\">Carry-on bag</p>\n                                </div>\n                                <div className=\"text-right\">\n                                  <p className=\"font-medium\">\n                                    {option.price === 0 ? 'Free' : `$${option.price}`}\n                                  </p>\n                                </div>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n\n                <div className=\"flex justify-between\">\n                  <Button\n                    variant=\"outline\"\n                    onClick={handlePreviousStep}\n                  >\n                    <ArrowLeft className=\"h-4 w-4 mr-2\" />\n                    {t('navigation.backToAncillaries')}\n                  </Button>\n                  <Button\n                    onClick={handleNextStep}\n                    className=\"bg-[#61936f] hover:bg-[#4a7a5a] text-white\"\n                  >\n                    {t('navigation.continueToPayment')}\n                    <ArrowRight className=\"h-4 w-4 ml-2\" />\n                  </Button>\n                </div>\n              </div>\n            )}\n\n            {currentStep === 'payment' && (\n              <div className=\"space-y-6\">\n                <div>\n                  <h2 className=\"text-2xl font-semibold text-[#1d1d1e] mb-2\">\n                    Payment & Confirmation\n                  </h2>\n                  <p className=\"text-[#62626a]\">\n                    Review your booking details and complete payment.\n                  </p>\n                </div>\n\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Booking Summary</CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <div className=\"space-y-3\">\n                      <h3 className=\"font-medium text-[#1d1d1e]\">Passengers</h3>\n                      {passengerForms.map((passenger, index) => (\n                        <div key={passenger.id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                          <div>\n                            <p className=\"font-medium\">\n                              {passenger.title} {passenger.given_name} {passenger.family_name}\n                            </p>\n                            <p className=\"text-sm text-[#62626a]\">{passenger.email}</p>\n                          </div>\n                          <div className=\"text-right\">\n                            <p className=\"text-sm text-[#62626a]\">\n                              {passenger.luggage?.checked || 0} checked, {passenger.luggage?.carry_on || 0} carry-on\n                            </p>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n\n                    <Separator />\n\n                    <div className=\"space-y-3\">\n                      <h3 className=\"font-medium text-[#1d1d1e]\">Price Breakdown</h3>\n                      <div className=\"space-y-2 text-sm\">\n                        <div className=\"flex justify-between\">\n                          <span>Base fare</span>\n                          <span>{selectedOffer.total_currency} {selectedOffer.total_amount}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>{t('payment.luggageFees')}</span>\n                          <span>USD {passengerForms.reduce((total, p) => {\n                            const checkedPrice = luggageOptions.find(opt => opt.type === 'checked' && opt.weight === '23kg')?.price || 0;\n                            const carryOnPrice = luggageOptions.find(opt => opt.type === 'carry_on' && opt.weight === '10kg')?.price || 0;\n                            return total + (p.luggage?.checked || 0) * checkedPrice + (p.luggage?.carry_on || 0) * carryOnPrice;\n                          }, 0)}</span>\n                        </div>\n                        {ancillariesMetadata && (\n                          <div className=\"flex justify-between\">\n                            <span>{t('payment.ancillariesFees')}</span>\n                            <span>{ancillariesMetadata.offer_total_currency} {(parseFloat(ancillariesMetadata.offer_total_amount) - parseFloat(selectedOffer.total_amount)).toFixed(2)}</span>\n                          </div>\n                        )}\n                        <Separator />\n                        <div className=\"flex justify-between font-semibold text-lg\">\n                          <span>{t('payment.total')}</span>\n                          <div className=\"flex items-center gap-2\">\n                            {isDev && (\n                              <Badge variant=\"secondary\" className=\"text-xs\">\n                                {getDevModeBadge()}\n                              </Badge>\n                            )}\n                            <span className={isDev ? \"line-through text-gray-500\" : \"\"}>\n                              {selectedOffer.total_currency} {calculateTotalPrice().toFixed(2)}\n                            </span>\n                            {isDev && (\n                              <span className=\"text-green-600 font-bold\">\n                                {selectedOffer.total_currency} 0.00\n                              </span>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                      <div className=\"flex items-start space-x-3\">\n                        <Info className=\"h-5 w-5 text-blue-500 mt-0.5\" />\n                        <div>\n                          <p className=\"font-medium text-blue-900\">{t('payment.importantInfo')}</p>\n                          <p className=\"text-sm text-blue-700 mt-1\">\n                            {t('payment.importantInfoDesc')}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                <div className=\"flex justify-between\">\n                  <Button\n                    variant=\"outline\"\n                    onClick={handlePreviousStep}\n                  >\n                    <ArrowLeft className=\"h-4 w-4 mr-2\" />\n                    {t('navigation.backToLuggage')}\n                  </Button>\n                  <Button\n                    onClick={handleBooking}\n                    disabled={paymentProcessing || isExpired || isStale}\n                    className=\"bg-[#61936f] hover:bg-[#4a7a5a] text-white\"\n                  >\n                    {paymentProcessing ? (\n                      <>\n                        <div className=\"mr-2 h-4 w-4 animate-spin rounded-full border-2 border-white border-t-transparent\"></div>\n                        {t('payment.processing')}\n                      </>\n                    ) : (\n                      <>\n                        {t('payment.payNow')} (\n                        {isDev ? (\n                          <span className=\"text-green-600 font-bold\">\n                            {selectedOffer.total_currency} 0.00\n                          </span>\n                        ) : (\n                          `${selectedOffer.total_currency} ${calculateTotalPrice().toFixed(2)}`\n                        )}\n                        )\n                        <CheckCircle className=\"h-4 w-4 ml-2\" />\n                      </>\n                    )}\n                  </Button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      \n      {/* Authentication Modal */}\n      <AuthModal\n        isOpen={showAuthModal}\n        onClose={() => setShowAuthModal(false)}\n        onSuccess={handleAuthSuccess}\n        title=\"Sign in to complete your booking\"\n        description=\"Please sign in or create an account to complete your flight booking.\"\n        defaultTab=\"signin\"\n      />\n    </div>\n  );\n} ","import { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { Button } from \"@/components/ui/button\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { format } from \"date-fns\";\nimport { Calendar as CalendarIcon, Search, Hotel, Star, MapPin } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { supabase } from '@/integrations/supabase/client';\nimport { LocationSearch } from \"@/components/trips/LocationSearch\";\n\ninterface HotelSearchParams {\n  location: string;\n  coordinates: [number, number];\n  checkIn: Date;\n  checkOut: Date;\n  guests: number;\n  rooms: number;\n}\n\ninterface HotelOffer {\n  id: string;\n  hotel: {\n    name: string;\n    rating: number;\n    address: {\n      city: string;\n      country: string;\n    };\n  };\n  room_types: Array<{\n    name: string;\n    description: string;\n  }>;\n  total_amount: string;\n  total_currency: string;\n}\n\ninterface HotelSearchResults {\n  hotels: HotelOffer[];\n}\n\nexport function HotelBooking() {\n  const { t, i18n } = useTranslation();\n  const navigate = useNavigate();\n  const { toast } = useToast();\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchResults, setSearchResults] = useState<HotelOffer[]>([]);\n  const [userProfile, setUserProfile] = useState<{ email: string; phone?: string } | null>(null);\n  const [searchParams, setSearchParams] = useState<HotelSearchParams>({\n    location: '',\n    coordinates: [0, 0],\n    checkIn: new Date(),\n    checkOut: new Date(new Date().setDate(new Date().getDate() + 1)),\n    guests: 1,\n    rooms: 1,\n  });\n\n  // Fetch user profile on component mount\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (user) {\n        // Get user email from auth\n        const email = user.email || '';\n        \n        // Try to get phone from profile\n        const { data: profile } = await supabase\n          .from('profiles')\n          .select('phone')\n          .eq('id', user.id)\n          .single();\n        \n        setUserProfile({\n          email,\n          phone: profile?.phone || ''\n        });\n      }\n    };\n    \n    fetchUserProfile();\n  }, []);\n\n  const handleSearch = async () => {\n    try {\n      setIsLoading(true);\n      \n      // Validate inputs\n      if (!searchParams.location || !searchParams.coordinates[0] || !searchParams.coordinates[1]) {\n        toast({\n          title: \"Missing Location\",\n          description: \"Please select a valid location\",\n          variant: \"destructive\",\n        });\n        return;\n      }\n\n      const { data, error } = await supabase.functions.invoke('duffel-booking-hotel-search', {\n        body: {\n          location: searchParams.location,\n          coordinates: searchParams.coordinates,\n          checkIn: format(searchParams.checkIn, 'yyyy-MM-dd'),\n          checkOut: format(searchParams.checkOut, 'yyyy-MM-dd'),\n          guests: searchParams.guests,\n          rooms: searchParams.rooms,\n        },\n      });\n\n      if (error) {\n        console.error('Supabase function error:', error);\n        throw error;\n      }\n\n      // Check if we got an error response\n      if (data?.error) {\n        if (data.error === 'Feature not enabled') {\n          toast({\n            title: \"Feature Not Available\",\n            description: data.details || \"Hotel booking is currently being set up. Please try again later or contact support for more information.\",\n            variant: \"destructive\",\n          });\n        } else if (data.error === 'No hotels found') {\n          toast({\n            title: \"No Hotels Found\",\n            description: \"No hotels were found for your search criteria. Please try a different location or dates.\",\n            variant: \"destructive\",\n          });\n        } else {\n          toast({\n            title: \"Error\",\n            description: data.details || \"Failed to search hotels. Please try again later.\",\n            variant: \"destructive\",\n          });\n        }\n        return;\n      }\n\n      const results = data as HotelSearchResults;\n      if (!results.hotels || results.hotels.length === 0) {\n        toast({\n          title: \"No Hotels Found\",\n          description: \"No hotels were found for your search criteria. Please try a different location or dates.\",\n          variant: \"destructive\",\n        });\n        return;\n      }\n\n      setSearchResults(results.hotels);\n    } catch (error) {\n      console.error('Error searching hotels:', error);\n      \n      // Check for specific error messages\n      const errorMessage = error.message || '';\n      if (errorMessage.includes('not enabled for your account')) {\n        toast({\n          title: \"Feature Not Available\",\n          description: \"Hotel booking is currently being set up. Please try again later or contact support for more information.\",\n          variant: \"destructive\",\n        });\n      } else {\n        toast({\n          title: \"Error\",\n          description: \"Failed to search hotels. Please try again later.\",\n          variant: \"destructive\",\n        });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleLocationChange = (location: string, coordinates: [number, number]) => {\n    setSearchParams(prev => ({\n      ...prev,\n      location,\n      coordinates\n    }));\n  };\n\n  const handleLocationSelect = (location: string, coordinates: [number, number]) => {\n    setSearchParams(prev => ({\n      ...prev,\n      location,\n      coordinates\n    }));\n  };\n\n  const handleBooking = async (offerId: string) => {\n    try {\n      setIsLoading(true);\n      \n      // Check if we have user profile data\n      if (!userProfile?.email) {\n        toast({\n          title: \"User Information Required\",\n          description: \"Please make sure you're logged in to book a hotel.\",\n          variant: \"destructive\",\n        });\n        return;\n      }\n      \n      const { data, error } = await supabase.functions.invoke('duffel-booking-hotel', {\n        body: {\n          offerId,\n          guests: searchParams.guests,\n          contact: {\n            email: userProfile.email,\n            phone: userProfile.phone || '+1234567890', // Fallback if no phone\n          },\n        },\n      });\n\n      if (error) throw error;\n\n      toast({\n        title: \"Success\",\n        description: \"Hotel booking confirmed!\",\n      });\n\n      // Redirect to bookings page\n      navigate(`/${i18n.language}/bookings`);\n    } catch (error) {\n      console.error('Error booking hotel:', error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to book hotel\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"max-w-4xl mx-auto\">\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-3xl font-bold mb-2\">Book Hotels</h1>\n          <p className=\"text-gray-600\">Find and book the perfect hotel for your stay</p>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-lg p-6 mb-8\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <div className=\"space-y-2\">\n              <label className=\"text-sm font-medium\">Location</label>\n              <LocationSearch\n                value={searchParams.location}\n                onChange={handleLocationChange}\n                onSelect={handleLocationSelect}\n                className=\"w-full\"\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <label className=\"text-sm font-medium\">Check-in Date</label>\n              <Popover>\n                <PopoverTrigger asChild>\n                  <Button\n                    variant=\"outline\"\n                    className={cn(\n                      \"w-full justify-start text-left font-normal\",\n                      !searchParams.checkIn && \"text-muted-foreground\"\n                    )}\n                  >\n                    <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                    {searchParams.checkIn ? (\n                      format(searchParams.checkIn, \"PPP\")\n                    ) : (\n                      <span>Pick a date</span>\n                    )}\n                  </Button>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-auto p-0\">\n                  <Calendar\n                    mode=\"single\"\n                    selected={searchParams.checkIn}\n                    onSelect={(date) => date && setSearchParams({ ...searchParams, checkIn: date })}\n                    initialFocus\n                  />\n                </PopoverContent>\n              </Popover>\n            </div>\n\n            <div className=\"space-y-2\">\n              <label className=\"text-sm font-medium\">Check-out Date</label>\n              <Popover>\n                <PopoverTrigger asChild>\n                  <Button\n                    variant=\"outline\"\n                    className={cn(\n                      \"w-full justify-start text-left font-normal\",\n                      !searchParams.checkOut && \"text-muted-foreground\"\n                    )}\n                  >\n                    <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                    {searchParams.checkOut ? (\n                      format(searchParams.checkOut, \"PPP\")\n                    ) : (\n                      <span>Pick a date</span>\n                    )}\n                  </Button>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-auto p-0\">\n                  <Calendar\n                    mode=\"single\"\n                    selected={searchParams.checkOut}\n                    onSelect={(date) => date && setSearchParams({ ...searchParams, checkOut: date })}\n                    initialFocus\n                  />\n                </PopoverContent>\n              </Popover>\n            </div>\n\n            <div className=\"space-y-2\">\n              <label className=\"text-sm font-medium\">Guests & Rooms</label>\n              <div className=\"grid grid-cols-2 gap-2\">\n                <Select\n                  value={searchParams.guests.toString()}\n                  onValueChange={(value) => setSearchParams({ ...searchParams, guests: parseInt(value) })}\n                >\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Guests\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {[1, 2, 3, 4, 5, 6].map((num) => (\n                      <SelectItem key={num} value={num.toString()}>\n                        {num} {num === 1 ? 'Guest' : 'Guests'}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n\n                <Select\n                  value={searchParams.rooms.toString()}\n                  onValueChange={(value) => setSearchParams({ ...searchParams, rooms: parseInt(value) })}\n                >\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Rooms\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {[1, 2, 3, 4].map((num) => (\n                      <SelectItem key={num} value={num.toString()}>\n                        {num} {num === 1 ? 'Room' : 'Rooms'}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"mt-6\">\n            <Button\n              className=\"w-full bg-[#72ba87] hover:bg-[#61936f] text-white\"\n              onClick={handleSearch}\n              disabled={isLoading}\n            >\n              {isLoading ? (\n                <div className=\"flex items-center\">\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                  Searching...\n                </div>\n              ) : (\n                <div className=\"flex items-center\">\n                  <Search className=\"mr-2 h-4 w-4\" />\n                  Search Hotels\n                </div>\n              )}\n            </Button>\n          </div>\n        </div>\n\n        {/* Results section */}\n        {searchResults.length > 0 ? (\n          <div className=\"space-y-4\">\n            {searchResults.map((hotel) => (\n              <div key={hotel.id} className=\"bg-white rounded-lg shadow-lg p-6\">\n                <div className=\"flex justify-between items-start mb-4\">\n                  <div>\n                    <h3 className=\"text-xl font-semibold mb-1\">{hotel.hotel.name}</h3>\n                    <div className=\"flex items-center text-gray-600 mb-2\">\n                      <MapPin className=\"w-4 h-4 mr-1\" />\n                      <span>{hotel.hotel.address.city}, {hotel.hotel.address.country}</span>\n                    </div>\n                    <div className=\"flex items-center\">\n                      {[...Array(Math.floor(hotel.hotel.rating))].map((_, i) => (\n                        <Star key={i} className=\"w-4 h-4 text-yellow-400 fill-current\" />\n                      ))}\n                    </div>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-2xl font-bold text-[#72ba87]\">\n                      {hotel.total_amount} {hotel.total_currency}\n                    </p>\n                    <p className=\"text-sm text-gray-600\">per night</p>\n                  </div>\n                </div>\n\n                <div className=\"mb-4\">\n                  <h4 className=\"font-medium mb-2\">Room Types</h4>\n                  <div className=\"space-y-2\">\n                    {hotel.room_types.map((room, index) => (\n                      <div key={index} className=\"bg-gray-50 p-3 rounded\">\n                        <p className=\"font-medium\">{room.name}</p>\n                        <p className=\"text-sm text-gray-600\">{room.description}</p>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <Button\n                  className=\"w-full bg-[#72ba87] hover:bg-[#61936f] text-white\"\n                  onClick={() => handleBooking(hotel.id)}\n                  disabled={isLoading}\n                >\n                  {isLoading ? (\n                    <div className=\"flex items-center\">\n                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                      Booking...\n                    </div>\n                  ) : (\n                    'Book Now'\n                  )}\n                </Button>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"text-center text-gray-500\">\n            <Hotel className=\"w-12 h-12 mx-auto mb-4 text-gray-400\" />\n            <p>Enter your search criteria to find available hotels</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n} "],"names":["FlightBooking","t","i18n","useTranslation","navigate","useNavigate","searchParams","useSearchParams","toast","useToast","departureDate","setDepartureDate","useState","returnDate","setReturnDate","tripType","setTripType","passengerCounts","setPassengerCounts","adults","children","infantsInSeat","infantsOnLap","cabinClass","setCabinClass","origin","setOrigin","destination","setDestination","isDepartureDateOpen","setIsDepartureDateOpen","isReturnDateOpen","setIsReturnDateOpen","isLoading","setIsLoading","isRefreshing","setIsRefreshing","searchResults","setSearchResults","lastSearchParams","setLastSearchParams","searchTimestamp","setSearchTimestamp","selectedOffer","setSelectedOffer","showBookingForm","setShowBookingForm","bookingFormData","setBookingFormData","id","Math","random","toString","substr","title","given_name","family_name","email","phone_number","gender","born_on","isBooking","setIsBooking","bookingConfirmation","setBookingConfirmation","currency","setCurrency","exchangeRates","setExchangeRates","showCurrencyNotice","setShowCurrencyNotice","convertedOffers","setConvertedOffers","lastRatesFetch","useRef","currentPage","setCurrentPage","offersRef","lastAutoSearchParams","currentSort","setCurrentSort","expandedCards","setExpandedCards","Set","activeFilters","setActiveFilters","airlines","stops","bags","priceRange","connectingAirports","duration","timeRemaining","setTimeRemaining","isExpired","setIsExpired","isStale","setIsStale","needsRefresh","setNeedsRefresh","refreshReason","setRefreshReason","searchTiming","setSearchTiming","getCurrentSearchParams","toISOString","split","passengers","maxConnections","saveSearchState","async","results","flightDataPersistence","saveFlightData","timing","currentStep","Date","now","searchUrl","createSearchUrl","language","window","history","replaceState","restoreSearchState","searchIdFromUrl","getSearchIdFromUrl","location","href","searchData","loadFlightDataBySearchId","restoreSearchData","loadFlightData","loadSearchState","refreshCheck","reason","message","description","handleSearch","selectedOfferId","data","offers","find","o","params","getFilteredOffers","offersToFilter","length","filter","offer","offerAirline","slices","segments","marketing_carrier","iata_code","includes","totalStops","reduce","total","slice","max","offerPrice","converted_amount","parseFloat","total_amount","totalDuration","firstSegment","lastSegment","departure","departing_at","arriving_at","getTime","getDurationInHours","flatMap","map","segment","Boolean","some","airport","totalPassengers","updatePassengerCount","type","increment","newCounts","newValue","fetchExchangeRates","base","current","response","fetch","ok","Error","json","result","prev","rates","e","formatAmount","amount","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","useEffect","offerCurrency","total_currency","toFixed","converted_currency","convertOffers","penaltyCurrencies","forEach","conditions","change_before_departure","penalty_currency","add","refund_before_departure","penaltyCurrency","fetchPenaltyCurrencyRates","updateTimer","getTimeRemaining","interval","setInterval","clearInterval","expires_at","search_started_at","urlOrigin","get","urlDestination","urlDepartureDate","urlReturnDate","urlTripType","urlAdults","urlChildren","urlInfantsInSeat","urlInfantsOnLap","urlCabinClass","parseInt","currentParamsKey","formattedDepartureDate","formattedReturnDate","searchRequest","toUpperCase","passengerTypes","toLowerCase","error","supabase","functions","invoke","body","variant","performSearch","silent","formatTime","dateString","date","isNaN","formatDate","formatPhoneNumber","phone","cleaned","replace","startsWith","handleBooking","bookingRequest","offerId","payments","bookingResults","jsxs","className","jsx","FlightBookingLoadingDialog","isOpen","onSubmit","preventDefault","role","ToggleGroup","value","onValueChange","ToggleGroupItem","htmlFor","AirportSelector","onChange","placeholder","Popover","PopoverTrigger","asChild","Button","User","PopoverContent","align","size","onClick","disabled","open","onOpenChange","cn","CalendarIcon","Calendar","mode","selected","onSelect","initialFocus","today","setHours","checkDate","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","Fragment","Search","FlightFilters","onFiltersChange","filters","Clock","formatTimeRemaining","toLocaleTimeString","viewBox","fill","fillRule","d","clipRule","sortedOffers","sortType","sort","a","b","getTotalDuration","start","getTotalStops","getScore","sortOffers","validOffers","totalPages","ceil","startIdx","endIdx","offersToShow","ref","formatPenalty","getConditionStatus","condition","allowed","penalty_amount","text","color","icon","CheckCircle","Info","XCircle","getDuration","diff","h","floor","m","round","getStops","isCloseToExpiring","Collapsible","has","newExpanded","delete","toggleCard","Card","CollapsibleTrigger","operating_carrier","logo_symbol_url","src","alt","name","loading","onError","currentTarget","display","Plane","ChevronUp","ChevronDown","CollapsibleContent","sliceIndex","Separator","ArrowRight","ArrowDown","Briefcase","Luggage","Wifi","Coffee","ShieldCheck","status","Icon","Ticket","localStorage","setItem","JSON","stringify","updateSelectedOffer","flightDetailsUrl","createFlightDetailsUrl","p","min","renderFlightOffers","Input","target","substring","currentNumber","newNumber","countryCode","stroke","strokeLinecap","strokeLinejoin","strokeWidth","booking_reference","index","origin_terminal","destination_terminal","passenger","base_amount","base_currency","PASSPORT_COUNTRIES","code","FlightBookingDetails","isDev","getDevModeBadge","useDevMode","passengerForms","setPassengerForms","expandedPassengers","setExpandedPassengers","setCurrentStep","luggageOptions","weight","price","ancillariesPayload","setAncillariesPayload","ancillariesMetadata","setAncillariesMetadata","showAuthModal","setShowAuthModal","pendingBooking","setPendingBooking","paymentProcessing","setPaymentProcessing","profile","useProfile","passportData","useSecurePassport","storedOffer","getItem","parse","initialPassengers","phone_country_code","passport_number","passport_country","passport_expiry","luggage","checked","carry_on","userProgress","loadData","expiryTime","searchStart","updatePassengerForm","passengerId","field","updateLuggage","validatePassengerForm","errors","push","test","fullPhone","validateAllPassengers","join","handleNextStep","updateUserProgress","luggageSelections","handlePreviousStep","initiateStripePayment","luggageFees","checkedPrice","opt","carryOnPrice","ancillariesFees","offer_total_amount","totalAmount","calculateTotalPrice","flightDetails","airline","flightNumber","paymentRequest","phoneNumber","luggage_fees","ancillaries_fees","ancillaries","headers","Authorization","auth","getSession","session","access_token","url","diffMs","basePrice","luggagePrice","ancillariesPrice","checkedOption","carryOnOption","ArrowLeft","orientation","CardHeader","CardTitle","CardContent","Badge","segIndex","MapPin","aircraft","offer_total_currency","togglePassenger","CardDescription","profileData","first_name","last_name","birth_date","passport_expiry_date","fillWithProfileInfo","Label","PhoneInput","val","onCountryCodeChange","DatePicker","year","month","day","Number","setDate","getFullYear","String","getMonth","padStart","getDate","label","maxYear","disabledDates","c","minYear","AncillariesStep","onAncillariesSelected","payload","metadata","onBack","onContinue","selectedAncillaries","option","AuthModal","onClose","onSuccess","authError","errorMessage","performBooking","defaultTab","HotelBooking","userProfile","setUserProfile","setSearchParams","coordinates","checkIn","checkOut","guests","rooms","user","getUser","from","select","eq","single","fetchUserProfile","LocationSearch","num","details","hotels","hotel","address","city","country","Array","rating","_","i","Star","room_types","room","contact","Hotel"],"mappings":"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"}