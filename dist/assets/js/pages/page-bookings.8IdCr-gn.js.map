{"version":3,"file":"page-bookings.8IdCr-gn.js","sources":["../../../../src/pages/bookings/Bookings.tsx","../../../../src/pages/bookings/BookingDetail.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '@/integrations/supabase/client';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Plane, Download, Calendar, User, ArrowRight, MapPin } from 'lucide-react';\nimport { format } from 'date-fns';\nimport { useToast } from \"@/components/ui/use-toast\";\n\ninterface Booking {\n  id: string;\n  booking_reference: string;\n  booking_type: 'flight' | 'hotel' | 'flight_hotel' | 'trip';\n  status: 'pending' | 'confirmed' | 'cancelled' | 'refunded';\n  created_at: string;\n  total_amount: number;\n  currency: string;\n  departure_date: string | null;\n  return_date: string | null;\n  duffel_order_id: string | null;\n  duffel_booking_reference: string | null;\n  flight_data: any; // Complete flight data from Duffel\n  passengers: Array<{\n    title: string;\n    given_name: string;\n    family_name: string;\n    email: string;\n    phone_number: string;\n    gender: string;\n    born_on: string;\n  }>;\n  base_amount: number;\n  luggage_fees: number;\n  ancillaries_fees: number;\n  commission_amount: number;\n  payment_status: string;\n  notes: string | null;\n}\n\nexport function Bookings() {\n  const { t, i18n } = useTranslation('zapbooking');\n  const navigate = useNavigate();\n  const { toast } = useToast();\n  const [bookings, setBookings] = useState<Booking[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetchBookings();\n  }, []);\n\n  const fetchBookings = async () => {\n    try {\n      setIsLoading(true);\n      const { data, error } = await supabase\n        .from('bookings')\n        .select('*')\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      setBookings(data || []);\n    } catch (error) {\n      console.error('Error fetching bookings:', error);\n      toast({\n        title: t('error'),\n        description: t('failedToLoadBookings'),\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const formatTime = (dateString: string) => {\n    try {\n      const date = new Date(dateString);\n      if (isNaN(date.getTime())) return 'N/A';\n      return format(date, 'HH:mm');\n    } catch (error) {\n      return 'N/A';\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    try {\n      const date = new Date(dateString);\n      if (isNaN(date.getTime())) return 'N/A';\n      return format(date, 'MMM d, yyyy');\n    } catch (error) {\n      return 'N/A';\n    }\n  };\n\n  const downloadBookingConfirmation = async (booking: Booking) => {\n    try {\n      // Here you would implement the PDF generation and download\n      toast({\n        title: t('comingSoonTitle'),\n        description: t('pdfDownloadComingSoon'),\n      });\n    } catch (error) {\n      console.error('Error downloading booking:', error);\n      toast({\n        title: t('error'),\n        description: t('failedToDownloadConfirmation'),\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-[#72ba87]\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"max-w-4xl mx-auto\">\n        <div className=\"flex justify-between items-center mb-8\">\n          <h1 className=\"text-3xl font-bold\">{t('myBookings')}</h1>\n          <Button\n            className=\"bg-[#72ba87] hover:bg-[#61936f] text-white\"\n            onClick={() => navigate(`/${i18n.language}/booking/internal-flights`)}\n          >\n            {t('bookNewFlight')}\n          </Button>\n        </div>\n\n        {bookings.length === 0 ? (\n          <Card>\n            <CardContent className=\"flex flex-col items-center justify-center py-12\">\n              <Plane className=\"w-12 h-12 text-gray-400 mb-4\" />\n              <h3 className=\"text-xl font-semibold mb-2\">{t('noBookingsFound')}</h3>\n              <p className=\"text-gray-500 mb-4\">{t('noBookingsMessage')}</p>\n              <Button\n                className=\"bg-[#72ba87] hover:bg-[#61936f] text-white\"\n                onClick={() => navigate(`/${i18n.language}/booking/internal-flights`)}\n              >\n                {t('bookFirstFlight')}\n              </Button>\n            </CardContent>\n          </Card>\n        ) : (\n          <div className=\"space-y-4\">\n            {bookings.map((booking) => (\n              <Card key={booking.id} className=\"hover:shadow-md transition-shadow cursor-pointer\" onClick={() => navigate(`/${i18n.language}/bookings/${booking.booking_reference}`)}>\n                <CardContent className=\"p-6\">\n                  <div className=\"flex justify-between items-start\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center space-x-3 mb-3\">\n                        <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center\">\n                          <Plane className=\"w-5 h-5 text-blue-600\" />\n                        </div>\n                        <div>\n                          <h3 className=\"font-semibold text-lg\">{booking.booking_reference}</h3>\n                          <p className=\"text-sm text-gray-500\">{t('bookedOn')} {formatDate(booking.created_at)}</p>\n                        </div>\n                      </div>\n                      \n                      {booking.flight_data?.slices?.[0] && (\n                        <div className=\"flex items-center space-x-4 mb-3\">\n                          <div className=\"flex items-center space-x-2\">\n                            <MapPin className=\"w-4 h-4 text-gray-400\" />\n                            <span className=\"font-medium\">{booking.flight_data.slices[0].origin?.iata_code}</span>\n                            <ArrowRight className=\"w-4 h-4 text-gray-400\" />\n                            <span className=\"font-medium\">{booking.flight_data.slices[0].destination?.iata_code}</span>\n                          </div>\n                          <span className=\"text-sm text-gray-500\">\n                            {formatDate(booking.flight_data.slices[0].segments[0]?.departing_at)}\n                          </span>\n                        </div>\n                      )}\n                      \n                      <div className=\"flex items-center space-x-4 text-sm text-gray-600\">\n                        <div className=\"flex items-center space-x-1\">\n                          <User className=\"w-4 h-4\" />\n                          <span>{booking.passengers.length} {booking.passengers.length === 1 ? t('passenger') : t('passengers')}</span>\n                        </div>\n                        <div className=\"flex items-center space-x-1\">\n                          <Calendar className=\"w-4 h-4\" />\n                          <span>{t(`bookingTypes.${booking.booking_type}`)}</span>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex flex-col items-end space-y-2\">\n                      <Badge \n                        variant={booking.status === 'confirmed' ? 'default' : 'secondary'}\n                        className={booking.status === 'confirmed' ? 'bg-[#72ba87] text-white' : ''}\n                      >\n                        {t(`bookingStatus.${booking.status}`)}\n                      </Badge>\n                      <div className=\"text-right\">\n                        <p className=\"text-lg font-semibold\">{booking.total_amount} {booking.currency}</p>\n                        <p className=\"text-sm text-gray-500\">{t('total')}</p>\n                      </div>\n                      <ArrowRight className=\"w-4 h-4 text-gray-400\" />\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n} ","import { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { supabase } from '@/integrations/supabase/client';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { \n  Plane, \n  Download, \n  Calendar, \n  User, \n  ArrowLeft, \n  MapPin, \n  Clock,\n  CreditCard,\n  FileText,\n  Mail\n} from 'lucide-react';\nimport { format } from 'date-fns';\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { EmailBookingDialog } from \"@/components/bookings/EmailBookingDialog\";\n\ninterface Booking {\n  id: string;\n  booking_reference: string;\n  booking_type: 'flight' | 'hotel' | 'flight_hotel' | 'trip';\n  status: 'pending' | 'confirmed' | 'cancelled' | 'refunded';\n  created_at: string;\n  total_amount: number;\n  currency: string;\n  departure_date: string | null;\n  return_date: string | null;\n  duffel_order_id: string | null;\n  duffel_booking_reference: string | null;\n  flight_data: any;\n  passengers: Array<{\n    title: string;\n    given_name: string;\n    family_name: string;\n    email: string;\n    phone_number: string;\n    gender: string;\n    born_on: string;\n  }>;\n  base_amount: number;\n  luggage_fees: number;\n  ancillaries_fees: number;\n  commission_amount: number;\n  payment_status: string;\n  notes: string | null;\n}\n\nexport function BookingDetail() {\n  const { t, i18n } = useTranslation('zapbooking');\n  const navigate = useNavigate();\n  const { bookingReference } = useParams<{ bookingReference: string }>();\n  const { toast } = useToast();\n  const [booking, setBooking] = useState<Booking | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isEmailDialogOpen, setIsEmailDialogOpen] = useState(false);\n\n  useEffect(() => {\n    if (bookingReference) {\n      fetchBooking();\n    }\n  }, [bookingReference]);\n\n  const fetchBooking = async () => {\n    try {\n      setIsLoading(true);\n      const { data, error } = await supabase\n        .from('bookings')\n        .select('*')\n        .eq('booking_reference', bookingReference)\n        .single();\n\n      if (error) throw error;\n      setBooking(data);\n    } catch (error) {\n      console.error('Error fetching booking:', error);\n      toast({\n        title: t('error'),\n        description: t('failedToLoadBookings'),\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const formatTime = (dateString: string) => {\n    try {\n      const date = new Date(dateString);\n      if (isNaN(date.getTime())) return 'N/A';\n      return format(date, 'HH:mm');\n    } catch (error) {\n      return 'N/A';\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    try {\n      const date = new Date(dateString);\n      if (isNaN(date.getTime())) return 'N/A';\n      return format(date, 'MMM d, yyyy');\n    } catch (error) {\n      return 'N/A';\n    }\n  };\n\n  const downloadBookingConfirmation = async () => {\n    try {\n      toast({\n        title: t('comingSoonTitle'),\n        description: t('pdfDownloadComingSoon'),\n      });\n    } catch (error) {\n      console.error('Error downloading booking:', error);\n              toast({\n          title: t('error'),\n          description: t('failedToDownloadConfirmation'),\n          variant: \"destructive\",\n        });\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-[#72ba87]\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!booking) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"max-w-4xl mx-auto\">\n          <Card>\n            <CardContent className=\"flex flex-col items-center justify-center py-12\">\n              <FileText className=\"w-12 h-12 text-gray-400 mb-4\" />\n              <h3 className=\"text-xl font-semibold mb-2\">{t('bookingDetails.bookingNotFound')}</h3>\n              <p className=\"text-gray-500 mb-4\">{t('bookingDetails.bookingNotFoundMessage')}</p>\n              <Button\n                className=\"bg-[#72ba87] hover:bg-[#61936f] text-white\"\n                onClick={() => navigate(`/${i18n.language}/bookings`)}\n              >\n                {t('bookingDetails.backToBookings')}\n              </Button>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-8\">\n          <div className=\"flex items-center space-x-4\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => navigate(`/${i18n.language}/bookings`)}\n              className=\"text-[#1d1d1e] hover:text-[#61936f]\"\n            >\n              <ArrowLeft className=\"h-4 w-4 mr-2\" />\n              {t('bookingDetails.backToBookings')}\n            </Button>\n            <Separator orientation=\"vertical\" className=\"h-6\" />\n            <h1 className=\"text-3xl font-bold\">{t('bookingDetails.bookingDetails')}</h1>\n          </div>\n          <div className=\"flex space-x-2\">\n            <Button\n              variant=\"outline\"\n              onClick={() => setIsEmailDialogOpen(true)}\n            >\n              <Mail className=\"w-4 h-4 mr-2\" />\n              {t('bookingDetails.sendByEmail')}\n            </Button>\n            <Button\n              variant=\"outline\"\n              onClick={downloadBookingConfirmation}\n            >\n              <Download className=\"w-4 h-4 mr-2\" />\n              {t('bookingDetails.downloadConfirmation')}\n            </Button>\n          </div>\n        </div>\n\n        {/* Booking Overview */}\n        <Card className=\"mb-6\">\n          <CardHeader>\n            <div className=\"flex justify-between items-start\">\n              <div>\n                <CardTitle className=\"text-2xl\">\n                  {booking.booking_reference}\n                </CardTitle>\n                <CardDescription>\n                  {t('bookingDetails.bookedOn')} {formatDate(booking.created_at)} • {t(`bookingTypes.${booking.booking_type}`)} {t('bookingDetails.bookingType')}\n                </CardDescription>\n              </div>\n              <div className=\"flex flex-col items-end space-y-2\">\n                <Badge \n                  variant={booking.status === 'confirmed' ? 'default' : 'secondary'}\n                  className={booking.status === 'confirmed' ? 'bg-[#72ba87] text-white' : ''}\n                >\n                  {t(`bookingStatus.${booking.status}`)}\n                </Badge>\n                <div className=\"text-right\">\n                  <p className=\"text-2xl font-bold\">{booking.total_amount} {booking.currency}</p>\n                  <p className=\"text-sm text-gray-500\">{t('bookingDetails.totalAmountLabel')}</p>\n                </div>\n              </div>\n            </div>\n          </CardHeader>\n        </Card>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Flight Details */}\n          <div className=\"lg:col-span-2\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <Plane className=\"w-5 h-5 mr-2\" />\n                  {t('bookingDetails.flightDetails')}\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                {booking.flight_data?.slices?.map((slice: any, index: number) => (\n                  <div key={index}>\n                    {index > 0 && <Separator className=\"my-6\" />}\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <div className=\"flex items-center\">\n                        <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center mr-3\">\n                          <Plane className=\"w-4 h-4 text-blue-600\" />\n                        </div>\n                        <div>\n                          <p className=\"font-medium text-lg\">\n                            {slice.origin?.iata_code} → {slice.destination?.iata_code}\n                          </p>\n                          <p className=\"text-sm text-gray-500\">\n                            {formatDate(slice.segments[0]?.departing_at)}\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"text-right\">\n                        <p className=\"font-medium\">{slice.segments[0]?.marketing_carrier?.name}</p>\n                        <p className=\"text-sm text-gray-500\">\n                          Flight {slice.segments[0]?.marketing_carrier?.iata_code}\n                        </p>\n                      </div>\n                    </div>\n\n                    <div className=\"grid grid-cols-2 gap-6\">\n                      <div className=\"bg-gray-50 p-4 rounded-lg\">\n                        <div className=\"flex items-center mb-2\">\n                          <Clock className=\"w-4 h-4 mr-2 text-gray-500\" />\n                          <p className=\"text-sm font-medium text-gray-700\">{t('bookingDetails.departure')}</p>\n                        </div>\n                        <p className=\"text-lg font-semibold\">{formatTime(slice.segments[0]?.departing_at)}</p>\n                        <p className=\"text-sm\">{slice.origin?.name}</p>\n                        {slice.segments[0]?.origin_terminal && (\n                          <p className=\"text-sm text-gray-500\">{t('bookingDetails.terminal')} {slice.segments[0].origin_terminal}</p>\n                        )}\n                      </div>\n                      <div className=\"bg-gray-50 p-4 rounded-lg\">\n                        <div className=\"flex items-center mb-2\">\n                          <MapPin className=\"w-4 h-4 mr-2 text-gray-500\" />\n                          <p className=\"text-sm font-medium text-gray-700\">{t('bookingDetails.arrival')}</p>\n                        </div>\n                        <p className=\"text-lg font-semibold\">{formatTime(slice.segments[0]?.arriving_at)}</p>\n                        <p className=\"text-sm\">{slice.destination?.name}</p>\n                        {slice.segments[0]?.destination_terminal && (\n                          <p className=\"text-sm text-gray-500\">{t('bookingDetails.terminal')} {slice.segments[0].destination_terminal}</p>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Sidebar */}\n          <div className=\"space-y-6\">\n            {/* Passenger Information */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <User className=\"w-5 h-5 mr-2\" />\n                  {t('bookingDetails.passengers')} ({booking.passengers.length})\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {booking.passengers.map((passenger, index) => (\n                    <div key={index} className=\"bg-gray-50 p-3 rounded-lg\">\n                      <p className=\"font-medium\">\n                        {passenger.title} {passenger.given_name} {passenger.family_name}\n                      </p>\n                      <p className=\"text-sm text-gray-500\">{passenger.email}</p>\n                      <p className=\"text-sm text-gray-500\">{passenger.phone_number}</p>\n                      <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n                        <span>{t('bookingDetails.gender')}: {passenger.gender === 'm' ? t('bookingDetails.male') : t('bookingDetails.female')}</span>\n                        <span>{t('bookingDetails.born')}: {formatDate(passenger.born_on)}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Financial Details */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <CreditCard className=\"w-5 h-5 mr-2\" />\n                  {t('bookingDetails.financialDetails')}\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">{t('bookingDetails.baseFare')}</span>\n                    <span className=\"font-medium\">{booking.base_amount.toFixed(2)} {booking.currency}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">{t('bookingDetails.taxesFees')}</span>\n                    <span className=\"font-medium\">{(booking.total_amount - booking.base_amount - booking.luggage_fees - booking.ancillaries_fees).toFixed(2)} {booking.currency}</span>\n                  </div>\n                  {booking.luggage_fees > 0 && (\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">{t('bookingDetails.luggageFees')}</span>\n                      <span className=\"font-medium\">{booking.luggage_fees} {booking.currency}</span>\n                    </div>\n                  )}\n                  {booking.ancillaries_fees > 0 && (\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">{t('bookingDetails.ancillariesFees')}</span>\n                      <span className=\"font-medium\">{booking.ancillaries_fees} {booking.currency}</span>\n                    </div>\n                  )}\n                  <Separator />\n                  <div className=\"flex justify-between text-lg font-semibold\">\n                    <span>{t('bookingDetails.totalAmount')}</span>\n                    <span>{booking.total_amount} {booking.currency}</span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Booking References */}\n            {booking.duffel_booking_reference && (\n              <Card>\n                <CardHeader>\n                                  <CardTitle className=\"flex items-center\">\n                  <FileText className=\"w-5 h-5 mr-2\" />\n                  {t('bookingDetails.bookingReferences')}\n                </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <p className=\"text-sm text-gray-500\">{t('reference')}</p>\n                      <p className=\"font-medium text-sm\">{booking.duffel_booking_reference}</p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Email Dialog */}\n      {booking && (\n        <EmailBookingDialog\n          isOpen={isEmailDialogOpen}\n          onClose={() => setIsEmailDialogOpen(false)}\n          bookingData={booking}\n        />\n      )}\n    </div>\n  );\n} "],"names":["Bookings","t","i18n","useTranslation","navigate","useNavigate","toast","useToast","bookings","setBookings","useState","isLoading","setIsLoading","useEffect","fetchBookings","async","data","error","supabase","from","select","order","ascending","title","description","variant","formatDate","dateString","date","Date","isNaN","getTime","format","jsx","className","children","jsxs","Button","onClick","language","length","Card","CardContent","Plane","map","booking","booking_reference","created_at","flight_data","slices","MapPin","origin","iata_code","ArrowRight","destination","segments","departing_at","User","passengers","Calendar","booking_type","Badge","status","total_amount","currency","id","BookingDetail","bookingReference","useParams","setBooking","isEmailDialogOpen","setIsEmailDialogOpen","fetchBooking","eq","single","formatTime","size","ArrowLeft","Separator","orientation","Mail","Download","CardHeader","CardTitle","CardDescription","slice","index","marketing_carrier","name","Clock","origin_terminal","arriving_at","destination_terminal","passenger","given_name","family_name","email","phone_number","gender","born_on","CreditCard","base_amount","toFixed","luggage_fees","ancillaries_fees","duffel_booking_reference","FileText","EmailBookingDialog","isOpen","onClose","bookingData"],"mappings":"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"}