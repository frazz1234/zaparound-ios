{"version":3,"file":"page-community.DMyFNU_e.js","sources":["../../../../src/pages/Community.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { LocationHeader } from '@/components/community/LocationHeader';\nimport { GooglePlacesSearch } from '@/components/community/GooglePlacesSearch';\nimport { LocationDisplay } from '@/components/community/LocationDisplay';\nimport { MediaUpload } from '@/components/community/MediaUpload';\nimport { MediaDisplay } from '@/components/community/MediaDisplay';\nimport { PostBlurOverlay } from '@/components/community/PostBlurOverlay';\nimport { StarRating } from '@/components/ui/star-rating';\nimport { MessageCircle, Users, MapPin, Compass, Heart, Share2, Map, CalendarClock, MoreVertical, Pencil, Trash2, Image as ImageIcon, Loader2, ChevronDown, Ban, AlertCircle, Shield, UserX, UserCheck, Reply, ExternalLink } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n} from \"@/components/ui/dialog\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { supabase } from '@/integrations/supabase/client';\nimport { useToast } from '@/hooks/use-toast';\nimport { cn } from \"@/lib/utils\";\nimport { createPlaceUrl } from '@/utils/placeUtils';\nimport { FeedAlgorithm, getFeedPosts, getDestinationPosts, getAroundTheWorldPosts, type FeedPost } from \"@/utils/feedAlgorithm\";\n\nconst LOCALE_MAP = { en: 'en_US', fr: 'fr_FR', es: 'es_ES' };\nconst POSTS_PER_PAGE = 15;\n\nconst Community = () => {\n  const { t, i18n } = useTranslation('community');\n  const navigate = useNavigate();\n  const language = i18n.language;\n  const locale = LOCALE_MAP[language] || 'en_US';\n  \n \n  \n  const [activeTab, setActiveTab] = useState('feed'); // 'feed' | 'activities' | 'destinations'\n  const [postType, setPostType] = useState('activity'); // 'activity' | 'destination'\n  const [postContent, setPostContent] = useState('');\n  const [postRating, setPostRating] = useState(0);\n  const [posts, setPosts] = useState<FeedPost[]>([]);\n  const [feedAlgorithm, setFeedAlgorithm] = useState<FeedAlgorithm | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [userLikes, setUserLikes] = useState({});\n  const [currentUser, setCurrentUser] = useState(null);\n  const [editingPost, setEditingPost] = useState(null);\n  const [editContent, setEditContent] = useState('');\n  const [editMedia, setEditMedia] = useState([]);\n  const [editLocation, setEditLocation] = useState('');\n  const [editPlaceDetails, setEditPlaceDetails] = useState(null);\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [editLocationKey, setEditLocationKey] = useState(0);\n  const [editMediaKey, setEditMediaKey] = useState(0);\n  const [selectedMedia, setSelectedMedia] = useState([]);\n  const [isUploading, setIsUploading] = useState(false);\n  const [location, setLocation] = useState('');\n  const [selectedPlaceDetails, setSelectedPlaceDetails] = useState(null);\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [locationKey, setLocationKey] = useState(0); // Key to force re-render of GooglePlacesSearch\n  const [mediaKey, setMediaKey] = useState(0); // Key to force re-render of MediaUpload\n  const { toast } = useToast();\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [totalPosts, setTotalPosts] = useState(0);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [blockedUsers, setBlockedUsers] = useState(new Set());\n  const [showBlockedMessage, setShowBlockedMessage] = useState(false);\n  const [blockedUsersList, setBlockedUsersList] = useState([]);\n  const [showBlockedUsers, setShowBlockedUsers] = useState(false);\n  const [expandedReplies, setExpandedReplies] = useState(new Set());\n  const [replyContent, setReplyContent] = useState({});\n  const [replyMedia, setReplyMedia] = useState({});\n  const [replyRating, setReplyRating] = useState({});\n  const [isUploadingReply, setIsUploadingReply] = useState({});\n  const [replies, setReplies] = useState({});\n  const [nearbyPlaces, setNearbyPlaces] = useState([]);\n  const [loadingNearbyPlaces, setLoadingNearbyPlaces] = useState(false);\n  const [isFeedPickerSticky, setIsFeedPickerSticky] = useState(false);\n\n  const scrollToPostCreator = () => {\n    const el = document.querySelector('.post-creator-section') as HTMLElement | null;\n    if (el) {\n      const y = el.getBoundingClientRect().top + window.scrollY - 80; // offset for sticky header\n      window.scrollTo({ top: y, behavior: 'smooth' });\n    }\n  };\n\n  useEffect(() => {\n    console.log('Component mounted, fetching posts...');\n    fetchPosts();\n    fetchUserLikes();\n    fetchCurrentUser();\n    checkAdminStatus();\n    fetchBlockedUsers();\n    detectCurrentLocation();\n    if (isAdmin) {\n      fetchBlockedUsersList();\n    }\n  }, [isAdmin]);\n\n  // Initialiser l'algorithme de feed quand la localisation est détectée\n  useEffect(() => {\n    if (currentLocation) {\n      const algorithm = new FeedAlgorithm({\n        lat: currentLocation.lat,\n        lng: currentLocation.lng\n      });\n      setFeedAlgorithm(algorithm);\n    }\n  }, [currentLocation]);\n\n  useEffect(() => {\n    if (currentLocation) {\n      fetchNearbyPlaces();\n    }\n  }, [currentLocation]);\n\n  useEffect(() => {\n    fetchPosts();\n  }, [activeTab]);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      // Check if we've scrolled past the post creator section\n      const postCreatorSection = document.querySelector('.post-creator-section');\n      if (postCreatorSection) {\n        const rect = postCreatorSection.getBoundingClientRect();\n        setIsFeedPickerSticky(rect.bottom < 0);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  // Intersection Observer for infinite scrolling\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        const target = entries[0];\n        if (target.isIntersecting && hasMore && !loadingMore) {\n          handleLoadMore();\n        }\n      },\n      { threshold: 0.1 }\n    );\n\n    const loadMoreTrigger = document.getElementById('load-more-trigger');\n    if (loadMoreTrigger) {\n      observer.observe(loadMoreTrigger);\n    }\n\n    return () => {\n      if (loadMoreTrigger) {\n        observer.unobserve(loadMoreTrigger);\n      }\n    };\n  }, [hasMore, loadingMore]);\n\n  // Monitor dialog state and ensure proper cleanup\n  useEffect(() => {\n    if (!isEditDialogOpen) {\n      // Ensure all edit states are reset when dialog is closed\n      setEditingPost(null);\n      setEditContent('');\n      setEditMedia([]);\n      setEditLocation('');\n      setEditPlaceDetails(null);\n    }\n  }, [isEditDialogOpen]);\n\n  const detectCurrentLocation = () => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setCurrentLocation({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          });\n        },\n        (err) => {\n          console.error('Geolocation error:', err);\n        },\n        {\n          enableHighAccuracy: true,\n          timeout: 5000,\n          maximumAge: 0\n        }\n      );\n    }\n  };\n\n  const fetchCurrentUser = async () => {\n    const { data: { user } } = await supabase.auth.getUser();\n    setCurrentUser(user);\n  };\n\n  const fetchUserLikes = async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) return;\n\n      const { data, error } = await supabase\n        .from('post_likes')\n        .select('post_id')\n        .eq('user_id', user.id);\n\n      if (error) throw error;\n\n      const likesMap = {};\n      data.forEach(like => {\n        likesMap[like.post_id] = true;\n      });\n      setUserLikes(likesMap);\n    } catch (error) {\n      console.error('Error fetching user likes:', error);\n    }\n  };\n\n  const checkAdminStatus = async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) return;\n\n      const { data: userRole, error } = await supabase\n        .from('user_roles')\n        .select('role, role2')\n        .eq('user_id', user.id)\n        .single();\n\n      if (error) {\n        console.error('Error fetching user role:', error);\n        return;\n      }\n\n      console.log('User roles:', userRole); // Debug log\n      setIsAdmin(userRole?.role === 'admin' || userRole?.role2 === 'moderator');\n    } catch (error) {\n      console.error('Error checking user role:', error);\n    }\n  };\n\n  const fetchBlockedUsers = async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) return;\n\n      const { data } = await supabase\n        .from('blocked_users')\n        .select('blocked_user_id')\n        .eq('blocked_by_id', user.id);\n\n      if (data) {\n        setBlockedUsers(new Set(data.map(item => item.blocked_user_id)));\n      }\n    } catch (error) {\n      console.error('Error fetching blocked users:', error);\n    }\n  };\n\n  const fetchBlockedUsersList = async () => {\n    try {\n      const { data, error } = await supabase\n        .from('blocked_users')\n        .select(`\n          *,\n          blocked_user:profiles!blocked_user_id (\n            username,\n            first_name,\n            last_name,\n            avatar_url\n          ),\n          blocked_by:profiles!blocked_by_id (\n            username,\n            first_name,\n            last_name\n          )\n        `)\n        .order('created_at', { ascending: false });\n\n      if (error) throw error;\n      setBlockedUsersList(data || []);\n    } catch (error) {\n      console.error('Error fetching blocked users list:', error);\n      toast({\n        title: t('errors.general'),\n        description: t('errors.fetchBlockedUsers'),\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const fetchPosts = async (pageNumber = 1, append = false) => {\n    if (pageNumber === 1) {\n      setLoading(true);\n    } else {\n      setLoadingMore(true);\n    }\n\n    try {\n      console.log('Fetching posts with intelligent algorithm...');\n      \n      let posts: FeedPost[] = [];\n\n      if (feedAlgorithm) {\n        // Utiliser l'algorithme intelligent pour le feed\n        if (activeTab === 'feed') {\n          posts = await feedAlgorithm.getFeedPosts(pageNumber, POSTS_PER_PAGE);\n        } else if (activeTab === 'activities') {\n          // Pour les activités, filtrer après récupération\n          const allPosts = await feedAlgorithm.getFeedPosts(pageNumber, POSTS_PER_PAGE * 2);\n          posts = allPosts.filter(post => post.post_type === 'activity').slice(0, POSTS_PER_PAGE);\n        } else if (activeTab === 'destinations') {\n          // Pour les destinations, utiliser l'algorithme optimisé\n          posts = await feedAlgorithm.getDestinationPosts(pageNumber, POSTS_PER_PAGE);\n        }\n      } else {\n        // Fallback vers l'ancien système si pas d'algorithme\n        let query = supabase\n          .from('community_posts')\n          .select(`\n            *,\n            likes:post_likes(count),\n            replies:post_replies(count),\n            profile:profiles!user_id (\n              username,\n              first_name,\n              last_name,\n              avatar_url\n            )\n          `)\n          .eq('is_published', true)\n          .order('created_at', { ascending: false })\n          .range((pageNumber - 1) * POSTS_PER_PAGE, pageNumber * POSTS_PER_PAGE - 1);\n\n        // Filter by active tab\n        if (activeTab === 'activities') {\n          query = query.eq('post_type', 'activity');\n        } else if (activeTab === 'destinations') {\n          query = query.eq('post_type', 'destination');\n        }\n\n        const { data, error } = await query;\n        if (error) throw error;\n        posts = data || [];\n      }\n\n      // Filter out posts from blocked users\n      const filteredPosts = posts.filter(post => !blockedUsers.has(post.user_id));\n\n      console.log('Posts fetched successfully:', filteredPosts);\n      \n      if (append) {\n        setPosts(prevPosts => [...prevPosts, ...filteredPosts]);\n      } else {\n        setPosts(filteredPosts);\n      }\n\n      // Update pagination state\n      setHasMore(filteredPosts.length === POSTS_PER_PAGE);\n      setPage(pageNumber);\n\n    } catch (error) {\n      console.error('Error in fetchPosts:', error);\n      toast({\n        title: t('errors.general'),\n        description: t('errors.fetchPosts'),\n        variant: 'destructive',\n      });\n    } finally {\n      setLoading(false);\n      setLoadingMore(false);\n    }\n  };\n\n  const handleMediaChange = (media) => {\n    setSelectedMedia(media);\n  };\n\n  const uploadMedia = async (mediaFiles) => {\n    if (!mediaFiles || mediaFiles.length === 0) return [];\n\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('No authenticated user found');\n\n      const uploadedMedia = [];\n\n      for (const mediaFile of mediaFiles) {\n        const fileExt = mediaFile.file.name.split('.').pop();\n        const fileName = `${user.id}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}.${fileExt}`;\n\n        const { data, error } = await supabase.storage\n          .from('community-images')\n          .upload(fileName, mediaFile.file, {\n            cacheControl: '3600',\n            upsert: false\n          });\n\n        if (error) throw error;\n\n        const { data: { publicUrl } } = supabase.storage\n          .from('community-images')\n          .getPublicUrl(fileName);\n\n        uploadedMedia.push({\n          id: mediaFile.id,\n          url: publicUrl,\n          type: mediaFile.type,\n          thumbnail: mediaFile.type === 'video' ? mediaFile.preview : null\n        });\n      }\n\n      return uploadedMedia;\n    } catch (error) {\n                      console.error('Error uploading media:', error);\n                toast({\n                  title: t('toast.error'),\n                  description: t('toast.uploadMediaFailed'),\n                  variant: 'destructive',\n                });\n      return [];\n    }\n  };\n\n  const handlePost = async () => {\n          if (!postContent.trim()) {\n        toast({\n          title: t('toast.error'),\n          description: t('toast.postContentEmpty'),\n          variant: 'destructive',\n        });\n        return;\n      }\n\n    try {\n              const { data: { user } } = await supabase.auth.getUser();\n        if (!user) {\n          toast({\n            title: t('toast.error'),\n            description: t('toast.loginRequired'),\n            variant: 'destructive',\n          });\n          return;\n        }\n\n      // Check if user is blocked\n      const { data: blockedData } = await supabase\n        .from('blocked_users')\n        .select('id')\n        .eq('blocked_user_id', user.id)\n        .single();\n\n      if (blockedData) {\n        setShowBlockedMessage(true);\n        setTimeout(() => setShowBlockedMessage(false), 5000); // Hide after 5 seconds\n        return;\n      }\n\n      setIsUploading(true);\n      let mediaUrls = [];\n      if (selectedMedia.length > 0) {\n        mediaUrls = await uploadMedia(selectedMedia);\n      }\n\n      console.log('Creating new post...');\n      const { data, error } = await supabase\n        .from('community_posts')\n        .insert([\n          { \n            user_id: user.id, \n            title: 'New Post', \n            content: postContent,\n            media_urls: mediaUrls,\n            location: location.trim() || null,\n            place_id: selectedPlaceDetails?.place_id || null,\n            place_lat: selectedPlaceDetails?.geometry?.location?.lat || null,\n            place_lng: selectedPlaceDetails?.geometry?.location?.lng || null,\n            place_types: selectedPlaceDetails?.types || null,\n            place_rating: selectedPlaceDetails?.rating || null,\n            place_user_ratings_total: selectedPlaceDetails?.user_ratings_total || null,\n            post_type: postType,\n            rating: postRating > 0 ? postRating : null,\n            is_published: true \n          }\n        ])\n        .select();\n\n      if (error) {\n        console.error('Error creating post:', error);\n        throw error;\n      }\n\n              console.log('Post created successfully:', data);\n        toast({\n          title: t('toast.success'),\n          description: t('toast.postPublished'),\n        });\n\n      // Reset all form fields after successful post\n      setPostContent('');\n      setSelectedMedia([]);\n      setLocation('');\n      setSelectedPlaceDetails(null);\n      setPostRating(0);\n      setLocationKey(prev => prev + 1); // Force re-render of GooglePlacesSearch\n      setMediaKey(prev => prev + 1); // Force re-render of MediaUpload\n      fetchPosts();\n    } catch (error) {\n      console.error('Error in handlePost:', error);\n      toast({\n        title: t('errors.general'),\n        description: t('errors.postFailed'),\n        variant: 'destructive',\n      });\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  const handleLike = async (postId) => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        toast({\n          title: t('toast.error'),\n          description: t('toast.loginRequiredLike'),\n          variant: 'destructive',\n        });\n        return;\n      }\n\n      if (userLikes[postId]) {\n        // Unlike\n        const { error } = await supabase\n          .from('post_likes')\n          .delete()\n          .eq('post_id', postId)\n          .eq('user_id', user.id);\n\n        if (error) throw error;\n\n        setUserLikes(prev => ({ ...prev, [postId]: false }));\n        // Update post likes count locally\n        setPosts(prevPosts => \n          prevPosts.map(post => \n            post.id === postId \n              ? { \n                  ...post, \n                  likes: [{ count: (post.likes?.[0]?.count || 1) - 1 }] \n                }\n              : post\n          )\n        );\n      } else {\n        // Like\n        const { error } = await supabase\n          .from('post_likes')\n          .insert([{ post_id: postId, user_id: user.id }]);\n\n        if (error) throw error;\n\n        setUserLikes(prev => ({ ...prev, [postId]: true }));\n        // Update post likes count locally\n        setPosts(prevPosts => \n          prevPosts.map(post => \n            post.id === postId \n              ? { \n                  ...post, \n                  likes: [{ count: (post.likes?.[0]?.count || 0) + 1 }] \n                }\n              : post\n          )\n        );\n      }\n    } catch (error) {\n              console.error('Error handling like:', error);\n        toast({\n          title: t('toast.error'),\n          description: t('toast.updateLikeFailed'),\n          variant: 'destructive',\n        });\n    }\n  };\n\n  const handleEditPost = async () => {\n    if (!editingPost || !editContent.trim()) return;\n\n    try {\n      // Upload new media if any\n      let updatedMediaUrls = editMedia;\n      if (editMedia.length > 0 && editMedia.some(media => media.file)) {\n        // Filter out existing media (those without file property) and upload new ones\n        const existingMedia = editMedia.filter(media => !media.file);\n        const newMedia = editMedia.filter(media => media.file);\n        \n        if (newMedia.length > 0) {\n          const uploadedNewMedia = await uploadMedia(newMedia);\n          updatedMediaUrls = [...existingMedia, ...uploadedNewMedia];\n        }\n      }\n\n      const updateData = {\n        content: editContent,\n        media_urls: updatedMediaUrls,\n        location: editLocation.trim() || null,\n        place_id: editPlaceDetails?.place_id || null,\n        place_lat: editPlaceDetails?.geometry?.location?.lat || null,\n        place_lng: editPlaceDetails?.geometry?.location?.lng || null,\n        place_types: editPlaceDetails?.types || null,\n        place_rating: editPlaceDetails?.rating || null,\n        place_user_ratings_total: editPlaceDetails?.user_ratings_total || null,\n      };\n\n      const { error } = await supabase\n        .from('community_posts')\n        .update(updateData)\n        .eq('id', editingPost.id);\n\n      if (error) throw error;\n\n      setPosts(prevPosts =>\n        prevPosts.map(post =>\n          post.id === editingPost.id\n            ? { \n                ...post, \n                content: editContent,\n                media_urls: updatedMediaUrls,\n                location: editLocation.trim() || null,\n                place_id: editPlaceDetails?.place_id || null,\n                place_lat: editPlaceDetails?.geometry?.location?.lat || null,\n                place_lng: editPlaceDetails?.geometry?.location?.lng || null,\n                place_types: editPlaceDetails?.types || null,\n                place_rating: editPlaceDetails?.rating || null,\n                place_user_ratings_total: editPlaceDetails?.user_ratings_total || null,\n              }\n            : post\n        )\n      );\n\n      // Reset all edit states\n      setIsEditDialogOpen(false);\n      setEditingPost(null);\n      setEditContent('');\n      setEditMedia([]);\n      setEditLocation('');\n      setEditPlaceDetails(null);\n\n              toast({\n          title: t('toast.success'),\n          description: t('toast.postUpdated'),\n        });\n    } catch (error) {\n              console.error('Error updating post:', error);\n        toast({\n          title: t('toast.error'),\n          description: t('toast.updatePostFailed'),\n          variant: 'destructive',\n        });\n    }\n  };\n\n  const handleDeletePost = async (postId) => {\n    try {\n      // First, delete all likes associated with the post\n      const { error: likesError } = await supabase\n        .from('post_likes')\n        .delete()\n        .eq('post_id', postId);\n\n      if (likesError) throw likesError;\n\n      // Then delete all replies associated with the post\n      const { error: repliesError } = await supabase\n        .from('post_replies')\n        .delete()\n        .eq('post_id', postId);\n\n      if (repliesError) throw repliesError;\n\n      // Finally, delete the post\n      const { error: postError } = await supabase\n        .from('community_posts')\n        .delete()\n        .eq('id', postId);\n\n      if (postError) throw postError;\n\n      setPosts(prevPosts => prevPosts.filter(post => post.id !== postId));\n\n              toast({\n          title: t('toast.success'),\n          description: t('toast.postDeleted'),\n        });\n    } catch (error) {\n      console.error('Error deleting post:', error);\n      toast({\n        title: t('errors.general'),\n        description: t('errors.deletePostFailed'),\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const handleLoadMore = async () => {\n    const nextPage = page + 1;\n    setPage(nextPage);\n    await fetchPosts(nextPage, true);\n  };\n\n  const handleBlockUser = async (userId) => {\n    try {\n      const { error } = await supabase\n        .from('blocked_users')\n        .insert({\n          blocked_user_id: userId,\n          blocked_by_id: currentUser.id\n        });\n\n      if (error) throw error;\n\n              setBlockedUsers(prev => new Set([...prev, userId]));\n        toast({\n          title: t('toast.success'),\n          description: t('toast.userBlocked'),\n        });\n    } catch (error) {\n              console.error('Error blocking user:', error);\n        toast({\n          title: t('toast.error'),\n          description: t('toast.blockUserFailed'),\n          variant: 'destructive',\n        });\n    }\n  };\n\n  const handleUnblockUser = async (blockedUserId) => {\n    try {\n      const { error } = await supabase\n        .from('blocked_users')\n        .delete()\n        .eq('blocked_user_id', blockedUserId)\n        .eq('blocked_by_id', currentUser.id);\n\n      if (error) throw error;\n\n      setBlockedUsers(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(blockedUserId);\n        return newSet;\n      });\n\n              toast({\n          title: t('toast.success'),\n          description: t('toast.userUnblocked'),\n        });\n    } catch (error) {\n              console.error('Error unblocking user:', error);\n        toast({\n          title: t('toast.error'),\n          description: t('toast.unblockUserFailed'),\n          variant: 'destructive',\n        });\n    }\n  };\n\n  const handleConnectClick = () => {\n    navigate(`/${language}/auth?returnTo=/community`);\n  };\n\n  const handleSignupClick = () => {\n    navigate(`/${language}/auth?tab=signup&returnTo=/community`);\n  };\n\n  const fetchNearbyPlaces = async () => {\n    if (!currentLocation) {\n      setNearbyPlaces([]);\n      return;\n    }\n\n    try {\n      setLoadingNearbyPlaces(true);\n      \n      // Calculate the bounding box for 50km radius\n      const lat = currentLocation.lat;\n      const lng = currentLocation.lng;\n      const radiusKm = 50;\n      \n      // Convert km to degrees (approximate)\n      const latDelta = radiusKm / 111.32; // 1 degree latitude ≈ 111.32 km\n      const lngDelta = radiusKm / (111.32 * Math.cos(lat * Math.PI / 180)); // Adjust for longitude\n      \n      const { data, error } = await supabase\n        .from('pois')\n        .select(`\n          *,\n          poi_category:poi_categories(name, image_url)\n        `)\n        .gte('lat', lat - latDelta)\n        .lte('lat', lat + latDelta)\n        .gte('lng', lng - lngDelta)\n        .lte('lng', lng + lngDelta)\n        .limit(10);\n\n      if (error) throw error;\n\n      // Calculate exact distances and filter within 50km\n      const placesWithDistance = data\n        .map(place => {\n          const distance = calculateDistance(lat, lng, place.lat, place.lng);\n          return { ...place, distance };\n        })\n        .filter(place => place.distance <= 50)\n        .sort((a, b) => a.distance - b.distance);\n\n      setNearbyPlaces(placesWithDistance);\n    } catch (error) {\n      console.error('Error fetching nearby places:', error);\n      setNearbyPlaces([]);\n    } finally {\n      setLoadingNearbyPlaces(false);\n    }\n  };\n\n  const calculateDistance = (lat1, lng1, lat2, lng2) => {\n    const R = 6371; // Earth's radius in kilometers\n    const dLat = (lat2 - lat1) * Math.PI / 180;\n    const dLng = (lng2 - lng1) * Math.PI / 180;\n    const a = \n      Math.sin(dLat/2) * Math.sin(dLat/2) +\n      Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * \n      Math.sin(dLng/2) * Math.sin(dLng/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    return R * c;\n  };\n\n  const handlePlaceClick = (place) => {\n    // Navigate to ZapPlaces page with the place details and SEO-friendly URL\n    const placeUrl = createPlaceUrl(place.id, place.name, language);\n    navigate(placeUrl, {\n      state: {\n        placeId: place.id,\n        placeDetails: {\n          place_id: place.id,\n          name: place.name,\n          lat: place.lat,\n          lng: place.lng,\n          types: place.categories || [],\n          rating: 0,\n          userRatingsTotal: 0\n        }\n      }\n    });\n  };\n\n  const fetchReplies = async (postId) => {\n    try {\n      const { data, error } = await supabase\n        .from('post_replies')\n        .select(`\n          *,\n          profile:profiles!post_replies_user_id_fkey (\n            username,\n            first_name,\n            last_name,\n            avatar_url\n          )\n        `)\n        .eq('post_id', postId)\n        .order('created_at', { ascending: false })\n        .limit(3);\n\n      if (error) throw error;\n\n      setReplies(prev => ({\n        ...prev,\n        [postId]: data\n      }));\n    } catch (error) {\n      console.error('Error fetching replies:', error);\n      toast({\n        title: t('errors.general'),\n        description: t('errors.fetchReplies'),\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const generateShareableUrl = (post) => {\n    const baseUrl = window.location.origin;\n    const postId = post.id;\n    const locationSlug = post.location ? post.location.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/^-+|-+$/g, '') : '';\n    const langPrefix = `/${i18n.language || 'en'}`;\n\n    // Generate clean SPA route with just postId and locationSlug\n    if (locationSlug) {\n      return `${baseUrl}${langPrefix}/community/share/${postId}/${locationSlug}`;\n    } else {\n      return `${baseUrl}${langPrefix}/community/share/${postId}`;\n    }\n  };\n\n  const handleShareWithDevice = async (post) => {\n    const shareUrl = generateShareableUrl(post);\n    const title = 'ZapAround';\n    const sharePrefix = t('share.checkFound', 'Check what I found on ZapAround');\n    const contentSnippet = (post.content || '').trim();\n    const limitedContent = contentSnippet.length > 220 ? contentSnippet.substring(0, 220) + '...' : contentSnippet;\n    const quotedContentLine = limitedContent ? `\\n'${limitedContent}'` : '';\n    const placeLine = post.location ? `\\n${post.location}` : '';\n    const textPayload = `${sharePrefix}${quotedContentLine}${placeLine}\\n${shareUrl}`;\n\n    // Check if native sharing is available\n    if (typeof navigator !== 'undefined' && navigator.share) {\n      const shareData: any = { \n        title, \n        text: textPayload,\n        url: shareUrl\n      };\n\n      // Try to attach image if available and supported\n      try {\n        if (post.media_urls && post.media_urls.length > 0) {\n          const firstImage = post.media_urls.find((media: any) => media.type === 'image');\n          if (firstImage && firstImage.url) {\n            const response = await fetch(firstImage.url);\n            const blob = await response.blob();\n            const extension = (blob.type && blob.type.split('/')[1]) || 'jpg';\n            const file = new File([blob], `zaparound-share.${extension}`, { type: blob.type || 'image/jpeg' });\n            \n            // Check if files can be shared\n            if (navigator.canShare && navigator.canShare({ files: [file] })) {\n              shareData.files = [file];\n            }\n          }\n        }\n      } catch (error) {\n        // Continue without file attachment if it fails\n        console.log('File attachment failed, continuing with text-only share');\n      }\n\n      try {\n        await navigator.share(shareData);\n        return; // Successfully shared, exit function\n      } catch (error) {\n        // User cancelled or share failed, continue to fallback\n        console.log('Native share failed or was cancelled, using fallback');\n      }\n    }\n\n    // Fallback to clipboard copy if native sharing is not available or failed\n    try {\n      await navigator.clipboard.writeText(textPayload);\n      toast({\n        title: t('toast.linkCopied'),\n        description: t('toast.postTextLinkCopied'),\n      });\n    } catch (error) {\n      // Fallback for older browsers\n      const textArea = document.createElement('textarea');\n      textArea.value = textPayload;\n      document.body.appendChild(textArea);\n      textArea.select();\n      document.execCommand('copy');\n      document.body.removeChild(textArea);\n      \n      toast({\n        title: t('toast.linkCopied'),\n        description: t('toast.postTextLinkCopied'),\n      });\n    }\n  };\n\n  const handleCopyLink = async (post) => {\n    const shareUrl = generateShareableUrl(post);\n    \n    try {\n      await navigator.clipboard.writeText(shareUrl);\n      toast({\n        title: t('toast.linkCopied'),\n        description: t('toast.postLinkCopied'),\n      });\n    } catch (error) {\n      // Fallback for older browsers\n      const textArea = document.createElement('textarea');\n      textArea.value = shareUrl;\n      document.body.appendChild(textArea);\n      textArea.select();\n      document.execCommand('copy');\n      document.body.removeChild(textArea);\n      \n      toast({\n        title: t('toast.linkCopied'),\n        description: t('toast.postLinkCopied'),\n      });\n    }\n  };\n\n  const navigateToPost = (postId) => {\n    window.location.href = `/community/post/${postId}`;\n  };\n\n  const handleReplyMediaChange = (media, postId) => {\n    setReplyMedia(prev => ({ ...prev, [postId]: media }));\n  };\n\n  const uploadReplyMedia = async (mediaFiles, postId) => {\n    if (!mediaFiles || mediaFiles.length === 0) return [];\n\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('No authenticated user found');\n\n      const uploadedMedia = [];\n\n      for (const mediaFile of mediaFiles) {\n        const fileExt = mediaFile.file.name.split('.').pop();\n        const fileName = `${user.id}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}.${fileExt}`;\n\n        const { data, error } = await supabase.storage\n          .from('community-images')\n          .upload(fileName, mediaFile.file, {\n            cacheControl: '3600',\n            upsert: false\n          });\n\n        if (error) throw error;\n\n        const { data: { publicUrl } } = supabase.storage\n          .from('community-images')\n          .getPublicUrl(fileName);\n\n        uploadedMedia.push({\n          id: mediaFile.id,\n          url: publicUrl,\n          type: mediaFile.type,\n          thumbnail: mediaFile.type === 'video' ? mediaFile.preview : null\n        });\n      }\n\n      return uploadedMedia;\n    } catch (error) {\n      console.error('Error uploading reply media:', error);\n      toast({\n        title: t('toast.error'),\n        description: t('toast.uploadMediaFailed'),\n        variant: 'destructive',\n      });\n      return [];\n    }\n  };\n\n  const handleReply = async (postId) => {\n    if (!replyContent[postId]?.trim()) {\n      toast({\n        title: t('toast.error'),\n        description: t('toast.replyContentEmpty'),\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    try {\n      setIsUploadingReply(prev => ({ ...prev, [postId]: true }));\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        toast({\n          title: t('toast.error'),\n          description: t('toast.loginRequiredReply'),\n          variant: 'destructive',\n        });\n        return;\n      }\n\n      let mediaUrls = [];\n      if (replyMedia[postId] && replyMedia[postId].length > 0) {\n        mediaUrls = await uploadReplyMedia(replyMedia[postId], postId);\n      }\n\n      const { error } = await supabase\n        .from('post_replies')\n        .insert([\n          {\n            post_id: postId,\n            user_id: user.id,\n            content: replyContent[postId],\n            media_urls: mediaUrls,\n            rating: replyRating[postId] > 0 ? replyRating[postId] : null\n          }\n        ]);\n\n      if (error) throw error;\n\n      setReplyContent(prev => ({ ...prev, [postId]: '' }));\n      setReplyMedia(prev => ({ ...prev, [postId]: [] }));\n      setReplyRating(prev => ({ ...prev, [postId]: 0 }));\n      \n      // Refresh replies\n      await fetchReplies(postId);\n\n              toast({\n          title: t('toast.success'),\n          description: t('toast.replyPosted'),\n        });\n    } catch (error) {\n      console.error('Error posting reply:', error);\n      toast({\n        title: t('errors.general'),\n        description: t('errors.postReplyFailed'),\n        variant: 'destructive',\n      });\n    } finally {\n      setIsUploadingReply(prev => ({ ...prev, [postId]: false }));\n    }\n  };\n\n  const handleDeleteReply = async (replyId, postId) => {\n    try {\n      const { error } = await supabase\n        .from('post_replies')\n        .delete()\n        .eq('id', replyId);\n\n      if (error) throw error;\n\n      // Refresh replies\n      await fetchReplies(postId);\n\n              toast({\n          title: t('toast.success'),\n          description: t('toast.replyDeleted'),\n        });\n    } catch (error) {\n      console.error('Error deleting reply:', error);\n      toast({\n        title: t('errors.general'),\n        description: t('errors.deleteReplyFailed'),\n        variant: 'destructive',\n      });\n    }\n  };\n\n  return (\n    <>\n\n\n      <div className=\"min-h-screen bg-gray-50\">\n        <div className=\"container max-w-7xl mx-auto px-4 py-8\">\n          {/* Location Header */}\n          <div className=\"mb-8\">\n            <LocationHeader />\n          </div>\n\n\n\n          {/* Main Content Grid */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {/* Left Column - Social Feed */}\n            <div className=\"lg:col-span-2 space-y-6\">\n              <motion.div\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ duration: 0.5 }}\n                className=\"bg-white rounded-xl shadow-sm p-6\"\n              >\n                <h2 className=\"text-2xl font-bold mb-4 flex items-center\">\n                  <MessageCircle className=\"h-6 w-6 mr-2 text-blue-500\" />\n                  {t('travelStories')}\n                </h2>\n                <div className=\"space-y-6\">\n                  {/* Post Input */}\n                  <div className=\"relative border-b pb-6 post-creator-section\">\n                    {/* Blur overlay for non-connected users */}\n                    {!currentUser && (\n                      <PostBlurOverlay\n                        onConnectClick={handleConnectClick}\n                        onSignupClick={handleSignupClick}\n                      />\n                    )}\n                    \n                    <AnimatePresence>\n                      {showBlockedMessage && (\n                        <motion.div\n                          initial={{ opacity: 0, y: -20 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          exit={{ opacity: 0, y: -20 }}\n                          transition={{ duration: 0.3 }}\n                          className=\"mb-4 p-4 bg-gray-50 border border-gray-200 rounded-lg\"\n                        >\n                          <div className=\"flex items-center text-gray-600\">\n                            <AlertCircle className=\"h-5 w-5 mr-2 text-gray-400\" />\n                            <p>\n                              You are unable to post at this time due to our community policies. \n                              Please contact our support team for more information.\n                            </p>\n                          </div>\n                        </motion.div>\n                      )}\n                    </AnimatePresence>\n                    {/* Post Type Selector */}\n                    <div className=\"mb-3 flex gap-2\">\n                      <Button\n                        type=\"button\"\n                        variant={postType === 'activity' ? 'default' : 'outline'}\n                        size=\"sm\"\n                        onClick={() => setPostType('activity')}\n                        className={cn(\n                          \"flex items-center gap-2\",\n                          postType === 'activity' \n                            ? \"bg-orange-500 hover:bg-orange-600 text-white\" \n                            : \"border-orange-200 text-orange-600 hover:bg-orange-50\"\n                        )}\n                      >\n                        <CalendarClock className=\"h-4 w-4\" />\n                        {t('postTypes.activity')}\n                      </Button>\n                      <Button\n                        type=\"button\"\n                        variant={postType === 'destination' ? 'default' : 'outline'}\n                        size=\"sm\"\n                        onClick={() => setPostType('destination')}\n                        className={cn(\n                          \"flex items-center gap-2\",\n                          postType === 'destination' \n                            ? \"bg-blue-500 hover:bg-blue-600 text-white\" \n                            : \"border-blue-200 text-blue-600 hover:bg-blue-50\"\n                        )}\n                      >\n                        <Map className=\"h-4 w-4\" />\n                        {t('postTypes.destination')}\n                      </Button>\n                    </div>\n                    \n                    <textarea\n                      value={postContent}\n                      onChange={(e) => setPostContent(e.target.value)}\n                      placeholder={postType === 'activity' ? t('postCreation.activityPlaceholder') : t('postCreation.destinationPlaceholder')}\n                      className=\"w-full p-2 border rounded-md\"\n                      rows={3}\n                    />\n                    \n                    {/* Star Rating */}\n                    <div className=\"flex items-center gap-3\">\n                      <span className=\"text-sm font-medium text-gray-700\">{t('rating.rateExperience')}</span>\n                      <StarRating\n                        rating={postRating}\n                        onRatingChange={setPostRating}\n                        size=\"md\"\n                      />\n                      {postRating > 0 && (\n                        <span className=\"text-sm text-gray-500\">\n                          {postRating} {postRating !== 1 ? t('rating.stars') : t('rating.star')}\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"mt-2 flex items-center gap-2\">\n                      <GooglePlacesSearch\n                        key={locationKey}\n                        value={location}\n                        onChange={(locationName, placeDetails) => {\n                          setLocation(locationName);\n                          setSelectedPlaceDetails(placeDetails);\n                        }}\n                        placeholder={t('postCreation.locationPlaceholder')}\n                        className=\"flex-1\"\n                        currentLocation={currentLocation}\n                      />\n                      <Button \n                        onClick={handlePost} \n                        disabled={isUploading}\n                        className={cn(\n                          \"relative px-6 py-2 bg-gradient-to-r from-[#10B981] to-[#059669] text-white border-none hover:from-[#059669] hover:to-[#047857] hover:scale-105 transition-all duration-300 shadow-lg rounded-full font-medium tracking-wide flex items-center gap-2\"\n                        )}\n                      >\n                        {isUploading ? (\n                          <>\n                            <Loader2 className=\"h-4 w-4 animate-spin\" />\n                            {t('postCreation.posting')}\n                          </>\n                        ) : (\n                          t('postCreation.postButton')\n                        )}\n                      </Button>\n                    </div>\n                    \n                    {/* Media Upload */}\n                    <div className=\"mt-4\">\n                      <MediaUpload\n                        key={mediaKey}\n                        onMediaChange={handleMediaChange}\n                        maxFiles={10}\n                        disabled={isUploading}\n                      />\n                    </div>\n                  </div>\n\n                  {/* Feed Type Selector */}\n                  <div className=\"sticky top-0 lg:top-16 z-10 bg-white border-b border-gray-200 -mx-6 px-6 py-3 flex items-center justify-between\">\n                    <div className=\"flex items-center gap-2 sm:gap-4 overflow-x-auto whitespace-nowrap pr-2\">\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => setActiveTab('feed')}\n                        className={cn(\n                          \"h-9 px-3 rounded-full text-sm flex items-center transition-all\",\n                          activeTab === 'feed'\n                            ? \"bg-[#61936f] text-white sm:bg-gradient-to-r sm:from-[#10B981] sm:to-[#059669] sm:text-white sm:border-none sm:shadow-lg sm:hover:from-[#059669] sm:hover:to-[#047857] sm:hover:scale-105\"\n                            : \"bg-transparent text-[#1d1d1e] hover:bg-gray-100\"\n                        )}\n                      >\n                        <MessageCircle className=\"h-4 w-4 mr-1.5\" />\n                        {t('postTypes.feed')}\n                      </Button>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => setActiveTab('activities')}\n                        className={cn(\n                          \"h-9 px-3 rounded-full text-sm flex items-center transition-all\",\n                          activeTab === 'activities'\n                            ? \"bg-[#61936f] text-white sm:bg-gradient-to-r sm:from-[#10B981] sm:to-[#059669] sm:text-white sm:border-none sm:shadow-lg sm:hover:from-[#059669] sm:hover:to-[#047857] sm:hover:scale-105\"\n                            : \"bg-transparent text-[#1d1d1e] hover:bg-gray-100\"\n                        )}\n                      >\n                        <MapPin className=\"h-4 w-4 mr-1.5\" />\n                        {t('postTypes.activities')}\n                      </Button>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => setActiveTab('destinations')}\n                        className={cn(\n                          \"h-9 px-3 rounded-full text-sm flex items-center transition-all\",\n                          activeTab === 'destinations'\n                            ? \"bg-[#61936f] text-white sm:bg-gradient-to-r sm:from-[#10B981] sm:to-[#059669] sm:text-white sm:border-none sm:shadow-lg sm:hover:from-[#059669] sm:hover:to-[#047857] sm:hover:scale-105\"\n                            : \"bg-transparent text-[#1d1d1e] hover:bg-gray-100\"\n                        )}\n                      >\n                        <Compass className=\"h-4 w-4 mr-1.5\" />\n                        {t('postTypes.destinations')}\n                      </Button>\n                    </div>\n                    {isFeedPickerSticky && (\n                      <Button\n                        onClick={scrollToPostCreator}\n                        className=\"hidden sm:flex bg-gradient-to-r from-[#10B981] to-[#059669] text-white border-none hover:from-[#059669] hover:to-[#047857] hover:scale-105 transition-all duration-300 shadow-lg rounded-full font-medium tracking-wide items-center gap-2\"\n                      >\n                        <MessageCircle className=\"h-4 w-4\" />\n                        {t('postCreation.postButton')}\n                      </Button>\n                    )}\n                  </div>\n\n                  {/* Mobile Floating Post Button above bottom navigation */}\n                  {isFeedPickerSticky && (\n                    <div className=\"sm:hidden\">\n                      <div className=\"fixed right-4 z-[60]\"\n                           style={{ bottom: 'calc(6rem + env(safe-area-inset-bottom))' }}>\n                        <Button\n                          onClick={scrollToPostCreator}\n                          disabled={isUploading}\n                          className=\"h-12 px-5 rounded-full bg-gradient-to-r from-[#10B981] to-[#059669] text-white border-none shadow-xl hover:from-[#059669] hover:to-[#047857] active:scale-95 transition-all duration-200 flex items-center gap-2\"\n                          aria-label={t('postCreation.postButton')}\n                        >\n                          {isUploading ? (\n                            <>\n                              <Loader2 className=\"h-5 w-5 animate-spin\" />\n                              {t('postCreation.posting')}\n                            </>\n                          ) : (\n                            <>\n                              <MessageCircle className=\"h-5 w-5\" />\n                              {t('postCreation.postButton')}\n                            </>\n                          )}\n                        </Button>\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Loading State */}\n                  {loading && (\n                    <div className=\"text-center py-4\">\n                      <p>{t('loading.posts')}</p>\n                    </div>\n                  )}\n\n                  {/* Display Posts */}\n                  {!loading && posts.length === 0 ? (\n                    <div className=\"text-center py-4\">\n                      <p>{t('errors.notFound')}</p>\n                    </div>\n                  ) : (\n                    <>\n                      {posts.map((post) => (\n                        <div \n                          key={post.id} \n                          className=\"relative bg-white rounded-2xl shadow-sm p-6 mb-6 border border-gray-100 hover:shadow-md transition-shadow duration-200\"\n                        >\n                          \n                          <div className=\"flex items-center justify-between mb-4\">\n                            <div className=\"flex items-center\">\n                              <div className=\"h-12 w-12 bg-gradient-to-br from-blue-100 to-blue-200 rounded-full flex items-center justify-center shadow-sm overflow-hidden\">\n                                {post.profile?.avatar_url ? (\n                                  <img\n                                    src={supabase.storage.from('avatars').getPublicUrl(post.profile.avatar_url).data.publicUrl}\n                                    alt={post.profile.username || `${post.profile.first_name || ''} ${post.profile.last_name || ''}`.trim() || 'User'}\n                                    className=\"w-full h-full object-cover\"\n                                    onError={(e) => {\n                                      e.currentTarget.style.display = 'none';\n                                      e.currentTarget.parentElement.classList.remove('overflow-hidden');\n                                    }}\n                                  />\n                                ) : (\n                                  <Users className=\"h-6 w-6 text-blue-500\" />\n                                )}\n                              </div>\n                              <div className=\"ml-4\">\n                                <div className=\"flex items-center gap-2\">\n                                  <p className=\"font-semibold text-gray-800\">\n                                    {post.profile?.username || `${post.profile?.first_name || ''} ${post.profile?.last_name || ''}`.trim() || t('user.anonymous')}\n                                  </p>\n                                  {post.post_type && (\n                                    <span className={cn(\n                                      \"px-2 py-1 text-xs font-medium rounded-full\",\n                                      post.post_type === 'activity' \n                                        ? \"bg-orange-100 text-orange-700 border border-orange-200\"\n                                        : \"bg-blue-100 text-blue-700 border border-blue-200\"\n                                    )}>\n                                      {post.post_type === 'activity' ? t('postTypes.activity') : t('postTypes.destination')}\n                                    </span>\n                                  )}\n                                </div>\n                                <p className=\"text-sm text-gray-500\">\n                                  {new Date(post.created_at).toLocaleString()}\n                                  {post.distance !== undefined && (\n                                    <span className={cn(\n                                      \"ml-2 text-xs\",\n                                      post.distance > 1000 \n                                        ? \"text-purple-500 font-medium\" \n                                        : \"text-blue-500\"\n                                    )}>\n                                      • {post.distance > 1000 ? t('aroundTheWorld') : `${post.distance.toFixed(1)}km`}\n                                    </span>\n                                  )}\n                                </p>\n                                {post.rating && (\n                                  <div className=\"flex items-center gap-2 mt-1\">\n                                    <StarRating\n                                      rating={post.rating}\n                                      size=\"sm\"\n                                      readonly\n                                    />\n                                    <span className=\"text-xs text-gray-500\">\n                                      {post.rating} {post.rating !== 1 ? t('rating.stars') : t('rating.star')}\n                                    </span>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                            <div className=\"flex items-center gap-1\">\n                              <DropdownMenu>\n                                <DropdownMenuTrigger asChild>\n                                  <Button\n                                    variant=\"ghost\"\n                                    size=\"sm\"\n                                    className=\"h-8 w-8 p-0 hover:bg-gray-100\"\n                                    title={t('postActions.share')}\n                                  >\n                                    <Share2 className=\"h-4 w-4 text-blue-500\" />\n                                  </Button>\n                                </DropdownMenuTrigger>\n                                <DropdownMenuContent align=\"end\" className=\"w-48\">\n                                  <DropdownMenuItem\n                                    onClick={() => handleShareWithDevice(post)}\n                                    className=\"cursor-pointer\"\n                                  >\n                                    <Share2 className=\"h-4 w-4 mr-2\" />\n                                    {t('postActions.shareWithDevice', 'Share with device')}\n                                  </DropdownMenuItem>\n                                  <DropdownMenuItem\n                                    onClick={() => handleCopyLink(post)}\n                                    className=\"cursor-pointer\"\n                                  >\n                                    <ExternalLink className=\"h-4 w-4 mr-2\" />\n                                    {t('postActions.copyLink', 'Copy link')}\n                                  </DropdownMenuItem>\n                                </DropdownMenuContent>\n                              </DropdownMenu>\n                              {(currentUser?.id === post.user_id || isAdmin) && (\n                                <DropdownMenu>\n                                  <DropdownMenuTrigger asChild>\n                                    <Button variant=\"ghost\" size=\"sm\" className=\"h-8 w-8 p-0\">\n                                      <MoreVertical className=\"h-4 w-4\" />\n                                    </Button>\n                                  </DropdownMenuTrigger>\n                                  <DropdownMenuContent align=\"end\">\n                                    {currentUser?.id === post.user_id && (\n                                      <>\n                                        <DropdownMenuItem\n                                          onClick={() => {\n                                            setEditingPost(post);\n                                            setEditContent(post.content);\n                                            setEditMedia(post.media_urls || []);\n                                            setEditLocation(post.location || '');\n                                            setEditPlaceDetails({\n                                              place_id: post.place_id,\n                                              geometry: {\n                                                location: {\n                                                  lat: post.place_lat,\n                                                  lng: post.place_lng\n                                                }\n                                              },\n                                              types: post.place_types,\n                                              rating: post.place_rating,\n                                              user_ratings_total: post.place_user_ratings_total\n                                            });\n                                            setEditLocationKey(prev => prev + 1);\n                                            setEditMediaKey(prev => prev + 1);\n                                            setIsEditDialogOpen(true);\n                                          }}\n                                        >\n                                          <Pencil className=\"h-4 w-4 mr-2\" />\n                                          {t('postActions.edit')}\n                                        </DropdownMenuItem>\n                                        <DropdownMenuItem\n                                          className=\"text-red-600\"\n                                          onClick={() => handleDeletePost(post.id)}\n                                        >\n                                          <Trash2 className=\"h-4 w-4 mr-2\" />\n                                          Delete\n                                        </DropdownMenuItem>\n                                      </>\n                                    )}\n                                    {isAdmin && (\n                                      <>\n                                        {currentUser?.id !== post.user_id && (\n                                          <DropdownMenuItem\n                                            className=\"text-red-600\"\n                                            onClick={() => handleDeletePost(post.id)}\n                                          >\n                                            <Trash2 className=\"h-4 w-4 mr-2\" />\n                                            Delete Post\n                                          </DropdownMenuItem>\n                                        )}\n                                        {currentUser?.id !== post.user_id && (\n                                          <DropdownMenuItem\n                                            className=\"text-red-600\"\n                                            onClick={() => handleBlockUser(post.user_id)}\n                                            disabled={blockedUsers.has(post.user_id)}\n                                          >\n                                            <Ban className=\"h-4 w-4 mr-2\" />\n                                            {blockedUsers.has(post.user_id) ? 'User Blocked' : 'Block User'}\n                                          </DropdownMenuItem>\n                                        )}\n                                      </>\n                                    )}\n                                  </DropdownMenuContent>\n                                </DropdownMenu>\n                              )}\n                            </div>\n                          </div>\n                          {post.location && (\n                            <LocationDisplay\n                              location={post.location}\n                              placeId={post.place_id}\n                              placeLat={post.place_lat}\n                              placeLng={post.place_lng}\n                              placeTypes={post.place_types}\n                              placeRating={post.place_rating}\n                              placeUserRatingsTotal={post.place_user_ratings_total}\n                              className=\"mb-2\"\n                            />\n                          )}\n                          <div className=\"bg-gray-50 rounded-xl p-4 mb-4\">\n                            <p className=\"text-gray-700 leading-relaxed\">{post.content}</p>\n                            {(post.media_urls && post.media_urls.length > 0) || post.image_url ? (\n                              <div className=\"mt-4\">\n                                <MediaDisplay\n                                  media={post.media_urls && post.media_urls.length > 0 ? post.media_urls : post.image_url}\n                                  maxPreview={5}\n                                />\n                              </div>\n                            ) : null}\n                          </div>\n                          <div className=\"flex gap-4 pt-2\">\n                            <Button \n                              variant=\"ghost\" \n                              size=\"sm\" \n                              className={`flex items-center rounded-full px-4 ${userLikes[post.id] ? 'text-red-500 hover:bg-red-50' : 'hover:bg-gray-100'}`}\n                              onClick={() => handleLike(post.id)}\n                            >\n                              <Heart className={`h-4 w-4 mr-2 ${userLikes[post.id] ? 'fill-current' : ''}`} />\n                              {post.likes?.[0]?.count || 0} Likes\n                            </Button>\n                            <Button \n                              variant=\"ghost\" \n                              size=\"sm\" \n                              className=\"flex items-center rounded-full px-4 hover:bg-gray-100\"\n                              onClick={() => {\n                                setExpandedReplies(prev => {\n                                  const newSet = new Set(prev);\n                                  if (newSet.has(post.id)) {\n                                    newSet.delete(post.id);\n                                  } else {\n                                    newSet.add(post.id);\n                                    if (!replies[post.id]) {\n                                      fetchReplies(post.id);\n                                    }\n                                  }\n                                  return newSet;\n                                });\n                              }}\n                            >\n                              <Reply className=\"h-4 w-4 mr-2\" />\n                              {post.replies?.[0]?.count || 0} {t('replies.title')}\n                            </Button>\n                          </div>\n\n                          {/* Replies Section */}\n                          {expandedReplies.has(post.id) && (\n                            <div className=\"mt-4 space-y-4\">\n                              {/* Reply Input */}\n                              <div className=\"space-y-4\">\n                                <textarea\n                                  value={replyContent[post.id] || ''}\n                                  onChange={(e) => setReplyContent(prev => ({ ...prev, [post.id]: e.target.value }))}\n                                  placeholder={t('replies.placeholder')}\n                                  className=\"w-full p-2 border rounded-md\"\n                                  rows={2}\n                                />\n                                \n                                {/* Reply Star Rating */}\n                                <div className=\"flex items-center gap-3\">\n                                  <span className=\"text-sm font-medium text-gray-700\">{t('rating.ratePost')}</span>\n                                  <StarRating\n                                    rating={replyRating[post.id] || 0}\n                                    onRatingChange={(rating) => setReplyRating(prev => ({ ...prev, [post.id]: rating }))}\n                                    size=\"sm\"\n                                  />\n                                  {(replyRating[post.id] || 0) > 0 && (\n                                    <span className=\"text-sm text-gray-500\">\n                                      {replyRating[post.id]} {(replyRating[post.id] || 0) !== 1 ? t('rating.stars') : t('rating.star')}\n                                    </span>\n                                  )}\n                                </div>\n                                \n                                {/* Reply Media Upload */}\n                                <MediaUpload\n                                  onMediaChange={(media) => handleReplyMediaChange(media, post.id)}\n                                  maxFiles={5}\n                                  disabled={isUploadingReply[post.id]}\n                                />\n                                \n                                <Button\n                                  size=\"sm\"\n                                  onClick={() => handleReply(post.id)}\n                                  disabled={isUploadingReply[post.id]}\n                                  className={cn(\n                                    \"relative px-4 py-1 bg-gradient-to-r from-[#10B981] to-[#059669] text-white border-none hover:from-[#059669] hover:to-[#047857] hover:scale-105 transition-all duration-300 shadow-lg rounded-full font-medium tracking-wide flex items-center gap-2\"\n                                  )}\n                                >\n                                  {isUploadingReply[post.id] ? (\n                                    <>\n                                      <Loader2 className=\"h-4 w-4 animate-spin\" />\n                                      Posting...\n                                    </>\n                                  ) : (\n                                    'Reply'\n                                  )}\n                                </Button>\n                              </div>\n\n                              {/* Replies List */}\n                              <div className=\"space-y-4\">\n                                {replies[post.id]?.map((reply) => (\n                                  <div\n                                    key={`reply-${reply.id}`}\n                                    className=\"bg-gray-50 rounded-lg p-4\"\n                                  >\n                                    <div className=\"flex items-center justify-between mb-2\">\n                                      <div className=\"flex items-center\">\n                                        <div className=\"h-8 w-8 bg-gradient-to-br from-blue-100 to-blue-200 rounded-full flex items-center justify-center shadow-sm overflow-hidden\">\n                                          {reply.profile?.avatar_url ? (\n                                            <img\n                                              src={supabase.storage.from('avatars').getPublicUrl(reply.profile.avatar_url).data.publicUrl}\n                                              alt={reply.profile.username || `${reply.profile.first_name || ''} ${reply.profile.last_name || ''}`.trim() || 'User'}\n                                              className=\"w-full h-full object-cover\"\n                                              onError={(e) => {\n                                                e.currentTarget.style.display = 'none';\n                                                e.currentTarget.parentElement.classList.remove('overflow-hidden');\n                                              }}\n                                            />\n                                          ) : (\n                                            <Users className=\"h-4 w-4 text-blue-500\" />\n                                          )}\n                                        </div>\n                                        <div className=\"ml-2\">\n                                                                                  <p className=\"font-semibold text-sm\">\n                                          {reply.profile?.username || `${reply.profile?.first_name || ''} ${reply.profile?.last_name || ''}`.trim() || t('user.anonymous')}\n                                        </p>\n                                          <p className=\"text-xs text-gray-500\">\n                                            {new Date(reply.created_at).toLocaleString()}\n                                          </p>\n                                        </div>\n                                      </div>\n                                      {currentUser?.id === reply.user_id && (\n                                        <DropdownMenu>\n                                          <DropdownMenuTrigger asChild>\n                                            <Button variant=\"ghost\" size=\"sm\" className=\"h-6 w-6 p-0\">\n                                              <MoreVertical className=\"h-4 w-4\" />\n                                            </Button>\n                                          </DropdownMenuTrigger>\n                                          <DropdownMenuContent align=\"end\">\n                                            <DropdownMenuItem\n                                              className=\"text-red-600\"\n                                              onClick={() => handleDeleteReply(reply.id, post.id)}\n                                            >\n                                              <Trash2 className=\"h-4 w-4 mr-2\" />\n                                              Delete\n                                            </DropdownMenuItem>\n                                          </DropdownMenuContent>\n                                        </DropdownMenu>\n                                      )}\n                                    </div>\n                                    <p className=\"text-gray-700 text-sm\">{reply.content}</p>\n                                    {reply.rating && (\n                                      <div className=\"flex items-center gap-2 mt-1\">\n                                        <StarRating\n                                          rating={reply.rating}\n                                          size=\"sm\"\n                                          readonly\n                                        />\n                                                                            <span className=\"text-xs text-gray-500\">\n                                      {reply.rating} {reply.rating !== 1 ? t('rating.stars') : t('rating.star')}\n                                    </span>\n                                      </div>\n                                    )}\n                                    {(reply.media_urls && reply.media_urls.length > 0) || reply.image_url ? (\n                                      <div className=\"mt-2\">\n                                        <MediaDisplay\n                                          media={reply.media_urls && reply.media_urls.length > 0 ? reply.media_urls : reply.image_url}\n                                          maxPreview={3}\n                                        />\n                                      </div>\n                                    ) : null}\n                                  </div>\n                                ))}\n                              </div>\n\n                              {/* View All Comments Button */}\n                              {post.replies?.[0]?.count > 3 && (\n                                <div className=\"flex justify-center mt-4\">\n                                  <Button\n                                    variant=\"outline\"\n                                    onClick={() => navigateToPost(post.id)}\n                                    className=\"flex items-center gap-2\"\n                                  >\n                                    <MessageCircle className=\"h-4 w-4\" />\n                                    {t('replies.viewAll')} ({post.replies[0].count})\n                                  </Button>\n                                </div>\n                              )}\n                            </div>\n                          )}\n                        </div>\n                      ))}\n                      \n                      {/* Infinite Scroll Trigger */}\n                      <div id=\"load-more-trigger\" className=\"h-4 w-full\">\n                        {loadingMore && (\n                          <div className=\"text-center py-4\">\n                            <Loader2 className=\"h-6 w-6 animate-spin text-gray-400 mx-auto\" />\n                            <p className=\"text-sm text-gray-500 mt-2\">{t('infiniteScroll.loadingMore')}</p>\n                          </div>\n                        )}\n                      </div>\n                    </>\n                  )}\n\n                  {/* Edit Post Dialog */}\n                  <Dialog \n                    open={isEditDialogOpen} \n                    onOpenChange={(open) => {\n                      setIsEditDialogOpen(open);\n                    }}\n                  >\n                    <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-y-auto\">\n                      <DialogHeader>\n                        <DialogTitle>{t('toast.editPost')}</DialogTitle>\n                      </DialogHeader>\n                      <div className=\"space-y-4\">\n                        <div>\n                          <label className=\"text-sm font-medium text-gray-700 mb-2 block\">\n                            Content\n                          </label>\n                          <Textarea\n                            value={editContent}\n                            onChange={(e) => setEditContent(e.target.value)}\n                            className=\"min-h-[100px]\"\n                            placeholder=\"What's on your mind?\"\n                          />\n                        </div>\n                        \n                        <div>\n                          <label className=\"text-sm font-medium text-gray-700 mb-2 block\">\n                            Location\n                          </label>\n                          <GooglePlacesSearch\n                            key={editLocationKey}\n                            value={editLocation}\n                            onChange={(locationName, placeDetails) => {\n                              setEditLocation(locationName);\n                              setEditPlaceDetails(placeDetails);\n                            }}\n                            placeholder=\"Add your location (optional)\"\n                            currentLocation={currentLocation}\n                          />\n                        </div>\n                        \n                        <div>\n                          <label className=\"text-sm font-medium text-gray-700 mb-2 block\">\n                            Media\n                          </label>\n                          <MediaUpload\n                            key={editMediaKey}\n                            onMediaChange={setEditMedia}\n                            maxFiles={10}\n                          />\n                        </div>\n                      </div>\n                      <DialogFooter>\n                        <Button variant=\"outline\" onClick={() => {\n                          setIsEditDialogOpen(false);\n                          // Reset all edit states with a small delay to ensure proper cleanup\n                          setTimeout(() => {\n                            setEditingPost(null);\n                            setEditContent('');\n                            setEditMedia([]);\n                            setEditLocation('');\n                            setEditPlaceDetails(null);\n                            setEditLocationKey(prev => prev + 1);\n                            setEditMediaKey(prev => prev + 1);\n                          }, 100);\n                        }}>\n                          Cancel\n                        </Button>\n                        <Button onClick={handleEditPost}>\n                          Save Changes\n                        </Button>\n                      </DialogFooter>\n                    </DialogContent>\n                  </Dialog>\n                </div>\n              </motion.div>\n            </div>\n\n            {/* Right Column - Nearby Activities & Destinations */}\n            <div className=\"space-y-6 lg:sticky lg:top-16 lg:self-start lg:max-h-[calc(100vh-6rem)] lg:overflow-y-auto lg:pr-2\">\n              {isAdmin && (\n                <motion.div\n                  initial={{ opacity: 0, x: 20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ duration: 0.5 }}\n                  className=\"bg-white rounded-xl shadow-sm p-6\"\n                >\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <h2 className=\"text-2xl font-bold flex items-center\">\n                      <Shield className=\"h-6 w-6 mr-2 text-blue-500\" />\n                      Community Management\n                    </h2>\n                    <Button\n                      variant=\"outline\"\n                      onClick={() => setShowBlockedUsers(!showBlockedUsers)}\n                      className=\"flex items-center gap-2\"\n                    >\n                      {showBlockedUsers ? (\n                        <>\n                          <UserCheck className=\"h-4 w-4\" />\n                          Hide Blocked Users\n                        </>\n                      ) : (\n                        <>\n                          <UserX className=\"h-4 w-4\" />\n                          Show Blocked Users\n                        </>\n                      )}\n                    </Button>\n                  </div>\n\n                  {showBlockedUsers && (\n                    <div className=\"space-y-4\">\n                      {blockedUsersList.length === 0 ? (\n                        <p className=\"text-gray-500 text-center py-4\">\n                          No users are currently blocked.\n                        </p>\n                      ) : (\n                        blockedUsersList.map((block) => (\n                          <div\n                            key={block.id}\n                            className=\"flex items-center justify-between p-4 border rounded-lg hover:shadow-md transition-shadow\"\n                          >\n                            <div className=\"flex items-center space-x-4\">\n                              <div className=\"h-10 w-10 bg-gradient-to-br from-blue-100 to-blue-200 rounded-full flex items-center justify-center shadow-sm overflow-hidden\">\n                                {block.blocked_user?.avatar_url ? (\n                                  <img\n                                    src={supabase.storage.from('avatars').getPublicUrl(block.blocked_user.avatar_url).data.publicUrl}\n                                    alt={block.blocked_user.username || 'User'}\n                                    className=\"w-full h-full object-cover\"\n                                  />\n                                ) : (\n                                  <Users className=\"h-5 w-5 text-blue-500\" />\n                                )}\n                              </div>\n                              <div>\n                                <p className=\"font-semibold\">\n                                  {`${block.blocked_user?.first_name || ''} ${block.blocked_user?.last_name || ''}`.trim() || block.blocked_user?.username || 'Unknown User'}\n                                </p>\n                                <p className=\"text-sm text-gray-500\">\n                                  Blocked by {`${block.blocked_by?.first_name || ''} ${block.blocked_by?.last_name || ''}`.trim() || block.blocked_by?.username || 'Unknown'}\n                                </p>\n                                <p className=\"text-xs text-gray-400\">\n                                  {new Date(block.created_at).toLocaleString()}\n                                </p>\n                              </div>\n                            </div>\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => handleUnblockUser(block.blocked_user_id)}\n                              className=\"text-green-600 hover:text-green-700 hover:bg-green-50\"\n                            >\n                              <UserCheck className=\"h-4 w-4 mr-2\" />\n                              Unblock\n                            </Button>\n                          </div>\n                        ))\n                      )}\n                    </div>\n                  )}\n                </motion.div>\n              )}\n\n              <motion.div\n                initial={{ opacity: 0, x: 20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ duration: 0.5 }}\n                className=\"bg-white rounded-xl shadow-sm p-6\"\n              >\n                <h2 className=\"text-2xl font-bold mb-4 flex items-center\">\n                  <MapPin className=\"h-6 w-6 mr-2 text-red-500\" />\n                                      {t('nearbyPlaces.title')}\n                </h2>\n                <div className=\"space-y-4\">\n                  {!currentLocation ? (\n                    <div className=\"text-center py-8\">\n                      <MapPin className=\"h-12 w-12 text-gray-300 mx-auto mb-3\" />\n                      <p className=\"text-gray-500\">{t('nearbyPlaces.enableLocation')}</p>\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={detectCurrentLocation}\n                        className=\"mt-2\"\n                      >\n                        {t('nearbyPlaces.enableLocation')}\n                      </Button>\n                    </div>\n                  ) : loadingNearbyPlaces ? (\n                    <div className=\"text-center py-8\">\n                      <Loader2 className=\"h-8 w-8 animate-spin text-gray-400 mx-auto mb-3\" />\n                      <p className=\"text-gray-500\">{t('nearbyPlaces.loading')}</p>\n                    </div>\n                  ) : nearbyPlaces.length === 0 ? (\n                    <div className=\"text-center py-8\">\n                      <MapPin className=\"h-12 w-12 text-gray-300 mx-auto mb-3\" />\n                      <p className=\"text-gray-500\">{t('nearbyPlaces.noPlaces')}</p>\n                      <p className=\"text-sm text-gray-400 mt-1\">{t('nearbyPlaces.checkBackLater')}</p>\n                    </div>\n                  ) : (\n                    nearbyPlaces.map((place) => (\n                      <div \n                        key={place.id} \n                        className=\"border rounded-lg p-4 hover:shadow-md transition-shadow cursor-pointer\"\n                        onClick={() => handlePlaceClick(place)}\n                      >\n                        <div className=\"flex items-start\">\n                          <div className=\"h-12 w-12 bg-orange-100 rounded-lg flex items-center justify-center\">\n                            {place.poi_category?.image_url ? (\n                              <img\n                                src={place.poi_category.image_url}\n                                alt={place.poi_category.name}\n                                className=\"h-8 w-8 object-cover rounded\"\n                              />\n                            ) : (\n                              <CalendarClock className=\"h-6 w-6 text-orange-500\" />\n                            )}\n                          </div>\n                          <div className=\"ml-3 flex-1\">\n                            <h3 className=\"font-semibold text-gray-800\">{place.name}</h3>\n                            <p className=\"text-sm text-gray-500\">\n                              {place.distance.toFixed(1)}{t('nearbyPlaces.distance')}\n                              {place.poi_category && ` • ${place.poi_category.name}`}\n                            </p>\n                            {place.description && (\n                              <p className=\"text-sm text-gray-600 mt-1 line-clamp-2\">\n                                {place.description}\n                              </p>\n                            )}\n                            {place.address && (\n                              <p className=\"text-xs text-gray-400 mt-1\">\n                                {place.address}\n                              </p>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    ))\n                  )}\n                </div>\n              </motion.div>\n\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Community;\n"],"names":["POSTS_PER_PAGE","Community","t","i18n","useTranslation","navigate","useNavigate","language","activeTab","setActiveTab","useState","postType","setPostType","postContent","setPostContent","postRating","setPostRating","posts","setPosts","feedAlgorithm","setFeedAlgorithm","loading","setLoading","userLikes","setUserLikes","currentUser","setCurrentUser","editingPost","setEditingPost","editContent","setEditContent","editMedia","setEditMedia","editLocation","setEditLocation","editPlaceDetails","setEditPlaceDetails","isEditDialogOpen","setIsEditDialogOpen","editLocationKey","setEditLocationKey","editMediaKey","setEditMediaKey","selectedMedia","setSelectedMedia","isUploading","setIsUploading","location","setLocation","selectedPlaceDetails","setSelectedPlaceDetails","currentLocation","setCurrentLocation","locationKey","setLocationKey","mediaKey","setMediaKey","toast","useToast","page","setPage","hasMore","setHasMore","loadingMore","setLoadingMore","totalPosts","setTotalPosts","isAdmin","setIsAdmin","blockedUsers","setBlockedUsers","Set","showBlockedMessage","setShowBlockedMessage","blockedUsersList","setBlockedUsersList","showBlockedUsers","setShowBlockedUsers","expandedReplies","setExpandedReplies","replyContent","setReplyContent","replyMedia","setReplyMedia","replyRating","setReplyRating","isUploadingReply","setIsUploadingReply","replies","setReplies","nearbyPlaces","setNearbyPlaces","loadingNearbyPlaces","setLoadingNearbyPlaces","isFeedPickerSticky","setIsFeedPickerSticky","scrollToPostCreator","el","document","querySelector","y","getBoundingClientRect","top","window","scrollY","scrollTo","behavior","useEffect","fetchPosts","fetchUserLikes","fetchCurrentUser","checkAdminStatus","fetchBlockedUsers","detectCurrentLocation","fetchBlockedUsersList","algorithm","FeedAlgorithm","lat","lng","fetchNearbyPlaces","handleScroll","postCreatorSection","rect","bottom","addEventListener","removeEventListener","observer","IntersectionObserver","entries","isIntersecting","handleLoadMore","threshold","loadMoreTrigger","getElementById","observe","unobserve","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","err","enableHighAccuracy","timeout","maximumAge","async","data","user","supabase","auth","getUser","error","from","select","eq","id","likesMap","forEach","like","post_id","userRole","single","role","role2","map","item","blocked_user_id","order","ascending","title","description","variant","pageNumber","append","getFeedPosts","filter","post","post_type","slice","getDestinationPosts","query","range","filteredPosts","has","user_id","prevPosts","length","uploadMedia","mediaFiles","Error","uploadedMedia","mediaFile","fileExt","file","name","split","pop","fileName","Date","now","Math","random","toString","substr","storage","upload","cacheControl","upsert","publicUrl","getPublicUrl","push","url","type","thumbnail","preview","handleDeletePost","postId","likesError","delete","repliesError","postError","nextPage","radiusKm","latDelta","lngDelta","cos","PI","gte","lte","limit","placesWithDistance","place","distance","calculateDistance","sort","a","b","lat1","lng1","lat2","lng2","dLat","dLng","sin","atan2","sqrt","fetchReplies","prev","generateShareableUrl","baseUrl","origin","locationSlug","toLowerCase","replace","langPrefix","handleReply","trim","mediaUrls","uploadReplyMedia","insert","content","media_urls","rating","jsx","Fragment","children","className","jsxs","LocationHeader","motion","div","initial","opacity","x","animate","transition","duration","MessageCircle","PostBlurOverlay","onConnectClick","onSignupClick","AnimatePresence","exit","AlertCircle","Button","size","onClick","cn","CalendarClock","Map","value","onChange","e","target","placeholder","rows","StarRating","onRatingChange","GooglePlacesSearch","locationName","placeDetails","blockedData","setTimeout","place_id","place_lat","geometry","place_lng","place_types","types","place_rating","place_user_ratings_total","user_ratings_total","is_published","disabled","Loader2","MediaUpload","onMediaChange","media","maxFiles","MapPin","Compass","style","profile","avatar_url","src","alt","username","first_name","last_name","onError","currentTarget","display","parentElement","classList","remove","Users","created_at","toLocaleString","toFixed","readonly","DropdownMenu","DropdownMenuTrigger","asChild","Share2","DropdownMenuContent","align","DropdownMenuItem","shareUrl","sharePrefix","contentSnippet","limitedContent","substring","textPayload","share","shareData","text","firstImage","find","response","fetch","blob","extension","File","canShare","files","clipboard","writeText","textArea","createElement","body","appendChild","execCommand","removeChild","handleShareWithDevice","handleCopyLink","ExternalLink","MoreVertical","Pencil","Trash2","userId","blocked_by_id","handleBlockUser","Ban","LocationDisplay","placeId","placeLat","placeLng","placeTypes","placeRating","placeUserRatingsTotal","image_url","MediaDisplay","maxPreview","likes","count","handleLike","Heart","newSet","add","Reply","handleReplyMediaChange","reply","replyId","handleDeleteReply","navigateToPost","href","Dialog","open","onOpenChange","DialogContent","DialogHeader","DialogTitle","Textarea","DialogFooter","updatedMediaUrls","some","existingMedia","newMedia","uploadedNewMedia","updateData","update","Shield","UserCheck","UserX","block","blocked_user","blocked_by","blockedUserId","handleUnblockUser","placeUrl","createPlaceUrl","state","categories","userRatingsTotal","handlePlaceClick","poi_category","address"],"mappings":"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"}