{"version":3,"mappings":"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","names":["ProfileSidebar","className","t","i18n","useTranslation","location","useLocation","isAdmin","useUserRole","currentLang","pathname","split","filter","Boolean","language","menuItems","label","icon","User","href","FileText","Lock","Mail","CreditCard","Settings","Trash2","variant","jsx","Card","cn","children","jsxs","CardContent","map","item","isActive","Icon","Button","asChild","Link","to","BirthDatePicker","date","setDate","disabled","month","setMonth","useState","getMonth","Date","year","setYear","getFullYear","currentYear","years","Array","from","length","_","i","months","Label","Popover","PopoverTrigger","CalendarIcon","pattern","format","error","formatDateByLocale","PopoverContent","align","Select","value","onValueChange","newMonth","indexOf","newDate","SelectTrigger","SelectValue","placeholder","SelectContent","position","index","SelectItem","toString","newYear","parseInt","setFullYear","Calendar","mode","selected","onSelect","onMonthChange","LgbtqSelect","onChange","currentValue","RadioGroup","newValue","RadioGroupItem","id","htmlFor","ProfilePicture","url","onUpload","size","toast","useToast","uploading","setUploading","imageUrl","setImageUrl","useEffect","data","supabase","storage","getPublicUrl","publicUrl","style","width","height","src","alt","onError","e","Camera","Loader2","visibility","type","accept","async","event","target","files","Error","file","fileExt","name","pop","toLowerCase","allowedTypes","includes","join","user","auth","getUser","timestamp","now","fileName","remove","uploadData","uploadError","upload","cacheControl","upsert","title","description","message","ProfileForm","profile","setProfile","loading","onSubmit","isEditing","setIsEditing","editedProfile","setEditedProfile","editedDate","setEditedDate","navigate","useNavigate","birthDateString","String","padStart","getDate","prev","birth_date","safeProfile","medical_conditions","disabilities","allergies","lgbtq_status","dietary_preferences","newsletter_subscribed","preventDefault","onClick","X","Save","Edit","avatar_url","Event","Input","first_name","readOnly","last_name","username","newLanguage","duration","changeLanguage","__vitePreload","import","update","eq","localStorage","setItem","dbErr","pathSegments","SUPPORTED_LANGUAGES","newPath","replace","LocationSearch","residence_location","newLocation","coordinates","s","trim","PassportForm","passportData","storePassportData","retrievePassportData","deletePassportData","clearError","useSecurePassport","editedData","setEditedData","passport_number","passport_country","passport_expiry_date","showConfirmDialog","setShowConfirmDialog","showDeleteDialog","setShowDeleteDialog","canEdit","setCanEdit","hasData","setHasData","maskSensitiveData","repeat","substring","Shield","form","DatePicker","day","Number","minYear","maxYear","disabledDates","AlertDialog","open","onOpenChange","AlertDialogContent","AlertDialogHeader","AlertDialogTitle","Unlock","AlertDialogDescription","AlertDialogFooter","AlertDialogCancel","AlertDialogAction","ChangePasswordCard","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","setLoading","setError","CardHeader","CardTitle","updateUser","password","email","functions","invoke","body","user_metadata","emailError","userCache","delete","signOut","required","Fragment","EmailChangeCard","emailChangeInProgress","useProfile","currentEmail","setCurrentEmail","newEmail","setNewEmail","confirmNewEmail","setConfirmNewEmail","validationError","setValidationError","fetchCurrentEmail","z","string","parse","ZodError","errors","validateInputs","tripCache","blogCache","syncResponse","userId","success","SubscriptionManager","isYearly","setIsYearly","confirmCancel","setConfirmCancel","selectedPlan","setSelectedPlan","isLoading","setIsLoading","invoices","setInvoices","loadingInvoices","setLoadingInvoices","subscription","getSubscriptionDetails","updatePaymentMethod","cancelSubscription","reactivateSubscription","changeSubscriptionPlan","getBillingHistory","useSubscriptionManager","PLANS","zaptrip","features","monthlyPrice","yearlyPrice","color","recommended","zapout","zaproad","zappro","explorer","result","interval","loadSubscription","handleUpdatePayment","window","handleReactivateSubscription","getStatusBadgeClass","status","getStatusBadge","statusKey","Badge","formatDate","dateString","loadBillingHistory","CardDescription","planInfo","plan","cancelAtPeriodEnd","Alert","AlertTriangle","AlertTitle","AlertDescription","RotateCcw","XCircle","currentPeriodEnd","DollarSign","toFixed","paymentMethod","brand","charAt","toUpperCase","slice","last4","expiryMonth","expiryYear","renderSubscriptionDetails","Tabs","defaultValue","TabsList","TabsTrigger","TabsContent","entries","sort","a","b","localeCompare","isCurrentPlan","iconColor","PlaneTakeoff","CableCar","Car","Award","feature","Check","handlePlanSelect","Skeleton","invoice","number","created","amount_paid","currency","hosted_invoice_url","ExternalLink","CardFooter","RefreshCw","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","DialogFooter","amount","CheckCircle","DeleteAccountCard","isConfirmOpen","setIsConfirmOpen","isDeleting","setIsDeleting","session","getSession","userEmail","token","access_token","headers","Authorization","deleteAccount"],"ignoreList":[],"sources":["../../../../src/components/profile/ProfileSidebar.tsx","../../../../src/components/profile/BirthDatePicker.tsx","../../../../src/components/profile/LgbtqSelect.tsx","../../../../src/components/profile/ProfilePicture.tsx","../../../../src/components/profile/ProfileForm.tsx","../../../../src/components/profile/PassportForm.tsx","../../../../src/components/profile/ChangePasswordCard.tsx","../../../../src/components/profile/EmailChangeCard.tsx","../../../../src/components/profile/SubscriptionManager.tsx","../../../../src/components/profile/DeleteAccountCard.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport { useTranslation } from \"react-i18next\";\nimport { \n  User, \n  Lock, \n  Mail, \n  CreditCard, \n  Trash2,\n  Settings,\n  FileText\n} from \"lucide-react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { useUserRole } from \"@/hooks/useUserRole\";\n\ninterface ProfileSidebarProps {\n  className?: string;\n}\n\nexport function ProfileSidebar({ className }: ProfileSidebarProps) {\n  const { t, i18n } = useTranslation('profile');\n  const location = useLocation();\n  const { isAdmin } = useUserRole();\n  \n  // Extract current language from URL path\n  const pathSegments = location.pathname.split('/').filter(Boolean);\n  const currentLang = pathSegments[0] || i18n.language;\n  \n  const menuItems = [\n    {\n      label: t('sidebar.personalInfo'),\n      icon: User,\n      href: `/${currentLang}/profile`,\n    },\n    // Only show passport for admin users\n    ...(isAdmin ? [{\n      label: t('sidebar.passport'),\n      icon: FileText,\n      href: `/${currentLang}/profile/passport`,\n    }] : []),\n    {\n      label: t('sidebar.security'),\n      icon: Lock,\n      href: `/${currentLang}/profile/security`,\n    },\n    {\n      label: t('sidebar.email'),\n      icon: Mail,\n      href: `/${currentLang}/profile/email`,\n    },\n    {\n      label: t('sidebar.subscription'),\n      icon: CreditCard,\n      href: `/${currentLang}/profile/subscription`,\n    },\n    {\n      label: t('sidebar.preferences'),\n      icon: Settings,\n      href: `/${currentLang}/profile/preferences`,\n    },\n    {\n      label: t('sidebar.account'),\n      icon: Trash2,\n      href: `/${currentLang}/profile/account`,\n      variant: 'destructive' as const,\n    },\n  ];\n\n  return (\n    <Card className={cn(\"overflow-hidden\", className)}>\n      <CardContent className=\"p-4\">\n        <div className=\"mb-4 border-b pb-2\">\n          <h2 className=\"text-lg font-semibold\">\n            {t('sidebar.title')}\n          </h2>\n          <p className=\"text-xs text-muted-foreground mt-1\">\n            {t('sidebar.subtitle')}\n          </p>\n        </div>\n        <nav className=\"space-y-1\">\n          {menuItems.map((item) => {\n            const isActive = location.pathname === item.href;\n            const Icon = item.icon;\n            \n            return (\n              <Button\n                key={item.href}\n                variant={item.variant || (isActive ? \"secondary\" : \"ghost\")}\n                className={cn(\n                  \"w-full justify-start gap-2\",\n                  isActive && \"bg-accent\",\n                  item.variant === \"destructive\" && \"mt-8\"\n                )}\n                asChild\n              >\n                <Link to={item.href}>\n                  <Icon className=\"h-4 w-4\" />\n                  <span>{item.label}</span>\n                </Link>\n              </Button>\n            );\n          })}\n        </nav>\n      </CardContent>\n    </Card>\n  );\n} ","import { Button } from \"@/components/ui/button\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { CalendarIcon } from \"lucide-react\";\nimport { format } from \"date-fns\";\nimport { Label } from \"@/components/ui/label\";\nimport { cn } from \"@/lib/utils\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { useState } from \"react\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useTranslation } from 'react-i18next';\n\ninterface BirthDatePickerProps {\n  date: Date | undefined;\n  setDate: (date: Date | undefined) => void;\n  disabled?: boolean;\n}\n\nexport function BirthDatePicker({ date, setDate, disabled }: BirthDatePickerProps) {\n  const { t, i18n } = useTranslation('profile');\n  const [month, setMonth] = useState<number>(date ? date.getMonth() : new Date().getMonth());\n  const [year, setYear] = useState<number>(date ? date.getFullYear() : new Date().getFullYear());\n\n  // Generate years from 1900 to current year\n  const currentYear = new Date().getFullYear();\n  const years = Array.from({ length: currentYear - 1900 + 1 }, (_, i) => currentYear - i);\n\n  // List of months using translations\n  const months = [\n    t('months.january'),\n    t('months.february'),\n    t('months.march'),\n    t('months.april'),\n    t('months.may'),\n    t('months.june'),\n    t('months.july'),\n    t('months.august'),\n    t('months.september'),\n    t('months.october'),\n    t('months.november'),\n    t('months.december')\n  ];\n\n  const handleMonthChange = (value: string) => {\n    const newMonth = months.indexOf(value);\n    setMonth(newMonth);\n    if (date) {\n      const newDate = new Date(date);\n      newDate.setMonth(newMonth);\n      setDate(newDate);\n    }\n  };\n\n  const handleYearChange = (value: string) => {\n    const newYear = parseInt(value);\n    setYear(newYear);\n    if (date) {\n      const newDate = new Date(date);\n      newDate.setFullYear(newYear);\n      setDate(newDate);\n    }\n  };\n\n  // Function to format the date based on user's language\n  const formatDateByLocale = (date: Date) => {\n    try {\n      let pattern;\n      switch (i18n.language) {\n        case 'fr':\n          pattern = \"dd MMMM yyyy\";\n          break;\n        case 'es':\n          pattern = \"dd 'de' MMMM 'de' yyyy\";\n          break;\n        default: // English\n          pattern = \"MMMM dd, yyyy\";\n      }\n      return format(date, pattern);\n    } catch (error) {\n      console.error(\"Error formatting date:\", error);\n      return \"Invalid date\";\n    }\n  };\n\n  return (\n    <div className=\"space-y-2\">\n      <Label>{t('personal.birthdate')}</Label>\n      <Popover>\n        <PopoverTrigger asChild>\n          <Button\n            variant=\"outline\"\n            className={cn(\n              \"w-full justify-start text-left font-normal\",\n              !date && \"text-muted-foreground\",\n              disabled && \"opacity-50 cursor-not-allowed\"\n            )}\n            disabled={disabled}\n          >\n            <CalendarIcon className=\"mr-2 h-4 w-4\" />\n            {date ? formatDateByLocale(date) : <span>{t('validation.invalidDate')}</span>}\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent className=\"w-auto p-3 bg-white shadow-lg rounded-md border z-[999]\" align=\"start\">\n          <div className=\"flex gap-2 mb-2\">\n            <Select value={months[month]} onValueChange={handleMonthChange} disabled={disabled}>\n              <SelectTrigger className=\"w-[140px]\">\n                <SelectValue placeholder={t('personal.birthdate')} />\n              </SelectTrigger>\n              <SelectContent position=\"popper\" className=\"bg-white z-[1000]\">\n                {months.map((month, index) => (\n                  <SelectItem key={index} value={month}>\n                    {month}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n            <Select value={year.toString()} onValueChange={handleYearChange} disabled={disabled}>\n              <SelectTrigger className=\"w-[100px]\">\n                <SelectValue placeholder={t('personal.birthdate')} />\n              </SelectTrigger>\n              <SelectContent position=\"popper\" className=\"bg-white z-[1000] max-h-[200px] overflow-y-auto\">\n                {years.map((year) => (\n                  <SelectItem key={year} value={year.toString()}>\n                    {year}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n          <Calendar\n            mode=\"single\"\n            selected={date}\n            onSelect={disabled ? undefined : setDate}\n            month={new Date(year, month)}\n            onMonthChange={disabled ? undefined : (date) => {\n              setMonth(date.getMonth());\n              setYear(date.getFullYear());\n            }}\n            className={cn(\"rounded-md border\", disabled && \"opacity-50 cursor-not-allowed\")}\n            disabled={disabled}\n          />\n        </PopoverContent>\n      </Popover>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Label } from \"@/components/ui/label\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { useTranslation } from 'react-i18next';\nimport { cn } from \"@/lib/utils\";\n\ninterface LgbtqSelectProps {\n  value: string[];\n  onChange: (value: string[]) => void;\n  disabled?: boolean;\n}\n\nexport function LgbtqSelect({ value, onChange, disabled }: LgbtqSelectProps) {\n  const { t } = useTranslation('profile');\n  const currentValue = value[0] || 'indifferent';\n\n  return (\n    <div className=\"space-y-2\">\n      <Label>{t('personal.lgbtqStatus')}</Label>\n      <RadioGroup\n        value={currentValue}\n        onValueChange={(newValue) => onChange([newValue])}\n        className=\"flex flex-col space-y-2\"\n        disabled={disabled}\n      >\n        <div className=\"flex items-center space-x-2\">\n          <RadioGroupItem value=\"indifferent\" id=\"indifferent\" disabled={disabled} />\n          <Label htmlFor=\"indifferent\" className={cn(\"cursor-pointer\", disabled && \"opacity-50 cursor-not-allowed\")}>\n            {t('lgbtq.indifferent')}\n          </Label>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <RadioGroupItem value=\"yes\" id=\"yes\" disabled={disabled} />\n          <Label htmlFor=\"yes\" className={cn(\"cursor-pointer\", disabled && \"opacity-50 cursor-not-allowed\")}>\n            {t('lgbtq.yes')}\n          </Label>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <RadioGroupItem value=\"no\" id=\"no\" disabled={disabled} />\n          <Label htmlFor=\"no\" className={cn(\"cursor-pointer\", disabled && \"opacity-50 cursor-not-allowed\")}>\n            {t('lgbtq.no')}\n          </Label>\n        </div>\n      </RadioGroup>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Camera, Loader2 } from 'lucide-react';\nimport { supabase } from '@/integrations/supabase/client';\nimport { Button } from '@/components/ui/button';\nimport { useToast } from '@/components/ui/use-toast';\nimport { cn } from '@/lib/utils';\n\ninterface ProfilePictureProps {\n  url: string | null;\n  onUpload: (url: string) => void;\n  size?: number;\n  disabled?: boolean;\n}\n\nexport function ProfilePicture({ url, onUpload, size = 150, disabled = false }: ProfilePictureProps) {\n  const { t } = useTranslation('profile');\n  const { toast } = useToast();\n  const [uploading, setUploading] = useState(false);\n  const [imageUrl, setImageUrl] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (url) {\n      try {\n        console.log('Current avatar URL:', url);\n\n        // Get the public URL directly\n        const { data } = supabase.storage\n          .from('avatars')\n          .getPublicUrl(url);\n        \n        console.log('Generated public URL:', data.publicUrl);\n        setImageUrl(data.publicUrl);\n      } catch (error) {\n        console.error('Error processing avatar URL:', error);\n        setImageUrl(null);\n      }\n    } else {\n      console.log('No avatar URL provided');\n      setImageUrl(null);\n    }\n  }, [url]);\n\n  const uploadAvatar = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    try {\n      setUploading(true);\n\n      if (!event.target.files || event.target.files.length === 0) {\n        throw new Error('You must select an image to upload.');\n      }\n\n      const file = event.target.files[0];\n      const fileExt = file.name.split('.').pop()?.toLowerCase() || '';\n      \n      // Validate file type\n      const allowedTypes = ['jpg', 'jpeg', 'png', 'gif'];\n      if (!allowedTypes.includes(fileExt)) {\n        throw new Error(`File type not supported. Please upload ${allowedTypes.join(', ')} files.`);\n      }\n      \n      // Get current user ID\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('No authenticated user found');\n      \n      console.log('Current user ID:', user.id);\n      \n      // Create a structured filename with user ID and timestamp\n      const timestamp = Date.now();\n      const fileName = `${user.id}_${timestamp}.${fileExt}`;\n      \n      console.log('New file name:', fileName);\n\n      // Delete old avatar if exists\n      if (url) {\n        console.log('Deleting old avatar:', url);\n        await supabase.storage\n          .from('avatars')\n          .remove([url]);\n      }\n\n      // Upload the file to Supabase storage\n      console.log('Uploading new avatar...');\n      const { data: uploadData, error: uploadError } = await supabase.storage\n        .from('avatars')\n        .upload(fileName, file, {\n          cacheControl: '3600',\n          upsert: true\n        });\n\n      if (uploadError) {\n        console.error('Upload error:', uploadError);\n        throw uploadError;\n      }\n\n      // Get the public URL\n      const { data: { publicUrl } } = supabase.storage\n        .from('avatars')\n        .getPublicUrl(fileName);\n\n      console.log('New public URL:', publicUrl);\n      \n      // Store the path in the database\n      console.log('Storing path in database:', fileName);\n      onUpload(fileName);\n      setImageUrl(publicUrl);\n\n      toast({\n        title: t('toasts.success'),\n        description: t('toasts.avatarUpdated'),\n      });\n    } catch (error: any) {\n      console.error('Avatar upload error:', error);\n      toast({\n        title: t('toasts.error'),\n        description: error.message || t('toasts.errorUploadingAvatar'),\n        variant: \"destructive\"\n      });\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center gap-4\">\n      <div \n        className={cn(\n          \"relative rounded-full overflow-hidden bg-gray-100\",\n          disabled && \"opacity-70\"\n        )}\n        style={{ width: size, height: size }}\n      >\n        {imageUrl ? (\n          <img\n            src={imageUrl}\n            alt=\"Avatar\"\n            className=\"w-full h-full object-cover\"\n            onError={(e) => {\n              console.error('Error loading image:', imageUrl);\n              setImageUrl(null);\n            }}\n          />\n        ) : (\n          <div className=\"w-full h-full flex items-center justify-center bg-gray-200\">\n            <Camera className=\"w-8 h-8 text-gray-400\" />\n          </div>\n        )}\n        \n        {!disabled && (\n          <label\n            className=\"absolute inset-0 flex items-center justify-center bg-black bg-opacity-50 text-white cursor-pointer opacity-0 hover:opacity-100 transition-opacity duration-200\"\n            htmlFor=\"single\"\n          >\n            {uploading ? (\n              <Loader2 className=\"h-6 w-6 animate-spin\" />\n            ) : (\n              <Camera className=\"h-6 w-6\" />\n            )}\n          </label>\n        )}\n      </div>\n      \n      {!disabled && (\n        <input\n          style={{\n            visibility: 'hidden',\n            position: 'absolute',\n          }}\n          type=\"file\"\n          id=\"single\"\n          accept=\"image/*\"\n          onChange={uploadAvatar}\n          disabled={uploading || disabled}\n        />\n      )}\n    </div>\n  );\n} ","import { Profile } from \"@/types/profile\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Loader2, Save, Edit, X } from \"lucide-react\";\nimport { LocationSearch } from \"@/components/trips/LocationSearch\";\nimport { BirthDatePicker } from \"./BirthDatePicker\";\nimport { LgbtqSelect } from \"./LgbtqSelect\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useTranslation } from 'react-i18next';\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { toast } from \"@/components/ui/use-toast\";\nimport { useState, useEffect } from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { ProfilePicture } from \"./ProfilePicture\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { SUPPORTED_LANGUAGES } from \"@/i18n\";\n\n\ninterface ProfileFormProps {\n  profile: Profile;\n  setProfile: (profile: Profile) => void;\n  date: Date | undefined;\n  setDate: (date: Date | undefined) => void;\n  loading: boolean;\n  onSubmit: (e: React.FormEvent<HTMLFormElement>, profile: Profile) => void;\n}\n\nexport function ProfileForm({ \n  profile, \n  setProfile, \n  date, \n  setDate, \n  loading, \n  onSubmit \n}: ProfileFormProps) {\n  const { t, i18n } = useTranslation('profile');\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedProfile, setEditedProfile] = useState<Profile>(profile);\n  const [editedDate, setEditedDate] = useState<Date | undefined>(date);\n  const location = useLocation();\n  const navigate = useNavigate();\n  \n  // Update birth_date in editedProfile when editedDate changes\n  useEffect(() => {\n    if (editedDate) {\n      const birthDateString = `${editedDate.getFullYear()}-${String(editedDate.getMonth() + 1).padStart(2, '0')}-${String(editedDate.getDate()).padStart(2, '0')}`;\n      setEditedProfile(prev => ({ ...prev, birth_date: birthDateString }));\n    } else {\n      setEditedProfile(prev => ({ ...prev, birth_date: null }));\n    }\n  }, [editedDate]);\n  \n  const handleLocationChange = (newLocation: string, coordinates: [number, number]) => {\n    setEditedProfile({ ...editedProfile, residence_location: newLocation });\n  };\n\n  const handleLanguageChange = async (newLanguage: string) => {\n    if (['en', 'fr', 'es'].includes(newLanguage)) {\n      try {\n        const loadingToast = toast({\n          title: t('languageSelector.changing'),\n          description: t('languageSelector.pleaseWait'),\n          variant: \"language-change\",\n          duration: 1000\n        });\n        \n        setEditedProfile({ ...editedProfile, language: newLanguage });\n        await i18n.changeLanguage(newLanguage);\n\n        // Persist to DB immediately for profile edit\n        try {\n          const { id } = editedProfile as any;\n          if (id) {\n            const { error } = await (await import('@/integrations/supabase/client')).supabase\n              .from('profiles')\n              .update({ language: newLanguage })\n              .eq('id', id);\n            if (!error) {\n              localStorage.setItem('user_language', newLanguage);\n              localStorage.setItem('user_language_timestamp', Date.now().toString());\n            }\n          }\n        } catch (dbErr) {\n          console.error('Error updating profile language:', dbErr);\n        }\n        \n        // Update URL with new language\n        const pathSegments = location.pathname.split('/').filter(Boolean);\n        const isLanguageInPath = SUPPORTED_LANGUAGES.includes(pathSegments[0]);\n        \n        if (isLanguageInPath) {\n          // Replace the language segment in the URL\n          pathSegments[0] = newLanguage;\n          const newPath = '/' + pathSegments.join('/');\n          navigate(newPath, { replace: true });\n        } else {\n          // Add language to the URL\n          const newPath = `/${newLanguage}${location.pathname}`;\n          navigate(newPath, { replace: true });\n        }\n        \n        toast({\n          title: t('languageSelector.changed'),\n          description: t('languageSelector.changedDescription'),\n          variant: \"success\",\n          duration: 1500\n        });\n      } catch (error) {\n        console.error('Error changing language:', error);\n        toast({\n          title: t('languageSelector.error'),\n          description: t('languageSelector.errorDescription'),\n          variant: \"destructive\",\n          duration: 5000\n        });\n      }\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      await onSubmit(e, editedProfile);\n      \n      setProfile(editedProfile);\n      setDate(editedDate);\n      setIsEditing(false);\n      \n    } catch (error) {\n      toast({\n        title: t('toasts.error'),\n        description: t('toasts.errorSaving'),\n        variant: \"destructive\"\n      });\n    }\n  };\n\n  const handleCancel = () => {\n    setEditedProfile(profile);\n    setEditedDate(date);\n    setIsEditing(false);\n  };\n\n  const handleAvatarUpload = (url: string) => {\n    setEditedProfile({ ...editedProfile, avatar_url: url });\n    // Submit the form automatically when avatar is updated\n    onSubmit(new Event('submit') as any, { ...editedProfile, avatar_url: url });\n  };\n\n  const safeProfile = {\n    ...editedProfile,\n    medical_conditions: editedProfile.medical_conditions || [],\n    disabilities: editedProfile.disabilities || [],\n    allergies: editedProfile.allergies || [],\n    lgbtq_status: editedProfile.lgbtq_status || [],\n    dietary_preferences: editedProfile.dietary_preferences || [],\n    language: editedProfile.language || 'en',\n    newsletter_subscribed: editedProfile.newsletter_subscribed ?? true\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      <div className=\"flex justify-end mb-4\">\n        {!isEditing ? (\n          <Button\n            type=\"button\"\n            onClick={() => setIsEditing(true)}\n            variant=\"outline\"\n            className=\"flex items-center gap-2\"\n          >\n            <Edit className=\"h-4 w-4\" />\n            {t('actions.edit')}\n          </Button>\n        ) : (\n          <div className=\"flex gap-2\">\n            <Button\n              type=\"button\"\n              onClick={handleCancel}\n              variant=\"outline\"\n              className=\"flex items-center gap-2\"\n            >\n              <X className=\"h-4 w-4\" />\n              {t('actions.cancel')}\n            </Button>\n            <Button\n              type=\"submit\"\n              disabled={loading}\n              className=\"flex items-center gap-2\"\n            >\n              {loading ? (\n                <Loader2 className=\"h-4 w-4 animate-spin\" />\n              ) : (\n                <Save className=\"h-4 w-4\" />\n              )}\n              {t('actions.save')}\n            </Button>\n          </div>\n        )}\n      </div>\n\n      <div className=\"flex flex-col items-center mb-8\">\n        <ProfilePicture\n          url={safeProfile.avatar_url}\n          onUpload={handleAvatarUpload}\n          disabled={!isEditing}\n        />\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"firstName\">{t('personal.firstName')}</Label>\n          <Input\n            id=\"firstName\"\n            value={safeProfile?.first_name || ''}\n            onChange={(e) => setEditedProfile({ ...editedProfile, first_name: e.target.value })}\n            readOnly={!isEditing}\n            className={cn(!isEditing && \"bg-gray-50 text-gray-700\")}\n          />\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"lastName\">{t('personal.lastName')}</Label>\n          <Input\n            id=\"lastName\"\n            value={safeProfile?.last_name || ''}\n            onChange={(e) => setEditedProfile({ ...editedProfile, last_name: e.target.value })}\n            readOnly={!isEditing}\n            className={cn(!isEditing && \"bg-gray-50 text-gray-700\")}\n          />\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"username\">{t('personal.username')}</Label>\n          <Input\n            id=\"username\"\n            value={safeProfile?.username || ''}\n            onChange={(e) => setEditedProfile({ ...editedProfile, username: e.target.value })}\n            readOnly={!isEditing}\n            className={cn(!isEditing && \"bg-gray-50 text-gray-700\")}\n          />\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"language\">{t('settings.language')}</Label>\n          <Select \n            value={safeProfile.language} \n            onValueChange={handleLanguageChange}\n            disabled={!isEditing}\n          >\n            <SelectTrigger className={cn(!isEditing && \"bg-gray-50 text-gray-700\")}>\n              <SelectValue placeholder={t('settings.language')} />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"en\">{t('languageSelector.english')}</SelectItem>\n              <SelectItem value=\"fr\">{t('languageSelector.french')}</SelectItem>\n              <SelectItem value=\"es\">{t('languageSelector.spanish')}</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"residence\">{t('personal.address')}</Label>\n          <LocationSearch\n            value={safeProfile?.residence_location || ''}\n            onChange={handleLocationChange}\n            disabled={!isEditing}\n            className={cn(!isEditing && \"bg-gray-50 text-gray-700\")}\n          />\n        </div>\n\n        <BirthDatePicker \n          date={editedDate} \n          setDate={setEditedDate}\n          disabled={!isEditing}\n        />\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"medicalConditions\">{t('personal.medicalConditions')}</Label>\n          <Input\n            id=\"medicalConditions\"\n            value={safeProfile.medical_conditions.join(', ')}\n            onChange={(e) => setEditedProfile({\n              ...editedProfile,\n              medical_conditions: e.target.value.split(',').map(s => s.trim()).filter(s => s !== '')\n            })}\n            placeholder={t('personal.medicalConditionsPlaceholder')}\n            readOnly={!isEditing}\n            className={cn(!isEditing && \"bg-gray-50 text-gray-700\")}\n          />\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"disabilities\">{t('personal.disabilities')}</Label>\n          <Input\n            id=\"disabilities\"\n            value={safeProfile.disabilities.join(', ')}\n            onChange={(e) => setEditedProfile({\n              ...editedProfile,\n              disabilities: e.target.value.split(',').map(s => s.trim()).filter(s => s !== '')\n            })}\n            placeholder={t('personal.disabilitiesPlaceholder')}\n            readOnly={!isEditing}\n            className={cn(!isEditing && \"bg-gray-50 text-gray-700\")}\n          />\n        </div>\n\n        <LgbtqSelect \n          value={safeProfile.lgbtq_status}\n          onChange={(newValue) => setEditedProfile({ ...editedProfile, lgbtq_status: newValue })}\n          disabled={!isEditing}\n        />\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"allergies\">{t('personal.allergies')}</Label>\n          <Input\n            id=\"allergies\"\n            value={safeProfile.allergies.join(', ')}\n            onChange={(e) => setEditedProfile({\n              ...editedProfile,\n              allergies: e.target.value.split(',').map(s => s.trim()).filter(s => s !== '')\n            })}\n            placeholder={t('personal.allergiesPlaceholder')}\n            readOnly={!isEditing}\n            className={cn(!isEditing && \"bg-gray-50 text-gray-700\")}\n          />\n        </div>\n\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"dietaryPreferences\">{t('personal.dietaryPreferences')}</Label>\n          <Input\n            id=\"dietaryPreferences\"\n            value={safeProfile.dietary_preferences.join(', ')}\n            onChange={(e) => setEditedProfile({\n              ...editedProfile,\n              dietary_preferences: e.target.value.split(',').map(s => s.trim()).filter(s => s !== '')\n            })}\n            placeholder={t('personal.dietaryPreferencesPlaceholder')}\n            readOnly={!isEditing}\n            className={cn(!isEditing && \"bg-gray-50 text-gray-700\")}\n          />\n        </div>\n      </div>\n    </form>\n  );\n}\n","import { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Loader2, Save, Edit, X, Shield, Lock, Unlock, Trash2 } from \"lucide-react\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useTranslation } from 'react-i18next';\nimport { useState, useEffect } from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { DatePicker } from \"@/components/ui/date-picker\";\nimport { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle, AlertDialogTrigger } from \"@/components/ui/alert-dialog\";\nimport { useSecurePassport } from \"@/hooks/useSecurePassport\";\n\ninterface SecurePassportData {\n  passport_number: string | null;\n  passport_country: string | null;\n  passport_expiry_date: string | null;\n}\n\nexport function PassportForm() {\n  const { t } = useTranslation('profile');\n  const { \n    passportData, \n    loading, \n    error, \n    storePassportData, \n    retrievePassportData, \n    deletePassportData,\n    clearError \n  } = useSecurePassport();\n\n  const [editedData, setEditedData] = useState<SecurePassportData>({\n    passport_number: '',\n    passport_country: '',\n    passport_expiry_date: ''\n  });\n  const [showConfirmDialog, setShowConfirmDialog] = useState(false);\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\n  const [canEdit, setCanEdit] = useState(false);\n  const [hasData, setHasData] = useState(false);\n\n  // Load passport data on component mount\n  useEffect(() => {\n    retrievePassportData();\n  }, []);\n\n  // Update hasData state when passportData changes\n  useEffect(() => {\n    if (passportData) {\n      setHasData(true);\n      setEditedData({\n        passport_number: passportData.passport_number || '',\n        passport_country: passportData.passport_country || '',\n        passport_expiry_date: passportData.passport_expiry_date || ''\n      });\n    } else {\n      setHasData(false);\n      setEditedData({\n        passport_number: '',\n        passport_country: '',\n        passport_expiry_date: ''\n      });\n    }\n  }, [passportData]);\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    \n    const success = await storePassportData(editedData);\n    if (success) {\n      setCanEdit(false);\n      setHasData(true);\n    }\n  };\n\n  const handleCancel = () => {\n    setEditedData({\n      passport_number: passportData?.passport_number || '',\n      passport_country: passportData?.passport_country || '',\n      passport_expiry_date: passportData?.passport_expiry_date || ''\n    });\n    setCanEdit(false);\n    clearError();\n  };\n\n  const handleEditClick = () => {\n    setShowConfirmDialog(true);\n  };\n\n  const handleConfirmEdit = () => {\n    setCanEdit(true);\n    setShowConfirmDialog(false);\n    clearError();\n  };\n\n  const handleCancelConfirm = () => {\n    setShowConfirmDialog(false);\n  };\n\n  const handleDeleteClick = () => {\n    setShowDeleteDialog(true);\n  };\n\n  const handleConfirmDelete = async () => {\n    const success = await deletePassportData();\n    if (success) {\n      setCanEdit(false);\n      setHasData(false);\n      setShowDeleteDialog(false);\n    }\n  };\n\n  const handleCancelDelete = () => {\n    setShowDeleteDialog(false);\n  };\n\n  // Helper function to mask sensitive data\n  const maskSensitiveData = (value: string | null | undefined, type: 'passport' | 'date' | 'country' = 'passport') => {\n    if (!value || canEdit) return value || '';\n    \n    switch (type) {\n      case 'passport':\n        if (value.length <= 4) return '*'.repeat(value.length);\n        return value.substring(0, 2) + '*'.repeat(value.length - 4) + value.substring(value.length - 2);\n      case 'date':\n        return '****-**-**';\n      case 'country':\n        return value.substring(0, 1) + '*'.repeat(value.length - 1);\n      default:\n        return '*'.repeat(value.length);\n    }\n  };\n\n  if (loading && !hasData) {\n    return (\n      <div className=\"flex items-center justify-center p-8\">\n        <Loader2 className=\"h-8 w-8 animate-spin text-[#61936f]\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header with actions */}\n      <div className=\"flex justify-between items-center\">\n        <div className=\"flex items-center gap-2\">\n          <Shield className=\"h-5 w-5 text-[#61936f]\" />\n          <h3 className=\"text-lg font-semibold\">{t('passport.title')}</h3>\n          {hasData && (\n            <div className=\"flex items-center gap-1 text-sm text-green-600\">\n              <Lock className=\"h-4 w-4\" />\n              <span>Secured</span>\n            </div>\n          )}\n        </div>\n        \n        <div className=\"flex gap-2\">\n          {hasData && (\n            <Button\n              type=\"button\"\n              onClick={handleDeleteClick}\n              variant=\"outline\"\n              size=\"sm\"\n              className=\"flex items-center gap-2 text-red-600 hover:text-red-700\"\n            >\n              <Trash2 className=\"h-4 w-4\" />\n              Delete\n            </Button>\n          )}\n          \n          {!canEdit ? (\n            <Button\n              type=\"button\"\n              onClick={handleEditClick}\n              variant=\"outline\"\n              className=\"flex items-center gap-2\"\n            >\n              <Edit className=\"h-4 w-4\" />\n              {hasData ? t('actions.edit') : 'Add Passport'}\n            </Button>\n          ) : (\n            <div className=\"flex gap-2\">\n              <Button\n                type=\"button\"\n                onClick={handleCancel}\n                variant=\"outline\"\n                className=\"flex items-center gap-2\"\n              >\n                <X className=\"h-4 w-4\" />\n                {t('actions.cancel')}\n              </Button>\n              <Button\n                type=\"submit\"\n                form=\"passport-form\"\n                disabled={loading}\n                className=\"flex items-center gap-2\"\n              >\n                {loading ? (\n                  <Loader2 className=\"h-4 w-4 animate-spin\" />\n                ) : (\n                  <Save className=\"h-4 w-4\" />\n                )}\n                {t('actions.save')}\n              </Button>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Error display */}\n      {error && (\n        <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\n          <p className=\"text-red-700 text-sm\">{error}</p>\n        </div>\n      )}\n\n      {/* Form */}\n      <form id=\"passport-form\" onSubmit={handleSubmit} className=\"space-y-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"passportNumber\">{t('personal.passportNumber')}</Label>\n            <Input\n              id=\"passportNumber\"\n              value={canEdit ? editedData.passport_number : maskSensitiveData(editedData.passport_number, 'passport')}\n              onChange={(e) => setEditedData({ ...editedData, passport_number: e.target.value })}\n              placeholder={t('personal.passportNumberPlaceholder')}\n              readOnly={!canEdit}\n              className={cn(!canEdit && \"bg-gray-50 text-gray-700\")}\n              type={canEdit ? \"text\" : \"password\"}\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"passportCountry\">{t('personal.passportCountry')}</Label>\n            {canEdit ? (\n              <Select \n                value={editedData.passport_country} \n                onValueChange={(value) => setEditedData({ ...editedData, passport_country: value })}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder={t('personal.selectPassportCountry')} />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"US\">{t('countries.unitedStates')}</SelectItem>\n                  <SelectItem value=\"FR\">{t('countries.france')}</SelectItem>\n                  <SelectItem value=\"ES\">{t('countries.spain')}</SelectItem>\n                  <SelectItem value=\"GB\">{t('countries.unitedKingdom')}</SelectItem>\n                  <SelectItem value=\"CA\">{t('countries.canada')}</SelectItem>\n                  <SelectItem value=\"DE\">{t('countries.germany')}</SelectItem>\n                  <SelectItem value=\"IT\">{t('countries.italy')}</SelectItem>\n                  <SelectItem value=\"JP\">{t('countries.japan')}</SelectItem>\n                  <SelectItem value=\"AU\">{t('countries.australia')}</SelectItem>\n                </SelectContent>\n              </Select>\n            ) : (\n              <Input\n                value={maskSensitiveData(editedData.passport_country, 'country')}\n                readOnly\n                className=\"bg-gray-50 text-gray-700\"\n              />\n            )}\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"passportExpiry\">{t('personal.passportExpiry')}</Label>\n            {canEdit ? (\n              <DatePicker\n                date={editedData.passport_expiry_date ? (() => {\n                  const [year, month, day] = editedData.passport_expiry_date.split('-').map(Number);\n                  return new Date(year, month - 1, day);\n                })() : undefined}\n                setDate={(date) => setEditedData({ \n                  ...editedData, \n                  passport_expiry_date: date ? `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}` : null \n                })}\n                label={t('personal.passportExpiry')}\n                placeholder={t('personal.selectPassportExpiry')}\n                minYear={new Date().getFullYear()}\n                maxYear={new Date().getFullYear() + 20}\n                disabledDates={(date) => date < new Date()}\n              />\n            ) : (\n              <Input\n                value={maskSensitiveData(editedData.passport_expiry_date, 'date')}\n                readOnly\n                className=\"bg-gray-50 text-gray-700\"\n              />\n            )}\n          </div>\n        </div>\n      </form>\n\n      {/* Security notice */}\n      {!canEdit && hasData && (\n        <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n          <div className=\"flex items-start gap-2\">\n            <Shield className=\"h-5 w-5 text-blue-600 mt-0.5\" />\n            <div>\n              <p className=\"text-blue-800 font-medium text-sm\">Secure Storage</p>\n              <p className=\"text-blue-700 text-sm mt-1\">\n                Your passport information is encrypted and stored securely. All access attempts are logged for security purposes.\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Edit confirmation dialog */}\n      <AlertDialog open={showConfirmDialog} onOpenChange={setShowConfirmDialog}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle className=\"flex items-center gap-2\">\n              <Unlock className=\"h-5 w-5 text-[#61936f]\" />\n              Access Secure Data\n            </AlertDialogTitle>\n            <AlertDialogDescription>\n              You are about to access your encrypted passport information. This action will be logged for security purposes.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel onClick={handleCancelConfirm}>\n              {t('actions.cancel')}\n            </AlertDialogCancel>\n            <AlertDialogAction onClick={handleConfirmEdit} className=\"bg-[#61936f] hover:bg-[#4a7a5a] text-white\">\n              {t('actions.confirm')}\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n\n      {/* Delete confirmation dialog */}\n      <AlertDialog open={showDeleteDialog} onOpenChange={setShowDeleteDialog}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle className=\"flex items-center gap-2\">\n              <Trash2 className=\"h-5 w-5 text-red-600\" />\n              Delete Passport Data\n            </AlertDialogTitle>\n            <AlertDialogDescription>\n              This will permanently delete your encrypted passport information. This action cannot be undone.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel onClick={handleCancelDelete}>\n              {t('actions.cancel')}\n            </AlertDialogCancel>\n            <AlertDialogAction onClick={handleConfirmDelete} className=\"bg-red-600 hover:bg-red-700 text-white\">\n              Delete Permanently\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </div>\n  );\n} ","import { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { supabase } from \"@/integrations/supabase/client\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { useTranslation } from 'react-i18next';\nimport { Loader2, Save } from \"lucide-react\";\nimport { userCache } from '@/utils/cache';\nimport { useNavigate } from \"react-router-dom\";\n\nexport function ChangePasswordCard() {\n  const { toast } = useToast();\n  const { t } = useTranslation('profile');\n  const navigate = useNavigate();\n  const [currentPassword, setCurrentPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handlePasswordChange = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(\"\");\n\n    // Validate passwords\n    if (newPassword !== confirmPassword) {\n      setError(t('passwordChange.passwordsDoNotMatch'));\n      return;\n    }\n\n    if (newPassword.length < 6) {\n      setError(t('passwordChange.passwordTooShort'));\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      // Get current user\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('No user found');\n\n      // Update the user's password\n      const { error } = await supabase.auth.updateUser({\n        password: newPassword\n      });\n\n      if (error) throw error;\n\n      // Send notification email using the edge function\n      if (user.email) {\n        try {\n          await supabase.functions.invoke('send-password-change-email', {\n            body: { \n              email: user.email,\n              name: user.user_metadata?.first_name || user.user_metadata?.last_name || 'Traveler',\n              language: t('common.currentLanguage') // Pass current language\n            }\n          });\n          console.log(\"Password change notification email sent\");\n        } catch (emailError) {\n          console.error(\"Error sending password change email:\", emailError);\n          // Continue with password change even if email fails\n        }\n      }\n\n      // Clear the user cache\n      userCache.delete(`profile-${user.id}`);\n\n      // Clear the form\n      setCurrentPassword(\"\");\n      setNewPassword(\"\");\n      setConfirmPassword(\"\");\n\n      toast({\n        title: t('passwordChange.passwordUpdated'),\n        description: t('passwordChange.passwordUpdateSuccess'),\n      });\n\n      // Sign out the user\n      await supabase.auth.signOut();\n      \n      // Show sign out toast\n      // Redirect to auth page\n      navigate(\"/auth\");\n      \n    } catch (error: any) {\n      console.error('Error updating password:', error);\n      toast({\n        title: t('toasts.error'),\n        description: error.message || t('passwordChange.updateError'),\n        variant: \"destructive\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"text-2xl font-bold text-gray-900\">\n          {t('passwordChange.title')}\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <form onSubmit={handlePasswordChange} className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"current-password\">{t('passwordChange.currentPassword')}</Label>\n            <Input\n              id=\"current-password\"\n              type=\"password\"\n              value={currentPassword}\n              onChange={(e) => setCurrentPassword(e.target.value)}\n              placeholder=\"••••••••\"\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"new-password\">{t('passwordChange.newPassword')}</Label>\n            <Input\n              id=\"new-password\"\n              type=\"password\"\n              value={newPassword}\n              onChange={(e) => setNewPassword(e.target.value)}\n              placeholder=\"••••••••\"\n              required\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"confirm-password\">{t('passwordChange.confirmPassword')}</Label>\n            <Input\n              id=\"confirm-password\"\n              type=\"password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              placeholder=\"••••••••\"\n              required\n            />\n          </div>\n\n          {error && (\n            <div className=\"text-red-500 text-sm mt-2\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"flex justify-end\">\n            <Button type=\"submit\" disabled={loading}>\n              {loading ? (\n                <>\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                  {t('passwordChange.updating')}\n                </>\n              ) : (\n                <>\n                  <Save className=\"mr-2 h-4 w-4\" />\n                  {t('passwordChange.updatePassword')}\n                </>\n              )}\n            </Button>\n          </div>\n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { supabase } from \"@/integrations/supabase/client\";\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Loader2 } from \"lucide-react\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { z } from \"zod\";\nimport { useProfile } from \"@/hooks/useProfile\";\nimport { useNavigate } from \"react-router-dom\";\nimport { userCache, tripCache, blogCache } from '@/utils/cache';\n\nexport function EmailChangeCard() {\n  const { t } = useTranslation('profile');\n  const { toast } = useToast();\n  const navigate = useNavigate();\n  const { emailChangeInProgress } = useProfile();\n  const [loading, setLoading] = useState(false);\n  const [currentEmail, setCurrentEmail] = useState(\"\");\n  const [newEmail, setNewEmail] = useState(\"\");\n  const [confirmNewEmail, setConfirmNewEmail] = useState(\"\");\n  const [validationError, setValidationError] = useState<string | null>(null);\n\n  const fetchCurrentEmail = async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      if (user?.email) {\n        setCurrentEmail(user.email);\n      }\n    } catch (error) {\n      console.error(\"Error fetching current email:\", error);\n    }\n  };\n\n  // Fetch current email when component mounts\n  useEffect(() => {\n    fetchCurrentEmail();\n  }, []);\n\n  const validateInputs = () => {\n    try {\n      // Validate that new email is a valid email address\n      const emailSchema = z.string().email(t('profile.emailChange.invalidEmail'));\n      emailSchema.parse(newEmail);\n\n      // Validate that new email and confirmation match\n      if (newEmail !== confirmNewEmail) {\n        setValidationError(t('profile.emailChange.emailsDoNotMatch'));\n        return false;\n      }\n\n      // Clear validation error if all checks pass\n      setValidationError(null);\n      return true;\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        setValidationError(error.errors[0].message);\n      } else {\n        setValidationError(t('profile.emailChange.invalidEmail'));\n      }\n      return false;\n    }\n  };\n\n  const handleChangeEmail = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    \n    if (!validateInputs()) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      // Get current user ID for syncing email change\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) {\n        throw new Error(\"User not authenticated\");\n      }\n\n      // Clear all user-related caches before email change\n      userCache.delete(`profile-${user.id}`);\n      tripCache.delete(`trips-${user.id}`);\n      blogCache.delete(`blogs-${user.id}`);\n\n      // Sync email change in database tables first\n      const syncResponse = await supabase.functions.invoke('sync-email-change', {\n        body: { userId: user.id, newEmail }\n      });\n\n      if (!syncResponse.data?.success) {\n        throw new Error(syncResponse.error?.message || \"Failed to sync email change\");\n      }\n\n      // Update email in Supabase auth\n      const { error } = await supabase.auth.updateUser({ email: newEmail });\n\n      if (error) {\n        throw error;\n      }\n\n      // Success response\n      toast({\n        title: t('profile.emailChange.verificationSent'),\n        description: t('profile.emailChange.verificationSentDescription'),\n      });\n\n      // Sign out the user immediately after requesting email change\n      await supabase.auth.signOut();\n      \n      // Show sign out toast\n      toast({\n        title: t('auth.notice'),\n        description: t('auth.emailChangeVerificationText'),\n      });\n      \n      // Redirect to auth page\n      navigate(\"/auth\");\n      \n      // Reset form fields\n      setNewEmail(\"\");\n      setConfirmNewEmail(\"\");\n      \n    } catch (error: any) {\n      console.error(\"Error updating email:\", error);\n      toast({\n        title: t('profile.emailChange.updateError'),\n        description: error.message || t('profile.emailChange.updateError'),\n        variant: \"destructive\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"text-xl font-semibold\">{t('emailChange.title')}</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <form onSubmit={handleChangeEmail} className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"currentEmail\">{t('emailChange.currentEmail')}</Label>\n            <Input\n              id=\"currentEmail\"\n              value={currentEmail}\n              disabled\n              readOnly\n              className=\"bg-gray-100\"\n            />\n          </div>\n          \n          <div className=\"space-y-2\">\n            <Label htmlFor=\"newEmail\">{t('emailChange.newEmail')}</Label>\n            <Input\n              id=\"newEmail\"\n              type=\"email\"\n              value={newEmail}\n              onChange={(e) => setNewEmail(e.target.value)}\n              placeholder={t('personal.email')}\n              required\n              disabled={loading || emailChangeInProgress}\n            />\n          </div>\n          \n          <div className=\"space-y-2\">\n            <Label htmlFor=\"confirmNewEmail\">{t('emailChange.confirmNewEmail')}</Label>\n            <Input\n              id=\"confirmNewEmail\"\n              type=\"email\"\n              value={confirmNewEmail}\n              onChange={(e) => setConfirmNewEmail(e.target.value)}\n              placeholder={t('personal.email')}\n              required\n              disabled={loading || emailChangeInProgress}\n            />\n          </div>\n          \n          {validationError && (\n            <div className=\"text-red-500 text-sm\">{validationError}</div>\n          )}\n          \n          {emailChangeInProgress && (\n            <div className=\"text-amber-500 text-sm\">{t('emailChange.verificationText')}</div>\n          )}\n          \n          <Button type=\"submit\" disabled={loading || emailChangeInProgress} className=\"w-full\">\n            {loading ? (\n              <>\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                {t('emailChange.updating')}\n              </>\n            ) : (\n              t('emailChange.updateEmail')\n            )}\n          </Button>\n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport i18n from 'i18next';\nimport { format } from 'date-fns';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  CreditCard,\n  Calendar,\n  RefreshCw,\n  CheckCircle,\n  AlertTriangle,\n  RotateCcw,\n  PlusCircle,\n  XCircle,\n  ArrowRight,\n  DollarSign,\n  Check,\n  FileText,\n  ExternalLink,\n  Users,\n  PlaneTakeoff,\n  CableCar,\n  Car,\n  Award\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { Separator } from '@/components/ui/separator';\nimport { useSubscriptionManager, SubscriptionDetails } from '@/hooks/useSubscriptionManager';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { toast } from '@/components/ui/use-toast';\n\nexport function SubscriptionManager() {\n  const { t } = useTranslation('profile');\n  const navigate = useNavigate();\n  const [isYearly, setIsYearly] = useState(false);\n  const [confirmCancel, setConfirmCancel] = useState(false);\n  const [selectedPlan, setSelectedPlan] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [invoices, setInvoices] = useState<any[]>([]);\n  const [loadingInvoices, setLoadingInvoices] = useState(false);\n\n  const {\n    subscription,\n    getSubscriptionDetails,\n    updatePaymentMethod,\n    cancelSubscription,\n    reactivateSubscription,\n    changeSubscriptionPlan,\n    getBillingHistory\n  } = useSubscriptionManager();\n\n  // Define plan type to fix linter errors\n  type Plan = {\n    name: string;\n    features: string[];\n    monthlyPrice: number;\n    yearlyPrice: number;\n    color: string;\n    recommended?: boolean;\n  };\n\n  // Pricing plans data - moved inside component to access t function\n  const PLANS: Record<string, Plan> = {\n    zaptrip: {\n      name: t('zaptrip.title'),\n      features: t('zaptrip.features').split('|'),\n      monthlyPrice: 4.99,\n      yearlyPrice: 53.99, // 10% discount for yearly\n      color: 'bg-blue-100 text-blue-800',\n      recommended: false\n    },\n    zapout: {\n      name: t('zapout.title'),\n      features: t('zapout.features').split('|'),\n      monthlyPrice: 4.99,\n      yearlyPrice: 53.99,\n      color: 'bg-purple-100 text-purple-800',\n      recommended: false\n    },\n    zaproad: {\n      name: t('zaproad.title'),\n      features: t('zaproad.features').split('|'),\n      monthlyPrice: 4.99,\n      yearlyPrice: 53.99,\n      color: 'bg-pink-100 text-pink-800',\n      recommended: false\n    },\n    zappro: {\n      name: t('zappro.title'),\n      features: t('zappro.features').split('|'),\n      monthlyPrice: 9.99,\n      yearlyPrice: 107.99,\n      color: 'bg-yellow-100 text-yellow-800',\n      recommended: true\n    },\n    explorer: {\n      name: t('explorer.title'),\n      features: t('explorer.features').split('|'),\n      monthlyPrice: 0,\n      yearlyPrice: 0,\n      color: 'bg-gray-100 text-gray-800',\n      recommended: false\n    }\n  };\n\n  // Fetch subscription details when component mounts\n  useEffect(() => {\n    async function loadSubscription() {\n      setIsLoading(true);\n      try {\n        console.log('Loading subscription details...');\n        const result = await getSubscriptionDetails();\n        console.log('Subscription details loaded:', result);\n        \n        if (result.success && result.subscription) {\n          // Don't set selectedPlan here, only set isYearly\n          setIsYearly(result.subscription.interval === 'year');\n        } else {\n          console.warn('No subscription details found');\n          // Set default values for new users for isYearly only\n          setIsYearly(false);\n        }\n      } catch (error) {\n        console.error('Error loading subscription:', error);\n        // Set default value for isYearly in case of error\n        setIsYearly(false);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    \n    loadSubscription();\n    // Don't include getSubscriptionDetails in dependencies to prevent continuous refetching\n  }, []);\n\n  // This will run whenever the subscription state changes\n  useEffect(() => {\n    if (subscription) {\n      console.log(\"Current subscription display state:\", {\n        plan: subscription.plan,\n        status: subscription.status,\n        interval: subscription.interval,\n        showSubscribeButton: !subscription || !subscription.plan || subscription.status === 'none'\n      });\n    } else {\n      console.log(\"No subscription state available\");\n    }\n  }, [subscription]);\n\n  const handleUpdatePayment = async () => {\n    const result = await updatePaymentMethod();\n    if (result.success && result.url) {\n      window.open(result.url, '_blank');\n    }\n  };\n\n  const handleCancelSubscription = async () => {\n    try {\n      console.log(\"Starting subscription cancellation process\");\n      const result = await cancelSubscription();\n      console.log(\"Cancellation result:\", result);\n      setConfirmCancel(false);\n      \n      if (result.success) {\n      }\n    } catch (error) {\n      console.error(\"Error in handleCancelSubscription:\", error);\n      // Show success message anyway and update UI state for better UX\n\n      \n      // Use the getSubscriptionDetails to refresh subscription state\n      await getSubscriptionDetails();\n      setConfirmCancel(false);\n    }\n  };\n\n  const handleReactivateSubscription = async () => {\n    await reactivateSubscription();\n  };\n\n  // Handle plan selection\n  const handlePlanSelect = (plan: string) => {\n    // Check if user is trying to select the current plan\n    if (subscription && subscription.plan === plan) {\n      console.log('Already on this plan, no need to change');\n      toast({\n        title: t('subscriptionManager.alreadyOnPlan'),\n        description: t('subscriptionManager.alreadyOnPlanDescription'),\n      });\n      return;\n    }\n    \n    // Set the selected plan\n    console.log('Selected plan:', plan);\n    setSelectedPlan(plan);\n  };\n\n  // Handle plan change confirmation\n  const handleChangePlan = async () => {\n    if (!selectedPlan) return;\n    \n    try {\n      // Don't change to the same plan\n      if (subscription && subscription.plan === selectedPlan) {\n        console.log('Already on this plan, closing dialog');\n        setSelectedPlan(null);\n        return;\n      }\n      \n      // Show loading state\n      setIsLoading(true);\n      \n      // Log the plan being changed to\n      console.log('Changing to plan:', selectedPlan);\n      \n      const result = await changeSubscriptionPlan(selectedPlan, isYearly);\n      \n      if (result.success) {\n        // Update was successful\n        setSelectedPlan(null);\n        toast({\n          title: t('subscriptionManager.changePlanSuccess'),\n          description: t('subscriptionManager.changePlanDescription')\n        });\n        \n        // Refresh subscription details\n        await getSubscriptionDetails();\n      } else {\n        // On error, show error message\n        setSelectedPlan(null);\n        toast({\n          title: t('toasts.error'),\n          description: t('subscriptionManager.changePlanError'),\n          variant: \"destructive\"\n        });\n      }\n    } catch (error) {\n      console.error('Error in handleChangePlan:', error);\n      // Always close the dialog on error\n      setSelectedPlan(null);\n      toast({\n        title: t('toasts.error'),\n        description: t('subscriptionManager.changePlanError'),\n        variant: \"destructive\"\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Helper function to get status badge class\n  const getStatusBadgeClass = (status: string): string => {\n    switch (status) {\n      case 'active':\n        return 'bg-green-100 text-green-800 hover:bg-green-200';\n      case 'canceled':\n      case 'cancelled':\n        return 'bg-orange-100 text-orange-800 hover:bg-orange-200';\n      case 'past_due':\n        return 'bg-red-100 text-red-800 hover:bg-red-200';\n      case 'incomplete':\n        return 'bg-yellow-100 text-yellow-800 hover:bg-yellow-200';\n      case 'trialing':\n        return 'bg-blue-100 text-blue-800 hover:bg-blue-200';\n      case 'unpaid':\n        return 'bg-red-100 text-red-800 hover:bg-red-200';\n      default:\n        return 'bg-gray-100 text-gray-800 hover:bg-gray-200';\n    }\n  };\n\n  // Helper function to get status badge\n  const getStatusBadge = (status: string) => {\n    const statusKey = `subscriptionManager.status.${status.toLowerCase()}`;\n    return <Badge className={getStatusBadgeClass(status)}>{t(statusKey)}</Badge>;\n  };\n\n  const formatDate = (dateString: string) => {\n    try {\n      const date = new Date(dateString);\n      return format(date, 'MMMM dd, yyyy');\n    } catch (error) {\n      return dateString;\n    }\n  };\n\n  const renderSubscriptionDetails = () => {\n    if (!subscription || subscription.status === 'none' || subscription.status === 'canceled' || subscription.status === 'cancelled') {\n      return (\n        <div className=\"text-center py-8\">\n          <p className=\"text-gray-500\">{t('subscriptionManager.noSubscription')}</p>\n          <Button className=\"mt-4\" onClick={() => navigate(`/${i18n.language}/pricing`)}>\n            {t('subscriptionManager.subscribe')}\n          </Button>\n        </div>\n      );\n    }\n\n    const planInfo = PLANS[subscription.plan as keyof typeof PLANS] || PLANS.explorer;\n\n    return (\n      <div className=\"space-y-5\">\n        {subscription.cancelAtPeriodEnd && (\n          <Alert variant=\"destructive\" className=\"mb-4\">\n            <AlertTriangle className=\"h-4 w-4\" />\n            <AlertTitle>{t('subscriptionManager.canceledTitle')}</AlertTitle>\n            <AlertDescription>\n              {t('subscriptionManager.canceledDescription')}\n            </AlertDescription>\n          </Alert>\n        )}\n        <div className=\"flex justify-between items-center\">\n          <div>\n            <h3 className=\"text-sm font-medium text-gray-500\">\n              {t('subscriptionManager.currentPlan')}\n            </h3>\n            <div className=\"flex items-center gap-2 mt-1\">\n              <Badge className={planInfo.color}>\n                {planInfo.name}\n              </Badge>\n              <span className=\"text-sm\">\n                {subscription.interval === 'year' ? t('subscriptionManager.yearlyBilling') : t('subscriptionManager.monthlyBilling')}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex justify-between items-center\">\n          <div>\n            <h3 className=\"text-sm font-medium text-gray-500\">\n              {t('subscriptionManager.statusLabel')}\n            </h3>\n            <div className=\"mt-1\">\n              {getStatusBadge(subscription.status)}\n              {subscription.cancelAtPeriodEnd && (\n                <span className=\"ml-2 text-sm text-gray-500\">\n                  {t('subscriptionManager.cancelsAtEnd')}\n                </span>\n              )}\n            </div>\n          </div>\n          {subscription.cancelAtPeriodEnd ? (\n            <Button \n              variant=\"outline\" \n              size=\"sm\" \n              className=\"flex items-center gap-1\"\n              onClick={handleReactivateSubscription}\n            >\n              <RotateCcw className=\"h-3.5 w-3.5\" />\n              {t('subscriptionManager.reactivateSubscription')}\n            </Button>\n          ) : (\n            <Button \n              variant=\"outline\" \n              size=\"sm\" \n              className=\"flex items-center gap-1 text-red-600 hover:text-red-700 border-red-200 hover:border-red-300 hover:bg-red-50\"\n              onClick={() => setConfirmCancel(true)}\n            >\n              <XCircle className=\"h-3.5 w-3.5\" />\n              {t('subscriptionManager.cancelSubscription')}\n            </Button>\n          )}\n        </div>\n\n        <div>\n          <h3 className=\"text-sm font-medium text-gray-500\">\n            {t('subscriptionManager.renewalDate')}\n          </h3>\n          <p className=\"mt-1 flex items-center gap-1.5\">\n            <Calendar className=\"h-4 w-4 text-gray-400\" />\n            {formatDate(subscription.currentPeriodEnd)}\n          </p>\n        </div>\n\n        <div>\n          <h3 className=\"text-sm font-medium text-gray-500\">\n            {t('subscriptionManager.currentPrice')}\n          </h3>\n          <p className=\"mt-1 flex items-center gap-1.5\">\n            <DollarSign className=\"h-4 w-4 text-gray-400\" />\n            {subscription.interval === 'year' \n              ? `$${(planInfo.yearlyPrice / 12).toFixed(2)} ${t('subscriptionManager.perMonthYearly')}`\n              : `$${planInfo.monthlyPrice.toFixed(2)} ${t('subscriptionManager.perMonth')}`\n            }\n          </p>\n        </div>\n\n        {subscription.paymentMethod && (\n          <div>\n            <h3 className=\"text-sm font-medium text-gray-500\">\n              {t('subscriptionManager.paymentMethod')}\n            </h3>\n            <div className=\"flex justify-between items-center\">\n              <p className=\"mt-1 flex items-center gap-1.5\">\n                <CreditCard className=\"h-4 w-4 text-gray-400\" />\n                {subscription.paymentMethod.brand.charAt(0).toUpperCase() + subscription.paymentMethod.brand.slice(1)} •••• {subscription.paymentMethod.last4}\n                <span className=\"text-sm text-gray-500\">\n                  (Expires {subscription.paymentMethod.expiryMonth}/{subscription.paymentMethod.expiryYear})\n                </span>\n              </p>\n              <Button variant=\"outline\" size=\"sm\" className=\"flex items-center gap-1\" onClick={handleUpdatePayment}>\n                <CreditCard className=\"h-3.5 w-3.5 mr-1\" />\n                {t('subscriptionManager.updatePayment')}\n              </Button>\n            </div>\n          </div>\n        )}\n\n        <div className=\"pt-4 mt-4 border-t\">\n          {/* Footer area if needed */}\n        </div>\n      </div>\n    );\n  };\n\n  const renderPlansTab = () => {\n    if (!subscription) return null;\n\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex justify-between items-center\">\n          <h3 className=\"text-lg font-medium\">{t('subscriptionManager.planOptions')}</h3>\n          <div className=\"flex items-center space-x-2 bg-gray-100 p-1 rounded-full shadow-sm\">\n            <button\n              onClick={() => setIsYearly(false)}\n              className={`px-4 py-2 text-xs font-medium rounded-full transition-all ${\n                !isYearly ? \"bg-white shadow-sm text-blue-700\" : \"text-gray-600\"\n              }`}\n            >\n              {t('subscriptionManager.monthlyBilling')}\n            </button>\n            <button\n              onClick={() => setIsYearly(true)}\n              className={`px-4 py-2 text-xs font-medium rounded-full transition-all ${\n                isYearly ? \"bg-white shadow-sm text-blue-700\" : \"text-gray-600\"\n              }`}\n            >\n              {t('subscriptionManager.yearlyBilling')}\n            </button>\n          </div>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n          {Object.entries(PLANS)\n            .sort(([a], [b]) => {\n              // Put zappro first, then sort the rest alphabetically\n              if (a === 'zappro') return -1;\n              if (b === 'zappro') return 1;\n              return a.localeCompare(b);\n            })\n            .map(([id, plan]) => {\n              const isCurrentPlan = subscription.plan === id;\n              const price = isYearly \n                ? (plan.yearlyPrice / 12).toFixed(2)\n                : plan.monthlyPrice.toFixed(2);\n              let icon = null;\n              let iconColor = '';\n              if (id === 'zaptrip') {\n                icon = <PlaneTakeoff className=\"h-8 w-8 text-blue-500\" />;\n                iconColor = 'bg-blue-100 text-blue-800';\n              } else if (id === 'zapout') {\n                icon = <CableCar className=\"h-8 w-8 text-purple-500\" />;\n                iconColor = 'bg-purple-100 text-purple-800';\n              } else if (id === 'zaproad') {\n                icon = <Car className=\"h-8 w-8 text-pink-500\" />;\n                iconColor = 'bg-pink-100 text-pink-800';\n              } else if (id === 'zappro') {\n                icon = <Award className=\"h-8 w-8 text-yellow-500\" />;\n                iconColor = 'bg-yellow-100 text-yellow-800';\n              }\n              return (\n                <Card key={id} className=\"relative flex flex-col h-full bg-white/80 backdrop-blur-sm border-0 rounded-2xl shadow-xl hover:shadow-2xl transition-all duration-300\">\n                  <div className=\"p-8\">\n                    <div className=\"flex items-center justify-between mb-6\">\n                      <div className=\"flex items-center space-x-2\">\n                        {icon}\n                        <span className={`text-sm font-semibold ${iconColor}`}>{plan.name}</span>\n                      </div>\n                    </div>\n                    <h3 className=\"text-2xl font-bold mb-2\">{plan.name}</h3>\n                    <p className=\"text-gray-600 mb-6\">{t(`${id}.description`)}</p>\n                    <ul className=\"space-y-3 mb-8\">\n                      {plan.features.map((feature, index) => (\n                        <li key={index} className=\"flex items-center space-x-3\">\n                          <div className={`flex-shrink-0 w-5 h-5 rounded-full ${plan.color} flex items-center justify-center`}>\n                            <Check className={`w-3 h-3 ${iconColor.split(' ')[1]}`} />\n                          </div>\n                          <span className=\"text-gray-700\">{feature}</span>\n                        </li>\n                      ))}\n                    </ul>\n                    {isCurrentPlan ? (\n                      <Button \n                        variant=\"outline\" \n                        className={`w-full border-2 font-medium border-green-500 text-green-700`}\n                        disabled={true}\n                      >\n                        {t('subscriptionManager.currentPlanLabel')}\n                      </Button>\n                    ) : (\n                      <Button \n                        className={`w-full font-medium shadow-sm ${plan.color}`}\n                        onClick={() => handlePlanSelect(id)}\n                      >\n                        {t('subscriptionManager.selectPlan')}\n                      </Button>\n                    )}\n                  </div>\n                </Card>\n              );\n            })}\n        </div>\n      </div>\n    );\n  };\n\n  // Fetch billing history\n  const loadBillingHistory = async () => {\n    if (!subscription) return;\n    \n    setLoadingInvoices(true);\n    try {\n      console.log('Loading billing history...');\n      const result = await getBillingHistory(20); // Get up to 20 invoices\n      \n      if (result.success) {\n        console.log('Billing history loaded:', result.invoices);\n        setInvoices(result.invoices);\n      } else {\n        console.warn('Failed to load billing history:', result.error);\n        setInvoices([]);\n      }\n    } catch (error) {\n      console.error('Error loading billing history:', error);\n      setInvoices([]);\n    } finally {\n      setLoadingInvoices(false);\n    }\n  };\n\n  // Update the renderBillingHistoryTab function\n  const renderBillingHistoryTab = () => {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg\">{t('subscriptionManager.billingHistory.title')}</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {loadingInvoices ? (\n            <div className=\"space-y-4\">\n              {[1, 2, 3].map((i) => (\n                <div key={i} className=\"flex justify-between items-center\">\n                  <div className=\"space-y-2\">\n                    <Skeleton className=\"h-4 w-32\" />\n                    <Skeleton className=\"h-3 w-24\" />\n                  </div>\n                  <Skeleton className=\"h-8 w-24\" />\n                </div>\n              ))}\n            </div>\n          ) : invoices.length === 0 ? (\n            <div className=\"text-center text-gray-500 py-6\">\n              {t('subscriptionManager.billingHistory.noHistory')}\n            </div>\n          ) : (\n            <div className=\"space-y-3\">\n              {invoices.map((invoice) => (\n                <div key={invoice.id} className=\"flex justify-between items-center p-3 border rounded hover:bg-gray-50\">\n                  <div>\n                    <div className=\"font-medium\">\n                      {t('subscriptionManager.billingHistory.invoice.number')}{invoice.number} \n                      <Badge \n                        className={\n                          invoice.status === 'paid' ? 'bg-green-100 text-green-800 ml-2' : \n                          invoice.status === 'open' ? 'bg-blue-100 text-blue-800 ml-2' : \n                          'bg-gray-100 text-gray-800 ml-2'\n                        }\n                      >\n                        {invoice.status}\n                      </Badge>\n                    </div>\n                    <div className=\"text-sm text-gray-500\">\n                      {formatDate(invoice.created)} • ${invoice.amount_paid} {invoice.currency.toUpperCase()}\n                    </div>\n                  </div>\n                  {invoice.hosted_invoice_url && (\n                    <Button \n                      variant=\"outline\" \n                      size=\"sm\" \n                      className=\"flex items-center gap-1\"\n                      onClick={() => window.open(invoice.hosted_invoice_url, '_blank')}\n                    >\n                      <FileText className=\"h-3.5 w-3.5\" />\n                      {t('subscriptionManager.viewInvoice')}\n                      <ExternalLink className=\"h-3 w-3 ml-1\" />\n                    </Button>\n                  )}\n                </div>\n              ))}\n            </div>\n          )}\n        </CardContent>\n        <CardFooter>\n          <Button \n            variant=\"outline\" \n            size=\"sm\" \n            onClick={loadBillingHistory}\n            disabled={loadingInvoices}\n          >\n            <RefreshCw className={`h-4 w-4 mr-2 ${loadingInvoices ? 'animate-spin' : ''}`} />\n            {t('subscriptionManager.refreshBillingHistory')}\n          </Button>\n        </CardFooter>\n      </Card>\n    );\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader className=\"pb-3\">\n          <CardTitle className=\"text-2xl font-bold\">{t('subscriptionManagement.title')}</CardTitle>\n          <CardDescription>\n            {t('subscriptionManagement.description')}\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {renderSubscriptionDetails()}\n        </CardContent>\n      </Card>\n\n      {subscription && subscription.status !== 'none' && subscription.status !== 'canceled' && subscription.status !== 'cancelled' && (\n        <Tabs defaultValue=\"plans\" onValueChange={(value) => {\n          if (value === 'history') {\n            loadBillingHistory();\n          }\n        }}>\n          <TabsList className=\"grid grid-cols-2\">\n            <TabsTrigger value=\"plans\">Plans</TabsTrigger>\n            <TabsTrigger value=\"history\">{t('subscriptionManager.billingHistory.title')}</TabsTrigger>\n          </TabsList>\n          <TabsContent value=\"plans\" className=\"mt-4\">\n            {renderPlansTab()}\n          </TabsContent>\n          <TabsContent value=\"history\" className=\"mt-4\">\n            {renderBillingHistoryTab()}\n          </TabsContent>\n        </Tabs>\n      )}\n\n      {/* Cancel Confirmation Dialog */}\n      <Dialog open={confirmCancel} onOpenChange={setConfirmCancel}>\n        <DialogContent className=\"sm:max-w-md\">\n          <DialogHeader>\n            <DialogTitle>{t('subscriptionManager.confirmCancel.title')}</DialogTitle>\n            <DialogDescription>\n              {t('subscriptionManager.confirmCancel.description')}\n            </DialogDescription>\n          </DialogHeader>\n          <DialogFooter className=\"gap-2 sm:gap-0\">\n            <Button variant=\"outline\" onClick={() => setConfirmCancel(false)}>\n              {t('subscriptionManager.confirmCancel.cancel')}\n            </Button>\n            <Button \n              variant=\"destructive\" \n              onClick={handleCancelSubscription}\n              disabled={isLoading}\n            >\n              {isLoading ? (\n                <><RefreshCw className=\"h-4 w-4 mr-2 animate-spin\" /> {t('common.processing')}</>\n              ) : (\n                t('subscriptionManager.confirmCancel.confirm')\n              )}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Change Plan Dialog */}\n      <Dialog open={!!selectedPlan} onOpenChange={() => setSelectedPlan(null)}>\n        <DialogContent className=\"sm:max-w-md\">\n          <DialogHeader>\n            <DialogTitle>{t('subscriptionManager.changePlanTitle')}</DialogTitle>\n            <DialogDescription>\n              {t('subscriptionManager.changePlanDescription')}\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"flex justify-between items-center mb-4\">\n            <div className=\"text-sm font-medium\">{t('subscriptionManager.billingCycle')}</div>\n            <div className=\"flex items-center space-x-2 bg-gray-100 p-1 rounded-full\">\n              <button\n                onClick={() => setIsYearly(false)}\n                className={`px-3 py-1 text-xs font-medium rounded-full transition-all ${\n                  !isYearly ? \"bg-white shadow-sm\" : \"text-gray-600\"\n                }`}\n              >\n                {t('subscriptionManager.monthlyBilling')}\n              </button>\n              <button\n                onClick={() => setIsYearly(true)}\n                className={`px-3 py-1 text-xs font-medium rounded-full transition-all ${\n                  isYearly ? \"bg-white shadow-sm\" : \"text-gray-600\"\n                }`}\n              >\n                {t('subscriptionManager.yearlyBilling')}\n                <span className=\"ml-1 text-xs bg-green-100 text-green-800 px-1 rounded-sm\">\n                  -10%\n                </span>\n              </button>\n            </div>\n          </div>\n          {selectedPlan && PLANS[selectedPlan] && (\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <div className=\"flex justify-between items-center mb-2\">\n                <div className=\"font-medium\">\n                  {PLANS[selectedPlan]?.name || selectedPlan}\n                </div>\n                <Badge className={PLANS[selectedPlan]?.color || 'bg-gray-100'}>\n                  {t('subscriptionManager.selected')}\n                </Badge>\n              </div>\n              <div className=\"text-2xl font-bold mt-2\">\n                ${isYearly \n                  ? (PLANS[selectedPlan]?.yearlyPrice / 12).toFixed(2)\n                  : PLANS[selectedPlan]?.monthlyPrice.toFixed(2)\n                }\n                <span className=\"text-sm text-gray-500 font-normal ml-1\">\n                  / {t('subscriptionManager.month')}\n                </span>\n              </div>\n              <div className=\"text-sm text-gray-500 mb-4\">\n                {isYearly \n                  ? t('subscriptionManager.billedYearly', { \n                      amount: PLANS[selectedPlan]?.yearlyPrice.toFixed(2) \n                    })\n                  : t('subscriptionManager.billedMonthly')\n                }\n              </div>\n              <div className=\"text-sm mt-2\">\n                <span className=\"font-medium\">{t('subscriptionManager.includes')}:</span>\n                <ul className=\"mt-2 space-y-1\">\n                  {PLANS[selectedPlan]?.features.map((feature, index) => (\n                    <li key={index} className=\"flex items-start\">\n                      <CheckCircle className=\"h-4 w-4 text-green-500 mr-2 flex-shrink-0 mt-0.5\" />\n                      <span>{feature}</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          )}\n          <DialogFooter className=\"mt-4\">\n            <Button variant=\"outline\" onClick={() => setSelectedPlan(null)}>\n              {t('common.cancel')}\n            </Button>\n            <Button type=\"submit\" onClick={handleChangePlan}>\n              {t('subscriptionManager.confirmChangePlan')}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n} ","import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { useTranslation } from 'react-i18next';\nimport { supabase } from \"@/integrations/supabase/client\";\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/components/ui/alert-dialog\";\nimport { AlertTriangle } from \"lucide-react\";\nimport { userCache, tripCache, blogCache } from '@/utils/cache';\n\nexport const DeleteAccountCard = () => {\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const { toast } = useToast();\n  const { t } = useTranslation('profile');\n  const navigate = useNavigate();\n\n  const deleteAccount = async () => {\n    try {\n      setIsDeleting(true);\n      \n      // Get current user\n      const { data: { user } } = await supabase.auth.getUser();\n      const { data: { session } } = await supabase.auth.getSession();\n      \n      if (!user || !session) {\n        throw new Error(\"No authenticated user found\");\n      }\n      \n      const userId = user.id;\n      const userEmail = user.email;\n      const token = session.access_token;\n      \n      // Clear all user-related caches\n      userCache.delete(`profile-${userId}`);\n      tripCache.delete(`trips-${userId}`);\n      blogCache.delete(`blogs-${userId}`);\n      \n      // Send confirmation email using the Resend API through our edge function\n      if (userEmail) {\n        try {\n          await supabase.functions.invoke('send-account-deletion-email', {\n            body: { \n              email: userEmail,\n              name: user.user_metadata?.first_name || user.user_metadata?.last_name || 'Traveler'\n            }\n          });\n          console.log(\"Account deletion email sent\");\n        } catch (emailError) {\n          console.error(\"Error sending confirmation email:\", emailError);\n          // Continue with account deletion even if email fails\n        }\n      }\n      \n      // Call the edge function to delete the user account with proper error handling\n      console.log(\"Calling delete-user edge function\");\n      const { data, error } = await supabase.functions.invoke('delete-user', {\n        body: { userId },\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      \n      if (error) {\n        console.error(\"Error from delete-user function:\", error);\n        throw new Error(error.message || \"Failed to delete account\");\n      }\n      \n      if (!data || !data.success) {\n        console.error(\"Unexpected response from delete-user function:\", data);\n        throw new Error(data?.error || \"Failed to delete account: Unexpected response\");\n      }\n      \n      console.log(\"Delete user response:\", data);\n      \n\n      \n      // Sign out and navigate to homepage\n      await supabase.auth.signOut();\n      navigate(\"/\");\n      \n    } catch (error: any) {\n      console.error(\"Error deleting account:\", error);\n      \n      // Show a more detailed error message\n      toast({\n        title: t('deleteAccount.error'),\n        description: error.message || t('deleteAccount.errorMessage'),\n        variant: \"destructive\",\n      });\n      \n      setIsConfirmOpen(false);\n    } finally {\n      setIsDeleting(false);\n    }\n  };\n\n  return (\n    <>\n      <Card className=\"border-red-200\">\n        <CardHeader>\n          <CardTitle className=\"text-2xl font-bold text-red-600 flex items-center gap-2\">\n            <AlertTriangle className=\"h-5 w-5\" />\n            {t('deleteAccount.title')}\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p className=\"mb-4 text-gray-600\">{t('deleteAccount.description')}</p>\n          <Button \n            variant=\"destructive\" \n            onClick={() => setIsConfirmOpen(true)}\n            disabled={isDeleting}\n          >\n            {t('deleteAccount.button')}\n          </Button>\n        </CardContent>\n      </Card>\n\n      <AlertDialog open={isConfirmOpen} onOpenChange={setIsConfirmOpen}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>{t('deleteAccount.confirmTitle')}</AlertDialogTitle>\n            <AlertDialogDescription>\n              {t('deleteAccount.confirmDescription')}\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel disabled={isDeleting}>\n              {t('cancel')}\n            </AlertDialogCancel>\n            <AlertDialogAction\n              onClick={(e) => {\n                e.preventDefault();\n                deleteAccount();\n              }}\n              disabled={isDeleting}\n              className=\"bg-red-600 hover:bg-red-700\"\n            >\n              {isDeleting ? t('deleteAccount.deleting') : t('deleteAccount.confirm')}\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </>\n  );\n};\n"],"file":"assets/js/components/components-profile.CtclhbDl.js"}