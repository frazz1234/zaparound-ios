import{r as e,j as n}from"../vendor/vendor-react-core.D1hcyiwY.js";import{m as t}from"../vendor/vendor--mapbox-gl.CIg18VY7.js";const r=({className:r="",height:o="500px",center:i=[2.3488,48.8534],zoom:a=12,geopositions:p=[],onMarkerClick:s,showTerrain:c=!0,initialCenter:u})=>{const d=e.useRef(null),l=e.useRef(null),m=e.useRef([]),[g]=e.useState(u||i),[x,h]=e.useState(null);return e.useEffect((()=>{if(!d.current)return;const e=document.createElement("style");return e.textContent="\n.custom-marker {\n  width: 35px;\n  height: 35px;\n  cursor: pointer;\n  transform-origin: bottom;\n  transition: all 0.3s ease;\n}\n\n.custom-marker:hover {\n  transform: scale(1.1) translateY(-5px);\n}\n\n.marker-content {\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background: linear-gradient(45deg, #3b82f6, #6366f1);\n  border: 3px solid white;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  font-size: 14px;\n}\n\n.mapboxgl-popup {\n  max-width: 300px !important;\n}\n\n.mapboxgl-popup-content {\n  padding: 0 !important;\n  border-radius: 12px !important;\n  overflow: hidden !important;\n  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05) !important;\n}\n\n.popup-content {\n  padding: 16px;\n  background: white;\n}\n\n.popup-header {\n  padding: 12px 16px;\n  background: linear-gradient(to right, #3b82f6, #6366f1);\n  color: white;\n  margin: -16px -16px 12px -16px;\n}\n\n.popup-title {\n  font-size: 16px;\n  font-weight: 600;\n  margin: 0;\n}\n\n.popup-description {\n  color: #4b5563;\n  font-size: 14px;\n  margin: 8px 0;\n}\n\n.popup-coordinates {\n  display: flex;\n  align-items: center;\n  color: #6b7280;\n  font-size: 12px;\n  margin-top: 8px;\n}\n\n.popup-icon {\n  width: 16px;\n  height: 16px;\n  margin-right: 4px;\n}\n",document.head.appendChild(e),l.current||(t.accessToken="pk.eyJ1IjoibWlzdGVyZnJhenoiLCJhIjoiY203M2ZnM3BoMDhpMTJqcTNiYWpkamIzNyJ9.2SlcuEPIL2yCJw5TIPunVQ",l.current=new t.Map({container:d.current,style:c?"mapbox://styles/mapbox/outdoors-v12":"mapbox://styles/mapbox/streets-v12",center:g,zoom:a,pitch:60,bearing:0}),l.current.addControl(new t.NavigationControl,"top-right"),l.current.addControl(new t.FullscreenControl,"top-right"),l.current.on("load",(()=>{l.current&&(c&&(l.current.addSource("mapbox-dem",{type:"raster-dem",url:"mapbox://mapbox.mapbox-terrain-dem-v1",tileSize:512,maxzoom:14}),l.current.setTerrain({source:"mapbox-dem",exaggeration:1.5}),l.current.addLayer({id:"sky",type:"sky",paint:{"sky-type":"atmosphere","sky-atmosphere-sun":[0,90],"sky-atmosphere-sun-intensity":15}}),l.current.getLayer("water-custom")||l.current.addLayer({id:"water-custom",type:"fill",source:"composite","source-layer":"water",paint:{"fill-color":"#93c5fd","fill-opacity":.8}}),l.current.getLayer("building-custom")||l.current.addLayer({id:"building-custom",type:"fill-extrusion",source:"composite","source-layer":"building",paint:{"fill-extrusion-color":"#9ca3af","fill-extrusion-height":["get","height"],"fill-extrusion-base":["get","min_height"],"fill-extrusion-opacity":.6}})),l.current.getSource("route")||l.current.addSource("route",{type:"geojson",lineMetrics:!0,data:{type:"Feature",properties:{},geometry:{type:"LineString",coordinates:[]}}}),l.current.getLayer("route-outline")||l.current.addLayer({id:"route-outline",type:"line",source:"route",layout:{"line-join":"round","line-cap":"round"},paint:{"line-color":"#ffffff","line-width":8,"line-opacity":.8,"line-blur":.5}}),l.current.getLayer("route")||l.current.addLayer({id:"route",type:"line",source:"route",layout:{"line-join":"round","line-cap":"round"},paint:{"line-color":"#3b82f6","line-gradient":["interpolate",["linear"],["line-progress"],0,"#3b82f6",1,"#6366f1"],"line-width":4,"line-opacity":1}}))}))),()=>{m.current.forEach((e=>e.remove())),m.current=[],l.current&&(l.current.remove(),l.current=null),document.head.removeChild(e)}}),[c]),e.useEffect((()=>{if(l.current){if(m.current.forEach((e=>e.remove())),m.current=[],p.forEach(((e,n)=>{if(!l.current)return;const r=document.createElement("div");r.className="custom-marker";const o=document.createElement("div");o.className="marker-content",o.textContent=`${n+1}`,r.appendChild(o);const i=new t.Popup({offset:25,closeButton:!1,maxWidth:"300px"}).setHTML(`\n        <div class="popup-content">\n          <div class="popup-header">\n            <h3 class="popup-title">${e.name}</h3>\n          </div>\n          ${e.description?`\n            <p class="popup-description">${e.description}</p>\n          `:""}\n          <div class="popup-coordinates">\n            <svg class="popup-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">\n              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" \n                d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>\n              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" \n                d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>\n            </svg>\n            ${e.coordinates[1].toFixed(4)}, ${e.coordinates[0].toFixed(4)}\n          </div>\n        </div>\n      `),a=new t.Marker(r).setLngLat(e.coordinates).setPopup(i).addTo(l.current);r.addEventListener("click",(()=>{s&&s(e),h(e.name)})),m.current.push(a)})),p.length>1&&l.current.getSource("route")){l.current.getSource("route").setData({type:"Feature",properties:{},geometry:{type:"LineString",coordinates:p.map((e=>e.coordinates))}})}if(p.length>0){const e=new t.LngLatBounds;p.forEach((n=>{e.extend(n.coordinates)})),l.current.fitBounds(e,{padding:{top:100,bottom:100,left:100,right:100},maxZoom:15})}else l.current.setCenter(g),l.current.setZoom(a)}}),[p,a,g,s]),n.jsx("div",{className:`relative ${r}`,style:{height:o},children:n.jsx("div",{ref:d,className:"absolute inset-0 rounded-lg shadow-inner"})})};export{r as T};
//# sourceMappingURL=components-tripmap.tsx.B4l0_mxI.js.map
