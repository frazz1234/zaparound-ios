{"version":3,"file":"components-trip-details.pqq_6ZMJ.js","sources":["../../../../src/components/trip-details/TripBasicInfo.tsx","../../../../src/components/trip-details/TripTransportation.tsx","../../../../src/components/trip-details/TripAccommodation.tsx","../../../../src/components/trip-details/TripAIContent.tsx","../../../../src/components/trip-details/TripNotes.tsx","../../../../src/components/trip-details/TripZapOutDetails.tsx","../../../../src/components/trip-details/TripZapRoadDetails.tsx","../../../../src/components/trip-details/EventSuggestions.tsx","../../../../src/components/trip-details/TicketmasterEvents.tsx","../../../../src/components/trip-details/TripShareDialog.tsx"],"sourcesContent":["import { useTranslation } from 'react-i18next';\nimport { format, isValid, parseISO } from \"date-fns\";\nimport { enUS, fr, es } from 'date-fns/locale';\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { CalendarIcon, MapPinIcon, TagIcon, DollarSign } from \"lucide-react\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\n\ninterface TripBasicInfoProps {\n  startDate: string;\n  endDate: string;\n  location: string | null;\n  category: string | null;\n  activityTypes?: string[];\n  budget: number | null;\n  isEditing: boolean;\n  isZapOutTrip?: boolean;\n  isZapRoadTrip?: boolean;\n  hideBudget?: boolean;\n  onCategoryChange: (value: string) => void;\n  onBudgetChange: (value: number | null) => void;\n}\n\nexport function TripBasicInfo({\n  startDate,\n  endDate,\n  location,\n  category,\n  activityTypes = [],\n  budget,\n  isEditing,\n  isZapOutTrip = false,\n  isZapRoadTrip = false,\n  hideBudget = false,\n  onCategoryChange,\n  onBudgetChange\n}: TripBasicInfoProps) {\n  const { t } = useTranslation('trip');\n\n  // Format dates safely, handling invalid dates\n  const formatDate = (dateString: string | null | undefined) => {\n    if (!dateString) return '';\n    try {\n      const { i18n } = useTranslation();\n      // First try to parse as ISO string\n      const date = parseISO(dateString);\n      let locale = enUS;\n      if (i18n.language === 'fr') locale = fr;\n      else if (i18n.language === 'es') locale = es;\n      if (isValid(date)) {\n        return format(date, 'PPP', { locale });\n      }\n      // If not a valid ISO string, try as regular date\n      const fallbackDate = new Date(dateString);\n      return isValid(fallbackDate) ? format(fallbackDate, 'PPP', { locale }) : '';\n    } catch (error) {\n      console.error(\"Error formatting date:\", error);\n      return '';\n    }\n  };\n\n  const formattedStartDate = formatDate(startDate);\n  const formattedEndDate = formatDate(endDate);\n\n  // For ZapOut trips, we only display one date\n  const dateDisplay = isZapOutTrip \n    ? formattedStartDate\n    : (formattedStartDate && formattedEndDate)\n      ? `${formattedStartDate} - ${formattedEndDate}`\n      : formattedStartDate || formattedEndDate;\n\n  // Format activity types for display\n  const formatActivityTypes = (types: string[]): string => {\n    if (!types || types.length === 0) {\n      return t('types.zapOut.details.noActivitiesSelected');\n    }\n    return types.map(type => t(`types.zapOut.details.${type}`)).join(', ');\n  };\n\n  return (\n    <Card>\n      <CardContent className=\"p-6\">\n        <div className=\"space-y-4\">\n          {/* Date */}\n          {dateDisplay && (\n            <div className=\"flex items-start gap-3\">\n              <CalendarIcon className=\"w-5 h-5 text-muted-foreground mt-0.5\" />\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">\n                  {isZapOutTrip ? t('types.zapOut.when') : t('form.date')}\n                </p>\n                <p className=\"text-base\">{dateDisplay}</p>\n              </div>\n            </div>\n          )}\n\n          {/* Location */}\n          <div className=\"flex items-start gap-3\">\n            <MapPinIcon className=\"w-5 h-5 text-muted-foreground mt-0.5\" />\n            <div>\n              <p className=\"text-sm font-medium text-muted-foreground\">{t('form.destination')}</p>\n              <p className=\"text-base\">{location || t('details.locationNotSpecified')}</p>\n            </div>\n          </div>\n\n          {/* Category or Activity Types - Hide for ZapRoad trips */}\n          {!isZapRoadTrip && (\n            <div className=\"flex items-start gap-3\">\n              <TagIcon className=\"w-5 h-5 text-muted-foreground mt-0.5\" />\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">\n                  {isZapOutTrip ? t('types.zapOut.details.activityTypes') : t('details.category')}\n                </p>\n                {isEditing && !isZapOutTrip ? (\n                  <Select\n                    value={category || ''}\n                    onValueChange={onCategoryChange}\n                  >\n                    <SelectTrigger>\n                      <SelectValue placeholder={t('details.selectCategory')} />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"leisure\" className=\"cursor-pointer hover:bg-accent transition-colors duration-200\">{t('categories.leisure')}</SelectItem>\n                      <SelectItem value=\"business\" className=\"cursor-pointer hover:bg-accent transition-colors duration-200\">{t('categories.business')}</SelectItem>\n                      <SelectItem value=\"family\" className=\"cursor-pointer hover:bg-accent transition-colors duration-200\">{t('categories.family')}</SelectItem>\n                      <SelectItem value=\"adventure\" className=\"cursor-pointer hover:bg-accent transition-colors duration-200\">{t('categories.adventure')}</SelectItem>\n                      <SelectItem value=\"city\" className=\"cursor-pointer hover:bg-accent transition-colors duration-200\">{t('categories.city')}</SelectItem>\n                      <SelectItem value=\"beach\" className=\"cursor-pointer hover:bg-accent transition-colors duration-200\">{t('categories.beach')}</SelectItem>\n                      <SelectItem value=\"nature\" className=\"cursor-pointer hover:bg-accent transition-colors duration-200\">{t('categories.nature')}</SelectItem>\n                      <SelectItem value=\"culture\" className=\"cursor-pointer hover:bg-accent transition-colors duration-200\">{t('categories.culture')}</SelectItem>\n                    </SelectContent>\n                  </Select>\n                ) : (\n                  <p className=\"text-base\">\n                    {isZapOutTrip \n                      ? formatActivityTypes(activityTypes)\n                      : (category ? t(`categories.${category}`) : t('details.selectCategory'))}\n                  </p>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* Budget */}\n          {!hideBudget && (\n            <div className=\"flex items-start gap-3\">\n              <DollarSign className=\"w-5 h-5 text-muted-foreground mt-0.5\" />\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">{t('details.budget')}</p>\n                {isEditing ? (\n                  <Input\n                    type=\"number\"\n                    value={budget || ''}\n                    onChange={(e) => onBudgetChange(e.target.value ? Number(e.target.value) : null)}\n                    placeholder={t('details.enterBudget')}\n                  />\n                ) : (\n                  <p className=\"text-base\">{budget ? `$${budget}` : t('types.zapOut.details.noBudgetSpecified')}</p>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import { Car } from 'lucide-react';\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useTranslation } from 'react-i18next';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\n\ninterface TransportationDetails {\n  mode?: string;\n  details?: string;\n}\n\ninterface TripTransportationProps {\n  details: TransportationDetails;\n  isEditing: boolean;\n  onChange: (details: TransportationDetails) => void;\n}\n\nconst TRANSPORT_MODES = ['plane', 'train', 'bus', 'car'];\n\nexport function TripTransportation({ details, isEditing, onChange }: TripTransportationProps) {\n  const { t } = useTranslation('trip');\n\n  // Helper to translate known modes\n  const getTranslatedMode = (mode?: string) => {\n    if (!mode) return t('details.transportationMode', 'No mode specified');\n    const key = mode.toLowerCase();\n    if (TRANSPORT_MODES.includes(key)) {\n      return t(`transport.${key}`);\n    }\n    return mode;\n  };\n\n  return (\n    <div className=\"space-y-2\">\n      <div className=\"flex items-center text-gray-500\">\n        <Car className=\"mr-2 h-5 w-5\" />\n        <span>{t('details.transportationMode', 'Transportation')}</span>\n      </div>\n      {isEditing ? (\n        <div className=\"space-y-2\">\n          <Select\n            value={details.mode || ''}\n            onValueChange={value => onChange({ ...details, mode: value })}\n          >\n            <SelectTrigger>\n              <SelectValue placeholder={t('details.transportationMode', 'Mode of transport')} />\n            </SelectTrigger>\n            <SelectContent>\n              {TRANSPORT_MODES.map(mode => (\n                <SelectItem key={mode} value={mode}>\n                  {t(`transport.${mode}`)}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n          <Textarea\n            placeholder={t('details.transportationDetails', 'Additional transportation details')}\n            value={details.details || ''}\n            onChange={(e) => onChange({\n              ...details,\n              details: e.target.value\n            })}\n          />\n        </div>\n      ) : (\n        <div className=\"text-gray-600\">\n          <p className=\"font-medium\">{getTranslatedMode(details.mode)}</p>\n          <p className=\"text-sm\">{details.details}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n","import { Building } from 'lucide-react';\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useTranslation } from 'react-i18next';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\n\ninterface AccommodationDetails {\n  type?: string;\n  details?: string;\n}\n\ninterface TripAccommodationProps {\n  details: AccommodationDetails;\n  isEditing: boolean;\n  onChange: (details: AccommodationDetails) => void;\n}\n\nconst ACCOMMODATION_TYPES = ['hotel', 'airbnb', 'hostel', 'camping', 'resort', 'bnb'];\n\nexport function TripAccommodation({ details, isEditing, onChange }: TripAccommodationProps) {\n  const { t } = useTranslation('trip');\n\n  // Helper to translate known types\n  const getTranslatedType = (type?: string) => {\n    if (!type) return t('details.accommodationType', 'No type specified');\n    const key = type.toLowerCase();\n    if (ACCOMMODATION_TYPES.includes(key)) {\n      return t(`accommodation.${key}`);\n    }\n    return type;\n  };\n\n  return (\n    <div className=\"space-y-2\">\n      <div className=\"flex items-center text-gray-500\">\n        <Building className=\"mr-2 h-5 w-5\" />\n        <span>{t('details.accommodationType', 'Accommodation')}</span>\n      </div>\n      {isEditing ? (\n        <div className=\"space-y-2\">\n          <Select\n            value={details.type || ''}\n            onValueChange={value => onChange({ ...details, type: value })}\n          >\n            <SelectTrigger>\n              <SelectValue placeholder={t('details.accommodationType', 'Accommodation type')} />\n            </SelectTrigger>\n            <SelectContent>\n              {ACCOMMODATION_TYPES.map(type => (\n                <SelectItem key={type} value={type}>\n                  {t(`accommodation.${type}`)}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n          <Textarea\n            placeholder={t('details.accommodationDetails', 'Additional accommodation details')}\n            value={details.details || ''}\n            onChange={(e) => onChange({\n              ...details,\n              details: e.target.value\n            })}\n          />\n        </div>\n      ) : (\n        <div className=\"text-gray-600\">\n          <p className=\"font-medium\">{getTranslatedType(details.type)}</p>\n          <p className=\"text-sm\">{details.details}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport { useTranslation } from 'react-i18next';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { ChevronDown } from 'lucide-react';\nimport type { Components } from 'react-markdown';\nimport type { DetailedHTMLProps, HTMLAttributes } from 'react';\n\ninterface TripAIContentProps {\n  content: string | null;\n  isLoading?: boolean;\n  tripType?: string;\n}\n\ntype MarkdownComponentProps = DetailedHTMLProps<HTMLAttributes<HTMLElement>, HTMLElement>;\n\n// Helper to parse custom trip content tags\nfunction parseCustomTripContent(content: string) {\n  const startTripMatch = content.match(/\\[START_TRIP\\]([\\s\\S]*?)\\[\\/START_TRIP\\]/i);\n  const endTripMatch = content.match(/\\[END_TRIP\\]([\\s\\S]*?)\\[\\/END_TRIP\\]/i);\n  const dayMatches = [...content.matchAll(/\\[DAY (\\d+)\\]([\\s\\S]*?)\\[\\/DAY\\]/gi)];\n\n  const startTrip = startTripMatch ? startTripMatch[1].trim() : null;\n  const endTrip = endTripMatch ? endTripMatch[1].trim() : null;\n  const days = dayMatches.map(match => ({\n    title: `Day ${match[1]}`,\n    body: match[2].trim(),\n  }));\n\n  return { startTrip, days, endTrip };\n}\n\nexport function TripAIContent({ content, isLoading = false, tripType }: TripAIContentProps) {\n  const { t, i18n } = useTranslation('trip');\n\n  // Parse custom tag content\n  const { startTrip, days, endTrip } = parseCustomTripContent(content || '');\n\n  // Build section keys\n  const sectionKeys: string[] = [];\n  if (startTrip) sectionKeys.push('startTrip');\n  days.forEach((_, idx) => sectionKeys.push(`day-${idx}`));\n  if (endTrip) sectionKeys.push('endTrip');\n\n  // State for collapsible sections\n  const [openSections, setOpenSections] = useState<{ [key: string]: boolean }>({});\n\n  // Initialize openSections on first render/content change\n  useEffect(() => {\n    const initial: { [key: string]: boolean } = {};\n    sectionKeys.forEach(key => { initial[key] = false; });\n    if (startTrip) initial['startTrip'] = true;\n    setOpenSections(initial);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [content]);\n\n  if (isLoading) {\n    return (\n      <div className=\"mt-8 p-6 bg-[#fcfcfc] rounded-xl\">\n        <h2 className=\"text-xl font-semibold text-[#030303] mb-4\"></h2>\n        <div className=\"space-y-4\">\n          <Skeleton className=\"h-5 w-full\" />\n          <Skeleton className=\"h-5 w-5/6\" />\n          <Skeleton className=\"h-5 w-4/5\" />\n          <Skeleton className=\"h-5 w-full\" />\n          <Skeleton className=\"h-5 w-3/4\" />\n        </div>\n      </div>\n    );\n  }\n\n  if (!content) return null;\n\n  // Helper to toggle a section\n  const toggleSection = (key: string) => {\n    setOpenSections(prev => ({ ...prev, [key]: !prev[key] }));\n  };\n\n  // Helper to check if a section is open (default: open)\n  const isOpen = (key: string) => openSections[key] !== false;\n\n  const components: Components = {\n    p: ({ children }) => (\n      <p className=\"mb-4 leading-relaxed text-[#030303] break-words\">{children}</p>\n    ),\n    strong: ({ children }) => (\n      <strong className=\"font-bold text-[#1d1d1e] break-words\">{children}</strong>\n    ),\n    em: ({ children }) => (\n      <em className=\"italic text-[#62626a] break-words\">{children}</em>\n    ),\n    h1: ({ children }) => (\n      <h1 className=\"text-2xl font-bold text-[#1d1d1e] mt-6 mb-4 break-words\">{children}</h1>\n    ),\n    h2: ({ children }) => (\n      <h2 className=\"text-xl font-bold text-[#1d1d1e] mt-5 mb-3 break-words\">{children}</h2>\n    ),\n    h3: ({ children }) => (\n      <h3 className=\"text-lg font-bold text-[#1d1d1e] mt-4 mb-2 break-words\">{children}</h3>\n    ),\n    ul: ({ children }) => (\n      <ul className=\"list-disc pl-6 mb-4 space-y-2 text-[#030303] break-words\">{children}</ul>\n    ),\n    ol: ({ children }) => (\n      <ol className=\"list-decimal pl-6 mb-4 space-y-2 text-[#030303] break-words\">{children}</ol>\n    ),\n    li: ({ children }) => (\n      <li className=\"text-[#62626a] break-words\">{children}</li>\n    ),\n    code: ({ children, className }) => {\n      const isInline = !className;\n      return isInline ? (\n        <code className=\"px-1.5 py-0.5 bg-[#f3f3f3] rounded text-sm font-mono text-[#1d1d1e] break-words\">\n          {children}\n        </code>\n      ) : (\n        <code className=\"block bg-[#f3f3f3] p-4 rounded-lg overflow-x-auto font-mono text-sm text-[#1d1d1e] break-words\">\n          {children}\n        </code>\n      );\n    },\n    pre: ({ children }) => (\n      <pre className=\"mb-4 overflow-x-auto break-words\">{children}</pre>\n    ),\n    a: ({ children, href }) => (\n      <a\n        href={href}\n        className=\"text-[#61936f] hover:text-[#1d1d1e] underline transition-colors break-words\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {children}\n      </a>\n    ),\n    blockquote: ({ children }) => (\n      <blockquote className=\"border-l-4 border-[#61936f] pl-4 italic text-[#62626a] mb-4 bg-[#f3f3f3] rounded break-words\">\n        {children}\n      </blockquote>\n    ),\n    hr: () => <hr className=\"my-8 border-t border-[#e5e5e5]\" />,\n  };\n\n  // If any sections are found, render StartTrip, days, EndTrip in order\n  if (startTrip || days.length > 0 || endTrip) {\n    let timelineIdx = 0;\n    return (\n      <div className=\"mt-8 flex flex-col items-center relative w-full max-w-full overflow-hidden px-0\" style={{ minWidth: 0 }}>\n        {/* StartTrip section */}\n        {startTrip && (\n          <div className=\"w-full flex items-stretch relative mb-8\" style={{ minWidth: 0 }}>\n            <div className=\"flex flex-col items-center mr-2 sm:mr-4 flex-shrink-0\">\n              <div className=\"w-4 h-4 sm:w-5 sm:h-5 rounded-full bg-[#61936f] border-4 border-[#fcfcfc] shadow-lg z-10 mt-2\" />\n            </div>\n            <Card className=\"flex-1 bg-[#fcfcfc] border-[#e5e5e5] shadow-lg min-w-0 overflow-hidden\" style={{ minWidth: 0 }}>\n              <button\n                className=\"w-full flex items-center justify-between px-3 sm:px-4 md:px-6 py-3 sm:py-4 focus:outline-none focus:ring-2 focus:ring-[#61936f] group\"\n                onClick={() => toggleSection('startTrip')}\n                aria-expanded={isOpen('startTrip')}\n                aria-controls=\"startTrip-content\"\n                type=\"button\"\n              >\n                <span className=\"text-base sm:text-lg md:text-xl font-bold text-[#1d1d1e] truncate pr-2\">\n                  {(tripType === 'ZapTrip' || tripType === 'ZapRoad')\n                    ? t('aiContent.zapTripStart', 'The beginning Of your Adventure')\n                    : t('aiContent.zapTripStart', 'The beginning Of your Adventure')}\n                </span>\n                <ChevronDown\n                  className={`ml-2 h-4 w-4 sm:h-5 sm:w-5 text-[#61936f] transition-transform duration-200 flex-shrink-0 ${isOpen('startTrip') ? 'rotate-180' : ''}`}\n                  aria-hidden=\"true\"\n                />\n              </button>\n              <div\n                id=\"startTrip-content\"\n                className={`overflow-hidden transition-all duration-300 ${isOpen('startTrip') ? 'max-h-[5000px] opacity-100' : 'max-h-0 opacity-0'}`}\n                aria-hidden={!isOpen('startTrip')}\n              >\n                <CardContent className=\"px-3 sm:px-4 md:px-6\">\n                  <article className=\"prose prose-sm max-w-none text-[#030303] overflow-hidden\">\n                    <ReactMarkdown remarkPlugins={[remarkGfm]} components={components}>\n                      {startTrip}\n                    </ReactMarkdown>\n                  </article>\n                </CardContent>\n              </div>\n            </Card>\n          </div>\n        )}\n        {/* Days timeline */}\n        {days.map((day, idx) => (\n          <div key={idx} className=\"w-full flex items-stretch relative mb-8 last:mb-0\" style={{ minWidth: 0 }}>\n            <div className=\"flex flex-col items-center mr-2 sm:mr-4 flex-shrink-0\">\n              <div className=\"w-4 h-4 sm:w-5 sm:h-5 rounded-full bg-[#61936f] border-4 border-[#fcfcfc] shadow-lg z-10 mt-2\" />\n              {idx < days.length - 1 && (\n                <div className=\"w-1 bg-[#61936f] flex-1 min-h-[40px]\" style={{ minHeight: 60 }} />\n              )}\n            </div>\n            <Card className=\"flex-1 bg-[#fcfcfc] border-[#e5e5e5] shadow-lg min-w-0 overflow-hidden\" style={{ minWidth: 0 }}>\n              <button\n                className=\"w-full flex items-center justify-between px-3 sm:px-4 md:px-6 py-3 sm:py-4 focus:outline-none focus:ring-2 focus:ring-[#61936f] group\"\n                onClick={() => toggleSection(`day-${idx}`)}\n                aria-expanded={isOpen(`day-${idx}`)}\n                aria-controls={`day-${idx}-content`}\n                type=\"button\"\n              >\n                <span className=\"text-base sm:text-lg md:text-xl font-bold text-[#1d1d1e] truncate pr-2\">\n                  {tripType === 'ZapOut'\n                    ? t('aiContent.zapTripAdventure', { day: idx + 1, defaultValue: `Adventure ${idx + 1}` })\n                    : t('aiContent.zapTripDay', { day: idx + 1, defaultValue: `Day ${idx + 1}` })}\n                </span>\n                <ChevronDown\n                  className={`ml-2 h-4 w-4 sm:h-5 sm:w-5 text-[#61936f] transition-transform duration-200 flex-shrink-0 ${isOpen(`day-${idx}`) ? 'rotate-180' : ''}`}\n                  aria-hidden=\"true\"\n                />\n              </button>\n              <div\n                id={`day-${idx}-content`}\n                className={`overflow-hidden transition-all duration-300 ${isOpen(`day-${idx}`) ? 'max-h-[5000px] opacity-100' : 'max-h-0 opacity-0'}`}\n                aria-hidden={!isOpen(`day-${idx}`)}\n              >\n                <CardContent className=\"px-3 sm:px-4 md:px-6\">\n                  <article className=\"prose prose-sm max-w-none text-[#030303] overflow-hidden\">\n                    <ReactMarkdown remarkPlugins={[remarkGfm]} components={components}>\n                      {day.body}\n                    </ReactMarkdown>\n                  </article>\n                </CardContent>\n              </div>\n            </Card>\n          </div>\n        ))}\n        {/* EndTrip section */}\n        {endTrip && (\n          <div className=\"w-full flex items-stretch relative mb-8\" style={{ minWidth: 0 }}>\n            <div className=\"flex flex-col items-center mr-2 sm:mr-4 flex-shrink-0\">\n              <div className=\"w-4 h-4 sm:w-5 sm:h-5 rounded-full bg-[#61936f] border-4 border-[#fcfcfc] shadow-lg z-10 mt-2\" />\n            </div>\n            <Card className=\"flex-1 bg-[#fcfcfc] border-[#e5e5e5] shadow-lg min-w-0 overflow-hidden\" style={{ minWidth: 0 }}>\n              <button\n                className=\"w-full flex items-center justify-between px-3 sm:px-4 md:px-6 py-3 sm:py-4 focus:outline-none focus:ring-2 focus:ring-[#61936f] group\"\n                onClick={() => toggleSection('endTrip')}\n                aria-expanded={isOpen('endTrip')}\n                aria-controls=\"endTrip-content\"\n                type=\"button\"\n              >\n                <span className=\"text-base sm:text-lg md:text-xl font-bold text-[#1d1d1e] truncate pr-2\">\n                  {(tripType === 'ZapTrip' || tripType === 'ZapRoad')\n                    ? t('aiContent.zapTripEnd', 'Our Tips and more !')\n                    : t('aiContent.zapTripEnd', 'Our Tips and more !')}\n                </span>\n                <ChevronDown\n                  className={`ml-2 h-4 w-4 sm:h-5 sm:w-5 text-[#61936f] transition-transform duration-200 flex-shrink-0 ${isOpen('endTrip') ? 'rotate-180' : ''}`}\n                  aria-hidden=\"true\"\n                />\n              </button>\n              <div\n                id=\"endTrip-content\"\n                className={`overflow-hidden transition-all duration-300 ${isOpen('endTrip') ? 'max-h-[5000px] opacity-100' : 'max-h-0 opacity-0'}`}\n                aria-hidden={!isOpen('endTrip')}\n              >\n                <CardContent className=\"px-3 sm:px-4 md:px-6\">\n                  <article className=\"prose prose-sm max-w-none text-[#030303] overflow-hidden\">\n                    <ReactMarkdown remarkPlugins={[remarkGfm]} components={components}>\n                      {endTrip}\n                    </ReactMarkdown>\n                  </article>\n                </CardContent>\n              </div>\n            </Card>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  // Fallback: render as a single card\n  return (\n    <div className=\"mt-8\">\n      <Card className=\"bg-[#fcfcfc] border-[#e5e5e5] shadow-lg\">\n        <CardContent>\n          <article className=\"prose prose-sm max-w-none text-[#030303]\">\n            <ReactMarkdown remarkPlugins={[remarkGfm]} components={components}>\n              {content}\n            </ReactMarkdown>\n          </article>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useTranslation } from 'react-i18next';\nimport { StickyNote } from \"lucide-react\";\n\ninterface TripNotesProps {\n  notes: string | null;\n  isEditing: boolean;\n  onChange: (notes: string) => void;\n  label?: string;\n}\n\nexport function TripNotes({ notes, isEditing, onChange, label }: TripNotesProps) {\n  const { t } = useTranslation('trip');\n  const notesLabel = label || t('details.notes');\n\n  return (\n    <Card className=\"mt-8\">\n      <CardContent className=\"pt-6\">\n        <div className=\"flex items-start gap-3\">\n          <StickyNote className=\"w-5 h-5 text-muted-foreground mt-0.5\" />\n          <div className=\"flex-1\">\n            <p className=\"text-sm font-medium text-muted-foreground mb-2\">{notesLabel}</p>\n            {isEditing ? (\n              <Textarea\n                value={notes || ''}\n                onChange={(e) => onChange(e.target.value)}\n                placeholder={t('details.notesPlaceholder')}\n                className=\"min-h-[150px]\"\n              />\n            ) : (\n              <div className=\"prose prose-sm max-w-none\">\n                {notes ? (\n                  <p className=\"whitespace-pre-wrap\">{notes}</p>\n                ) : (\n                  <p className=\"text-muted-foreground italic\">{t('details.noNotes')}</p>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import { useOptimizedQueries } from '@/hooks/useOptimizedQueries';\nimport { ZapOutDetailsCard } from '../trips/trip-types/zap-out/ZapOutDetailsCard';\nimport { Card, CardContent } from '../ui/card';\nimport { useTranslation } from 'react-i18next';\nimport { Skeleton } from '../ui/skeleton';\nimport { TripNotes } from './TripNotes';\nimport { useNavigate } from 'react-router-dom';\n\ninterface TripZapOutDetailsProps {\n  tripId: string | undefined;\n  isDirectZapOut?: boolean;\n  notes?: string | null;\n  isEditingNotes?: boolean;\n  onNotesChange?: (notes: string) => void;\n}\n\nexport function TripZapOutDetails({ \n  tripId, \n  isDirectZapOut = false,\n  notes,\n  isEditingNotes = false,\n  onNotesChange\n}: TripZapOutDetailsProps) {\n  const { t } = useTranslation('trip');\n  const navigate = useNavigate();\n  const { useZapOutData } = useOptimizedQueries();\n  \n  const { \n    data: zapOutData,\n    isLoading,\n    error \n  } = useZapOutData(tripId, {\n    enabled: !!tripId,\n    meta: {\n      onError: (error: any) => {\n        console.error('Error fetching ZapOut data:', error);\n        if (error.message === 'Not authenticated') {\n          navigate('/login');\n        } else if (error.message === 'Unauthorized') {\n          navigate('/dashboard');\n        }\n      }\n    }\n  });\n\n  if (isLoading) {\n    return (\n      <Card>\n        <CardContent className=\"p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">{t('types.zapOut.details.title')}</h3>\n          <div className=\"space-y-4\">\n            <Skeleton className=\"h-4 w-full\" />\n            <Skeleton className=\"h-4 w-3/4\" />\n            <Skeleton className=\"h-4 w-5/6\" />\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (error || !zapOutData) {\n    return (\n      <Card>\n        <CardContent className=\"p-6\">\n          <h3 className=\"text-lg font-semibold mb-2\">{t('types.zapOut.details.title')}</h3>\n          <p className=\"text-muted-foreground\">{t('types.zapOut.details.noDataAvailable')}</p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <ZapOutDetailsCard \n        zapOutData={zapOutData} \n      />\n      {onNotesChange && (\n        <TripNotes \n          notes={notes} \n          isEditing={isEditingNotes} \n          onChange={onNotesChange} \n          label={t('types.zapOut.details.notes')}\n        />\n      )}\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { supabase } from \"@/integrations/supabase/client\";\nimport { useTranslation } from 'react-i18next';\nimport { format, isValid, parseISO } from 'date-fns';\nimport { enUS, fr, es } from 'date-fns/locale';\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Car, Users, MapPin, Calendar } from \"lucide-react\";\n\ninterface TripZapRoadDetailsProps {\n  tripId: string;\n  isDirectZapRoad?: boolean;\n  notes?: string | null;\n  isEditingNotes?: boolean;\n  onNotesChange?: (value: string) => void;\n}\n\nexport function TripZapRoadDetails({ \n  tripId, \n  isDirectZapRoad = false,\n  notes,\n  isEditingNotes = false,\n  onNotesChange\n}: TripZapRoadDetailsProps) {\n  const [zapRoadData, setZapRoadData] = useState<any>(null);\n  const { t, i18n } = useTranslation('trip');\n\n  useEffect(() => {\n    const fetchZapRoadData = async () => {\n      try {\n        const { data, error } = await supabase\n          .from('zaproad_data')\n          .select('*')\n          .eq('trip_id', tripId)\n          .single();\n\n        if (error) throw error;\n        setZapRoadData(data);\n      } catch (error) {\n        console.error('Error fetching ZapRoad data:', error);\n      }\n    };\n\n    fetchZapRoadData();\n  }, [tripId]);\n\n  if (!zapRoadData) {\n    return <div>Loading...</div>;\n  }\n\n  const formatDate = (dateString: string) => {\n    try {\n      const date = parseISO(dateString);\n      let locale = enUS;\n      if (i18n.language === 'fr') locale = fr;\n      else if (i18n.language === 'es') locale = es;\n      if (isValid(date)) {\n        return format(date, 'PPP', { locale });\n      }\n      const fallbackDate = new Date(dateString);\n      return isValid(fallbackDate) ? format(fallbackDate, 'PPP', { locale }) : '';\n    } catch (error) {\n      console.error(\"Error formatting date:\", error);\n      return '';\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle>{t('types.zapRoad.roadTripDetails')}</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"flex items-center space-x-2\">\n            <MapPin className=\"w-5 h-5 text-gray-500\" />\n            <div>\n              <p className=\"font-medium\">{t('types.zapRoad.route')}</p>\n              <p className=\"text-sm text-gray-600\">\n                From {zapRoadData.starting_city} to {zapRoadData.end_city}\n                {zapRoadData.stopover_cities && JSON.parse(zapRoadData.stopover_cities).length > 0 && (\n                  <span> via {JSON.parse(zapRoadData.stopover_cities).map((city: any) => city.name).join(', ')}</span>\n                )}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-2\">\n            <Users className=\"w-5 h-5 text-gray-500\" />\n            <div>\n              <p className=\"font-medium\">{t('types.zapRoad.numberOfPeople')}</p>\n              <p className=\"text-sm text-gray-600\">{zapRoadData.number_of_people}</p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-2\">\n            <Car className=\"w-5 h-5 text-gray-500\" />\n            <div>\n              <p className=\"font-medium\">{t('types.zapRoad.vehicleType')}</p>\n              <p className=\"text-sm text-gray-600\">{zapRoadData.has_electric_car ? t('types.zapRoad.electricCar') : t('types.zapRoad.regularCar')}</p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-2\">\n            <Calendar className=\"w-5 h-5 text-gray-500\" />\n            <div>\n              <p className=\"font-medium\">{t('types.zapRoad.dates')}</p>\n              <p className=\"text-sm text-gray-600\">\n                {formatDate(zapRoadData.start_date)} - {formatDate(zapRoadData.end_date)}\n              </p>\n            </div>\n          </div>\n\n          {zapRoadData.special_requirements && (\n            <div>\n              <p className=\"font-medium\">{t('types.zapRoad.specialRequirements')}</p>\n              <p className=\"text-sm text-gray-600\">{zapRoadData.special_requirements}</p>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n} ","import { useEffect, useState } from 'react';\nimport { supabase } from \"@/integrations/supabase/client\";\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { cn } from \"@/lib/utils\";\n\ninterface EventSuggestion {\n  id: string;\n  location: string;\n  type: string;\n  title: string;\n  description: string;\n  image_url?: string;\n  priority: number;\n  created_at: string;\n  url_link?: string;\n  url_placeholder_image?: string;\n  content?: string;\n  business_name?: string;\n  expiration_date?: string;\n}\n\ntype EventType = 'all' | 'hotel' | 'restaurant' | 'bar' | 'event' | 'activity' | 'other';\n\ninterface EventSuggestionProps {\n  location: string;\n}\n\nexport function EventSuggestions({ location }: EventSuggestionProps) {\n  const { t } = useTranslation('recommendations');\n  const [events, setEvents] = useState<EventSuggestion[]>([]);\n  const [filteredEvents, setFilteredEvents] = useState<EventSuggestion[]>([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedType, setSelectedType] = useState<EventType>('all');\n  const [availableTypes, setAvailableTypes] = useState<EventType[]>(['all']);\n  const [selectedEvent, setSelectedEvent] = useState<EventSuggestion | null>(null);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const [screenSize, setScreenSize] = useState(() => {\n    const width = window.innerWidth;\n    if (width >= 1024) return 'lg';\n    if (width >= 768) return 'md';\n    return 'sm';\n  });\n\n  const eventsPerView = screenSize === 'lg' ? 3 : screenSize === 'md' ? 2 : 1;\n\n  useEffect(() => {\n    const handleResize = () => {\n      const width = window.innerWidth;\n      const newSize = width >= 1024 ? 'lg' : width >= 768 ? 'md' : 'sm';\n      if (newSize !== screenSize) {\n        setScreenSize(newSize);\n        setCurrentIndex(0);\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [screenSize]);\n\n  useEffect(() => {\n    fetchEventSuggestions();\n  }, [location]);\n\n  useEffect(() => {\n    filterEvents();\n  }, [selectedType, events]);\n\n  useEffect(() => {\n    // Update available types whenever events change\n    const types = new Set(['all']);\n    events.forEach(event => {\n      if (event.type) {\n        types.add(event.type.toLowerCase() as EventType);\n      }\n    });\n    setAvailableTypes(Array.from(types) as EventType[]);\n  }, [events]);\n\n  const filterEvents = () => {\n    if (selectedType === 'all') {\n      setFilteredEvents(events);\n    } else {\n      setFilteredEvents(events.filter(event => event.type.toLowerCase() === selectedType.toLowerCase()));\n    }\n    setCurrentIndex(0);\n  };\n\n  const fetchEventSuggestions = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const { data, error } = await supabase\n        .from('event_suggestion')\n        .select('*')\n        .eq('location', location)\n        .order('priority', { ascending: true });\n\n      if (error) throw error;\n\n      // Randomize events with the same priority\n      const sortedEvents = data.reduce((acc, event) => {\n        const priorityGroup = acc.get(event.priority) || [];\n        priorityGroup.push(event);\n        acc.set(event.priority, priorityGroup);\n        return acc;\n      }, new Map<number, EventSuggestion[]>());\n\n      const finalEvents: EventSuggestion[] = [];\n      sortedEvents.forEach((group) => {\n        // Shuffle each priority group\n        for (let i = group.length - 1; i > 0; i--) {\n          const j = Math.floor(Math.random() * (i + 1));\n          [group[i], group[j]] = [group[j], group[i]];\n        }\n        finalEvents.push(...group);\n      });\n\n      setEvents(finalEvents);\n      setFilteredEvents(finalEvents);\n      setCurrentIndex(0);\n    } catch (err) {\n      console.error('Error fetching event suggestions:', err);\n      setError(t('errors.fetchFailed'));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const nextSlide = () => {\n    if (isTransitioning || currentIndex >= Math.ceil(filteredEvents.length / eventsPerView) - 1) return;\n    \n    setIsTransitioning(true);\n    setCurrentIndex(prev => prev + 1);\n    setTimeout(() => setIsTransitioning(false), 300);\n  };\n\n  const prevSlide = () => {\n    if (isTransitioning || currentIndex === 0) return;\n    \n    setIsTransitioning(true);\n    setCurrentIndex(prev => prev - 1);\n    setTimeout(() => setIsTransitioning(false), 300);\n  };\n\n  const getTypeColor = (type: string) => {\n    switch (type.toLowerCase()) {\n      case 'hotel':\n        return 'bg-blue-100 text-blue-800';\n      case 'restaurant':\n        return 'bg-orange-100 text-orange-800';\n      case 'bar':\n        return 'bg-purple-100 text-purple-800';\n      case 'event':\n        return 'bg-green-100 text-green-800';\n      case 'activity':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const capitalizeFirstLetter = (string: string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n  };\n\n  const typeOptions = [...availableTypes];\n\n  if (loading) {\n    return (\n      <Card>\n        <CardContent className=\"p-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {[1, 2, 3].map((i) => (\n              <div \n                key={i} \n                className={`animate-pulse ${\n                  (i === 2 && screenSize === 'sm') || (i === 3 && screenSize !== 'lg') \n                    ? 'hidden' \n                    : i === 2 \n                    ? 'hidden md:block' \n                    : ''\n                }`}\n              >\n                <div className=\"h-48 bg-gray-200 rounded-lg mb-4\"></div>\n                <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-2\"></div>\n            \n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (error) {\n    return (\n      <Card>\n        <CardContent className=\"p-6\">\n          <div className=\"text-red-500\">{error}</div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (events.length === 0) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"bg-white rounded-xl shadow-lg overflow-hidden\">\n        <div className=\"p-4\">\n          <h2 className=\"text-xl font-bold text-[#030303]\">\n            {t('zaparound.recommendations')}\n          </h2>\n        </div>\n        <div className=\"p-4\">\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                {/* Removed the select dropdown */}\n              </div>\n\n              {availableTypes.length > 0 && (\n                <div className=\"flex gap-2 mb-4\">\n                  {typeOptions.map((type) => (\n                    <button\n                      key={type}\n                      onClick={() => setSelectedType(type as EventType)}\n                      className={`px-3 py-1 rounded-full text-xs font-medium transition-colors ${\n                        selectedType === type\n                          ? 'bg-[#1d1d1e] text-white'\n                          : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n                      }`}\n                    >\n                      {type === 'all' ? t('types.all') : t(`types.${type}`)}\n                    </button>\n                  ))}\n                </div>\n              )}\n\n              <div className=\"relative\">\n                <div className={cn(\n                  \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 transition-transform duration-300 ease-in-out\"\n                )}\n                style={{\n                  transform: `translateX(-${currentIndex * (100 / eventsPerView)}%)`\n                }}\n                >\n                  {filteredEvents\n                    .slice(currentIndex * eventsPerView, (currentIndex + 1) * eventsPerView)\n                    .map((event) => (\n                      <div\n                        key={event.id}\n                        className=\"relative group cursor-pointer w-full\"\n                        onClick={() => setSelectedEvent(event)}\n                      >\n                        <div className=\"aspect-[16/10] overflow-hidden rounded-lg\">\n                          <img\n                            src={event.url_placeholder_image || event.image_url}\n                            alt={event.title}\n                            className=\"w-full h-full object-cover transition-transform duration-300 group-hover:scale-110\"\n                            onError={(e) => {\n                              const img = e.target as HTMLImageElement;\n                              img.src = '/placeholder-image.jpg';\n                            }}\n                          />\n                        </div>\n                        <div className=\"mt-2\">\n                          <h3 className=\"font-semibold text-lg\">{event.title}</h3>\n                          <p className=\"text-sm text-gray-600\">{event.business_name}</p>\n                          <div className=\"flex items-center gap-2 mt-1\">\n                            <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${getTypeColor(event.type)}`}>\n                              {capitalizeFirstLetter(event.type)}\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                </div>\n\n                {filteredEvents.length > eventsPerView && (\n                  <>\n                    <button\n                      onClick={prevSlide}\n                      disabled={isTransitioning || currentIndex === 0}\n                      className=\"absolute left-0 top-1/2 -translate-y-1/2 -translate-x-4 bg-white/80 backdrop-blur-sm p-2 rounded-full shadow-lg hover:bg-white disabled:opacity-50 disabled:cursor-not-allowed z-10\"\n                    >\n                      <ChevronLeft className=\"h-6 w-6\" />\n                    </button>\n                    <button\n                      onClick={nextSlide}\n                      disabled={isTransitioning || currentIndex >= Math.ceil(filteredEvents.length / eventsPerView) - 1}\n                      className=\"absolute right-0 top-1/2 -translate-y-1/2 translate-x-4 bg-white/80 backdrop-blur-sm p-2 rounded-full shadow-lg hover:bg-white disabled:opacity-50 disabled:cursor-not-allowed z-10\"\n                    >\n                      <ChevronRight className=\"h-6 w-6\" />\n                    </button>\n                  </>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n\n      <Dialog open={!!selectedEvent} onOpenChange={(open) => !open && setSelectedEvent(null)}>\n        <DialogContent className=\"sm:max-w-2xl\">\n          <DialogHeader>\n            <DialogTitle>{selectedEvent?.title}</DialogTitle>\n          </DialogHeader>\n          <div className=\"mt-4\">\n            <div className=\"aspect-[16/10] overflow-hidden rounded-lg mb-4\">\n              <img\n                src={selectedEvent?.url_placeholder_image || selectedEvent?.image_url}\n                alt={selectedEvent?.title}\n                className=\"w-full h-full object-cover\"\n                onError={(e) => {\n                  const img = e.target as HTMLImageElement;\n                  img.src = '/placeholder-image.jpg';\n                }}\n              />\n            </div>\n            <p className=\"text-gray-600 mb-2\">\n              {selectedEvent?.business_name} • {selectedEvent?.location}\n            </p>\n            <p className=\"text-gray-800\">{selectedEvent?.content || selectedEvent?.description}</p>\n            {selectedEvent?.url_link && (\n              <a\n                href={selectedEvent.url_link}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"inline-block mt-4 text-blue-600 hover:text-blue-800\"\n              >\n                {t('learnMore')} →\n              </a>\n            )}\n          </div>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n} ","import { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { supabase } from \"@/integrations/supabase/client\";\nimport { EventCarousel } from '@/components/community/EventCarousel';\n\ninterface TicketmasterEventsProps {\n  city: string;\n  coordinates?: [number, number];\n}\n\nexport function TicketmasterEvents({ city, coordinates }: TicketmasterEventsProps) {\n  const { t } = useTranslation('trip');\n  const [events, setEvents] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    fetchTicketmasterEvents();\n  }, [city, coordinates]);\n\n  const fetchTicketmasterEvents = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const { data, error } = await supabase.functions.invoke('events-api-search', {\n        body: { \n          city,\n          ...(coordinates && {\n            latitude: coordinates[1],\n            longitude: coordinates[0]\n          })\n        }\n      });\n\n      if (error) throw error;\n\n      setEvents(data.events || []);\n    } catch (err) {\n      console.error('Error fetching Ticketmaster events:', err);\n      if (err instanceof Error && err.message.includes('429')) {\n        return null;\n      }\n      setError(t('errors.fetchFailed'));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <Card>\n        <CardContent className=\"p-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {[1, 2, 3].map((i) => (\n              <div key={i} className=\"animate-pulse\">\n                <div className=\"h-48 bg-gray-200 rounded-lg mb-4\"></div>\n                <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-2\"></div>\n                <div className=\"h-4 bg-gray-200 rounded w-1/2\"></div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (error) {\n    return (\n      <Card>\n        <CardContent className=\"p-6\">\n          <div className=\"text-red-500\">{error}</div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (events.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"bg-white rounded-xl shadow-lg overflow-hidden\">\n      <div className=\"p-4\">\n        <h2 className=\"text-xl font-bold text-[#030303]\">\n          {t('events.nearbyEvents')}\n        </h2>\n      </div>\n      <div className=\"p-4\">\n        <EventCarousel\n          events={events}\n          isLoading={loading}\n          loadingText={t('events.loading')}\n          noEventsText={t('events.noEvents')}\n        />\n      </div>\n    </div>\n  );\n} ","import React, { useState } from 'react';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { useTranslation } from 'react-i18next';\nimport { Check, Copy } from 'lucide-react';\n\ninterface TripShareDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  shareUrl: string;\n}\n\nexport const TripShareDialog: React.FC<TripShareDialogProps> = ({ open, onOpenChange, shareUrl }) => {\n  const { t } = useTranslation('trip');\n  const [copied, setCopied] = useState(false);\n\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(shareUrl);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    } catch {\n      setCopied(false);\n    }\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"max-w-md bg-[#fcfcfc] text-[#030303]\">\n        <DialogHeader>\n          <DialogTitle className=\"text-[#1d1d1e]\">{t('share.modalTitle')}</DialogTitle>\n          <DialogDescription className=\"mb-4 text-[#62626a]\">\n            {t('share.modalDescription')}\n          </DialogDescription>\n        </DialogHeader>\n        {/* Illustration placeholder */}\n        <div className=\"flex justify-center mb-4\">\n          <img\n            src=\"https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExYTB2emJubXp6NXliZHByeTJzcDZ3ODRremM4eWVmdWhycGliN2gwcSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/as1VjJtNpvD7kxbuBM/giphy.gif\"\n            alt={t('share.imageAlt')}\n            className=\"w-32 h-32 object-contain\"\n            style={{ background: '#61936f', borderRadius: '1rem' }}\n          />\n        </div>\n        <div className=\"mb-2\">\n          <Button\n            type=\"button\"\n            size=\"lg\"\n            variant=\"outline\"\n            className=\"w-full border-[#61936f] text-[#61936f] hover:bg-[#e6f4ec] flex items-center justify-center\"\n            onClick={handleCopy}\n            aria-label={t('share.copyButton')}\n          >\n            {copied ? <Check className=\"w-5 h-5 mr-2\" /> : <Copy className=\"w-5 h-5 mr-2\" />}\n            {copied ? t('share.copied') : t('share.copyButton')}\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}; "],"names":["TripBasicInfo","startDate","endDate","location","category","activityTypes","budget","isEditing","isZapOutTrip","isZapRoadTrip","hideBudget","onCategoryChange","onBudgetChange","t","useTranslation","formatDate","dateString","i18n","date","parseISO","locale","enUS","language","fr","es","isValid","format","fallbackDate","Date","error","formattedStartDate","formattedEndDate","dateDisplay","jsx","Card","children","CardContent","className","jsxs","CalendarIcon","MapPinIcon","TagIcon","Select","value","onValueChange","SelectTrigger","SelectValue","placeholder","SelectContent","SelectItem","types","length","map","type","join","DollarSign","Input","onChange","e","target","Number","TRANSPORT_MODES","TripTransportation","details","Car","mode","Textarea","key","toLowerCase","includes","getTranslatedMode","ACCOMMODATION_TYPES","TripAccommodation","Building","getTranslatedType","TripAIContent","content","isLoading","tripType","startTrip","days","endTrip","startTripMatch","match","endTripMatch","dayMatches","matchAll","trim","title","body","parseCustomTripContent","sectionKeys","push","forEach","_","idx","openSections","setOpenSections","useState","useEffect","initial","Skeleton","toggleSection","prev","isOpen","components","p","strong","em","h1","h2","h3","ul","ol","li","code","pre","a","href","rel","blockquote","hr","style","minWidth","onClick","ChevronDown","id","ReactMarkdown","remarkPlugins","remarkGfm","day","minHeight","defaultValue","TripNotes","notes","label","notesLabel","StickyNote","TripZapOutDetails","tripId","isDirectZapOut","isEditingNotes","onNotesChange","navigate","useNavigate","useZapOutData","useOptimizedQueries","data","zapOutData","enabled","meta","onError","message","ZapOutDetailsCard","TripZapRoadDetails","isDirectZapRoad","zapRoadData","setZapRoadData","async","supabase","from","select","eq","single","fetchZapRoadData","CardHeader","CardTitle","MapPin","starting_city","end_city","stopover_cities","JSON","parse","city","name","Users","number_of_people","has_electric_car","Calendar","start_date","end_date","special_requirements","EventSuggestions","events","setEvents","filteredEvents","setFilteredEvents","currentIndex","setCurrentIndex","loading","setLoading","setError","selectedType","setSelectedType","availableTypes","setAvailableTypes","selectedEvent","setSelectedEvent","isTransitioning","setIsTransitioning","screenSize","setScreenSize","width","window","innerWidth","eventsPerView","handleResize","newSize","addEventListener","removeEventListener","fetchEventSuggestions","filterEvents","Set","event","add","Array","filter","order","ascending","sortedEvents","reduce","acc","priorityGroup","get","priority","set","Map","finalEvents","group","i","j","Math","floor","random","err","getTypeColor","typeOptions","Fragment","cn","transform","slice","src","url_placeholder_image","image_url","alt","business_name","string","charAt","toUpperCase","setTimeout","disabled","ChevronLeft","ceil","ChevronRight","Dialog","open","onOpenChange","DialogContent","DialogHeader","DialogTitle","description","url_link","TicketmasterEvents","coordinates","fetchTicketmasterEvents","functions","invoke","latitude","longitude","Error","EventCarousel","loadingText","noEventsText","TripShareDialog","shareUrl","copied","setCopied","DialogDescription","background","borderRadius","Button","size","variant","navigator","clipboard","writeText","Check","Copy"],"mappings":"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"}