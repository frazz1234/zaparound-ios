{"version":3,"file":"components-theme-provider.tsx.Cd7zUHTE.js","sources":["../../../../src/components/theme-provider.tsx"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\"\n\ntype Theme = \"dark\" | \"light\" | \"system\"\n\ntype ThemeProviderProps = {\n  children: React.ReactNode\n  defaultTheme?: Theme\n  storageKey?: string\n}\n\ntype ThemeProviderState = {\n  theme: Theme\n  setTheme: (theme: Theme) => void\n}\n\nconst initialState: ThemeProviderState = {\n  theme: \"light\",\n  setTheme: () => null,\n}\n\nconst ThemeProviderContext = createContext<ThemeProviderState>(initialState)\n\nexport function ThemeProvider({\n  children,\n  defaultTheme = \"light\",\n  storageKey = \"zaparounds-theme\",\n  ...props\n}: ThemeProviderProps) {\n  const [theme, setTheme] = useState<Theme>(\n    () => (localStorage.getItem(storageKey) as Theme) || defaultTheme\n  )\n\n  useEffect(() => {\n    const root = window.document.documentElement\n\n    root.classList.remove(\"light\", \"dark\")\n\n    if (theme === \"system\") {\n      const systemTheme = window.matchMedia(\"(prefers-color-scheme: dark)\")\n        .matches\n        ? \"dark\"\n        : \"light\"\n\n      root.classList.add(systemTheme)\n      return\n    }\n\n    root.classList.add(theme)\n  }, [theme])\n\n  const value = {\n    theme,\n    setTheme: (newTheme: Theme) => {\n      localStorage.setItem(storageKey, newTheme)\n      setTheme(newTheme)\n    },\n  }\n\n  return (\n    <ThemeProviderContext.Provider {...props} value={value}>\n      {children}\n    </ThemeProviderContext.Provider>\n  )\n}\n\nexport const useTheme = () => {\n  const context = useContext(ThemeProviderContext)\n\n  if (context === undefined)\n    throw new Error(\"useTheme must be used within a ThemeProvider\")\n\n  return context\n} "],"names":["ThemeProviderContext","createContext","theme","setTheme","ThemeProvider","children","defaultTheme","storageKey","props","useState","localStorage","getItem","useEffect","root","window","document","documentElement","classList","remove","add","systemTheme","matchMedia","matches","value","newTheme","setItem","Provider","useTheme","context","useContext","Error"],"mappings":"mEAeA,MAKMA,EAAuBC,gBALY,CACvCC,MAAO,QACPC,SAAU,IAAM,OAKX,SAASC,GAAcC,SAC5BA,EAAAC,aACAA,EAAe,QAAAC,WACfA,EAAa,sBACVC,IAEG,MAACN,EAAOC,GAAYM,EAAAA,UACxB,IAAOC,aAAaC,QAAQJ,IAAyBD,IAGvDM,EAAAA,WAAU,KACF,MAAAC,EAAOC,OAAOC,SAASC,gBAI7B,GAFKH,EAAAI,UAAUC,OAAO,QAAS,QAEjB,WAAVhB,EAUCW,EAAAI,UAAUE,IAAIjB,OAVnB,CACE,MAAMkB,EAAcN,OAAOO,WAAW,gCACnCC,QACC,OACA,QAECT,EAAAI,UAAUE,IAAIC,EACnB,CAGsB,GACvB,CAAClB,IAEJ,MAAMqB,EAAQ,CACZrB,QACAC,SAAWqB,IACId,aAAAe,QAAQlB,EAAYiB,GACjCrB,EAASqB,EAAQ,GAIrB,aACGxB,EAAqB0B,SAArB,IAAkClB,EAAOe,QACvClB,YAGP,CAEO,MAAMsB,EAAW,KAChB,MAAAC,EAAUC,aAAW7B,GAE3B,QAAgB,IAAZ4B,EACI,MAAA,IAAIE,MAAM,gDAEX,OAAAF,CAAA"}