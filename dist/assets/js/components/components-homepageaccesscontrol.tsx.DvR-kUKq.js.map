{"version":3,"file":"components-homepageaccesscontrol.tsx.DvR-kUKq.js","sources":["../../../../src/components/HomePageAccessControl.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { supabase } from '@/integrations/supabase/client';\nimport { hasHomepageCreateTripCache } from '@/utils/cache';\n\ninterface HomePageAccessControlProps {\n  children: React.ReactNode;\n  session: any;\n}\n\nexport function HomePageAccessControl({ children, session }: HomePageAccessControlProps) {\n  const navigate = useNavigate();\n  const { lang } = useParams();\n  const [isChecking, setIsChecking] = useState(true);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [hasActiveCache, setHasActiveCache] = useState(false);\n\n  useEffect(() => {\n    const checkAccess = async () => {\n      if (!session) {\n        // No session, allow access to homepage\n        setIsChecking(false);\n        return;\n      }\n\n      try {\n        // Get current user\n        const { data: { user } } = await supabase.auth.getUser();\n        \n        // Check if user is admin\n        const { data: isAdminData, error: isAdminError } = await supabase.rpc('is_admin');\n        \n        if (isAdminError) {\n          console.error(\"Error checking admin role:\", isAdminError);\n          setIsAdmin(false);\n        } else {\n          setIsAdmin(!!isAdminData);\n        }\n\n        // Check if user has active homepage create trip cache\n        let userHasActiveCache = false;\n        if (user) {\n          userHasActiveCache = hasHomepageCreateTripCache(user.id);\n          setHasActiveCache(userHasActiveCache);\n        }\n\n        // Allow access if user is admin OR has active homepage create trip cache\n        if (isAdminData || userHasActiveCache) {\n          // User is admin or has active cache, allow access to homepage\n          setIsChecking(false);\n          return;\n        }\n\n        // If user is not admin and has no active cache, redirect to dashboard\n        const currentLang = lang || 'en';\n        navigate(`/${currentLang}/dashboard`, { replace: true });\n        return;\n      } catch (error) {\n        console.error('Error checking user access:', error);\n        // On error, redirect to dashboard for safety\n        const currentLang = lang || 'en';\n        navigate(`/${currentLang}/dashboard`, { replace: true });\n      }\n    };\n\n    checkAccess();\n  }, [session, navigate, lang]);\n\n  // Show loading while checking\n  if (isChecking && session) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-[#fcfcfc]\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-[#61936f] mx-auto mb-4\"></div>\n          <p className=\"text-[#62626a]\">Checking access...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // If no session, user is admin, or user has active cache, show the homepage\n  return <>{children}</>;\n}\n"],"names":["HomePageAccessControl","children","session","navigate","useNavigate","lang","useParams","isChecking","setIsChecking","useState","isAdmin","setIsAdmin","hasActiveCache","setHasActiveCache","useEffect","async","data","user","supabase","auth","getUser","isAdminData","error","isAdminError","rpc","userHasActiveCache","hasHomepageCreateTripCache","id","replace","checkAccess","className","jsxs","jsx"],"mappings":"oPAUO,SAASA,GAAsBC,SAAEA,EAAUC,QAAAA,IAChD,MAAMC,EAAWC,KACXC,KAAEA,GAASC,KACVC,EAAYC,GAAiBC,EAAAA,UAAS,IACtCC,EAASC,GAAcF,EAAAA,UAAS,IAChCG,EAAgBC,GAAqBJ,EAAAA,UAAS,GAsDrD,OApDAK,EAAAA,WAAU,KACYC,WAClB,GAAKb,EAMD,IAEI,MAAEc,MAAMC,KAAEA,UAAiBC,EAASC,KAAKC,WAGvCJ,KAAMK,EAAaC,MAAOC,SAAuBL,EAASM,IAAI,YAIpEb,GAFEY,KAIWF,GAIf,IAAII,GAAqB,EAOzB,GANIR,IACmBQ,EAAAC,EAA2BT,EAAKU,IACrDd,EAAkBY,IAIhBJ,GAAeI,EAGjB,YADAjB,GAAc,GAOhB,YADAL,EAAS,IADWE,GAAQ,iBACU,CAAEuB,SAAS,UAE1CN,GAIPnB,EAAS,IADWE,GAAQ,iBACU,CAAEuB,SAAS,GAAM,MAxCvDpB,GAAc,EAwCyC,EAI/CqB,EAAA,GACX,CAAC3B,EAASC,EAAUE,IAGnBE,GAAcL,QAEb,MAAI,CAAA4B,UAAU,6DACb7B,SAAC8B,EAAAA,KAAA,MAAA,CAAID,UAAU,cACb7B,SAAA,CAAC+B,EAAAA,IAAA,MAAA,CAAIF,UAAU,iFACdE,EAAAA,IAAA,IAAA,CAAEF,UAAU,iBAAiB7B,SAAkB,8CAO9CA,YACZ"}