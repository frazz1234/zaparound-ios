{"version":3,"file":"components-seo.tsx.Dk-lg3q2.js","sources":["../../../../src/components/SEO.tsx"],"sourcesContent":["import { Helmet } from 'react-helmet-async';\n\ninterface SEOProps {\n  title: string;\n  description: string;\n  keywords?: string;\n  image?: string;\n  url?: string;\n  type?: 'website' | 'article' | 'product' | 'organization' | 'contactpage' | 'faqpage' | 'webapplication';\n  publishedTime?: string;\n  modifiedTime?: string;\n  author?: string;\n  section?: string;\n  tags?: string[];\n  locale?: string;\n  alternateLocales?: string[];\n  noindex?: boolean;\n  nofollow?: boolean;\n  canonical?: string;\n  structuredData?: object;\n  breadcrumbs?: Array<{ name: string; url: string }>;\n  organization?: {\n    name?: string;\n    logo?: string;\n    url?: string;\n    description?: string;\n    address?: {\n      streetAddress?: string;\n      addressLocality?: string;\n      addressRegion?: string;\n      postalCode?: string;\n      addressCountry?: string;\n    };\n    contactPoint?: {\n      contactType?: string;\n      telephone?: string;\n      email?: string;\n      url?: string;\n    };\n    sameAs?: string[];\n  };\n  // New performance-focused props\n  preloadImages?: string[];\n  preconnectDomains?: string[];\n  dnsPrefetch?: string[];\n  preloadFonts?: string[];\n  criticalCSS?: string;\n  // Core Web Vitals optimization\n  enableWebVitals?: boolean;\n  // Social media optimization\n  twitterCardType?: 'summary' | 'summary_large_image' | 'app' | 'player';\n  facebookAppId?: string;\n  // Enhanced SEO features\n  videoStructuredData?: object;\n  eventStructuredData?: object;\n  productStructuredData?: object;\n  localBusinessStructuredData?: object;\n}\n\nexport function SEO({\n  title,\n  description,\n  keywords,\n  image = '/og-image.png',\n  url,\n  type = 'website',\n  publishedTime,\n  modifiedTime,\n  author = 'ZapAround',\n  section,\n  tags = [],\n  locale = 'en_US',\n  alternateLocales = ['en_US', 'fr_FR', 'es_ES'],\n  noindex = false,\n  nofollow = false,\n  canonical,\n  structuredData,\n  breadcrumbs,\n  organization,\n  preloadImages = [],\n  preconnectDomains = [],\n  dnsPrefetch = [],\n  preloadFonts = [],\n  criticalCSS,\n  enableWebVitals = true,\n  twitterCardType = 'summary_large_image',\n  facebookAppId,\n  videoStructuredData,\n  eventStructuredData,\n  productStructuredData,\n  localBusinessStructuredData,\n}: SEOProps) {\n  // Build proper URL - if url starts with a language code, use it as-is\n  // Otherwise, build it properly for the root domain\n  const fullUrl = url ? `https://zaparound.com${url}` : 'https://zaparound.com';\n  const fullImageUrl = image.startsWith('http') ? image : `https://zaparound.com${image}`;\n  \n  const robots = [\n    noindex ? 'noindex' : 'index',\n    nofollow ? 'nofollow' : 'follow',\n    'max-image-preview:large',\n    'max-snippet:-1',\n    'max-video-preview:-1'\n  ].join(', ');\n\n  // Default organization data\n  const defaultOrganization = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"Organization\",\n    \"name\": \"ZapAround\",\n    \"url\": \"https://zaparound.com\",\n    \"telephone\": \"+1 (418) 478-5586\",\n    \"image\": [\n      \"https://zaparound.com/zaparound-uploads/transparentnoliner.webp\",\n      \"https://zaparound.com/zaparound-uploads/smalllogo.webp\"\n    ],\n    \"logo\": \"https://zaparound.com/zaparound-uploads/transparentnoliner.webp\",\n    \"description\": \"Your Smart Travel Companion. Plan your trips with AI-assisted recommendations and discover the best places to visit or hangout with your friends.\",\n    \"address\": {\n      \"@type\": \"PostalAddress\",\n      \"addressCountry\": \"CA\",\n      \"addressLocality\": \"Quebec\"\n    },\n    \"contactPoint\": {\n      \"@type\": \"ContactPoint\",\n      \"contactType\": \"customer service\",\n      \"url\": \"https://zaparound.com/contact\"\n    },\n    \"sameAs\": [\n      \"https://twitter.com/zaparound\",\n      \"https://www.facebook.com/zaparound\",\n      \"https://www.instagram.com/zaparound\"\n    ]\n  };\n\n  // Breadcrumb structured data\n  const breadcrumbStructuredData = breadcrumbs ? {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    \"itemListElement\": breadcrumbs.map((item, index) => {\n      // Handle null/undefined or empty URL\n      if (!item.url) {\n        return {\n          \"@type\": \"ListItem\",\n          \"position\": index + 1,\n          \"name\": item.name,\n          \"item\": \"https://zaparound.com\",\n        };\n      }\n      // Helper: is the URL absolute (http, https, protocol-relative, ftp, mailto, tel)\n      const isAbsoluteUrl = (url: string): boolean => {\n        return (\n          url.startsWith('http://') ||\n          url.startsWith('https://') ||\n          url.startsWith('//') ||\n          url.startsWith('ftp://') ||\n          url.startsWith('mailto:') ||\n          url.startsWith('tel:')\n        );\n      };\n      if (isAbsoluteUrl(item.url)) {\n        return {\n          \"@type\": \"ListItem\",\n          \"position\": index + 1,\n          \"name\": item.name,\n          \"item\": item.url,\n        };\n      }\n      // Otherwise, treat as relative and prepend base URL\n      const baseUrl = 'https://zaparound.com';\n      const normalizedUrl = item.url.startsWith('/') ? item.url : `/${item.url}`;\n      return {\n        \"@type\": \"ListItem\",\n        \"position\": index + 1,\n        \"name\": item.name,\n        \"item\": `${baseUrl}${normalizedUrl}`,\n      };\n    })\n  } : null;\n\n  // WebPage structured data\n  const webpageStructuredData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebPage\",\n    \"name\": title,\n    \"description\": description,\n    \"url\": fullUrl,\n    \"inLanguage\": locale,\n    \"isPartOf\": {\n      \"@type\": \"WebSite\",\n      \"name\": \"ZapAround\",\n      \"url\": \"https://zaparound.com\"\n    },\n    \"datePublished\": publishedTime || new Date().toISOString(),\n    \"dateModified\": modifiedTime || new Date().toISOString(),\n    \"author\": {\n      \"@type\": \"Organization\",\n      \"name\": author\n    }\n  };\n\n  // Combine all structured data\n  const allStructuredData = [\n    webpageStructuredData,\n    organization || defaultOrganization,\n    breadcrumbStructuredData,\n    structuredData\n  ].filter(Boolean);\n\n  return (\n    <Helmet htmlAttributes={{ lang: locale.split('_')[0] }}>\n      {/* Basic Meta Tags */}\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      {keywords && <meta name=\"keywords\" content={keywords} />}\n      <meta name=\"robots\" content={robots} />\n      <meta name=\"author\" content={author} />\n      <meta name=\"language\" content={locale.split('_')[0]} />\n      <meta name=\"generator\" content=\"ZapAround\" />\n      <meta name=\"rating\" content=\"general\" />\n      <meta name=\"distribution\" content=\"global\" />\n      <meta name=\"coverage\" content=\"Worldwide\" />\n      <meta name=\"target\" content=\"all\" />\n      \n      {/* Mobile and App Meta Tags */}\n      <meta name=\"HandheldFriendly\" content=\"true\" />\n      <meta name=\"MobileOptimized\" content=\"width\" />\n      <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n      <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\" />\n      <meta name=\"format-detection\" content=\"telephone=no\" />\n      \n      {/* Geographic Meta Tags */}\n      <meta name=\"geo.region\" content=\"CA\" />\n      <meta name=\"geo.placename\" content=\"Quebec\" />\n      <meta name=\"geo.position\" content=\"46.8128;71.2354\" />\n      <meta name=\"ICBM\" content=\"46.8128, 71.2354\" />\n      \n      {/* Canonical URL */}\n      <link rel=\"canonical\" href={canonical || fullUrl} />\n      \n      {/* Self-referencing canonical link */}\n      <link rel=\"alternate\" hrefLang={locale.split('_')[0]} href={canonical || fullUrl} />\n      \n      {/* Alternate Language Links for other languages */}\n      {alternateLocales.filter(loc => loc !== locale).map(loc => {\n        const langCode = loc.split('_')[0];\n        // If URL already contains a language prefix, replace it; otherwise add the language prefix\n        let alternateUrl;\n        if (url) {\n          // Check if URL starts with a language code (e.g., /en/, /fr/, /es/)\n          const hasLangPrefix = /^\\/[a-z]{2}(\\/|$)/.test(url);\n          if (hasLangPrefix) {\n            // Replace existing language prefix\n            alternateUrl = `https://zaparound.com/${langCode}${url.substring(3)}`;\n          } else {\n            // Add language prefix to URL that doesn't have one\n            alternateUrl = `https://zaparound.com/${langCode}${url}`;\n          }\n        } else {\n          // Default homepage for this language\n          alternateUrl = `https://zaparound.com/${langCode}/`;\n        }\n        return (\n          <link key={loc} rel=\"alternate\" hrefLang={langCode} href={alternateUrl} />\n        );\n      })}\n      \n      {/* Add x-default link - always points to English version */}\n      <link rel=\"alternate\" hrefLang=\"x-default\" href={url ? `https://zaparound.com/en${url.replace(/^\\/[a-z]{2}/, '')}` : 'https://zaparound.com/en/'} />\n      \n      {/* Performance Optimizations */}\n      {preconnectDomains.map(domain => (\n        <link key={domain} rel=\"preconnect\" href={domain} crossOrigin=\"anonymous\" />\n      ))}\n      \n      {dnsPrefetch.map(domain => (\n        <link key={domain} rel=\"dns-prefetch\" href={domain} />\n      ))}\n      \n      {preloadImages.map(imageUrl => (\n        <link key={imageUrl} rel=\"preload\" as=\"image\" href={imageUrl} />\n      ))}\n      \n      {preloadFonts.map(fontUrl => (\n        <link key={fontUrl} rel=\"preload\" as=\"font\" href={fontUrl} crossOrigin=\"anonymous\" />\n      ))}\n      \n      {/* Critical CSS */}\n      {criticalCSS && (\n        <style dangerouslySetInnerHTML={{ __html: criticalCSS }} />\n      )}\n      \n      {/* Open Graph Meta Tags */}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:type\" content={type} />\n      <meta property=\"og:url\" content={fullUrl} />\n      <meta property=\"og:image\" content={fullImageUrl} />\n      <meta property=\"og:image:width\" content=\"1200\" />\n      <meta property=\"og:image:height\" content=\"630\" />\n      <meta property=\"og:image:alt\" content={title} />\n      <meta property=\"og:site_name\" content=\"ZapAround\" />\n      <meta property=\"og:locale\" content={locale} />\n      {alternateLocales.map(loc => (\n        <meta key={loc} property=\"og:locale:alternate\" content={loc} />\n      ))}\n      \n      {/* Article specific Open Graph tags */}\n      {type === 'article' && publishedTime && (\n        <meta property=\"article:published_time\" content={publishedTime} />\n      )}\n      {type === 'article' && modifiedTime && (\n        <meta property=\"article:modified_time\" content={modifiedTime} />\n      )}\n      {type === 'article' && author && (\n        <meta property=\"article:author\" content={author} />\n      )}\n      {type === 'article' && section && (\n        <meta property=\"article:section\" content={section} />\n      )}\n      {type === 'article' && tags.length > 0 && (\n        tags.map(tag => (\n          <meta key={tag} property=\"article:tag\" content={tag} />\n        ))\n      )}\n      \n      {/* Twitter Card Meta Tags */}\n      <meta name=\"twitter:card\" content={twitterCardType} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={fullImageUrl} />\n      <meta name=\"twitter:image:alt\" content={title} />\n      <meta name=\"twitter:site\" content=\"@zaparound\" />\n      <meta name=\"twitter:creator\" content=\"@zaparound\" />\n      <meta name=\"twitter:domain\" content=\"zaparound.com\" />\n      \n      {/* Facebook App ID */}\n      {facebookAppId && <meta property=\"fb:app_id\" content={facebookAppId} />}\n      \n      {/* Structured Data */}\n      {allStructuredData.map((data, index) => (\n        <script key={index} type=\"application/ld+json\">\n          {JSON.stringify(data)}\n        </script>\n      ))}\n      \n      {/* Additional Structured Data */}\n      {videoStructuredData && (\n        <script type=\"application/ld+json\">\n          {JSON.stringify(videoStructuredData)}\n        </script>\n      )}\n      \n      {eventStructuredData && (\n        <script type=\"application/ld+json\">\n          {JSON.stringify(eventStructuredData)}\n        </script>\n      )}\n      \n      {productStructuredData && (\n        <script type=\"application/ld+json\">\n          {JSON.stringify(productStructuredData)}\n        </script>\n      )}\n      \n      {localBusinessStructuredData && (\n        <script type=\"application/ld+json\">\n          {JSON.stringify(localBusinessStructuredData)}\n        </script>\n      )}\n      \n      {/* Additional Performance Meta Tags */}\n      <meta name=\"theme-color\" content=\"#61936f\" />\n      <meta name=\"msapplication-TileColor\" content=\"#61936f\" />\n      <meta name=\"msapplication-config\" content=\"/browserconfig.xml\" />\n      <meta name=\"apple-mobile-web-app-title\" content=\"ZapAround\" />\n      <meta name=\"application-name\" content=\"ZapAround\" />\n      \n      {/* Note: Cache-Control and Content-Security-Policy should be set as HTTP headers, not meta tags */}\n      {/* These are configured at the server level for optimal security and performance */}\n    </Helmet>\n  );\n} "],"names":["SEO","title","description","keywords","image","url","type","publishedTime","modifiedTime","author","section","tags","locale","alternateLocales","noindex","nofollow","canonical","structuredData","breadcrumbs","organization","preloadImages","preconnectDomains","dnsPrefetch","preloadFonts","criticalCSS","enableWebVitals","twitterCardType","facebookAppId","videoStructuredData","eventStructuredData","productStructuredData","localBusinessStructuredData","fullUrl","fullImageUrl","startsWith","robots","join","breadcrumbStructuredData","itemListElement","map","item","index","position","name","normalizedUrl","allStructuredData","inLanguage","isPartOf","datePublished","Date","toISOString","dateModified","telephone","logo","address","addressCountry","addressLocality","contactPoint","contactType","sameAs","filter","Boolean","jsxs","Helmet","htmlAttributes","lang","split","children","jsx","content","rel","href","hrefLang","loc","langCode","alternateUrl","test","substring","replace","domain","crossOrigin","imageUrl","as","fontUrl","dangerouslySetInnerHTML","__html","property","length","tag","data","JSON","stringify"],"mappings":"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"}