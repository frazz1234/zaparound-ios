{"version":3,"file":"components-trips.Ce9sOLST.js","sources":["../../../../src/components/trips/LocationSearch.tsx","../../../../src/components/trips/trip-types/zap-out/ZapOutDetailsCard.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Input } from \"@/components/ui/input\";\nimport { MapPinIcon, Crosshair, Search, Loader2, Globe, Building2, Landmark, Home } from \"lucide-react\";\nimport { useTranslation } from 'react-i18next';\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\ninterface LocationSuggestion {\n  place_name: string;\n  center: [number, number];\n  isCity?: boolean;\n  isExactAddress?: boolean;\n  isCountry?: boolean;\n  isRegion?: boolean;\n  type: string;\n}\n\ninterface LocationSearchProps {\n  value: string;\n  onChange: (location: string, coordinates: [number, number]) => void;\n  onSelect?: (location: string, coordinates: [number, number]) => void;\n  disabled?: boolean;\n  className?: string;\n  placeholder?: string;\n}\n\nexport const LocationSearch: React.FC<LocationSearchProps> = ({ value, onChange, onSelect, disabled, className, placeholder }) => {\n  const { t } = useTranslation('common');\n  const [locationSuggestions, setLocationSuggestions] = useState<LocationSuggestion[]>([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(value);\n  const [isGettingLocation, setIsGettingLocation] = useState(false);\n  const [isSearching, setIsSearching] = useState(false);\n  const searchContainerRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSelecting = useRef(false);\n  const debounceTimeout = useRef<number | null>(null);\n  const [exactAddress, setExactAddress] = useState<LocationSuggestion | null>(null);\n\n  useEffect(() => {\n    const searchLocation = async () => {\n      if (isSelecting.current || !showSuggestions || value.length < 2) {\n        isSelecting.current = false;\n        setLocationSuggestions([]);\n        return;\n      }\n\n      if (value === selectedValue) {\n        setShowSuggestions(false);\n        return;\n      }\n\n      try {\n        setIsSearching(true);\n        // Add cache buster to prevent cached responses\n        const cacheBuster = new Date().getTime();\n        const endpoint = `https://api.mapbox.com/geocoding/v5/mapbox.places/${encodeURIComponent(\n          value\n        )}.json?access_token=pk.eyJ1IjoibWlzdGVyZnJhenoiLCJhIjoiY203M2ZnM3BoMDhpMTJqcTNiYWpkamIzNyJ9.2SlcuEPIL2yCJw5TIPunVQ&types=place,address,poi,neighborhood,locality,postcode,country,region&limit=15&cacheBuster=${cacheBuster}`;\n        \n        const response = await fetch(endpoint);\n        const data = await response.json();\n        \n        const suggestions = data.features.map((feature: any) => ({\n          place_name: feature.place_name,\n          center: feature.center,\n          isExactAddress: feature.place_type?.includes('address'),\n          isCity: feature.place_type?.includes('place'),\n          isCountry: feature.place_type?.includes('country'),\n          isRegion: feature.place_type?.includes('region'),\n          type: feature.place_type?.[0] || 'unknown'\n        }));\n\n        // Sort suggestions to prioritize exact addresses, cities, regions, and countries\n        const sortedSuggestions = suggestions.sort((a: LocationSuggestion, b: LocationSuggestion) => {\n          if (a.isExactAddress && !b.isExactAddress) return -1;\n          if (!a.isExactAddress && b.isExactAddress) return 1;\n          if (a.isCity && !b.isCity) return -1;\n          if (!a.isCity && b.isCity) return 1;\n          if (a.isRegion && !b.isRegion) return -1;\n          if (!a.isRegion && b.isRegion) return 1;\n          if (a.isCountry && !b.isCountry) return -1;\n          if (!a.isCountry && b.isCountry) return 1;\n          return 0;\n        });\n        \n        setLocationSuggestions(sortedSuggestions);\n      } catch (error) {\n        console.error('Error fetching location suggestions:', error);\n        setLocationSuggestions([]);\n      } finally {\n        setIsSearching(false);\n      }\n    };\n\n    // Clear any existing timeout\n    if (debounceTimeout.current) {\n      clearTimeout(debounceTimeout.current);\n    }\n\n    // Set a shorter debounce timeout (200ms instead of 300ms)\n    debounceTimeout.current = window.setTimeout(searchLocation, 200);\n    \n    return () => {\n      if (debounceTimeout.current) {\n        clearTimeout(debounceTimeout.current);\n      }\n    };\n  }, [value, selectedValue, showSuggestions]);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        searchContainerRef.current &&\n        !searchContainerRef.current.contains(event.target as Node)\n      ) {\n        setShowSuggestions(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  const handleLocationSelect = (suggestion: LocationSuggestion) => {\n    isSelecting.current = true;\n    setSelectedValue(suggestion.place_name);\n    setShowSuggestions(false);\n    setLocationSuggestions([]);\n    onChange(suggestion.place_name, suggestion.center);\n    onSelect?.(suggestion.place_name, suggestion.center);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = e.target.value;\n    onChange(newValue, [0, 0]);\n    if (newValue !== selectedValue) {\n      setSelectedValue(\"\");\n      if (newValue.length >= 2) {\n        setShowSuggestions(true);\n      }\n    }\n  };\n\n  const handleInputFocus = () => {\n    if (!disabled && value.length >= 2) {\n      setShowSuggestions(true);\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Escape') {\n      setShowSuggestions(false);\n    }\n  };\n\n  const handleSelect = async (address: string) => {\n    try {\n      const response = await fetch(\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${encodeURIComponent(\n          address\n        )}.json?access_token=${process.env.NEXT_PUBLIC_MAPBOX_TOKEN}&types=place`\n      );\n      const data = await response.json();\n      if (data.features && data.features[0]) {\n        const [lng, lat] = data.features[0].center;\n        const locationName = data.features[0].place_name;\n        onChange(locationName, [lng, lat]);\n        onSelect?.(locationName, [lng, lat]);\n      }\n    } catch (error) {\n      console.error('Error getting coordinates:', error);\n    }\n  };\n\n  const handleGetCurrentLocation = () => {\n    if (disabled) return;\n    \n    setIsGettingLocation(true);\n    \n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(\n        async (position) => {\n          try {\n            // First get the city-level location\n            const cityResponse = await fetch(\n              `https://api.mapbox.com/geocoding/v5/mapbox.places/${position.coords.longitude},${position.coords.latitude}.json?access_token=pk.eyJ1IjoibWlzdGVyZnJhenoiLCJhIjoiY203M2ZnM3BoMDhpMTJqcTNiYWpkamIzNyJ9.2SlcuEPIL2yCJw5TIPunVQ&types=place`\n            );\n            const cityData = await cityResponse.json();\n            \n            // Then get the exact address\n            const addressResponse = await fetch(\n              `https://api.mapbox.com/geocoding/v5/mapbox.places/${position.coords.longitude},${position.coords.latitude}.json?access_token=pk.eyJ1IjoibWlzdGVyZnJhenoiLCJhIjoiY203M2ZnM3BoMDhpMTJqcTNiYWpkamIzNyJ9.2SlcuEPIL2yCJw5TIPunVQ&types=address`\n            );\n            const addressData = await addressResponse.json();\n\n            if (cityData.features && cityData.features[0] && addressData.features && addressData.features[0]) {\n              const cityName = cityData.features[0].place_name;\n              const exactAddress = addressData.features[0].place_name;\n              \n              // Show only city in suggestions\n              setLocationSuggestions([\n                {\n                  place_name: cityName,\n                  center: [position.coords.longitude, position.coords.latitude],\n                  isCity: true,\n                  type: 'place'\n                }\n              ]);\n              setShowSuggestions(true);\n              setSelectedValue(cityName);\n              onChange(cityName, [position.coords.longitude, position.coords.latitude]);\n\n              // Store exact address for the question section\n              setExactAddress({\n                place_name: exactAddress,\n                center: [position.coords.longitude, position.coords.latitude],\n                type: 'address'\n              });\n            }\n          } catch (error) {\n            console.error('Error getting location:', error);\n          } finally {\n            setIsGettingLocation(false);\n          }\n        },\n        (error) => {\n          console.error('Geolocation error:', error);\n          setIsGettingLocation(false);\n        }\n      );\n    } else {\n      console.error(\"Geolocation is not supported\");\n      setIsGettingLocation(false);\n    }\n  };\n\n  const handleUseExactAddress = () => {\n    if (exactAddress) {\n      handleLocationSelect(exactAddress);\n      setExactAddress(null);\n    }\n  };\n\n  const handleFocusSearch = () => {\n    inputRef.current?.focus();\n  };\n\n  return (\n    <div className=\"relative w-full\" ref={searchContainerRef}>\n      <div \n        className={cn(\n          \"relative flex items-center transition-all group\",\n          \"rounded-lg shadow-sm hover:shadow-md focus-within:shadow-md focus-within:ring-2 focus-within:ring-[#61936f]/40\",\n          disabled ? \"opacity-60\" : \"\"\n        )}\n      >\n        <div className=\"absolute left-3 text-gray-400 group-focus-within:text-[#61936f]\">\n          <Search className=\"h-5 w-5\" />\n        </div>\n        \n        <Input\n          ref={inputRef}\n          id=\"location\"\n          value={value}\n          onChange={handleInputChange}\n          onFocus={handleInputFocus}\n          onKeyDown={handleKeyDown}\n          placeholder={placeholder || t('form.destinationPlaceholder')}\n          className={cn(\n            \"pl-10 pr-10 h-12 rounded-lg border-[#e2e2e2]\",\n            \"text-[15px] placeholder:text-gray-400\",\n            \"focus:border-[#61936f] focus-visible:ring-0 focus-visible:border-[#61936f]\",\n            \"transition-all rounded-r-none\",\n            className\n          )}\n          required\n          disabled={disabled}\n          inputMode=\"text\"\n          type=\"search\"\n          enterKeyHint=\"search\"\n        />\n        \n        <div className=\"absolute right-[3.25rem] flex items-center\">\n          {isSearching && (\n            <Loader2 className=\"h-4 w-4 animate-spin text-[#61936f]\" />\n          )}\n        </div>\n        \n        <Button \n          type=\"button\"\n          variant=\"outline\" \n          size=\"icon\" \n          onClick={handleGetCurrentLocation}\n          disabled={disabled || isGettingLocation}\n          className={cn(\n            \"h-12 min-w-12 rounded-l-none border-l-0 border-[#e2e2e2]\",\n            \"hover:bg-[#61936f]/10 hover:text-[#61936f] hover:border-[#61936f]\",\n            \"focus:border-[#61936f] focus:text-[#61936f]\",\n            isGettingLocation && \"text-[#61936f]\"\n          )}\n          aria-label={t('common.useCurrentLocation') || \"Use current location\"}\n          title={t('common.useCurrentLocation') || \"Use current location\"}\n        >\n          {isGettingLocation ? (\n            <Loader2 className=\"h-5 w-5 animate-spin\" />\n          ) : (\n            <Crosshair className=\"h-5 w-5\" />\n          )}\n        </Button>\n      </div>\n\n      {/* Exact Address Question */}\n      {exactAddress && (\n        <div className=\"mt-1.5 p-2 bg-gray-50 rounded-lg border border-gray-200\">\n          <div className=\"flex items-start gap-1.5\">\n            <MapPinIcon className=\"h-3.5 w-3.5 text-[#61936f] mt-0.5 flex-shrink-0\" />\n            <div className=\"flex-1\">\n              <div className=\"text-xs text-gray-600\">\n                {t('useExactAddress')}\n              </div>\n              <div className=\"mt-0.5 text-xs font-medium text-gray-900\">\n                {exactAddress.place_name}\n              </div>\n              <button\n                onClick={handleUseExactAddress}\n                className=\"mt-1 text-xs text-[#61936f] hover:text-[#4a7a5a] font-medium\"\n              >\n                {t('exactAddress')}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      <AnimatePresence>\n        {showSuggestions && locationSuggestions.length > 0 && (\n          <motion.div\n            initial={{ opacity: 0, y: -10 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -10 }}\n            transition={{ duration: 0.15 }}\n            className={cn(\n              \"absolute z-[9999] bg-white rounded-lg shadow-lg border border-gray-200 overflow-y-auto\",\n              \"backdrop-blur-sm\",\n              \"w-full\",\n              \"mt-1\"\n            )}\n            style={{ \n              maxHeight: \"300px\"\n            }}\n          >\n            {locationSuggestions.map((suggestion, index) => (\n              <motion.button\n                key={index}\n                initial={{ opacity: 0, y: 5 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.1, delay: index * 0.03 }}\n                type=\"button\"\n                className={cn(\n                  \"w-full text-left px-4 py-3 text-sm flex items-center gap-2\",\n                  \"hover:bg-gray-50 focus:outline-none focus:bg-gray-50\",\n                  \"transition-colors\",\n                  \"touch-action-manipulation\",\n                  \"active:bg-gray-100\",\n                  \"min-h-[48px]\"\n                )}\n                onClick={() => handleLocationSelect(suggestion)}\n              >\n                {suggestion.isCountry ? (\n                  <Globe className=\"h-4 w-4 flex-shrink-0 text-blue-600\" />\n                ) : suggestion.isRegion ? (\n                  <Landmark className=\"h-4 w-4 flex-shrink-0 text-purple-600\" />\n                ) : suggestion.isCity ? (\n                  <Building2 className=\"h-4 w-4 flex-shrink-0 text-[#61936f]\" />\n                ) : suggestion.isExactAddress ? (\n                  <Home className=\"h-4 w-4 flex-shrink-0 text-orange-600\" />\n                ) : (\n                  <MapPinIcon className=\"h-4 w-4 flex-shrink-0 text-gray-600\" />\n                )}\n                <div className=\"flex-1\">\n                  <div className=\"font-medium text-gray-900\">\n                    {suggestion.place_name}\n                  </div>\n                  <div className=\"text-xs text-gray-500 mt-0.5\">\n                    {suggestion.isExactAddress && t('exactAddress')}\n                    {suggestion.isCountry && t('country')}\n                    {suggestion.isRegion && t('region')}\n                    {suggestion.isCity && t('city')}\n                  </div>\n                </div>\n              </motion.button>\n            ))}\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n","import { useTranslation } from 'react-i18next';\nimport { format, isValid, parseISO } from \"date-fns\";\nimport { enUS, fr, es } from 'date-fns/locale';\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { \n  Calendar, \n  Clock, \n  Users, \n  Utensils, \n  Activity, \n  DollarSign, \n  FileText, \n  Accessibility, \n  UserCheck, \n  List,\n  Map\n} from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface ZapOutDetailsCardProps {\n  zapOutData: {\n    activity_times?: string[];\n    min_budget?: string;\n    max_budget?: string;\n    currency?: string;\n    activity_types?: string[];\n    budget_per_person?: string;\n    additional_needs?: string;\n    requested_activities?: string[];\n    group_composition?: string;\n    special_requirements?: string;\n    accessibility_needs?: string;\n    adults?: number;\n    kids?: number;\n    date?: string;\n  };\n  onClick?: () => void;\n}\n\nexport function ZapOutDetailsCard({ zapOutData, onClick }: ZapOutDetailsCardProps) {\n  const { t, i18n } = useTranslation('trip');\n\n  // Format date safely\n  const formatDate = (dateString: string | null | undefined): string => {\n    if (!dateString) return '';\n    try {\n      // First try to parse as ISO string\n      const date = parseISO(dateString);\n      let locale = enUS;\n      if (i18n.language === 'fr') locale = fr;\n      else if (i18n.language === 'es') locale = es;\n      if (isValid(date)) {\n        return format(date, 'PPP', { locale });\n      }\n      \n      // If not a valid ISO string, try as regular date\n      const fallbackDate = new Date(dateString);\n      return isValid(fallbackDate) ? format(fallbackDate, 'PPP', { locale }) : '';\n    } catch (error) {\n      console.error(\"Error formatting date:\", error);\n      return '';\n    }\n  };\n\n  const formatActivityTimes = (times: string[] | undefined) => {\n    if (!times || times.length === 0) {\n      return t('types.zapOut.details.noTimeSelected');\n    }\n    //return times.map(time => t(`types.zapOut.details.${time}`)).join(', ');\n  };\n\n  const formatActivityTypes = (types: string[] | undefined) => {\n    if (!types || types.length === 0) {\n      return t('types.zapOut.details.noActivitiesSelected');\n    }\n    //return types.map(type => t(`types.zapOut.details.${type}`)).join(', ');\n  };\n\n  const formatRequestedActivities = (activities: string[] | undefined) => {\n    if (!activities || activities.length === 0) {\n      return t('types.zapOut.details.noRequestedActivities');\n    }\n    return activities.join(', ');\n  };\n\n  const getPeopleCount = () => {\n    const adults = zapOutData.adults || 0;\n    const kids = zapOutData.kids || 0;\n    const totalPeople = adults + kids;\n    \n    if (totalPeople === 0) return '';\n    \n    let result = '';\n    if (adults > 0) {\n      result += `${adults} ${t('form.adults')}`;\n    }\n    \n    if (kids > 0) {\n      if (result) result += ', ';\n      result += `${kids} ${t('form.kids')}`;\n    }\n    \n    return result;\n  };\n\n  return (\n    <Card \n      className={cn(\n        \"relative group transition-all duration-200\",\n        onClick && \"cursor-pointer hover:shadow-lg\"\n      )}\n      onClick={onClick}\n    >\n      {onClick && (\n        <div className=\"absolute inset-0 bg-black/0 group-hover:bg-black/5 transition-colors duration-200 pointer-events-none\" />\n      )}\n      <CardContent className=\"p-6\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h3 className=\"text-lg font-semibold\">{t('types.zapOut.details.title')}</h3>\n          {onClick && (\n            <Map className=\"w-5 h-5 text-muted-foreground opacity-0 group-hover:opacity-100 transition-opacity duration-200\" />\n          )}\n        </div>\n        \n        <div className=\"space-y-4\">\n          {/* Date */}\n          {zapOutData.date && (\n            <div className=\"flex items-start gap-3\">\n              <Calendar className=\"w-5 h-5 text-muted-foreground mt-0.5\" />\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">{t('types.zapOut.when')}</p>\n                <p className=\"text-base\">{formatDate(zapOutData.date)}</p>\n              </div>\n            </div>\n          )}\n          \n          {/* People (Adults & Kids) */}\n          {(zapOutData.adults || zapOutData.kids) && (\n            <div className=\"flex items-start gap-3\">\n              <Users className=\"w-5 h-5 text-muted-foreground mt-0.5\" />\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">{t('types.zapOut.personDateTitle')}</p>\n                <p className=\"text-base\">{getPeopleCount()}</p>\n              </div>\n            </div>\n          )}\n          \n          {/* Activity Times */}\n          <div className=\"flex items-start gap-3\">\n            <Clock className=\"w-5 h-5 text-muted-foreground mt-0.5\" />\n            <div>\n              <p className=\"text-sm font-medium text-muted-foreground\">{t('types.zapOut.details.timeOfActivities')}</p>\n              <p className=\"text-base\">\n                {zapOutData.activity_times && zapOutData.activity_times.length > 0\n                  ? zapOutData.activity_times\n                      .map((time: string) => {\n                        const translationKey = `types.zapOut.details.${time}`;\n                        const translated = t(translationKey);\n                        return translated === translationKey ? time : translated;\n                      })\n                      .join(', ')\n                  : t('types.zapOut.details.noActivityTimes')}\n              </p>\n            </div>\n          </div>\n          \n          {/* Activity Types */}\n          <div className=\"flex items-start gap-3\">\n            <Activity className=\"w-5 h-5 text-muted-foreground mt-0.5\" />\n            <div>\n              <p className=\"text-sm font-medium text-muted-foreground\">{t('types.zapOut.details.activityTypes')}</p>\n              <p className=\"text-base\">\n                {zapOutData.activity_types && zapOutData.activity_types.length > 0\n                  ? zapOutData.activity_types\n                      .map((type: string) => {\n                        const translationKey = `types.zapOut.details.${type}`;\n                        const translated = t(translationKey);\n                        return translated === translationKey ? type : translated;\n                      })\n                      .join(', ')\n                  : t('types.zapOut.details.noActivityTypes')}\n              </p>\n            </div>\n          </div>\n          \n          \n          {/* Requested Activities */}\n          {zapOutData.requested_activities && zapOutData.requested_activities.length > 0 && (\n            <div className=\"flex items-start gap-3\">\n              <List className=\"w-5 h-5 text-muted-foreground mt-0.5\" />\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">{t('types.zapOut.details.requestedActivities')}</p>\n                <p className=\"text-base\">{formatRequestedActivities(zapOutData.requested_activities)}</p>\n              </div>\n            </div>\n          )}\n          \n          {/* Group Composition */}\n          {zapOutData.group_composition && (\n            <div className=\"flex items-start gap-3\">\n              <UserCheck className=\"w-5 h-5 text-muted-foreground mt-0.5\" />\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">{t('types.zapOut.details.groupComposition')}</p>\n                <p className=\"text-base\">{zapOutData.group_composition}</p>\n              </div>\n            </div>\n          )}\n          \n          {/* Accessibility Needs */}\n          {zapOutData.accessibility_needs && (\n            <div className=\"flex items-start gap-3\">\n              <Accessibility className=\"w-5 h-5 text-muted-foreground mt-0.5\" />\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">{t('types.zapOut.details.accessibilityNeeds')}</p>\n                <p className=\"text-base\">{zapOutData.accessibility_needs}</p>\n              </div>\n            </div>\n          )}\n          \n          {/* Budget Per Person */}\n          <div className=\"flex items-start gap-3\">\n            <DollarSign className=\"w-5 h-5 text-muted-foreground mt-0.5\" />\n            <div>\n              <p className=\"text-sm font-medium text-muted-foreground\">{t('types.zapOut.details.budget')}</p>\n              <p className=\"text-base\">\n                {zapOutData.min_budget && zapOutData.max_budget\n                  ? `${zapOutData.min_budget} ${zapOutData.currency || 'USD'} - ${zapOutData.max_budget} ${zapOutData.currency || 'USD'}`\n                  : t('types.zapOut.details.noBudgetSpecified')}\n              </p>\n            </div>\n          </div>\n          \n          {/* Special Requirements */}\n          {zapOutData.special_requirements && (\n            <div className=\"flex items-start gap-3\">\n              <FileText className=\"w-5 h-5 text-muted-foreground mt-0.5\" />\n              <div>\n                <p className=\"text-sm font-medium text-muted-foreground\">{t('types.zapOut.details.specialRequirements')}</p>\n                <p className=\"text-base\">{zapOutData.special_requirements}</p>\n              </div>\n            </div>\n          )}\n          \n\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":["LocationSearch","value","onChange","onSelect","disabled","className","placeholder","t","useTranslation","locationSuggestions","setLocationSuggestions","useState","showSuggestions","setShowSuggestions","selectedValue","setSelectedValue","isGettingLocation","setIsGettingLocation","isSearching","setIsSearching","searchContainerRef","useRef","inputRef","isSelecting","debounceTimeout","exactAddress","setExactAddress","useEffect","current","clearTimeout","window","setTimeout","async","length","cacheBuster","Date","getTime","endpoint","encodeURIComponent","response","fetch","data","json","sortedSuggestions","features","map","feature","place_name","center","isExactAddress","place_type","includes","isCity","isCountry","isRegion","type","sort","a","b","error","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","handleLocationSelect","suggestion","ref","children","jsxs","cn","jsx","Search","Input","id","e","newValue","onFocus","onKeyDown","key","required","inputMode","enterKeyHint","Loader2","Button","variant","size","onClick","navigator","geolocation","getCurrentPosition","position","cityResponse","coords","longitude","latitude","cityData","addressResponse","addressData","cityName","title","Crosshair","MapPinIcon","AnimatePresence","motion","div","initial","opacity","y","animate","exit","transition","duration","style","maxHeight","index","button","delay","Globe","Landmark","Building2","Home","ZapOutDetailsCard","zapOutData","i18n","Card","CardContent","Map","date","Calendar","dateString","parseISO","locale","enUS","language","fr","es","isValid","format","fallbackDate","formatDate","adults","kids","Users","result","Clock","activity_times","time","translationKey","translated","join","Activity","activity_types","requested_activities","List","activities","group_composition","UserCheck","accessibility_needs","Accessibility","DollarSign","min_budget","max_budget","currency","special_requirements","FileText"],"mappings":"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"}