{"version":3,"file":"components-booking.BlKl1Fts.js","sources":["../../../../src/components/booking/FlightFilters.tsx","../../../../src/components/booking/AirportSelector.tsx","../../../../src/components/booking/AncillariesStep.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Slider } from '@/components/ui/slider';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Separator } from '@/components/ui/separator';\nimport { Filter, Plane, Clock, MapPin, DollarSign, Luggage } from 'lucide-react';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { airports } from '@/utils/airportData';\n\ninterface FlightFiltersProps {\n  onFiltersChange: (filters: FlightFilters) => void;\n}\n\nexport interface FlightFilters {\n  airlines: string[];\n  stops: 'any' | 'nonstop' | '1_or_fewer' | '2_or_fewer';\n  bags: 'any' | 'included' | 'not_included';\n  priceRange: [number, number];\n  connectingAirports: string[];\n  duration: [number, number]; // in hours\n}\n\nconst popularAirlines = [\n  { code: 'AC', name: 'Air Canada' },\n  { code: 'WS', name: 'WestJet' },\n  { code: 'AA', name: 'American Airlines' },\n  { code: 'DL', name: 'Delta Air Lines' },\n  { code: 'UA', name: 'United Airlines' },\n];\n\nconst allAirlines = [\n  ...popularAirlines,\n  { code: 'BA', name: 'British Airways' },\n  { code: 'LH', name: 'Lufthansa' },\n  { code: 'AF', name: 'Air France' },\n  { code: 'KL', name: 'KLM' },\n  { code: 'TK', name: 'Turkish Airlines' },\n  { code: 'QR', name: 'Qatar Airways' },\n  { code: 'EK', name: 'Emirates' },\n  { code: 'EY', name: 'Etihad Airways' },\n  { code: 'CX', name: 'Cathay Pacific' },\n  { code: 'SQ', name: 'Singapore Airlines' },\n];\n\nconst connectingAirports = airports.slice(0, 50).map(airport => ({\n  code: airport.iata_code,\n  name: `${airport.city} (${airport.iata_code})`\n}));\n\nexport const FlightFilters: React.FC<FlightFiltersProps> = ({ onFiltersChange }) => {\n  const [filters, setFilters] = useState<FlightFilters>({\n    airlines: [],\n    stops: 'any',\n    bags: 'any',\n    priceRange: [0, 5000],\n    connectingAirports: [],\n    duration: [0, 24],\n  });\n\n  const [showAllAirlines, setShowAllAirlines] = useState(false);\n\n  const updateFilters = (newFilters: Partial<FlightFilters>) => {\n    const updatedFilters = { ...filters, ...newFilters };\n    setFilters(updatedFilters);\n    onFiltersChange(updatedFilters);\n  };\n\n  const toggleAirline = (airlineCode: string) => {\n    const newAirlines = filters.airlines.includes(airlineCode)\n      ? filters.airlines.filter(code => code !== airlineCode)\n      : [...filters.airlines, airlineCode];\n    updateFilters({ airlines: newAirlines });\n  };\n\n  const toggleConnectingAirport = (airportCode: string) => {\n    const newAirports = filters.connectingAirports.includes(airportCode)\n      ? filters.connectingAirports.filter(code => code !== airportCode)\n      : [...filters.connectingAirports, airportCode];\n    updateFilters({ connectingAirports: newAirports });\n  };\n\n  const clearAllFilters = () => {\n    const clearedFilters: FlightFilters = {\n      airlines: [],\n      stops: 'any',\n      bags: 'any',\n      priceRange: [0, 5000],\n      connectingAirports: [],\n      duration: [0, 24],\n    };\n    setFilters(clearedFilters);\n    onFiltersChange(clearedFilters);\n  };\n\n  const hasActiveFilters = () => {\n    return filters.airlines.length > 0 ||\n           filters.stops !== 'any' ||\n           filters.bags !== 'any' ||\n           filters.priceRange[0] > 0 ||\n           filters.priceRange[1] < 5000 ||\n           filters.connectingAirports.length > 0 ||\n           filters.duration[0] > 0 ||\n           filters.duration[1] < 24;\n  };\n\n  return (\n    <div className=\"bg-white border border-gray-200 rounded-lg shadow-sm p-4 mb-6\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <div className=\"flex items-center gap-2\">\n          <Filter className=\"w-4 h-4 text-[#61936f]\" />\n          <h3 className=\"font-semibold text-[#1d1d1e]\">Filters</h3>\n          {hasActiveFilters() && (\n            <span className=\"bg-[#61936f] text-white text-xs px-2 py-1 rounded-full\">\n              Active\n            </span>\n          )}\n        </div>\n        {hasActiveFilters() && (\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={clearAllFilters}\n            className=\"text-[#62626a] hover:text-[#1d1d1e]\"\n          >\n            Clear all\n          </Button>\n        )}\n      </div>\n\n      <div className=\"flex flex-wrap items-center gap-4\">\n        {/* Airlines Filter */}\n        <Popover>\n          <PopoverTrigger asChild>\n            <Button variant=\"outline\" size=\"sm\" className=\"flex items-center gap-2\">\n              <Plane className=\"w-4 h-4 text-[#61936f]\" />\n              <span>Airlines</span>\n              {filters.airlines.length > 0 && (\n                <span className=\"bg-[#61936f] text-white text-xs px-1.5 py-0.5 rounded-full\">\n                  {filters.airlines.length}\n                </span>\n              )}\n            </Button>\n          </PopoverTrigger>\n          <PopoverContent className=\"w-80 p-4\">\n            <div className=\"space-y-3\">\n              <h4 className=\"font-medium\">Airlines</h4>\n              <div className=\"space-y-2\">\n                {popularAirlines.map((airline) => (\n                  <div key={airline.code} className=\"flex items-center space-x-2\">\n                    <Checkbox\n                      id={`airline-${airline.code}`}\n                      checked={filters.airlines.includes(airline.code)}\n                      onCheckedChange={() => toggleAirline(airline.code)}\n                    />\n                    <Label htmlFor={`airline-${airline.code}`} className=\"text-sm cursor-pointer\">\n                      {airline.name}\n                    </Label>\n                  </div>\n                ))}\n                \n                {!showAllAirlines ? (\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => setShowAllAirlines(true)}\n                    className=\"text-[#61936f] hover:text-[#1d1d1e] p-0 h-auto\"\n                  >\n                    Show more airlines ({allAirlines.length - popularAirlines.length})\n                  </Button>\n                ) : (\n                  <div className=\"space-y-2\">\n                    <Separator />\n                    {allAirlines.slice(popularAirlines.length).map((airline) => (\n                      <div key={airline.code} className=\"flex items-center space-x-2\">\n                        <Checkbox\n                          id={`airline-${airline.code}`}\n                          checked={filters.airlines.includes(airline.code)}\n                          onCheckedChange={() => toggleAirline(airline.code)}\n                        />\n                        <Label htmlFor={`airline-${airline.code}`} className=\"text-sm cursor-pointer\">\n                          {airline.name}\n                        </Label>\n                      </div>\n                    ))}\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => setShowAllAirlines(false)}\n                      className=\"text-[#61936f] hover:text-[#1d1d1e] p-0 h-auto\"\n                    >\n                      Show less\n                    </Button>\n                  </div>\n                )}\n              </div>\n            </div>\n          </PopoverContent>\n        </Popover>\n\n        {/* Number of Stops Filter */}\n        <Select value={filters.stops} onValueChange={(value: any) => updateFilters({ stops: value })}>\n          <SelectTrigger className=\"w-40\">\n            <MapPin className=\"w-4 h-4 text-[#61936f] mr-2\" />\n            <SelectValue placeholder=\"Stops\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"any\">Any stops</SelectItem>\n            <SelectItem value=\"nonstop\">Nonstop only</SelectItem>\n            <SelectItem value=\"1_or_fewer\">1 stop or fewer</SelectItem>\n            <SelectItem value=\"2_or_fewer\">2 stops or fewer</SelectItem>\n          </SelectContent>\n        </Select>\n\n        {/* Bags Filter */}\n        <Select value={filters.bags} onValueChange={(value: any) => updateFilters({ bags: value })}>\n          <SelectTrigger className=\"w-40\">\n            <Luggage className=\"w-4 h-4 text-[#61936f] mr-2\" />\n            <SelectValue placeholder=\"Bags\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"any\">Any bags</SelectItem>\n            <SelectItem value=\"included\">Bags included</SelectItem>\n            <SelectItem value=\"not_included\">Bags not included</SelectItem>\n          </SelectContent>\n        </Select>\n\n        {/* Price Range Filter */}\n        <Popover>\n          <PopoverTrigger asChild>\n            <Button variant=\"outline\" size=\"sm\" className=\"flex items-center gap-2\">\n              <DollarSign className=\"w-4 h-4 text-[#61936f]\" />\n              <span>Price</span>\n              {(filters.priceRange[0] > 0 || filters.priceRange[1] < 5000) && (\n                <span className=\"bg-[#61936f] text-white text-xs px-1.5 py-0.5 rounded-full\">\n                  1\n                </span>\n              )}\n            </Button>\n          </PopoverTrigger>\n          <PopoverContent className=\"w-80 p-4\">\n            <div className=\"space-y-4\">\n              <h4 className=\"font-medium\">Price Range</h4>\n              <div className=\"space-y-2\">\n                <Label className=\"text-sm text-[#62626a]\">\n                  ${filters.priceRange[0]} - ${filters.priceRange[1]}\n                </Label>\n                <Slider\n                  value={filters.priceRange}\n                  onValueChange={(value) => updateFilters({ priceRange: value as [number, number] })}\n                  max={5000}\n                  min={0}\n                  step={50}\n                  className=\"w-full\"\n                />\n              </div>\n              <div className=\"flex gap-2\">\n                <Input\n                  type=\"number\"\n                  placeholder=\"Min\"\n                  value={filters.priceRange[0]}\n                  onChange={(e) => updateFilters({ priceRange: [parseInt(e.target.value) || 0, filters.priceRange[1]] })}\n                  className=\"w-full\"\n                />\n                <Input\n                  type=\"number\"\n                  placeholder=\"Max\"\n                  value={filters.priceRange[1]}\n                  onChange={(e) => updateFilters({ priceRange: [filters.priceRange[0], parseInt(e.target.value) || 5000] })}\n                  className=\"w-full\"\n                />\n              </div>\n            </div>\n          </PopoverContent>\n        </Popover>\n\n        {/* Connecting Airports Filter */}\n        <Popover>\n          <PopoverTrigger asChild>\n            <Button variant=\"outline\" size=\"sm\" className=\"flex items-center gap-2\">\n              <MapPin className=\"w-4 h-4 text-[#61936f]\" />\n              <span>Airports</span>\n              {filters.connectingAirports.length > 0 && (\n                <span className=\"bg-[#61936f] text-white text-xs px-1.5 py-0.5 rounded-full\">\n                  {filters.connectingAirports.length}\n                </span>\n              )}\n            </Button>\n          </PopoverTrigger>\n          <PopoverContent className=\"w-80 p-4\">\n            <div className=\"space-y-3\">\n              <h4 className=\"font-medium\">Connecting Airports</h4>\n              <div className=\"space-y-2 max-h-40 overflow-y-auto\">\n                {connectingAirports.map((airport) => (\n                  <div key={airport.code} className=\"flex items-center space-x-2\">\n                    <Checkbox\n                      id={`airport-${airport.code}`}\n                      checked={filters.connectingAirports.includes(airport.code)}\n                      onCheckedChange={() => toggleConnectingAirport(airport.code)}\n                    />\n                    <Label htmlFor={`airport-${airport.code}`} className=\"text-sm cursor-pointer\">\n                      {airport.name}\n                    </Label>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </PopoverContent>\n        </Popover>\n\n        {/* Duration Filter */}\n        <Popover>\n          <PopoverTrigger asChild>\n            <Button variant=\"outline\" size=\"sm\" className=\"flex items-center gap-2\">\n              <Clock className=\"w-4 h-4 text-[#61936f]\" />\n              <span>Duration</span>\n              {(filters.duration[0] > 0 || filters.duration[1] < 24) && (\n                <span className=\"bg-[#61936f] text-white text-xs px-1.5 py-0.5 rounded-full\">\n                  1\n                </span>\n              )}\n            </Button>\n          </PopoverTrigger>\n          <PopoverContent className=\"w-80 p-4\">\n            <div className=\"space-y-4\">\n              <h4 className=\"font-medium\">Duration Range</h4>\n              <div className=\"space-y-2\">\n                <Label className=\"text-sm text-[#62626a]\">\n                  {filters.duration[0]}h - {filters.duration[1]}h\n                </Label>\n                <Slider\n                  value={filters.duration}\n                  onValueChange={(value) => updateFilters({ duration: value as [number, number] })}\n                  max={24}\n                  min={0}\n                  step={1}\n                  className=\"w-full\"\n                />\n              </div>\n              <div className=\"flex gap-2\">\n                <Input\n                  type=\"number\"\n                  placeholder=\"Min hours\"\n                  value={filters.duration[0]}\n                  onChange={(e) => updateFilters({ duration: [parseInt(e.target.value) || 0, filters.duration[1]] })}\n                  className=\"w-full\"\n                />\n                <Input\n                  type=\"number\"\n                  placeholder=\"Max hours\"\n                  value={filters.duration[1]}\n                  onChange={(e) => updateFilters({ duration: [filters.duration[0], parseInt(e.target.value) || 24] })}\n                  className=\"w-full\"\n                />\n              </div>\n            </div>\n          </PopoverContent>\n        </Popover>\n      </div>\n    </div>\n  );\n}; ","import React, { useState, useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from '@/components/ui/button';\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from '@/components/ui/command';\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from '@/components/ui/popover';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { Plane, Search, Star } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { Airport, searchAirports, getPopularAirports } from '@/utils/airportData';\n\ninterface AirportSelectorProps {\n  value: string;\n  onChange: (value: string) => void;\n  placeholder?: string;\n  className?: string;\n  disabled?: boolean;\n}\n\nexport const AirportSelector: React.FC<AirportSelectorProps> = ({\n  value,\n  onChange,\n  placeholder = 'Select airport',\n  className,\n  disabled = false,\n}) => {\n  const { t } = useTranslation();\n  const [open, setOpen] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState<Airport[]>([]);\n  const [popularAirports, setPopularAirports] = useState<Airport[]>([]);\n  const [selectedAirport, setSelectedAirport] = useState<Airport | null>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  // Load popular airports on mount\n  useEffect(() => {\n    setPopularAirports(getPopularAirports());\n  }, []);\n\n  // Set selected airport when value changes\n  useEffect(() => {\n    if (value) {\n      const airport = searchAirports(value).find(a => a.iata_code === value);\n      setSelectedAirport(airport || null);\n    } else {\n      setSelectedAirport(null);\n    }\n  }, [value]);\n\n  // Debounced search for better performance\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      if (searchQuery.trim()) {\n        const results = searchAirports(searchQuery);\n        setSearchResults(results);\n      } else {\n        setSearchResults([]);\n      }\n    }, 150); // 150ms debounce\n\n    return () => clearTimeout(timeoutId);\n  }, [searchQuery]);\n\n  const handleSelect = (airport: Airport) => {\n    setSelectedAirport(airport);\n    onChange(airport.iata_code);\n    setOpen(false);\n    setSearchQuery('');\n  };\n\n\n\n  const formatAirportSubtitle = (airport: Airport) => {\n    return `${airport.city}, ${airport.country}`;\n  };\n\n  return (\n    <Popover open={open} onOpenChange={setOpen}>\n      <PopoverTrigger asChild>\n        <Button\n          variant=\"outline\"\n          role=\"combobox\"\n          aria-expanded={open}\n          className={cn(\n            \"w-full justify-between text-left font-normal\",\n            !selectedAirport && \"text-muted-foreground\",\n            className\n          )}\n          disabled={disabled}\n        >\n          {selectedAirport ? (\n            <div className=\"flex items-center gap-2 truncate\">\n              <Plane className=\"h-4 w-4 text-[#61936f]\" />\n              <div className=\"flex flex-col items-start\">\n                <span className=\"font-medium\">{selectedAirport.iata_code}</span>\n                <span className=\"text-xs text-[#62626a] truncate\">\n                  {selectedAirport.city}, {selectedAirport.country}\n                </span>\n              </div>\n            </div>\n          ) : (\n            <div className=\"flex items-center gap-2\">\n              <Plane className=\"h-4 w-4 text-[#62626a]\" />\n              <span>{placeholder}</span>\n            </div>\n          )}\n          <Search className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-[400px] p-0\" align=\"start\">\n        <Command shouldFilter={false}>\n          <div className=\"flex items-center border-b px-3\">\n            <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n            <CommandInput\n              ref={inputRef}\n              placeholder=\"Search airports, cities, or countries...\"\n              value={searchQuery}\n              onValueChange={setSearchQuery}\n              className=\"border-0 focus:ring-0\"\n            />\n          </div>\n          <CommandList className=\"max-h-[300px]\">\n            <CommandEmpty>\n              <div className=\"p-4 text-center\">\n                <Plane className=\"mx-auto h-8 w-8 text-[#62626a] mb-2\" />\n                <p className=\"text-sm text-[#62626a]\">No airports found</p>\n                <p className=\"text-xs text-[#62626a] mt-1\">\n                  Try searching by airport code, city, or country\n                </p>\n              </div>\n            </CommandEmpty>\n            \n            {/* Search Results */}\n            {searchResults.length > 0 && (\n              <CommandGroup heading=\"Search Results\">\n                {searchResults.map((airport) => (\n                  <CommandItem\n                    key={airport.iata_code}\n                    value={`${airport.iata_code} ${airport.city} ${airport.name} ${airport.country}`}\n                    onSelect={() => handleSelect(airport)}\n                    className=\"flex items-center gap-3 p-3 cursor-pointer hover:bg-[#f8f9fa]\"\n                  >\n                    <div className=\"flex items-center justify-center w-8 h-8 bg-[#61936f] rounded-full text-white text-xs font-bold\">\n                      {airport.iata_code}\n                    </div>\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"font-medium text-[#1d1d1e] truncate\">\n                        {airport.name}\n                      </div>\n                      <div className=\"text-sm text-[#62626a] truncate\">\n                        {formatAirportSubtitle(airport)}\n                      </div>\n                    </div>\n                    <Badge variant=\"secondary\" className=\"text-xs\">\n                      {airport.type}\n                    </Badge>\n                  </CommandItem>\n                ))}\n              </CommandGroup>\n            )}\n\n            {/* Popular Airports */}\n            {searchQuery.length === 0 && (\n              <CommandGroup heading=\"Popular Airports\">\n                {popularAirports.map((airport) => (\n                  <CommandItem\n                    key={airport.iata_code}\n                    value={airport.iata_code}\n                    onSelect={() => handleSelect(airport)}\n                    className=\"flex items-center gap-3 p-3 cursor-pointer hover:bg-[#f8f9fa]\"\n                  >\n                    <div className=\"flex items-center justify-center w-8 h-8 bg-[#61936f] rounded-full text-white text-xs font-bold\">\n                      {airport.iata_code}\n                    </div>\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"font-medium text-[#1d1d1e] truncate\">\n                        {airport.name}\n                      </div>\n                      <div className=\"text-sm text-[#62626a] truncate\">\n                        {formatAirportSubtitle(airport)}\n                      </div>\n                    </div>\n                    <Star className=\"h-4 w-4 text-yellow-500\" />\n                  </CommandItem>\n                ))}\n              </CommandGroup>\n            )}\n\n            {/* Quick Actions */}\n            {searchQuery.length === 0 && (\n              <>\n                <Separator />\n                <div className=\"p-3\">\n                  <div className=\"text-xs text-[#62626a] mb-2\">Quick Tips:</div>\n                  <div className=\"space-y-1 text-xs text-[#62626a]\">\n                    <div>• Search by airport code (e.g., \"JFK\", \"LHR\", \"YUL\")</div>\n                    <div>• Search by city name (e.g., \"Montreal\", \"New York\", \"London\")</div>\n                    <div>• Search by airport name (e.g., \"Heathrow\", \"Trudeau\")</div>\n                    <div>• Search by country (e.g., \"Canada\", \"United States\")</div>\n                  </div>\n                </div>\n              </>\n            )}\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default AirportSelector; ","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { ArrowLeft, ArrowRight, Info, Loader2, CheckCircle, AlertCircle } from 'lucide-react';\n\n\ninterface AncillariesStepProps {\n  offerId: string;\n  passengers: Array<{\n    id: string;\n    title: string;\n    given_name: string;\n    family_name: string;\n    email: string;\n    phone_number: string;\n    gender: string;\n    born_on: string;\n  }>;\n  onAncillariesSelected: (payload: any, metadata: any) => void;\n  onBack: () => void;\n  onContinue: () => void;\n  selectedAncillaries?: any;\n  ancillariesMetadata?: any;\n}\n\nexport function AncillariesStep({\n  offerId,\n  passengers,\n  onAncillariesSelected,\n  onBack,\n  onContinue,\n  selectedAncillaries,\n  ancillariesMetadata\n}: AncillariesStepProps) {\n  const { t } = useTranslation('booking');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [ancillariesData, setAncillariesData] = useState<any>(null);\n\n  useEffect(() => {\n    // Initialize ancillaries data when component mounts\n    if (offerId && passengers.length > 0) {\n      setAncillariesData({\n        offer_id: offerId,\n        passengers: passengers.map(passenger => ({\n          id: passenger.id,\n          title: passenger.title,\n          given_name: passenger.given_name,\n          family_name: passenger.family_name,\n          email: passenger.email,\n          phone_number: passenger.phone_number,\n          gender: passenger.gender === 'male' ? 'm' : 'f',\n          born_on: passenger.born_on\n        }))\n      });\n    }\n  }, [offerId, passengers]);\n\n  const handleAncillariesChange = (payload: any, metadata: any) => {\n    onAncillariesSelected(payload, metadata);\n  };\n\n  const calculateAncillariesTotal = () => {\n    if (!ancillariesMetadata) return 0;\n    const basePrice = parseFloat(ancillariesMetadata.offer_total_amount || '0');\n    const originalPrice = parseFloat(ancillariesMetadata.original_offer_total_amount || '0');\n    return basePrice - originalPrice;\n  };\n\n  const hasAncillaries = selectedAncillaries && Object.keys(selectedAncillaries).length > 0;\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h2 className=\"text-2xl font-semibold text-[#1d1d1e] mb-2\">\n          {t('details.ancillariesSelection')}\n        </h2>\n        <p className=\"text-[#62626a]\">\n          {t('details.ancillariesSelectionDesc')}\n        </p>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center space-x-2\">\n            <Info className=\"h-5 w-5 text-[#61936f]\" />\n            <span>{t('ancillaries.title')}</span>\n          </CardTitle>\n          <CardDescription>\n            {t('ancillaries.description')}\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          {error ? (\n            <div className=\"text-center py-8\">\n              <div className=\"text-red-500 mb-4\">\n                <AlertCircle className=\"h-8 w-8 mx-auto mb-2\" />\n                <p className=\"font-medium\">Error loading ancillaries</p>\n                <p className=\"text-sm\">{error}</p>\n              </div>\n              <Button\n                variant=\"outline\"\n                onClick={() => window.location.reload()}\n                className=\"mt-4\"\n              >\n                Try Again\n              </Button>\n            </div>\n          ) : ancillariesData ? (\n            <div className=\"space-y-4\">\n                             <div className=\"text-center py-8\">\n                 <p className=\"text-[#62626a] mb-4\">\n                   Additional services like seat selection and extra baggage will be available during the booking process.\n                 </p>\n                 <p className=\"text-sm text-[#62626a]\">\n                   You can add these services when you complete your booking with the airline.\n                 </p>\n               </div>\n              \n              {isLoading && (\n                <div className=\"flex items-center justify-center py-8\">\n                  <Loader2 className=\"h-6 w-6 animate-spin text-[#61936f] mr-2\" />\n                  <span className=\"text-[#62626a]\">{t('ancillaries.loading')}</span>\n                </div>\n              )}\n\n              {hasAncillaries && ancillariesMetadata && (\n                <div className=\"mt-6 p-4 bg-green-50 border border-green-200 rounded-lg\">\n                  <div className=\"flex items-start space-x-3\">\n                    <CheckCircle className=\"h-5 w-5 text-green-500 mt-0.5\" />\n                    <div>\n                      <p className=\"font-medium text-green-900\">\n                        {t('ancillaries.selectServices')}\n                      </p>\n                      <div className=\"mt-2 space-y-2\">\n                        {Object.entries(selectedAncillaries).map(([passengerId, services]: [string, any]) => {\n                          const passenger = passengers.find(p => p.id === passengerId);\n                          return (\n                            <div key={passengerId} className=\"text-sm text-green-700\">\n                              <span className=\"font-medium\">\n                                {passenger ? `${passenger.given_name} ${passenger.family_name}` : 'Passenger'}:\n                              </span>\n                              <div className=\"ml-4 mt-1 space-y-1\">\n                                {services.bags && services.bags.length > 0 && (\n                                  <div>\n                                    <span className=\"font-medium\">Bags:</span>\n                                    {services.bags.map((bag: any, index: number) => (\n                                      <Badge key={index} variant=\"secondary\" className=\"ml-2\">\n                                        {bag.type} - {bag.weight}\n                                      </Badge>\n                                    ))}\n                                  </div>\n                                )}\n                                {services.seats && services.seats.length > 0 && (\n                                  <div>\n                                    <span className=\"font-medium\">Seats:</span>\n                                    {services.seats.map((seat: any, index: number) => (\n                                      <Badge key={index} variant=\"secondary\" className=\"ml-2\">\n                                        {seat.designator}\n                                      </Badge>\n                                    ))}\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          );\n                        })}\n                      </div>\n                      {calculateAncillariesTotal() > 0 && (\n                        <div className=\"mt-3 pt-3 border-t border-green-200\">\n                          <p className=\"text-sm text-green-700\">\n                            <span className=\"font-medium\">Additional cost:</span> {ancillariesMetadata.offer_total_currency} {calculateAncillariesTotal().toFixed(2)}\n                          </p>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"text-center py-8\">\n              <Loader2 className=\"h-8 w-8 animate-spin text-[#61936f] mx-auto mb-4\" />\n              <p className=\"text-[#62626a]\">{t('ancillaries.loading')}</p>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      <div className=\"flex justify-between\">\n        <Button\n          variant=\"outline\"\n          onClick={onBack}\n        >\n          <ArrowLeft className=\"h-4 w-4 mr-2\" />\n          {t('navigation.backToPassengers')}\n        </Button>\n        \n        <Button\n          onClick={onContinue}\n          className=\"bg-[#61936f] hover:bg-[#4a7a5a] text-white\"\n          disabled={isLoading}\n        >\n          {t('navigation.continueToLuggage')}\n          <ArrowRight className=\"h-4 w-4 ml-2\" />\n        </Button>\n      </div>\n    </div>\n  );\n} "],"names":["popularAirlines","code","name","allAirlines","connectingAirports","airports","slice","map","airport","iata_code","city","FlightFilters","onFiltersChange","filters","setFilters","useState","airlines","stops","bags","priceRange","duration","showAllAirlines","setShowAllAirlines","updateFilters","newFilters","updatedFilters","toggleAirline","airlineCode","newAirlines","includes","filter","hasActiveFilters","length","jsxs","className","children","jsx","Filter","Button","variant","size","onClick","clearedFilters","Popover","PopoverTrigger","asChild","Plane","PopoverContent","airline","Checkbox","id","checked","onCheckedChange","Label","htmlFor","Separator","Select","value","onValueChange","SelectTrigger","MapPin","SelectValue","placeholder","SelectContent","SelectItem","Luggage","DollarSign","Slider","max","min","step","Input","type","onChange","e","parseInt","target","airportCode","newAirports","toggleConnectingAirport","Clock","AirportSelector","disabled","t","useTranslation","open","setOpen","searchQuery","setSearchQuery","searchResults","setSearchResults","popularAirports","setPopularAirports","selectedAirport","setSelectedAirport","inputRef","useRef","useEffect","getPopularAirports","searchAirports","find","a","timeoutId","setTimeout","trim","results","clearTimeout","handleSelect","formatAirportSubtitle","country","onOpenChange","role","cn","Search","align","Command","shouldFilter","CommandInput","ref","CommandList","CommandEmpty","CommandGroup","heading","CommandItem","onSelect","Badge","Star","Fragment","AncillariesStep","offerId","passengers","onAncillariesSelected","onBack","onContinue","selectedAncillaries","ancillariesMetadata","isLoading","setIsLoading","error","setError","ancillariesData","setAncillariesData","offer_id","passenger","title","given_name","family_name","email","phone_number","gender","born_on","calculateAncillariesTotal","parseFloat","offer_total_amount","original_offer_total_amount","hasAncillaries","Object","keys","Card","CardHeader","CardTitle","Info","CardDescription","CardContent","AlertCircle","window","location","reload","Loader2","CheckCircle","entries","passengerId","services","p","bag","index","weight","seats","seat","designator","offer_total_currency","toFixed","ArrowLeft","ArrowRight"],"mappings":"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"}