{"version":3,"file":"components-cookie.BCKJ_Hyq.js","sources":["../../../../src/components/cookie/CookieConsentBanner.tsx","../../../../src/providers/CookieConsentProvider.tsx","../../../../src/components/cookie/CookieSettingsButton.tsx","../../../../src/components/cookie/CookieStats.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Button } from '@/components/ui/button';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Switch } from '@/components/ui/switch';\nimport { Label } from '@/components/ui/label';\nimport { useTranslation } from 'react-i18next';\nimport { ConsentCategory } from '@/hooks/useCookieConsent';\nimport { useCookieConsentContext } from '@/providers/CookieConsentProvider';\nimport { X, Shield, Settings, Info } from 'lucide-react';\n\nexport function CookieConsentBanner() {\n  const { t } = useTranslation('cookies');\n  const {\n    consentState,\n    isOpen,\n    acceptAll,\n    acceptNecessary,\n    updateCategoryConsent,\n    savePreferences,\n  } = useCookieConsentContext();\n  \n  const [activeTab, setActiveTab] = useState<string>('summary');\n  const [error, setError] = useState<string | null>(null);\n  \n  // Debug: Log banner state\n  useEffect(() => {\n    console.log('CookieConsentBanner state:', { isOpen, consentState });\n  }, [isOpen, consentState]);\n\n  // Handle consent operations with error handling\n  const handleAcceptAll = async () => {\n    try {\n      await acceptAll();\n    } catch (err) {\n      console.error('Failed to accept all cookies:', err);\n      setError(t('error.acceptAll'));\n    }\n  };\n\n  const handleAcceptNecessary = async () => {\n    try {\n      await acceptNecessary();\n    } catch (err) {\n      console.error('Failed to accept necessary cookies:', err);\n      setError(t('error.acceptNecessary'));\n    }\n  };\n\n  const handleSavePreferences = async () => {\n    try {\n      await savePreferences();\n    } catch (err) {\n      console.error('Failed to save cookie preferences:', err);\n      setError(t('error.savePreferences'));\n    }\n  };\n\n  const handleUpdateCategory = async (category: ConsentCategory, checked: boolean) => {\n    try {\n      await updateCategoryConsent(category, checked);\n    } catch (err) {\n      console.error(`Failed to update ${category} consent:`, err);\n      setError(t('error.updateCategory'));\n    }\n  };\n\n  // Clear error after 5 seconds\n  useEffect(() => {\n    if (error) {\n      const timer = setTimeout(() => setError(null), 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [error]);\n\n  // If the user has already interacted with the consent banner before,\n  // show the settings tab by default when reopening\n  useEffect(() => {\n    if (isOpen && consentState.hasInteracted) {\n      setActiveTab('settings');\n    }\n  }, [isOpen, consentState.hasInteracted]);\n\n  // Ensure banner is mounted even when not visible to prevent hydration issues\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <motion.div\n          initial={{ opacity: 0, y: 50 }}\n          animate={{ opacity: 1, y: 0 }}\n          exit={{ opacity: 0, y: 50 }}\n          transition={{ duration: 0.3 }}\n          className=\"fixed bottom-0 left-0 right-0 z-[100] p-4 md:p-6 bg-background border-t shadow-lg cookie-consent-component\"\n        >\n          {error && (\n            <div className=\"absolute top-0 left-0 right-0 p-2 bg-destructive text-destructive-foreground text-center text-sm\">\n              {error}\n            </div>\n          )}\n          \n          <div className=\"container max-w-7xl mx-auto\">\n            <div className=\"flex justify-between items-start mb-4\">\n              <div className=\"flex items-center\">\n                <Shield className=\"h-6 w-6 text-primary mr-2\" />\n                <h2 className=\"text-xl font-semibold\">{t('title')}</h2>\n              </div>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={acceptNecessary}\n                aria-label={t('close')}\n              >\n                <X className=\"h-4 w-4\" />\n              </Button>\n            </div>\n\n            <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n              <TabsList className=\"grid w-full grid-cols-2\">\n                <TabsTrigger value=\"summary\">\n                  <Info className=\"h-4 w-4 mr-2\" />\n                  {t('summary')}\n                </TabsTrigger>\n                <TabsTrigger value=\"settings\">\n                  <Settings className=\"h-4 w-4 mr-2\" />\n                  {t('settings')}\n                </TabsTrigger>\n              </TabsList>\n              \n              <TabsContent value=\"summary\" className=\"py-4\">\n                <p className=\"mb-4\">\n                  {t('summaryText')}\n                </p>\n                <p className=\"mb-6 text-sm text-muted-foreground\">\n                  {t('privacyLink')}{' '}\n                  <a href=\"/privacy\" className=\"text-primary hover:underline\">\n                    {t('privacyPolicy')}\n                  </a>\n                  {' '}{t('and')}{' '}\n                  <a href=\"/cookie-policy\" className=\"text-primary hover:underline\">\n                    {t('cookiePolicy')}\n                  </a>.\n                </p>\n              </TabsContent>\n              \n              <TabsContent value=\"settings\" className=\"py-4\">\n                <div className=\"space-y-6\">\n                  <CookieCategory\n                    id=\"necessary\"\n                    title={t('necessary.title')}\n                    description={t('necessary.description')}\n                    checked={consentState.necessary}\n                    onChange={() => {}} // Can't be changed\n                    disabled={true}\n                  />\n                  \n                  <CookieCategory\n                    id=\"functional\"\n                    title={t('functional.title')}\n                    description={t('functional.description')}\n                    checked={consentState.functional}\n                    onChange={(checked) => handleUpdateCategory('functional', checked)}\n                  />\n                  \n                  <CookieCategory\n                    id=\"analytics\"\n                    title={t('analytics.title')}\n                    description={t('analytics.description')}\n                    checked={consentState.analytics}\n                    onChange={(checked) => handleUpdateCategory('analytics', checked)}\n                  />\n                  \n                  <CookieCategory\n                    id=\"marketing\"\n                    title={t('marketing.title')}\n                    description={t('marketing.description')}\n                    checked={consentState.marketing}\n                    onChange={(checked) => handleUpdateCategory('marketing', checked)}\n                  />\n                </div>\n              </TabsContent>\n            </Tabs>\n\n            <div className=\"flex flex-col sm:flex-row gap-3 mt-4 justify-end\">\n              <Button\n                variant=\"outline\"\n                onClick={handleAcceptNecessary}\n              >\n                {t('acceptNecessary')}\n              </Button>\n              \n              {activeTab === 'settings' && (\n                <Button\n                  variant=\"outline\"\n                  onClick={handleSavePreferences}\n                >\n                  {t('savePreferences')}\n                </Button>\n              )}\n              \n              <Button\n                variant=\"default\"\n                onClick={handleAcceptAll}\n              >\n                {t('acceptAll')}\n              </Button>\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n}\n\ninterface CookieCategoryProps {\n  id: string;\n  title: string;\n  description: string;\n  checked: boolean;\n  onChange: (checked: boolean) => void;\n  disabled?: boolean;\n}\n\nfunction CookieCategory({\n  id,\n  title,\n  description,\n  checked,\n  onChange,\n  disabled = false\n}: CookieCategoryProps) {\n  return (\n    <div className=\"flex items-start justify-between space-x-4 rounded-lg border p-4\">\n      <div>\n        <h3 className=\"font-medium\">{title}</h3>\n        <p className=\"text-sm text-muted-foreground mt-1\">{description}</p>\n      </div>\n      <div className=\"flex items-center space-x-2\">\n        <Switch\n          id={`cookie-${id}`}\n          checked={checked}\n          onCheckedChange={onChange}\n          disabled={disabled}\n          aria-label={title}\n        />\n        <Label htmlFor={`cookie-${id}`} className=\"sr-only\">\n          {title}\n        </Label>\n      </div>\n    </div>\n  );\n} ","import { createContext, useContext, ReactNode, useEffect } from 'react';\nimport { useCookieConsent, CookieConsentState, ConsentCategory } from '@/hooks/useCookieConsent';\nimport { CookieConsentBanner } from '@/components/cookie/CookieConsentBanner';\n\ninterface CookieConsentContextType {\n  consentState: CookieConsentState;\n  isOpen: boolean;\n  acceptAll: () => void;\n  acceptNecessary: () => void;\n  updateCategoryConsent: (category: ConsentCategory, value: boolean) => void;\n  savePreferences: () => void;\n  openSettings: () => void;\n  hasConsent: (category: ConsentCategory) => boolean;\n}\n\nconst CookieConsentContext = createContext<CookieConsentContextType | undefined>(undefined);\n\nexport function CookieConsentProvider({ children }: { children: ReactNode }) {\n  const cookieConsent = useCookieConsent();\n  \n  // Helper function to check if a specific category has consent\n  const hasConsent = (category: ConsentCategory): boolean => {\n    return cookieConsent.consentState[category];\n  };\n\n  const value: CookieConsentContextType = {\n    ...cookieConsent,\n    hasConsent,\n  };\n  \n  return (\n    <CookieConsentContext.Provider value={value}>\n      {children}\n      <CookieConsentBanner />\n    </CookieConsentContext.Provider>\n  );\n}\n\nexport const useCookieConsentContext = () => {\n  const context = useContext(CookieConsentContext);\n  if (context === undefined) {\n    throw new Error('useCookieConsentContext must be used within a CookieConsentProvider');\n  }\n  return context;\n}; ","import { Button, ButtonProps } from '@/components/ui/button';\nimport { useTranslation } from 'react-i18next';\nimport { useCookieConsentContext } from '@/providers/CookieConsentProvider';\nimport { Cookie } from 'lucide-react';\nimport React, { useEffect } from 'react';\n\ninterface CookieSettingsButtonProps extends Omit<ButtonProps, 'onClick'> {\n  showIcon?: boolean;\n  variant?: ButtonProps['variant'];\n  size?: ButtonProps['size'];\n  className?: string;\n}\n\nexport function CookieSettingsButton({ \n  showIcon = true, \n  variant = \"link\", \n  size = \"sm\",\n  className,\n  ...props \n}: CookieSettingsButtonProps) {\n  const { t } = useTranslation('cookies');\n  const cookieContext = useCookieConsentContext();\n\n  // Debug: Log component mount and context state\n  useEffect(() => {\n    console.log('CookieSettingsButton mounted');\n    console.log('Cookie context state:', {\n      isOpen: cookieContext?.isOpen,\n      hasInteracted: cookieContext?.consentState.hasInteracted,\n      consentState: cookieContext?.consentState\n    });\n  }, []);\n\n  // Debug: Log context changes\n  useEffect(() => {\n    console.log('Cookie context updated:', {\n      isOpen: cookieContext?.isOpen,\n      hasInteracted: cookieContext?.consentState.hasInteracted,\n      consentState: cookieContext?.consentState\n    });\n  }, [cookieContext?.isOpen, cookieContext?.consentState]);\n\n  const handleClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    console.log('Cookie settings button clicked');\n    \n    try {\n      if (!cookieContext?.openSettings) {\n        console.error('openSettings function is not available in context');\n        throw new Error('openSettings function is not available');\n      }\n      \n      console.log('Calling openSettings...');\n      cookieContext.openSettings();\n      console.log('openSettings called successfully');\n    } catch (error) {\n      console.error('Error opening cookie settings:', error);\n    }\n  };\n\n  if (!cookieContext) {\n    console.error('CookieSettingsButton must be used within a CookieConsentProvider');\n    return null;\n  }\n\n  return (\n    <Button\n      variant={variant}\n      size={size}\n      onClick={handleClick}\n      className={className}\n      {...props}\n    >\n      {showIcon && <Cookie className=\"h-4 w-4 mr-2\" />}\n      {t('settings')}\n    </Button>\n  );\n} ","import { useEffect, useState } from 'react';\nimport { cookieMonitor } from '@/utils/cookieMonitor';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Progress } from '@/components/ui/progress';\nimport { useTranslation } from 'react-i18next';\n\ninterface CookieStats {\n  totalSize: number;\n  cookieCount: number;\n  categoryCount: {\n    necessary: number;\n    functional: number;\n    analytics: number;\n    marketing: number;\n  };\n}\n\nexport function CookieStats() {\n  const { t } = useTranslation('cookies');\n  const [stats, setStats] = useState<CookieStats>({\n    totalSize: 0,\n    cookieCount: 0,\n    categoryCount: {\n      necessary: 0,\n      functional: 0,\n      analytics: 0,\n      marketing: 0\n    }\n  });\n\n  useEffect(() => {\n    // Update stats every minute\n    const updateStats = () => {\n      const inventory = cookieMonitor.getInventory();\n      const categoryCount = cookieMonitor.getCookieCountByCategory();\n      \n      setStats({\n        totalSize: cookieMonitor.getTotalSize(),\n        cookieCount: inventory.size,\n        categoryCount\n      });\n    };\n\n    updateStats();\n    const interval = setInterval(updateStats, 60000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const maxSize = 4096 * 50; // 200KB total domain limit\n  const sizePercentage = (stats.totalSize / maxSize) * 100;\n  const maxCookies = 50;\n  const cookiePercentage = (stats.cookieCount / maxCookies) * 100;\n\n  return (\n    <div className=\"space-y-4\">\n      <Card>\n        <CardHeader>\n          <CardTitle>{t('statsTitle')}</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-6\">\n            {/* Total Size */}\n            <div>\n              <div className=\"flex justify-between mb-2\">\n                <span>{t('stats.totalSize')}</span>\n                <span>{(stats.totalSize / 1024).toFixed(2)} KB / {(maxSize / 1024).toFixed(2)} KB</span>\n              </div>\n              <Progress value={sizePercentage} className=\"h-2\" />\n            </div>\n\n            {/* Cookie Count */}\n            <div>\n              <div className=\"flex justify-between mb-2\">\n                <span>{t('stats.cookieCount')}</span>\n                <span>{stats.cookieCount} / {maxCookies}</span>\n              </div>\n              <Progress value={cookiePercentage} className=\"h-2\" />\n            </div>\n\n            {/* Category Distribution */}\n            <div>\n              <h4 className=\"font-medium mb-4\">{t('stats.categories')}</h4>\n              <div className=\"grid gap-3\">\n                {Object.entries(stats.categoryCount).map(([category, count]) => (\n                  <div key={category} className=\"flex justify-between items-center\">\n                    <span className=\"capitalize\">{t(`stats.category.${category}`)}</span>\n                    <span className=\"text-sm text-muted-foreground\">{count}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n} "],"names":["CookieConsentBanner","t","useTranslation","consentState","isOpen","acceptAll","acceptNecessary","updateCategoryConsent","savePreferences","useCookieConsentContext","activeTab","setActiveTab","useState","error","setError","useEffect","handleUpdateCategory","async","category","checked","err","timer","setTimeout","clearTimeout","hasInteracted","jsx","AnimatePresence","children","jsxs","motion","div","initial","opacity","y","animate","exit","transition","duration","className","Shield","Button","variant","size","onClick","X","Tabs","value","onValueChange","TabsList","TabsTrigger","Info","Settings","TabsContent","href","CookieCategory","id","title","description","necessary","onChange","disabled","functional","analytics","marketing","Switch","onCheckedChange","Label","htmlFor","CookieConsentContext","createContext","CookieConsentProvider","cookieConsent","useCookieConsent","hasConsent","Provider","context","useContext","Error","CookieSettingsButton","showIcon","props","cookieContext","e","preventDefault","stopPropagation","openSettings","Cookie","CookieStats","stats","setStats","totalSize","cookieCount","categoryCount","updateStats","inventory","cookieMonitor","getInventory","getCookieCountByCategory","getTotalSize","interval","setInterval","clearInterval","maxSize","sizePercentage","cookiePercentage","Card","CardHeader","CardTitle","CardContent","toFixed","Progress","Object","entries","map","count"],"mappings":"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"}