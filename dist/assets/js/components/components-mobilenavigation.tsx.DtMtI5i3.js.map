{"version":3,"mappings":"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","names":["LazyUpgradePopup","lazy","__vitePreload","import","__VITE_PRELOAD__","then","m","default","UpgradePopup","LazyZapBookingPopup","ZapBookingPopup","LazyFullCreateTripDialog","module","FullCreateTripDialog","MobileNavigation","session","onSignOut","t","i18n","useTranslation","tProfile","zapbookingT","location","useLocation","navigate","useNavigate","useUserRole","isDashboardOpen","setIsDashboardOpen","useState","avatarUrl","setAvatarUrl","isUpgradePopupOpen","setIsUpgradePopupOpen","isBusinessUser","setIsBusinessUser","isZapBookingPopupOpen","setIsZapBookingPopupOpen","isCreateTripOpen","setIsCreateTripOpen","isLanguageExpanded","setIsLanguageExpanded","useEffect","user","id","getProfile","checkBusinessStatus","async","userId","data","error","supabase","from","select","eq","single","avatar_url","publicUrl","storage","getPublicUrl","businessData","businessError","memberData","memberError","isActive","path","pathname","isHomePage","language","jsxs","className","style","boxShadow","children","Popover","jsx","PopoverTrigger","asChild","Calendar","PopoverContent","align","Link","to","reloadDocument","Plane","Suspense","fallback","buttonVariant","open","onOpenChange","src","srcSet","width","height","alt","loading","onClick","UserAvatar","url","size","FileText","Home","e","preventDefault","Globe","Users","Fragment","href","target","rel","xmlns","viewBox","fill","fillRule","d","clipRule","DollarSign","ChevronDown","SUPPORTED_LANGUAGES","map","lang","isCurrent","languageInfo","en","name","flag","fr","es","newLanguage","changeLanguage","auth","getUser","update","localStorage","setItem","Date","now","toString","dbError","pathSegments","split","filter","Boolean","includes","newPath","join","replace","toast","title","description","duration","variant","handleLanguageChange","Check","LogOut","isOpen","onClose","LogIn","LanguageSelector"],"ignoreList":[],"sources":["../../../../src/components/MobileNavigation.tsx"],"sourcesContent":["import React, { useState, useEffect, lazy, Suspense } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\n\nimport { useTranslation } from 'react-i18next';\nimport { SUPPORTED_LANGUAGES } from '@/i18n';\nimport { Button } from \"@/components/ui/button\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\nimport { toast } from \"@/components/ui/use-toast\";\nimport { useUserRole } from '@/hooks/useUserRole';\nimport { LanguageSelector } from \"@/components/LanguageSelector\";\nimport { ThemeToggle } from \"@/components/theme-toggle\";\nimport { UserAvatar } from './navigation/UserAvatar';\nimport { supabase } from '@/integrations/supabase/client';\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from \"@/components/ui/dropdown-menu\";\nimport { \n  Plane, \n  LogIn, \n  Users, \n  Calendar, \n  FileText, \n  Home, \n  Globe, \n  DollarSign, \n  LogOut,\n  Check,\n  ChevronDown \n} from \"lucide-react\";\n\n// Lazy loaded popups to keep initial bundle small\nconst LazyUpgradePopup = lazy(() => import('@/components/UpgradePopup').then(m => ({ default: m.UpgradePopup })));\nconst LazyZapBookingPopup = lazy(() => import('@/components/ZapBookingPopup').then(m => ({ default: m.ZapBookingPopup })));\n\n// Lazy-load heavy Create Trip dialog only when user taps the button\nconst LazyFullCreateTripDialog = lazy(() => import('@/components/FullCreateTripDialog').then(module => ({ default: module.FullCreateTripDialog })));\n\ninterface MobileNavigationProps {\n  session: any;\n  onSignOut: () => void;\n  isAdmin?: boolean;\n}\n\nexport function MobileNavigation({ session, onSignOut }: MobileNavigationProps) {\n  const { t, i18n } = useTranslation('navigation');\n  const { t: tProfile } = useTranslation('profile');\n  const { t: zapbookingT } = useTranslation('zapbooking');\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { userRole, isAdmin, refreshRole } = useUserRole();\n  const [isDashboardOpen, setIsDashboardOpen] = useState(false);\n  const [avatarUrl, setAvatarUrl] = useState<string | null>(null);\n  const [isUpgradePopupOpen, setIsUpgradePopupOpen] = useState(false);\n  const [isBusinessUser, setIsBusinessUser] = useState(false);\n  const [isZapBookingPopupOpen, setIsZapBookingPopupOpen] = useState(false);\n  const [isCreateTripOpen, setIsCreateTripOpen] = useState(false);\n  const [isLanguageExpanded, setIsLanguageExpanded] = useState(false);\n\n  useEffect(() => {\n    if (session?.user?.id) {\n      getProfile(session.user.id);\n      // Check if user has business access (for external redirect)\n      checkBusinessStatus(session.user.id);\n    }\n  }, [session?.user?.id]);\n\n  const getProfile = async (userId: string) => {\n    try {\n      const { data, error } = await supabase\n        .from('profiles')\n        .select('avatar_url')\n        .eq('id', userId)\n        .single();\n\n      if (error) throw error;\n      \n      if (data?.avatar_url) {\n        const { data: { publicUrl } } = supabase.storage\n          .from('avatars')\n          .getPublicUrl(data.avatar_url);\n        setAvatarUrl(publicUrl);\n      } else {\n        setAvatarUrl(null);\n      }\n    } catch (error) {\n      console.error('Error fetching profile:', error);\n    }\n  };\n\n  const checkBusinessStatus = async (userId: string) => {\n    try {\n      // Check if user owns a business\n      const { data: businessData, error: businessError } = await supabase\n        .from('businesses')\n        .select('id')\n        .eq('owner_id', userId)\n        .single();\n\n      if (!businessError && businessData) {\n        setIsBusinessUser(true);\n        return;\n      }\n\n      // Check if user is a team member\n      const { data: memberData, error: memberError } = await supabase\n        .from('business_members')\n        .select('id')\n        .eq('user_id', userId)\n        .single();\n\n      if (!memberError && memberData) {\n        setIsBusinessUser(true);\n      }\n    } catch (error) {\n      console.error('Error checking business status:', error);\n    }\n  };\n\n  const handleLanguageChange = async (newLanguage: string) => {\n    if (i18n.language === newLanguage) {\n      setIsDashboardOpen(false);\n      return;\n    }\n    \n    try {\n      // Change the language\n      await i18n.changeLanguage(newLanguage);\n\n      // Persist to user profile if logged in\n      try {\n        const { data: { user } } = await supabase.auth.getUser();\n        if (user?.id) {\n          await supabase\n            .from('profiles')\n            .update({ language: newLanguage })\n            .eq('id', user.id);\n          // Update local cache to align with App.tsx behavior\n          localStorage.setItem('user_language', newLanguage);\n          localStorage.setItem('user_language_timestamp', Date.now().toString());\n        }\n      } catch (dbError) {\n        console.error('Error updating language in profile:', dbError);\n      }\n      \n      // Update URL with new language\n      const pathSegments = location.pathname.split('/').filter(Boolean);\n      const isLanguageInPath = SUPPORTED_LANGUAGES.includes(pathSegments[0]);\n      \n      if (isLanguageInPath) {\n        // Replace the language segment in the URL\n        pathSegments[0] = newLanguage;\n        const newPath = '/' + pathSegments.join('/');\n        navigate(newPath, { replace: true });\n      } else {\n        // Add language to the URL\n        const newPath = `/${newLanguage}${location.pathname}`;\n        navigate(newPath, { replace: true });\n      }\n      \n      // Show success toast\n      toast({\n        title: t('languageChanged'),\n        description: t('languageChangedDescription'),\n        duration: 2000,\n      });\n      \n      // Close the dropdown\n      setIsDashboardOpen(false);\n      \n    } catch (error) {\n      console.error('Error changing language:', error);\n      toast({\n        title: t('error'),\n        description: t('errorDescription'),\n        variant: \"destructive\",\n        duration: 3000,\n      });\n    }\n  };\n\n  const isActive = (path: string) => location.pathname === path;\n  const isHomePage = location.pathname === '/' || location.pathname === `/${i18n.language}` || location.pathname === `/${i18n.language}/`;\n\n\n\n\n\n  if (!session) {\n    // Navigation for logged-out users\n    return (\n      <nav\n        aria-label=\"Main navigation\"\n        className=\"fixed bottom-4 left-1/2 z-50 -translate-x-1/2 px-2 w-[95vw] max-w-md rounded-2xl shadow-xl bg-[#fcfcfc] border border-[#eaeaea] flex items-center justify-between md:hidden\"\n        style={{ boxShadow: '0 8px 32px rgba(29,29,30,0.10)' }}\n      >\n        {/* Only show home button when not on homepage */}\n        {!isHomePage && (\n          <Link to=\"/\" reloadDocument className=\"flex flex-col items-center flex-1 py-2\" aria-label={t('home')}>\n            <img \n              src=\"/zaparound-uploads/smalllogo.webp\"\n              srcSet=\"/zaparound-uploads/smalllogo.webp 1x, /zaparound-uploads/smalllogo.webp 2x\"\n              width=\"28\"\n              height=\"28\"\n              alt=\"ZapAround Logo\"\n              loading=\"lazy\"\n              className=\"w-7 h-7 object-contain\"\n            />\n            <span className=\"text-[11px] mt-0.5 text-[#62626a]\">{t('home')}</span>\n          </Link>\n        )}\n        {/* ZapBooking Button for non-connected users */}\n        <Popover>\n          <PopoverTrigger asChild>\n            <button className=\"flex flex-col items-center flex-1 py-2\" aria-label={zapbookingT('menu.title')}>\n              <Plane className=\"w-6 h-6 text-[#62626a]\" />\n              <span className=\"text-[11px] mt-0.5 text-[#62626a]\">{zapbookingT('menu.title')}</span>\n            </button>\n          </PopoverTrigger>\n          <PopoverContent className=\"w-60\" align=\"center\">\n            <div className=\"grid gap-2\">\n              <Link \n                to={`/${i18n.language}/travel-flight`}\n                reloadDocument\n                className=\"flex items-center gap-2 p-3 hover:bg-[#f3f3f3] rounded-md\"\n              >\n                <Plane className=\"w-5 h-5 text-[#62626a]\" />\n                <span className=\"text-sm\">{zapbookingT('menu.flights')}</span>\n              </Link>\n            \n              \n            </div>\n          </PopoverContent>\n        </Popover>\n        \n        <Link to={`/${i18n.language}/auth`} className=\"flex flex-col items-center flex-1 py-2\" aria-label={t('signIn')}>\n          <LogIn className={`w-6 h-6 ${isActive('/auth') ? 'text-[#61936f]' : 'text-[#62626a]'}`} />\n          <span className=\"text-[11px] mt-0.5 text-[#62626a]\">{t('signIn')}</span>\n        </Link>\n        <Link to={`/${i18n.language}/community`} className=\"flex flex-col items-center flex-1 py-2\" aria-label={t('community')}>\n          <Users className={`w-6 h-6 ${isActive('/community') ? 'text-[#61936f]' : 'text-[#62626a]'}`} />\n          <span className=\"text-[11px] mt-0.5 text-[#62626a]\">{t('community')}</span>\n        </Link>\n        <div className=\"flex flex-col items-center flex-1 py-2\">\n          <LanguageSelector variant=\"ghost\" className=\"h-7 w-7\" />\n          <span className=\"text-[11px] mt-0.5 text-[#62626a]\">{t('language')}</span>\n        </div>\n      </nav>\n    );\n  }\n\n  // Navigation for logged-in users\n  return (\n    <nav\n      aria-label=\"Main navigation\"\n      className=\"fixed bottom-4 left-1/2 z-50 -translate-x-1/2 px-2 w-[95vw] max-w-md rounded-2xl shadow-xl bg-[#fcfcfc] border border-[#eaeaea] flex items-center justify-between md:hidden\"\n      style={{ boxShadow: '0 8px 32px rgba(29,29,30,0.10)' }}\n    >\n      {/* ZapBooking Button */}\n      <Popover>\n        <PopoverTrigger asChild>\n          <button \n            className=\"flex flex-col items-center flex-1 py-2\"\n            aria-label={zapbookingT('menu.title')}\n          >\n            <Calendar className=\"w-6 h-6 text-[#61936f]\" />\n            <span className=\"text-[11px] mt-0.5 text-[#62626a]\">{zapbookingT('menu.title')}</span>\n          </button>\n        </PopoverTrigger>\n        <PopoverContent className=\"w-60\" align=\"center\">\n          <div className=\"grid gap-2\">\n            <Link \n              to={`/${i18n.language}/travel-flight`}\n              reloadDocument\n              className=\"flex items-center gap-2 p-3 hover:bg-[#f3f3f3] rounded-md\"\n            >\n              <Plane className=\"w-5 h-5 text-[#62626a]\" />\n              <span className=\"text-sm\">{zapbookingT('menu.flights')}</span>\n            </Link>\n            \n          </div>\n        </PopoverContent>\n      </Popover>\n\n      {/* Create Trip Dialog – deferred load to minimise initial JS */}\n      <Suspense fallback={null}>\n        <LazyFullCreateTripDialog \n          session={session}\n          buttonVariant=\"mobile\"\n        />\n      </Suspense>\n\n              {/* Home or ZapMenu */}\n        <Popover open={isDashboardOpen} onOpenChange={(open) => {\n          setIsDashboardOpen(open);\n          if (!open) {\n            setIsLanguageExpanded(false);\n          }\n        }}>\n          <PopoverTrigger asChild>\n            <button className=\"flex flex-col items-center flex-1 py-2\" aria-label=\"ZapMenu\">\n              <img \n                src=\"/zaparound-uploads/smalllogo.webp\"\n                srcSet=\"/zaparound-uploads/smalllogo.webp 1x, /zaparound-uploads/smalllogo.webp 2x\"\n                width=\"28\"\n                height=\"28\"\n                alt=\"ZapAround Logo\"\n                loading=\"lazy\"\n                className=\"w-7 h-7 object-contain\"\n              />\n              <span className=\"text-[11px] mt-0.5 text-[#62626a]\">ZapMenu</span>\n            </button>\n          </PopoverTrigger>\n        <PopoverContent className=\"w-60 z-[100]\" align=\"center\">\n          <div className=\"grid gap-2\">\n            <Link \n              to={`/${i18n.language}/profile`}\n              className=\"flex items-center gap-2 p-3 hover:bg-[#f3f3f3] rounded-md\"\n              onClick={() => setIsDashboardOpen(false)}\n            >\n              <UserAvatar url={avatarUrl} size=\"sm\" />\n              <span className=\"text-sm\">{t('profile')}</span>\n            </Link>\n            <Link \n              to={`/${i18n.language}/blog`}\n              className=\"flex items-center gap-2 p-3 hover:bg-[#f3f3f3] rounded-md\"\n              onClick={() => setIsDashboardOpen(false)}\n            >\n              <FileText className=\"w-5 h-5 text-[#62626a]\" />\n              <span className=\"text-sm\">{t('blog')}</span>\n            </Link>\n            <div className=\"h-px bg-gray-200 my-1\" />\n            <Link \n              to={`/${i18n.language}/dashboard`}\n              className=\"flex items-center gap-2 p-3 hover:bg-[#f3f3f3] rounded-md w-full text-left\"\n              onClick={() => setIsDashboardOpen(false)}\n            >\n              <Home className=\"w-5 h-5 text-[#62626a]\" />\n              <span className=\"text-sm\">{t('zapboard')}</span>\n            </Link>\n\n            <button \n              className=\"flex items-center gap-2 p-3 hover:bg-[#f3f3f3] rounded-md w-full text-left\"\n              onClick={(e) => {\n                e.preventDefault();\n                navigate('/map-dashboard');\n                setIsDashboardOpen(false);\n              }}\n            >\n              <Globe className=\"w-5 h-5 text-[#62626a]\" />\n              <span className=\"text-sm\">{t('mapView') || 'Map View'}</span>\n            </button>\n            <Link \n              to={`/${i18n.language}/community`}\n              className=\"flex items-center gap-2 p-3 hover:bg-[#f3f3f3] rounded-md\"\n              onClick={() => setIsDashboardOpen(false)}\n            >\n              <Users className=\"w-5 h-5 text-[#62626a]\" />\n              <span className=\"text-sm\">{t('community')}</span>\n            </Link>\n            {/* Business Dashboard - Only show for business users */}\n            {isBusinessUser && (\n              <>\n                <div className=\"h-px bg-gray-200 my-1\" />\n                <a \n                  href=\"https://business.zaparound.com\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"flex items-center gap-2 p-3 hover:bg-[#f3f3f3] rounded-md\"\n                  onClick={() => setIsDashboardOpen(false)}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-5 h-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h8a2 2 0 012 2v12a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm3 1h6v4H7V5zm6 6H7v2h6v-2z\" clipRule=\"evenodd\" />\n                  </svg>\n                  <span className=\"text-sm\">{t('business')}</span>\n                </a>\n              </>\n            )}\n            {/* Tools Section */}\n            <div className=\"h-px bg-gray-200 my-1\" />\n            <Link \n              to={`/${i18n.language}/currency-converter`}\n              className=\"flex items-center gap-2 p-3 hover:bg-[#f3f3f3] rounded-md\"\n              onClick={() => setIsDashboardOpen(false)}\n            >\n              <DollarSign className=\"w-5 h-5 text-[#62626a]\" />\n              <span className=\"text-sm\">{t('currencyConverter')}</span>\n            </Link>\n            \n            {/* Language Picker Section - Collapsible */}\n            <div className=\"h-px bg-gray-200 my-1\" />\n            <div className=\"p-2\">\n              <button\n                onClick={() => setIsLanguageExpanded(!isLanguageExpanded)}\n                className=\"w-full flex items-center justify-between p-2 hover:bg-[#f3f3f3] rounded-md transition-all duration-200\"\n              >\n                <div className=\"flex items-center gap-2\">\n                  <Globe className=\"w-4 h-4 text-[#62626a]\" />\n                  <span className=\"text-sm font-medium text-[#62626a]\">{t('language')}</span>\n                </div>\n                <ChevronDown \n                  className={`h-4 w-4 text-[#62626a] transition-transform duration-200 ${\n                    isLanguageExpanded ? 'rotate-180' : ''\n                  }`} \n                />\n              </button>\n              \n              {isLanguageExpanded && (\n                <div className=\"mt-2 space-y-1 animate-in slide-in-from-top-2 duration-200\">\n                  {SUPPORTED_LANGUAGES.map((lang) => {\n                    const isCurrent = lang === i18n.language;\n                    const languageData: Record<string, { name: string; flag: string }> = {\n                      en: { name: 'English', flag: '🇺🇸' },\n                      fr: { name: 'Français', flag: '🇫🇷' },\n                      es: { name: 'Español', flag: '🇪🇸' }\n                    };\n                    const languageInfo = languageData[lang];\n                    \n                    return (\n                      <button\n                        key={lang}\n                        onClick={() => {\n                          handleLanguageChange(lang);\n                          setIsLanguageExpanded(false);\n                        }}\n                        className={`w-full flex items-center justify-between p-2 rounded-md transition-all duration-200 ml-2 ${\n                          isCurrent \n                            ? 'bg-[#61936f]/10 text-[#61936f]' \n                            : 'hover:bg-[#f3f3f3] text-[#62626a]'\n                        }`}\n                      >\n                        <div className=\"flex items-center gap-2\">\n                          <span className=\"text-sm\">{languageInfo.flag}</span>\n                          <span className=\"text-sm font-medium\">{languageInfo.name}</span>\n                        </div>\n                        {isCurrent && (\n                          <Check className=\"h-4 w-4 text-[#61936f]\" />\n                        )}\n                      </button>\n                    );\n                  })}\n                </div>\n              )}\n            </div>\n            \n            <div className=\"h-px bg-gray-200 my-1\" />\n            <button\n              onClick={() => {\n                onSignOut();\n                setIsDashboardOpen(false);\n              }}\n              className=\"flex items-center gap-2 p-3 hover:bg-[#f3f3f3] rounded-md text-left w-full\"\n            >\n              <LogOut className=\"w-5 h-5 text-[#62626a]\" />\n              <span className=\"text-sm\">{t('signOut')}</span>\n            </button>\n          </div>\n        </PopoverContent>\n      </Popover>\n\n      {/* ZapBooking Popup */}\n      <Suspense fallback={null}>\n        <LazyZapBookingPopup \n          isOpen={isZapBookingPopupOpen}\n          onClose={() => setIsZapBookingPopupOpen(false)}\n        />\n      </Suspense>\n\n      {/* Upgrade Popup */}\n      <Suspense fallback={null}>\n        <LazyUpgradePopup \n          isOpen={isUpgradePopupOpen}\n          onClose={() => setIsUpgradePopupOpen(false)}\n        />\n      </Suspense>\n    </nav>\n  );\n}\n"],"file":"assets/js/components/components-mobilenavigation.tsx.DtMtI5i3.js"}