{"version":3,"file":"components-languageselector.tsx.x8buceJ0.js","sources":["../../../../src/components/LanguageSelector.tsx"],"sourcesContent":["import { useTranslation } from 'react-i18next';\nimport { Globe, Check } from 'lucide-react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Button } from './ui/button';\nimport { useToast } from '@/components/ui/use-toast';\nimport { SUPPORTED_LANGUAGES } from '@/i18n';\nimport {\n  PopoverForm,\n  PopoverFormSuccess,\n} from \"@/components/ui/popover-form\";\nimport { useState } from 'react';\nimport { supabase } from '@/integrations/supabase/client';\n\ninterface LanguageSelectorProps {\n  variant?: \"default\" | \"ghost\" | \"outline\";\n  className?: string;\n}\n\nexport function LanguageSelector({ variant = \"ghost\", className = \"\" }: LanguageSelectorProps) {\n  const { t, i18n } = useTranslation('languageSelector');\n  const { toast } = useToast();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [open, setOpen] = useState(false);\n  const [selectedLanguage, setSelectedLanguage] = useState<string | null>(null);\n  const [showSuccess, setShowSuccess] = useState(false);\n\n  const handleLanguageChange = async (newLanguage: string) => {\n    if (i18n.language === newLanguage) {\n      setOpen(false);\n      return;\n    }\n    \n    setSelectedLanguage(newLanguage);\n    setShowSuccess(true);\n    \n    try {\n      // Change the language\n      await i18n.changeLanguage(newLanguage);\n\n      // Persist to user profile if logged in\n      try {\n        const { data: { user } } = await supabase.auth.getUser();\n        if (user?.id) {\n          await supabase\n            .from('profiles')\n            .update({ language: newLanguage })\n            .eq('id', user.id);\n          // Update local cache to align with App.tsx behavior\n          localStorage.setItem('user_language', newLanguage);\n          localStorage.setItem('user_language_timestamp', Date.now().toString());\n        }\n      } catch (dbError) {\n        console.error('Error updating language in profile:', dbError);\n      }\n      \n      // Update URL with new language\n      const pathSegments = location.pathname.split('/').filter(Boolean);\n      const isLanguageInPath = SUPPORTED_LANGUAGES.includes(pathSegments[0]);\n      \n      if (isLanguageInPath) {\n        // Replace the language segment in the URL\n        pathSegments[0] = newLanguage;\n        const newPath = '/' + pathSegments.join('/');\n        navigate(newPath, { replace: true });\n      } else {\n        // Add language to the URL\n        const newPath = `/${newLanguage}${location.pathname}`;\n        navigate(newPath, { replace: true });\n      }\n      \n      // Auto-close after success\n      setTimeout(() => {\n        setOpen(false);\n        setShowSuccess(false);\n        setSelectedLanguage(null);\n      }, 2000);\n      \n    } catch (error) {\n      console.error('Error changing language:', error);\n      toast({\n        title: t('error'),\n        description: t('errorDescription'),\n        variant: \"destructive\",\n        duration: 3000,\n      });\n      setShowSuccess(false);\n      setSelectedLanguage(null);\n    }\n  };\n\n  // Language display names and flags\n  const languageData: Record<string, { name: string; flag: string }> = {\n    en: { name: 'English', flag: 'ðŸ‡ºðŸ‡¸' },\n    fr: { name: 'FranÃ§ais', flag: 'ðŸ‡«ðŸ‡·' },\n    es: { name: 'EspaÃ±ol', flag: 'ðŸ‡ªðŸ‡¸' }\n  };\n\n  const currentLanguage = i18n.language || 'en';\n\n  return (\n    <PopoverForm\n      title=\"Select Language\"\n      open={open}\n      setOpen={setOpen}\n      width=\"280px\"\n      height=\"auto\"\n      showCloseButton={!showSuccess}\n      showSuccess={showSuccess}\n      trigger={\n        <Button\n          variant={variant}\n          size=\"icon\"\n          className={className}\n          onClick={() => setOpen(true)}\n        >\n          <Globe className=\"h-5 w-5\" />\n        </Button>\n      }\n      openChild={\n        <div className=\"p-4 space-y-3\">\n          <div className=\"text-sm text-gray-600 mb-4\">\n            Choose your preferred language\n          </div>\n          {SUPPORTED_LANGUAGES.map((lang) => {\n            const isCurrent = lang === currentLanguage;\n            const languageInfo = languageData[lang];\n            \n            return (\n              <button\n                key={lang}\n                onClick={() => handleLanguageChange(lang)}\n                className={`w-full flex items-center justify-between p-3 rounded-lg border transition-all duration-200 ${\n                  isCurrent \n                    ? 'border-[#61936f] bg-[#61936f]/5 text-[#61936f]' \n                    : 'border-gray-200 hover:border-[#61936f]/50 hover:bg-gray-50'\n                }`}\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-lg\">{languageInfo.flag}</span>\n                  <span className=\"font-medium\">{languageInfo.name}</span>\n                </div>\n                {isCurrent && (\n                  <Check className=\"h-4 w-4 text-[#61936f]\" />\n                )}\n              </button>\n            );\n          })}\n        </div>\n      }\n      successChild={\n        <PopoverFormSuccess\n          title=\"Language Changed\"\n          description={`Switched to ${selectedLanguage ? languageData[selectedLanguage]?.name : 'selected language'}`}\n        />\n      }\n    />\n  );\n}\n"],"names":["LanguageSelector","variant","className","t","i18n","useTranslation","toast","useToast","location","useLocation","navigate","useNavigate","open","setOpen","useState","selectedLanguage","setSelectedLanguage","showSuccess","setShowSuccess","languageData","en","name","flag","fr","es","currentLanguage","language","jsx","PopoverForm","title","width","height","showCloseButton","trigger","Button","size","onClick","children","Globe","openChild","jsxs","SUPPORTED_LANGUAGES","map","lang","isCurrent","languageInfo","async","newLanguage","changeLanguage","data","user","supabase","auth","getUser","id","from","update","eq","localStorage","setItem","Date","now","toString","dbError","pathSegments","pathname","split","filter","Boolean","includes","newPath","join","replace","setTimeout","error","description","duration","handleLanguageChange","Check","successChild","PopoverFormSuccess"],"mappings":"+fAkBO,SAASA,GAAiBC,QAAEA,EAAU,QAASC,UAAAA,EAAY,KAChE,MAAMC,EAAEA,EAAAC,KAAGA,GAASC,EAAe,qBAC7BC,MAAEA,GAAUC,IACZC,EAAWC,IACXC,EAAWC,KACVC,EAAMC,GAAWC,EAAAA,UAAS,IAC1BC,EAAkBC,GAAuBF,EAAAA,SAAwB,OACjEG,EAAaC,GAAkBJ,EAAAA,UAAS,GAmEzCK,EAA+D,CACnEC,GAAI,CAAEC,KAAM,UAAWC,KAAM,QAC7BC,GAAI,CAAEF,KAAM,WAAYC,KAAM,QAC9BE,GAAI,CAAEH,KAAM,UAAWC,KAAM,SAGzBG,EAAkBrB,EAAKsB,UAAY,KAGvC,OAAAC,EAAAA,IAACC,EAAA,CACCC,MAAM,kBACNjB,OACAC,UACAiB,MAAM,QACNC,OAAO,OACPC,iBAAkBf,EAClBA,cACAgB,QACEN,EAAAA,IAACO,EAAA,CACCjC,UACAkC,KAAK,OACLjC,YACAkC,QAAS,IAAMvB,GAAQ,GAEvBwB,SAAAV,EAAAA,IAACW,EAAM,CAAApC,UAAU,cAGrBqC,UACEC,EAAAA,KAAC,MAAI,CAAAtC,UAAU,gBACbmC,SAAA,CAACV,EAAAA,IAAA,MAAA,CAAIzB,UAAU,6BAA6BmC,SAE5C,mCACCI,EAAoBC,KAAKC,IACxB,MAAMC,EAAYD,IAASlB,EACrBoB,EAAe1B,EAAawB,GAGhC,OAAAH,EAAAA,KAAC,SAAA,CAECJ,QAAS,IAxGMU,OAAOC,IAC9B,GAAA3C,EAAKsB,WAAaqB,EAAlB,CAKJ/B,EAAoB+B,GACpB7B,GAAe,GAEX,UAEId,EAAK4C,eAAeD,GAGtB,IACI,MAAEE,MAAMC,KAAEA,UAAiBC,EAASC,KAAKC,UAC3CH,GAAMI,WACFH,EACHI,KAAK,YACLC,OAAO,CAAE9B,SAAUqB,IACnBU,GAAG,KAAMP,EAAKI,IAEJI,aAAAC,QAAQ,gBAAiBZ,GACtCW,aAAaC,QAAQ,0BAA2BC,KAAKC,MAAMC,mBAEtDC,GACqD,CAI9D,MAAMC,EAAexD,EAASyD,SAASC,MAAM,KAAKC,OAAOC,SAGzD,GAFyB3B,EAAoB4B,SAASL,EAAa,IAE7C,CAEpBA,EAAa,GAAKjB,EAClB,MAAMuB,EAAU,IAAMN,EAAaO,KAAK,KACxC7D,EAAS4D,EAAS,CAAEE,SAAS,GAAM,KAC9B,CAEL,MAAMF,EAAU,IAAIvB,IAAcvC,EAASyD,WAC3CvD,EAAS4D,EAAS,CAAEE,SAAS,GAAM,CAIrCC,YAAW,KACT5D,GAAQ,GACRK,GAAe,GACfF,EAAoB,KAAI,GACvB,WAEI0D,GAEDpE,EAAA,CACJuB,MAAO1B,EAAE,SACTwE,YAAaxE,EAAE,oBACfF,QAAS,cACT2E,SAAU,MAEZ1D,GAAe,GACfF,EAAoB,KAAI,CAzDxB,MADAH,GAAQ,EA0DgB,EA4CCgE,CAAqBlC,GACpCzC,UAAW,+FACT0C,EACI,iDACA,8DAGNP,SAAA,CAACG,EAAAA,KAAA,MAAA,CAAItC,UAAU,8BACbmC,SAAA,CAAAV,EAAAA,IAAC,OAAK,CAAAzB,UAAU,UAAWmC,SAAAQ,EAAavB,OACvCK,EAAAA,IAAA,OAAA,CAAKzB,UAAU,cAAemC,WAAahB,UAE7CuB,GACCjB,EAAAA,IAACmD,EAAM,CAAA5E,UAAU,6BAbdyC,EAeP,OAKRoC,aACEpD,EAAAA,IAACqD,EAAA,CACCnD,MAAM,mBACN8C,YAAa,eAAe5D,EAAmBI,EAAaJ,IAAmBM,KAAO,yBAKhG"}