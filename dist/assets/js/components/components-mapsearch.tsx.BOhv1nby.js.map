{"version":3,"file":"components-mapsearch.tsx.BOhv1nby.js","sources":["../../../../src/components/MapSearch.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Search, X, MapPin, Building, Store, Navigation, Home, Coffee, UtensilsCrossed, Car, CircleDollarSign, Pill, ShoppingBag, Wine, Hotel, Dumbbell, Wrench, Film, Landmark, Palette, Filter, Heart, Share, Star } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport mapboxgl from 'mapbox-gl';\nimport { useTranslation } from 'react-i18next';\nimport { v4 as uuidv4 } from 'uuid';\nimport ReactDOMServer from 'react-dom/server';\nimport { usePOIs, POI } from '@/hooks/usePOIs';\nimport { supabase } from '@/integrations/supabase/client';\nimport { openGoogleMapsNavigation } from '@/utils/navigation';\n\ninterface MapSearchProps {\n  map: React.MutableRefObject<mapboxgl.Map | null>;\n  onLocationSelect?: (location: any) => void;\n  onSaveToFavorites?: (location: EnhancedSearchResult) => void;\n  onGetDirections?: (location: EnhancedSearchResult) => void;\n}\n\ninterface SearchResult {\n  id: string;\n  place_name: string;\n  center: [number, number];\n  place_type: string[];\n  properties: {\n    category?: string;\n    maki?: string;\n    distance?: number;\n    source?: string;\n    isNearest?: boolean;\n    coordinates?: [number, number];\n    lat?: number;\n    lng?: number;\n    center?: [number, number];\n  };\n  text: string;\n  name?: string;\n  distance?: number;\n}\n\ninterface SuggestedFeature {\n  id: string;\n  type: string;\n  place_type: string[];\n  place_name: string;\n  text: string;\n  center?: [number, number];\n  name: string;\n  address?: string;\n  full_address?: string;\n  properties: {\n    category?: string;\n    maki?: string;\n    feature_type?: string;\n    coordinates?: [number, number];\n    feature_score?: number;\n    matching_name?: string;\n    matching_place_name?: string;\n    address?: string;\n    distance?: number;\n    isLocationPOI?: boolean;\n    source?: string;\n    isNearest?: boolean;\n    // POI specific properties\n    poi_data?: POI;\n    review_author?: string;\n    review_text?: string;\n    review_rating?: number;\n  };\n  geometry?: {\n    coordinates: [number, number];\n    type: string;\n  };\n  action?: {\n    endpoint: string;\n    method: string;\n    body: {\n      id: string;\n      sessionToken: string;\n      [key: string]: any;\n    };\n  };\n}\n\ninterface CategoryButton {\n  id: string;\n  label: string;\n  icon: React.ReactNode;\n  query: string;\n}\n\ninterface SearchFilters {\n  priceRange?: 'low' | 'medium' | 'high';\n  rating?: number;\n  openNow?: boolean;\n  accessibility?: boolean;\n}\n\ninterface EnhancedSearchResult extends SearchResult {\n  rating?: number;\n  priceLevel?: number;\n  openingHours?: {\n    open: boolean;\n    periods?: Array<{\n      open: { day: number; time: string };\n      close: { day: number; time: string };\n    }>;\n  };\n  photos?: string[];\n  reviews?: Array<{\n    rating: number;\n    text: string;\n    author: string;\n  }>;\n  // POI specific properties\n  poi_data?: POI;\n  review_author?: string;\n  review_text?: string;\n  review_rating?: number;\n  // Geometry for geocoding results\n  geometry?: {\n    coordinates: [number, number];\n    type: string;\n  };\n  // Address properties\n  full_address?: string;\n  address?: string;\n}\n\n// Helper function to format distance\nconst formatDistance = (meters: number): string => {\n  if (meters < 1000) {\n    return `${Math.round(meters)}m`;\n  }\n  return `${(meters / 1000).toFixed(1)}km`;\n};\n\n// Helper function to calculate distance between two points using Haversine formula\nconst calculateDistance = (lat1: number, lon1: number, lat2: number, lon2: number): number => {\n  const R = 6371e3; // Earth's radius in meters\n  const œÜ1 = lat1 * Math.PI / 180;\n  const œÜ2 = lat2 * Math.PI / 180;\n  const ŒîœÜ = (lat2 - lat1) * Math.PI / 180;\n  const ŒîŒª = (lon2 - lon1) * Math.PI / 180;\n\n  const a = Math.sin(ŒîœÜ / 2) * Math.sin(ŒîœÜ / 2) +\n            Math.cos(œÜ1) * Math.cos(œÜ2) *\n            Math.sin(ŒîŒª / 2) * Math.sin(ŒîŒª / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n  return R * c; // Distance in meters\n};\n\n  // Map poi category to icon and color (matching MapDashboard styling)\nconst getCategoryIcon = (category: string | undefined, placeType: string[]) => {\n  if (placeType.includes('address')) {\n    return <Home className=\"w-4 h-4 text-gray-500\" />;\n  }\n  \n  if (placeType.includes('poi')) {\n    if (!category) return <MapPin className=\"w-4 h-4 text-red-500\" />;\n    \n    switch (category) {\n      case 'restaurant':\n      case 'cafe':\n      case 'food':\n        return <Store className=\"w-4 h-4 text-orange-500\" />;\n      case 'hotel':\n      case 'lodging':\n        return <Building className=\"w-4 h-4 text-blue-500\" />;\n      default:\n        return <MapPin className=\"w-4 h-4 text-red-500\" />;\n    }\n  }\n  \n  return <MapPin className=\"w-4 h-4 text-purple-500\" />;\n};\n\n// Get category color (matching MapDashboard)\nconst getCategoryColor = (category: string | undefined, placeType: string[]) => {\n  if (placeType.includes('address')) {\n   \n  }\n  \n  if (placeType.includes('poi')) {\n    if (!category) return '#ef4444'; // Red\n    \n    switch (category) {\n      case 'restaurant':\n      case 'food':\n       \n      case 'cafe':\n      case 'coffee':\n       \n      case 'hotel':\n      case 'lodging':\n        \n      case 'bar':\n      case 'nightlife':\n        \n      case 'museum':\n      case 'art':\n       \n      case 'park':\n      case 'nature':\n       \n      case 'shopping':\n      case 'store':\n       \n      case 'entertainment':\n      case 'attraction':\n        \n      default:\n        \n    }\n  }\n  \n  \n};\n\n// Get category emoji (matching MapDashboard)\nconst getCategoryEmoji = (category: string | undefined, placeType: string[]) => {\n  if (placeType.includes('address')) {\n    return 'üè†';\n  }\n  \n  if (placeType.includes('poi')) {\n    if (!category) return 'üìç';\n    \n    switch (category) {\n      case 'restaurant':\n        return 'üçΩÔ∏è';\n      case 'food':\n        return 'üçΩÔ∏è';\n      case 'cafe':\n        return '‚òï';\n      case 'coffee':\n        return '‚òï';\n      case 'hotel':\n        return 'üè®';\n      case 'lodging':\n        return 'üè®';\n      case 'bar':\n      case 'nightlife':\n        return 'üç∫';\n      case 'museum':\n      case 'art':\n        return 'üèõÔ∏è';\n      case 'park':\n      case 'nature':\n        return 'üå≥';\n      case 'shopping':\n      case 'store':\n        return 'üõçÔ∏è';\n      case 'entertainment':\n        return 'üéâ';\n      case 'attraction':\n        return 'üé°';\n      default:\n        return 'üìç';\n    }\n  }\n  \n  return 'üìç';\n};\n\nexport const MapSearch: React.FC<MapSearchProps> = ({ \n  map, \n  onLocationSelect,\n  onSaveToFavorites,\n  onGetDirections \n}) => {\n  const { t } = useTranslation(['navigation']);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isSearchFocused, setIsSearchFocused] = useState(false);\n  const [searchResults, setSearchResults] = useState<SuggestedFeature[]>([]);\n  const [showResults, setShowResults] = useState(false);\n  const [isSearching, setIsSearching] = useState(false);\n  const [recentSearches, setRecentSearches] = useState<SearchResult[]>([]);\n  const [activeTab, setActiveTab] = useState<'categories' | 'favorites'>('categories');\n  const searchTimeout = useRef<NodeJS.Timeout>();\n  const searchMarkersRef = useRef<mapboxgl.Marker[]>([]);\n  const searchContainerRef = useRef<HTMLDivElement>(null);\n  const accessToken = 'pk.eyJ1IjoibWlzdGVyZnJhenoiLCJhIjoiY203M2ZnM3BoMDhpMTJqcTNiYWpkamIzNyJ9.2SlcuEPIL2yCJw5TIPunVQ';\n  const sessionToken = useRef(uuidv4());\n  const [filters, setFilters] = useState<SearchFilters>({});\n  const [showFilters, setShowFilters] = useState(false);\n  const [selectedResult, setSelectedResult] = useState<EnhancedSearchResult | null>(null);\n  const [favorites, setFavorites] = useState<EnhancedSearchResult[]>([]);\n  const [fuzzyPoiMatches, setFuzzyPoiMatches] = useState<EnhancedSearchResult[]>([]);\n  const [showingFuzzyCategory, setShowingFuzzyCategory] = useState(false);\n\n  // Add POI hook\n  const { pois } = usePOIs();\n\n  // Add mousedown handler to prevent UI from closing\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (searchContainerRef.current && !searchContainerRef.current.contains(event.target as Node)) {\n        setIsSearchFocused(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // Define category buttons with unique IDs\n  const categoryButtons = [\n    { id: 'food-place', label: t('search.categories.food', 'Food'), icon: <UtensilsCrossed className=\"w-5 h-5\" />, query: 'food' },\n    { id: 'cafe-spot', label: t('search.categories.cafe', 'Cafe'), icon: <Coffee className=\"w-5 h-5\" />, query: 'cafe' },\n    { id: 'bar-pub', label: t('search.categories.bars', 'Bars'), icon: <Wine className=\"w-5 h-5\" />, query: 'bar' },\n    { id: 'shopping-mall', label: t('search.categories.shopping', 'Shopping'), icon: <ShoppingBag className=\"w-5 h-5\" />, query: 'mall' },\n  ];\n\n  // Define list items for categories with unique IDs\n  const categoryList = [\n    { id: 'hotel-lodging', label: t('search.categories.hotels', 'Hotels'), icon: <Hotel className=\"w-5 h-5\" />, query: 'hotel' },\n    { id: 'attractions', label: t('search.categories.attractions', 'Attractions'), icon: <MapPin className=\"w-5 h-5\" />, query: 'attractions' },\n    { id: 'landmark', label: t('search.categories.landmarks', 'Landmarks'), icon: <Landmark className=\"w-5 h-5\" />, query: 'landmark' },\n    { id: 'museum', label: t('search.categories.museums', 'Museums'), icon: <Palette className=\"w-5 h-5\" />, query: 'museum' },\n    { id: 'cinema-theater', label: t('search.categories.cinemas', 'Cinemas'), icon: <Film className=\"w-5 h-5\" />, query: 'cinema' },\n    { id: 'parking-spot', label: t('search.categories.parking', 'Parking'), icon: <Car className=\"w-5 h-5\" />, query: 'parking' },\n    { id: 'pharmacy-store', label: t('search.categories.pharmacies', 'Pharmacies'), icon: <Pill className=\"w-5 h-5\" />, query: 'pharmacy' },\n    { id: 'grocery-store', label: t('search.categories.groceries', 'Groceries'), icon: <ShoppingBag className=\"w-5 h-5\" />, query: 'grocery' },\n    { id: 'gas-station', label: t('search.categories.gas', 'Gas'), icon: <Car className=\"w-5 h-5\" />, query: 'gas station' },\n  ];\n\n  // Also update the categoryQueries to include the new categories\n  const categoryQueries: Record<string, string> = {\n    'food': 'restaurant',\n    'cafe': 'cafe',\n    'bar': 'bar pub',\n    'mall': 'shopping mall',\n    'hotel': 'hotel lodging',\n    'attractions': 'tourist attractions points of interest',\n    'landmark': 'landmark monument',\n    'museum': 'museum gallery',\n    'cinema': 'cinema movie theater',\n    'parking': 'parking',\n    'pharmacy': 'pharmacy',\n    'grocery': 'supermarket grocery',\n    'gas station': 'gas station fuel'\n  };\n\n  useEffect(() => {\n    return () => {\n      clearSearchMarkers();\n    };\n  }, []);\n\n  useEffect(() => {\n    const savedSearches = localStorage.getItem('recentMapSearches');\n    if (savedSearches) {\n      try {\n        setRecentSearches(JSON.parse(savedSearches));\n      } catch (e) {\n        console.error('Error loading recent searches:', e);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const savedFavorites = localStorage.getItem('mapFavorites');\n    if (savedFavorites) {\n      try {\n        setFavorites(JSON.parse(savedFavorites));\n      } catch (e) {\n        console.error('Error loading favorites:', e);\n      }\n    }\n  }, []);\n\n  const clearSearchMarkers = () => {\n    searchMarkersRef.current.forEach(marker => marker.remove());\n    searchMarkersRef.current = [];\n  };\n\n  // Add filter handlers\n  const handleFilterChange = (key: keyof SearchFilters, value: any) => {\n    setFilters(prev => ({ ...prev, [key]: value }));\n  };\n\n  // Search POIs in database\n  const searchPOIs = async (query: string): Promise<EnhancedSearchResult[]> => {\n    if (!query.trim() || query.length < 2) return [];\n\n    const searchTerm = query.toLowerCase();\n    const results: EnhancedSearchResult[] = [];\n    \n    // Get current map center for distance calculations\n    const mapCenter = map.current?.getCenter();\n    const currentLat = mapCenter?.lat || 0;\n    const currentLng = mapCenter?.lng || 0;\n\n    try {\n      // Fetch all POIs and filter in JavaScript for better reliability\n      const { data: poiResults, error } = await supabase\n        .from('pois')\n        .select(`\n          *,\n          poi_categories!poi_category_id (\n            name,\n            image_url\n          ),\n          poi_reviews (\n            rating,\n            rating_type,\n            notes,\n            user_id\n          )\n        `)\n        .limit(50); // Fetch more POIs to filter from\n\n      if (error) {\n        console.error('Error searching POIs:', error);\n        return [];\n      }\n\n      // Process POI results and filter by search term\n      (poiResults || []).forEach((poi: any) => {\n        // Check if POI matches the search query\n        const nameMatch = poi.name.toLowerCase().includes(searchTerm);\n        const descriptionMatch = poi.description?.toLowerCase().includes(searchTerm);\n        const categoryMatch = poi.categories?.some((cat: string) => \n          cat.toLowerCase().includes(searchTerm)\n        );\n        const categoryNameMatch = poi.poi_categories?.name?.toLowerCase().includes(searchTerm);\n        \n        // Check review content matches (notes and author)\n        const reviewMatches = poi.poi_reviews?.filter((review: any) => {\n          const notesMatch = review.notes?.toLowerCase().includes(searchTerm);\n          const authorMatch = review.user_id?.toLowerCase().includes(searchTerm);\n          return notesMatch || authorMatch;\n        }) || [];\n\n        if (nameMatch || descriptionMatch || categoryMatch || categoryNameMatch || reviewMatches.length > 0) {\n          // Calculate average rating\n          let averageRating = 0;\n          let reviewCount = 0;\n          let ratingType: 'out_of_10' | 'out_of_5' | 'percentage' | undefined;\n          \n          if (poi.poi_reviews && poi.poi_reviews.length > 0) {\n            const ratingTypeCounts = {\n              out_of_10: 0,\n              out_of_5: 0,\n              percentage: 0\n            };\n            \n            poi.poi_reviews.forEach((review: any) => {\n              ratingTypeCounts[review.rating_type]++;\n            });\n            \n            const maxCount = Math.max(ratingTypeCounts.out_of_10, ratingTypeCounts.out_of_5, ratingTypeCounts.percentage);\n            if (ratingTypeCounts.out_of_10 === maxCount) {\n              ratingType = 'out_of_10';\n            } else if (ratingTypeCounts.out_of_5 === maxCount) {\n              ratingType = 'out_of_5';\n            } else {\n              ratingType = 'percentage';\n            }\n            \n            const reviewsInMainType = poi.poi_reviews.filter((review: any) => review.rating_type === ratingType);\n            if (reviewsInMainType.length > 0) {\n              const totalRating = reviewsInMainType.reduce((sum: number, review: any) => sum + review.rating, 0);\n              averageRating = totalRating / reviewsInMainType.length;\n            }\n            \n            reviewCount = poi.poi_reviews.length;\n          }\n\n          // Calculate distance from current map center\n          const distance = mapCenter ? calculateDistance(currentLat, currentLng, poi.lat, poi.lng) : undefined;\n          const isNearest = distance && distance <= 75000; // Mark as nearest if within 75km\n          \n          // Create POI result as EnhancedSearchResult\n          const poiResult: EnhancedSearchResult = {\n            id: `poi-${poi.id}`,\n            place_name: poi.address && poi.address !== poi.name ? poi.address : '', // Only use address if different from name\n            center: [poi.lng, poi.lat],\n            place_type: ['poi'],\n            properties: {\n              category: poi.poi_categories?.name || poi.categories?.[0] || 'poi',\n              maki: 'marker',\n              distance: distance,\n              source: 'database_poi',\n              isNearest: isNearest\n            },\n            text: poi.name, // Main title\n            name: poi.name,\n            distance: distance,\n            poi_data: {\n              id: poi.id,\n              name: poi.name,\n              url: poi.url,\n              description: poi.description && poi.description.trim() && poi.description !== '0' ? poi.description : undefined,\n              address: poi.address,\n              lat: poi.lat,\n              lng: poi.lng,\n              categories: poi.categories || [],\n              poi_category_id: poi.poi_category_id,\n              created_at: poi.created_at,\n              updated_at: poi.updated_at,\n              category_name: poi.poi_categories?.name,\n              category_image_url: poi.poi_categories?.image_url,\n              average_rating: averageRating > 0 ? averageRating : undefined,\n              review_count: reviewCount > 0 ? reviewCount : undefined,\n              rating_type: ratingType,\n            }\n          };\n\n          // If there are review matches, add review information\n          if (reviewMatches.length > 0) {\n            const matchingReview = reviewMatches[0]; // Take the first matching review\n            poiResult.review_author = matchingReview.user_id ? `User ${matchingReview.user_id.slice(0, 8)}` : 'Anonymous';\n            poiResult.review_text = matchingReview.notes && matchingReview.notes.trim() ? matchingReview.notes.trim() : ''; // Add the review text\n            poiResult.review_rating = matchingReview.rating && matchingReview.rating > 0 ? matchingReview.rating : undefined;\n          }\n\n          results.push(poiResult);\n        }\n      });\n\n      // Sort results by distance and prioritize POIs within 75km\n      const sortedResults = results.sort((a, b) => {\n        const distanceA = a.distance || Infinity;\n        const distanceB = b.distance || Infinity;\n        \n        // If both are within 75km, sort by distance\n        if (distanceA <= 75000 && distanceB <= 75000) {\n          return distanceA - distanceB;\n        }\n        \n        // If only A is within 75km, prioritize A\n        if (distanceA <= 75000 && distanceB > 75000) {\n          return -1;\n        }\n        \n        // If only B is within 75km, prioritize B\n        if (distanceB <= 75000 && distanceA > 75000) {\n          return 1;\n        }\n        \n        // If both are outside 75km, sort by distance\n        return distanceA - distanceB;\n      });\n      \n      // Limit results to top 10 matches\n      return sortedResults.slice(0, 10);\n    } catch (error) {\n      console.error('Error searching POIs:', error);\n      return [];\n    }\n  };\n\n  const handleSearch = async (query: string) => {\n    setSearchQuery(query);\n    setShowingFuzzyCategory(false); // Reset on new search\n    if (!query.trim()) {\n      setSearchResults([]);\n      setShowResults(false);\n      setFuzzyPoiMatches([]);\n      clearSearchMarkers();\n      return;\n    }\n    if (searchTimeout.current) {\n      clearTimeout(searchTimeout.current);\n    }\n    searchTimeout.current = setTimeout(async () => {\n      setIsSearching(true);\n      try {\n        const mapCenter = map.current?.getCenter();\n        const searchUrl = new URL('https://api.mapbox.com/search/searchbox/v1/suggest');\n        const geocodingUrl = new URL('https://api.mapbox.com/geocoding/v5/mapbox.places');\n\n        // Adjust query for category searches\n        let searchQuery = query.trim();\n        \n        if (categoryQueries[searchQuery.toLowerCase()]) {\n          searchQuery = categoryQueries[searchQuery.toLowerCase()];\n        }\n\n        // Search POIs in database first\n        const poiResults = await searchPOIs(query);\n        setFuzzyPoiMatches(poiResults.length > 0 ? poiResults : []);\n\n        // Convert POI results to SuggestedFeature format\n        const poiSuggestions: SuggestedFeature[] = poiResults.map(poi => {\n          const suggestion: SuggestedFeature = {\n            id: poi.id,\n            type: 'poi',\n            place_type: poi.place_type,\n            place_name: poi.place_name,\n            text: poi.text,\n            center: poi.center,\n            name: poi.name,\n            address: poi.poi_data?.address,\n            full_address: poi.poi_data?.address,\n            properties: {\n              ...poi.properties,\n              poi_data: poi.poi_data,\n              review_author: poi.review_author,\n              review_text: poi.review_text,\n              review_rating: poi.review_rating,\n              distance: poi.distance, // Ensure distance is passed through\n              isNearest: poi.properties?.isNearest, // Pass through nearest flag\n            }\n          };\n          \n          return suggestion;\n        });\n\n        // Parameters for Search Box API (POIs)\n        const searchParams = new URLSearchParams({\n          q: searchQuery,\n          access_token: accessToken,\n          session_token: sessionToken.current,\n          language: 'en',\n          limit: '5', // Reduced from 10 to leave room for address results\n          types: 'poi',\n        });\n\n        // Parameters for Geocoding API (addresses)\n        const geocodingParams = new URLSearchParams({\n          access_token: accessToken,\n          limit: '5',\n          language: 'en',\n          types: 'address,place',\n          autocomplete: 'true'  // Add autocomplete for better address suggestions\n        });\n\n        // Add proximity for POI searches to keep them local/relevant\n        // This ensures POIs remain proximity-based\n        if (mapCenter) {\n          // Strong proximity bias for POIs to keep them relevant to current location\n          searchParams.append('proximity', `${mapCenter.lng},${mapCenter.lat}`);\n          \n          // For geocoding, add proximity but with zero bias to allow global address search\n          // Only affects sorting of results, not filtering\n          geocodingParams.append('proximity', `${mapCenter.lng},${mapCenter.lat}`);\n          geocodingParams.append('proximity_bias', '0'); // No bias for global address search\n        }\n\n        // Only add bbox for POI searches to keep them confined to visible map\n        if (map.current) {\n          const bounds = map.current.getBounds();\n          const bbox = [\n            bounds.getWest(),\n            bounds.getSouth(),\n            bounds.getEast(),\n            bounds.getNorth()\n          ];\n          \n          // Only add bbox if values are valid numbers\n          if (bbox.every(coord => !isNaN(coord) && isFinite(coord))) {\n            // Apply bbox only to POI searches to keep them within map view\n            searchParams.append('bbox', bbox.join(','));\n            // Don't apply bbox to geocoding results to allow global address search\n          }\n        }\n\n        // Add filter parameters to search\n        if (filters.priceRange) {\n          searchParams.append('price_range', filters.priceRange);\n        }\n        if (filters.rating) {\n          searchParams.append('min_rating', filters.rating.toString());\n        }\n        if (filters.openNow) {\n          searchParams.append('open_now', 'true');\n        }\n        if (filters.accessibility) {\n          searchParams.append('accessibility', 'true');\n        }\n\n        // Encode query for geocoding URL\n        const encodedQuery = encodeURIComponent(searchQuery);\n\n        // Fetch both POIs and addresses in parallel\n        const [searchResponse, geocodingResponse] = await Promise.all([\n          fetch(`${searchUrl}?${searchParams}`),\n          fetch(`${geocodingUrl}/${encodedQuery}.json?${geocodingParams}`)\n        ]);\n        \n        // Process Search Box API response\n        let mapboxPoiSuggestions: SuggestedFeature[] = [];\n        if (searchResponse.ok) {\n          const searchData = await searchResponse.json();\n          if (searchData.suggestions?.length > 0) {\n            mapboxPoiSuggestions = searchData.suggestions\n              .filter((suggestion: any) => suggestion.name || suggestion.place_name)\n              .map((suggestion: any) => {\n                // Get coordinates from all possible sources\n                let coordinates = null;\n                \n                // Try to extract coordinates from the suggestion\n                if (suggestion.coordinates) {\n                  coordinates = [suggestion.coordinates.longitude, suggestion.coordinates.latitude];\n                } else if (suggestion.geometry?.coordinates) {\n                  coordinates = suggestion.geometry.coordinates;\n                } else if (suggestion.bbox) {\n                  coordinates = [\n                    (suggestion.bbox[0] + suggestion.bbox[2]) / 2,\n                    (suggestion.bbox[1] + suggestion.bbox[3]) / 2\n                  ];\n                } else if (suggestion.metadata?.coordinates) {\n                  coordinates = suggestion.metadata.coordinates;\n                } else if (suggestion.context?.coordinates) {\n                  coordinates = [suggestion.context.coordinates.longitude, suggestion.context.coordinates.latitude];\n                }\n\n                const name = suggestion.name || suggestion.text;\n                const place_name = suggestion.full_address || suggestion.place_name || name;\n                const isLocationPOI = suggestion.feature_type === 'poi' && suggestion.address;\n\n                return {\n                  id: suggestion.mapbox_id || `suggestion-poi-${Date.now()}-${Math.random()}`,\n                  type: suggestion.feature_type || 'poi',\n                  place_type: [suggestion.feature_type || 'poi'],\n                  place_name: place_name,\n                  text: name,\n                  center: coordinates,\n                  name: name,\n                  address: suggestion.address,\n                  full_address: suggestion.full_address,\n                  properties: {\n                    category: suggestion.poi_category?.[0] || suggestion.category || suggestion.feature_type,\n                    maki: suggestion.maki,\n                    coordinates: coordinates,\n                    feature_score: suggestion.feature_score,\n                    matching_name: suggestion.matching_name,\n                    matching_place_name: suggestion.matching_place_name,\n                    address: suggestion.address,\n                    distance: suggestion.distance,\n                    isLocationPOI: isLocationPOI,\n                    source: 'search'\n                  }\n                };\n              })\n              .filter(Boolean);\n          }\n        } else {\n          console.error('Search API error:', await searchResponse.text());\n        }\n\n        // Process Geocoding API response\n        let addressSuggestions: SuggestedFeature[] = [];\n        if (geocodingResponse.ok) {\n          const geocodingData = await geocodingResponse.json();\n          if (geocodingData.features?.length > 0) {\n            addressSuggestions = geocodingData.features\n              .filter((feature: any) => feature.place_name)\n              .map((feature: any) => {\n                // Extract the house number if available\n                const addressContext = feature.context?.find((c: any) => c.id.startsWith('address'));\n                const houseNumber = feature.address || \n                                   (addressContext?.text.match(/^\\d+/) ? addressContext.text.match(/^\\d+/)[0] : '');\n                \n                // Format a better display address with house number if available\n                const displayName = feature.text || feature.place_name.split(',')[0];\n                const betterText = houseNumber && !displayName.includes(houseNumber) \n                                  ? `${houseNumber} ${displayName}` \n                                  : displayName;\n                \n                return {\n                  id: feature.id || `suggestion-geo-${Date.now()}-${Math.random()}`,\n                  type: feature.place_type?.[0] || 'address',\n                  place_type: feature.place_type || ['address'],\n                  place_name: feature.place_name,\n                  text: betterText,\n                  center: feature.center,\n                  name: betterText,\n                  address: houseNumber,\n                  full_address: feature.place_name,\n                  properties: {\n                    category: feature.place_type?.[0] || 'address',\n                    coordinates: feature.center,\n                    address: houseNumber,\n                    feature_score: 1.0, // Prioritize geocoding results\n                    source: 'geocoding'\n                  },\n                  geometry: {\n                    coordinates: feature.center,\n                    type: 'Point'\n                  }\n                };\n              });\n          }\n        } else {\n          console.error('Geocoding API error:', await geocodingResponse.text());\n        }\n\n        // Combine all results: Database POIs first, then Mapbox POIs, then addresses\n        let allSuggestions = [...poiSuggestions, ...mapboxPoiSuggestions, ...addressSuggestions];\n        // If there are fuzzy POI matches, add a special clickable category at the top\n        if (poiResults.length > 0) {\n          allSuggestions = [\n            {\n              id: 'fuzzy-poi-category',\n              type: 'fuzzy-poi-category',\n              place_type: ['category'],\n              place_name: t('search.fuzzy_category', { query }),\n              text: t('search.fuzzy_category', { query }),\n              name: t('search.fuzzy_category', { query }),\n              properties: { category: 'fuzzy-poi-category' },\n            },\n            // Only include non-POI results (Mapbox POIs and addresses)\n            ...mapboxPoiSuggestions,\n            ...addressSuggestions\n          ];\n        }\n        \n        // Deduplicate by name and approximate location\n        const uniqueSuggestions = allSuggestions.reduce((acc: SuggestedFeature[], current) => {\n          const isDuplicate = acc.some(item => \n            (item.name?.toLowerCase() === current.name?.toLowerCase() && \n             item.center && current.center &&\n             Math.abs(item.center[0] - current.center[0]) < 0.01 &&\n             Math.abs(item.center[1] - current.center[1]) < 0.01)\n          );\n          \n          if (!isDuplicate) {\n            acc.push(current);\n          }\n          return acc;\n        }, []);\n        \n        if (uniqueSuggestions.length > 0) {\n          setSearchResults(uniqueSuggestions);\n          setShowResults(true);\n        } else {\n          // Always show the results UI even when empty\n          setSearchResults([]);\n          setShowResults(true);\n        }\n      } catch (error) {\n        console.error('Search error:', error);\n        // Show empty results UI with error state\n        setSearchResults([]);\n        setShowResults(true);\n      } finally {\n        setIsSearching(false);\n      }\n    }, 300);\n  };\n\n  const handleResultSelect = async (suggestion: SuggestedFeature) => {\n    if (suggestion.type === 'fuzzy-poi-category') {\n      // Show only the fuzzy POI matches and zoom map to fit them\n      setSearchResults(fuzzyPoiMatches.map(poi => {\n        const suggestion: SuggestedFeature = {\n          id: poi.id,\n          type: 'poi',\n          place_type: poi.place_type,\n          place_name: poi.place_name,\n          text: poi.text,\n          center: poi.center,\n          name: poi.name,\n          address: poi.poi_data?.address,\n          full_address: poi.poi_data?.address,\n                      properties: {\n              ...poi.properties,\n              poi_data: poi.poi_data,\n              review_author: poi.review_author,\n              review_text: poi.review_text,\n              review_rating: poi.review_rating,\n              distance: poi.distance, // Ensure distance is passed through\n              isNearest: poi.properties?.isNearest, // Pass through nearest flag\n            }\n        };\n        \n        return suggestion;\n      }));\n      setShowingFuzzyCategory(true);\n      setShowResults(true);\n      // Zoom map to fit all POIs\n      if (map.current && fuzzyPoiMatches.length > 0) {\n        const bounds = new mapboxgl.LngLatBounds();\n        fuzzyPoiMatches.forEach(poi => {\n          if (poi.center) bounds.extend(poi.center);\n        });\n        if (!bounds.isEmpty()) {\n          map.current.fitBounds(bounds, { padding: 80, maxZoom: 16 });\n        }\n      }\n      return;\n    }\n    try {\n      // Set loading state\n      setIsSearching(true);\n\n      // First check if we already have precise coordinates\n      if (suggestion.center && suggestion.center[0] !== 0 && suggestion.center[1] !== 0) {\n        handleLocationSelect(suggestion);\n        setIsSearching(false);\n        return;\n      }\n\n      // Get search text to geocode - prefer full address if available\n      const searchText = suggestion.full_address || \n                        suggestion.place_name || \n                        (suggestion.address && suggestion.name ? `${suggestion.address} ${suggestion.name}` : suggestion.name);\n      \n      // Use Mapbox Geocoding API to get precise coordinates\n      const geocodingUrl = new URL('https://api.mapbox.com/geocoding/v5/mapbox.places');\n      const encodedQuery = encodeURIComponent(searchText);\n      const params = new URLSearchParams({\n        access_token: accessToken,\n        limit: '1',\n        language: 'en',\n        types: 'address,place',\n        autocomplete: 'false'  // Exact match for final selection\n      });\n\n      // Different handling for POIs vs addresses\n      const isPOI = suggestion.properties?.source === 'search';\n      \n      // Add proximity bias based on type:\n      // - For POIs: strong proximity bias to maintain local relevance\n      // - For addresses: no proximity bias to allow global search\n      if (map.current) {\n        const mapCenter = map.current.getCenter();\n        params.append('proximity', `${mapCenter.lng},${mapCenter.lat}`);\n        \n        if (isPOI) {\n          // POIs should be local/relevant to current view\n          // Default high proximity bias\n        } else {\n          // Addresses can be global\n          params.append('proximity_bias', '0');  // No bias for global address search\n        }\n      }\n\n      const response = await fetch(`${geocodingUrl}/${encodedQuery}.json?${params}`);\n      \n      if (!response.ok) {\n        throw new Error('Geocoding request failed');\n      }\n\n      const data = await response.json();\n\n      if (data.features && data.features.length > 0) {\n        // We got precise coordinates from geocoding\n        const geocodedLocation = data.features[0];\n        \n        // Create an enhanced location object with precise coordinates\n        const enhancedLocation = {\n          ...suggestion,\n          center: geocodedLocation.center,\n          geometry: {\n            coordinates: geocodedLocation.center,\n            type: 'Point'\n          },\n          // Maintain original name and details but add geocoding data\n          geocoded_place_name: geocodedLocation.place_name,\n          geocoded_address: geocodedLocation.properties?.address\n        };\n        \n        handleLocationSelect(enhancedLocation);\n      } else {\n        // Fallback to original suggestion if geocoding fails\n        handleLocationSelect(suggestion);\n      }\n\n      // Generate new session token after each search\n      sessionToken.current = uuidv4();\n      setIsSearching(false);\n    } catch (error) {\n      console.error('Selection error:', error);\n      \n      // Fallback to original suggestion\n      handleLocationSelect(suggestion);\n      \n      setIsSearching(false);\n    }\n  };\n\n  const handleLocationSelect = (location: any) => {\n    clearSearchMarkers();\n    \n    let locationCoordinates: [number, number] | null = null;\n\n    // Get coordinates from all possible sources\n    if (location.center && Array.isArray(location.center) && location.center.length === 2) {\n      locationCoordinates = location.center;\n    } else if (location.geometry?.coordinates) {\n      locationCoordinates = location.geometry.coordinates;\n    } else if (location.coordinates) {\n      locationCoordinates = [location.coordinates.longitude, location.coordinates.latitude];\n    } else if (location.full_address || location.address || location.properties?.address) {\n      const hasAddressData = location.full_address || location.address || location.properties?.address;\n      \n      // Validate coordinates - check if they're valid numbers and not [0,0]\n      const isValidCoordinates = locationCoordinates && \n        locationCoordinates.length === 2 && \n        !isNaN(locationCoordinates[0]) && \n        !isNaN(locationCoordinates[1]) && \n        !(locationCoordinates[0] === 0 && locationCoordinates[1] === 0);\n\n      // Only use map center if we have NO valid coordinates AND we have address data\n      if (!isValidCoordinates && hasAddressData && map.current) {\n        const mapCenter = map.current.getCenter();\n        locationCoordinates = [mapCenter.lng, mapCenter.lat];\n      } else if (!isValidCoordinates && !hasAddressData) {\n        console.error('No valid coordinates found and no address data available:', location);\n        return;\n      }\n    }\n\n    // If we still have no coordinates, we can't proceed\n    if (!locationCoordinates) {\n      console.error('No coordinates available for location:', location);\n      return;\n    }\n\n    // Determine appropriate zoom level based on location type\n    let zoomLevel = 15; // Default zoom level\n    \n    if (location.properties?.source === 'geocoding') {\n      // For address results, zoom in more\n      if (location.place_type?.includes('address')) {\n        zoomLevel = 17; // Closer zoom for specific addresses\n      } else if (location.place_type?.includes('place')) {\n        zoomLevel = 13; // Wider zoom for cities/places\n      } else if (location.place_type?.includes('country')) {\n        zoomLevel = 5; // Very wide zoom for countries\n      } else if (location.place_type?.includes('region')) {\n        zoomLevel = 8; // Wide zoom for regions/states\n      }\n    } else {\n      // For POI results\n      if (location.properties?.category === 'restaurant' || \n          location.properties?.category === 'cafe' ||\n          location.properties?.category === 'bar') {\n        zoomLevel = 17; // Closer zoom for restaurants/cafes\n      } else if (location.properties?.category === 'hotel') {\n        zoomLevel = 16; // Good zoom for hotels\n      } else if (location.properties?.category === 'landmark' || \n                location.properties?.category === 'museum' ||\n                location.properties?.category === 'attractions') {\n        zoomLevel = 16; // Good zoom for attractions\n      }\n    }\n\n    if (onLocationSelect) {\n      onLocationSelect({...location, center: locationCoordinates, zoom: zoomLevel});\n    } else if (map.current && locationCoordinates) {\n      map.current.flyTo({\n        center: locationCoordinates,\n        zoom: zoomLevel,\n        duration: 1500\n      });\n\n\n\n      // Create marker element with category-specific styling (matching MapDashboard)\n      const markerEl = document.createElement('div');\n      markerEl.className = 'category-marker';\n      markerEl.style.width = '40px';\n      markerEl.style.height = '40px';\n      markerEl.style.display = 'flex';\n      markerEl.style.alignItems = 'center';\n      markerEl.style.justifyContent = 'center';\n      markerEl.style.cursor = 'pointer';\n      markerEl.style.transition = 'box-shadow 0.2s ease';\n      markerEl.style.zIndex = '1';\n      markerEl.style.position = 'relative';\n      markerEl.style.transform = 'none';\n\n      // Get category styling\n      const categoryColor = getCategoryColor(location.properties?.category, location.place_type);\n      const categoryEmoji = getCategoryEmoji(location.properties?.category, location.place_type);\n\n      // Create the main icon container (matching MapDashboard style)\n      const iconContainer = document.createElement('div');\n      iconContainer.style.width = '40px';\n      iconContainer.style.height = '40px';\n      iconContainer.style.background = categoryColor;\n      iconContainer.style.borderRadius = '50%';\n      iconContainer.style.border = '3px solid white';\n      iconContainer.style.boxShadow = '0 2px 4px rgba(0,0,0,0.3)';\n      iconContainer.style.display = 'flex';\n      iconContainer.style.alignItems = 'center';\n      iconContainer.style.justifyContent = 'center';\n      iconContainer.style.fontSize = '14px';\n      iconContainer.style.overflow = 'hidden';\n      iconContainer.style.transition = 'box-shadow 0.2s ease';\n      iconContainer.style.transform = 'none';\n\n      // Use emoji for category representation\n      iconContainer.textContent = categoryEmoji;\n\n      // Add the icon container to the main element\n      markerEl.appendChild(iconContainer);\n\n      // Add hover effect (matching MapDashboard)\n      markerEl.onmouseover = () => {\n        markerEl.style.zIndex = '10';\n        iconContainer.style.boxShadow = '0 4px 8px rgba(0,0,0,0.3)';\n      };\n      markerEl.onmouseout = () => {\n        markerEl.style.zIndex = '1';\n        iconContainer.style.boxShadow = '0 2px 4px rgba(0,0,0,0.3)';\n      };\n\n      const marker = new mapboxgl.Marker({\n        element: markerEl,\n        anchor: 'bottom'\n      })\n        .setLngLat(locationCoordinates)\n        .addTo(map.current);\n\n      // Create details card\n      const detailsCard = document.createElement('div');\n      detailsCard.className = 'location-details-card';\n      detailsCard.style.display = 'none';\n      detailsCard.style.position = 'absolute';\n      detailsCard.style.bottom = '0';\n      detailsCard.style.left = '0';\n      detailsCard.style.right = '0';\n      detailsCard.style.backgroundColor = 'white';\n      detailsCard.style.borderTopLeftRadius = '1rem';\n      detailsCard.style.borderTopRightRadius = '1rem';\n      detailsCard.style.padding = '1rem';\n      detailsCard.style.boxShadow = '0 -4px 6px -1px rgba(0, 0, 0, 0.1)';\n      detailsCard.style.zIndex = '1000';\n      detailsCard.style.transform = 'translateY(100%)';\n      detailsCard.style.transition = 'transform 0.3s ease-in-out';\n\n      // Add content to details card\n      detailsCard.innerHTML = `\n                    <div class=\"flex items-start justify-between mb-4\">\n              <div class=\"flex items-center\">\n                <div class=\"mr-3\">\n                  <div style=\"width: 32px; height: 32px; background: ${categoryColor}; border-radius: 50%; border: 2px solid white; display: flex; align-items: center; justify-content: center; font-size: 16px;\">\n                    ${categoryEmoji}\n                  </div>\n                </div>\n            <div>\n              <h3 class=\"font-semibold text-lg\">${location.text || location.name || ''}</h3>\n              <p class=\"text-sm text-gray-500\">${location.place_name || location.address || ''}</p>\n            </div>\n          </div>\n          <button class=\"close-details p-2 hover:bg-gray-100 rounded-full\">\n            <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n        <div class=\"space-y-3\">\n          ${location.properties?.distance ? `\n            <div class=\"flex items-center text-sm text-gray-600\">\n              <svg class=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n              </svg>\n              ${formatDistance(location.properties.distance)}\n            </div>\n          ` : ''}\n          <div className=\"flex space-x-2\">\n            <button class=\"flex-1 flex items-center justify-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\">\n              <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7\" />\n              </svg>\n              <span>${t('search.directions')}</span>\n            </button>\n            <button class=\"flex-1 flex items-center justify-center space-x-2 px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200\">\n              <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z\" />\n              </svg>\n              <span>Share</span>\n            </button>\n          </div>\n        </div>\n      `;\n\n      // Add details card to the map container\n      map.current.getContainer().appendChild(detailsCard);\n\n      // Function to show details card\n      const showDetails = () => {\n        detailsCard.style.display = 'block';\n        requestAnimationFrame(() => {\n          detailsCard.style.transform = 'translateY(0)';\n        });\n      };\n\n      // Function to hide details card\n      const hideDetails = () => {\n        detailsCard.style.transform = 'translateY(100%)';\n        setTimeout(() => {\n          detailsCard.style.display = 'none';\n        }, 300);\n      };\n\n      // Add click event listener to marker element\n      markerEl.addEventListener('click', (e) => {\n        e.stopPropagation();\n        showDetails();\n      });\n\n      // Add touch event listener for mobile\n      markerEl.addEventListener('touchend', (e) => {\n        e.stopPropagation();\n        showDetails();\n      });\n\n      // Close details card when close button is clicked\n      detailsCard.querySelector('.close-details')?.addEventListener('click', (e) => {\n        e.stopPropagation();\n        hideDetails();\n      });\n\n      // Close details card when clicking outside\n      const handleOutsideClick = (e: MouseEvent | TouchEvent) => {\n        if (!detailsCard.contains(e.target as Node) && !markerEl.contains(e.target as Node)) {\n          hideDetails();\n        }\n      };\n\n      // Add both click and touch event listeners for outside clicks\n      document.addEventListener('click', handleOutsideClick);\n      document.addEventListener('touchend', handleOutsideClick);\n\n      // Clean up event listeners when marker is removed\n      const cleanup = () => {\n        document.removeEventListener('click', handleOutsideClick);\n        document.removeEventListener('touchend', handleOutsideClick);\n        detailsCard.remove();\n      };\n\n      // Store cleanup function in marker for later use\n      (marker as any).cleanup = cleanup;\n\n      searchMarkersRef.current = [marker];\n    }\n\n    // Save to recent searches with guaranteed unique ID\n    const searchResult: SearchResult = {\n      id: location.id || `place-${Date.now()}-${locationCoordinates.join('-')}`,\n      place_name: location.place_name || location.name || '',\n      center: locationCoordinates,\n      place_type: Array.isArray(location.place_type) ? location.place_type : [location.type || 'place'],\n      properties: {\n        category: location.properties?.category || location.type,\n        maki: location.properties?.maki\n      },\n      text: location.text || location.name || ''\n    };\n\n    const updatedSearches = [\n      searchResult,\n      ...recentSearches.filter(s => s.id !== searchResult.id)\n    ].slice(0, 5);\n\n    setRecentSearches(updatedSearches);\n    localStorage.setItem('recentMapSearches', JSON.stringify(updatedSearches));\n\n    setSearchQuery('');\n    setSearchResults([]);\n    setShowResults(false);\n    setIsSearchFocused(false);\n  };\n\n  // Save favorites to localStorage\n  const saveFavorites = (newFavorites: EnhancedSearchResult[]) => {\n    setFavorites(newFavorites);\n    localStorage.setItem('mapFavorites', JSON.stringify(newFavorites));\n  };\n\n  // Toggle favorite status\n  const toggleFavorite = (result: EnhancedSearchResult) => {\n    const isFavorite = favorites.some(fav => fav.id === result.id);\n    let newFavorites;\n    \n    if (isFavorite) {\n      newFavorites = favorites.filter(fav => fav.id !== result.id);\n    } else {\n      newFavorites = [...favorites, result];\n    }\n    \n    saveFavorites(newFavorites);\n    if (onSaveToFavorites) {\n      onSaveToFavorites(result);\n    }\n  };\n\n  // Share location\n  const shareLocation = async (result: EnhancedSearchResult) => {\n    const shareData = {\n      title: result.text,\n      text: result.place_name,\n      url: `https://www.google.com/maps/search/?api=1&query=${result.center[1]},${result.center[0]}`\n    };\n\n    try {\n      if (navigator.share) {\n        await navigator.share(shareData);\n      } else {\n        // Fallback for browsers that don't support Web Share API\n        await navigator.clipboard.writeText(shareData.url);\n        alert('Location URL copied to clipboard!');\n      }\n    } catch (error) {\n      console.error('Error sharing location:', error);\n    }\n  };\n\n  // Add direction handling function\n  const handleGetDirections = (result: EnhancedSearchResult) => {\n    // Get the best available address for navigation\n    const destinationAddress = result.full_address || \n                              result.place_name || \n                              (result.address && result.name ? `${result.address} ${result.name}` : result.name) ||\n                              result.text;\n    \n    if (!destinationAddress) {\n      console.error('No address information available for directions', result);\n      return;\n    }\n\n    // Create Google Maps URL with address\n    const encodedAddress = encodeURIComponent(destinationAddress);\n    const googleMapsUrl = `https://www.google.com/maps/search/?api=1&query=${encodedAddress}`;\n    \n    // Check if we're on mobile and can use the Google Maps app\n    if (navigator.userAgent.match(/iPhone|iPad|iPod|Android/i)) {\n      // Try to open Google Maps app first\n      const googleMapsAppUrl = `comgooglemaps://?q=${encodedAddress}`;\n      \n      // Create a hidden iframe to test if the app is available\n      const iframe = document.createElement('iframe');\n      iframe.style.display = 'none';\n      iframe.src = googleMapsAppUrl;\n      \n      // Set a timeout to fallback to web version\n      const timeout = setTimeout(() => {\n        window.open(googleMapsUrl, '_blank');\n      }, 1000);\n      \n      // If the app opens, clear the timeout\n      iframe.onload = () => {\n        clearTimeout(timeout);\n      };\n      \n      document.body.appendChild(iframe);\n      \n      // Remove the iframe after a short delay\n      setTimeout(() => {\n        document.body.removeChild(iframe);\n      }, 2000);\n    } else {\n      // On desktop, open in new tab\n      window.open(googleMapsUrl, '_blank');\n    }\n  };\n\n  // Enhanced ResultCard component with new features\n  const ResultCard = ({ result }: { result: EnhancedSearchResult }) => {\n    const isFavorite = favorites.some(fav => fav.id === result.id);\n    const isPOI = result.properties?.source === 'database_poi';\n    const poiData = result.poi_data;\n    \n\n\n    return (\n      <div className={cn(\"p-4 border-b border-gray-100 hover:bg-gray-50 relative\", result.properties?.isNearest && \"ring-2 ring-green-500/60 bg-green-50\")}> \n        {result.properties?.isNearest && (\n          <div className=\"absolute top-2 right-2 bg-green-500 text-white text-xs font-bold px-2 py-1 rounded-full shadow\">\n            {t('search.nearest', 'Nearest')}\n          </div>\n        )}\n        <div className=\"flex items-start\">\n          <div className=\"flex-shrink-0\">\n            {result.photos?.[0] ? (\n              <img \n                src={result.photos[0]} \n                alt={result.text}\n                className=\"w-16 h-16 object-cover rounded-lg\"\n              />\n            ) : isPOI && poiData?.category_image_url ? (\n              <div className=\"w-16 h-16 rounded-lg bg-gray-100 flex items-center justify-center\">\n                <img \n                  src={poiData.category_image_url} \n                  alt={poiData.category_name || 'POI'}\n                  className=\"w-12 h-12 object-cover rounded-lg\"\n                />\n              </div>\n            ) : (\n              <div \n                className=\"flex items-center justify-center w-12 h-12 rounded-full border-2 border-white shadow-md\"\n                style={{ \n                  backgroundColor: getCategoryColor(result.properties?.category, result.place_type),\n                  fontSize: '20px'\n                }}\n              >\n                {getCategoryEmoji(result.properties?.category, result.place_type)}\n              </div>\n            )}\n          </div>\n          <div className=\"ml-4 flex-1\">\n            <div className=\"flex items-center justify-between\">\n              <h3 className=\"font-medium text-gray-900\">{result.text}</h3>\n              <div className=\"flex items-center space-x-2\">\n                {(isPOI && poiData?.average_rating && poiData.average_rating > 0) || (result.rating && result.rating > 0) ? (\n                  <div className=\"flex items-center\">\n                    <Star className=\"w-4 h-4 text-yellow-400 fill-current\" />\n                    <span className=\"ml-1 text-sm text-gray-600\">\n                      {isPOI && poiData?.average_rating && poiData.average_rating > 0\n                        ? (poiData.rating_type === 'out_of_5' \n                            ? `${poiData.average_rating.toFixed(1)}/5`\n                            : poiData.rating_type === 'percentage'\n                            ? `${poiData.average_rating.toFixed(0)}%`\n                            : `${poiData.average_rating.toFixed(1)}/10`)\n                        : result.rating && result.rating > 0\n                        ? result.rating.toFixed(1)\n                        : ''\n                      }\n                    </span>\n                  </div>\n                ) : null}\n                <div\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    toggleFavorite(result);\n                  }}\n                  className=\"p-1 rounded-full hover:bg-gray-100 cursor-pointer\"\n                >\n                  <Heart \n                    className={`w-5 h-5 ${isFavorite ? 'text-red-500 fill-current' : 'text-gray-400'}`} \n                  />\n                </div>\n              </div>\n            </div>\n            \n            {/* Only show place_name if it's different from the main title and not empty */}\n            {result.place_name && result.place_name !== result.text && result.place_name.trim() && (\n              <p className=\"text-sm text-gray-500\">{result.place_name}</p>\n            )}\n            \n            {isPOI && poiData?.category_name && (\n              <div className=\"mt-1 text-sm text-gray-600\">\n                <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\n                  {poiData.category_name}\n                </span>\n              </div>\n            )}\n            \n            {/* Show review information if available */}\n            {isPOI && result.review_text && result.review_text.trim() && (\n              <div className=\"mt-2 p-2 bg-gray-50 rounded-lg\">\n                <div className=\"flex items-center justify-between mb-1\">\n                  <span className=\"text-xs font-medium text-gray-700\">\n                    {result.review_author ? `${t('search.review_by', \"Review by\")} ${result.review_author}` : t('search.review', \"Review\")}\n                  </span>\n                  {result.review_rating && result.review_rating > 0 && (\n                    <div className=\"flex items-center\">\n                      <Star className=\"w-3 h-3 text-yellow-400 fill-current\" />\n                      <span className=\"ml-1 text-xs text-gray-600\">\n                        {typeof result.review_rating === 'number' ? result.review_rating.toFixed(1) : result.review_rating}\n                      </span>\n                    </div>\n                  )}\n                </div>\n                <p className=\"text-xs text-gray-600 line-clamp-2\">\n                  \"{result.review_text}\"\n                </p>\n              </div>\n            )}\n            \n            {isPOI && poiData?.description && poiData.description.trim() && poiData.description !== '0' && !result.review_text && (\n              <p className=\"mt-1 text-sm text-gray-600 line-clamp-2\">\n                {poiData.description}\n              </p>\n            )}\n            \n            {result.priceLevel && result.priceLevel > 0 && (\n              <div className=\"mt-1 text-sm text-gray-600\">\n                {'$'.repeat(result.priceLevel)}\n              </div>\n            )}\n            {result.openingHours && (\n              <div className=\"mt-1 text-sm text-gray-600\">\n                {result.openingHours.open ? (\n                  <span className=\"text-green-600\">{t('search.open_now')}</span>\n                ) : (\n                  <span className=\"text-red-600\">{t('search.closed')}</span>\n                )}\n              </div>\n            )}\n            {(result.distance || result.properties?.distance) && (result.distance || result.properties?.distance) > 0 && (\n              <div className=\"mt-1 text-sm text-gray-500\">\n                {formatDistance(result.distance || result.properties?.distance)}\n              </div>\n            )}\n            <div className=\"mt-2 flex items-center space-x-2\">\n              <div\n                onClick={(e) => {\n                  e.stopPropagation();\n                  handleGetDirections(result);\n                }}\n                className=\"flex items-center text-sm text-blue-600 hover:text-blue-800 cursor-pointer\"\n              >\n                <Navigation className=\"w-4 h-4 mr-1\" />\n                {t('search.directions')}\n              </div>\n              <div\n                onClick={(e) => {\n                  e.stopPropagation();\n                  shareLocation(result);\n                }}\n                className=\"flex items-center text-sm text-blue-600 hover:text-blue-800 cursor-pointer\"\n              >\n                <Share className=\"w-4 h-4 mr-1\" />\n                Share\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // Filter panel component\n  const FilterPanel = () => (\n    <div className=\"p-4 border-t border-gray-100\">\n      <div className=\"space-y-4\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700\">Price Range</label>\n          <select\n            value={filters.priceRange || ''}\n            onChange={(e) => handleFilterChange('priceRange', e.target.value || undefined)}\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n          >\n            <option value=\"\">Any</option>\n            <option value=\"low\">$</option>\n            <option value=\"medium\">$$</option>\n            <option value=\"high\">$$$</option>\n          </select>\n        </div>\n        \n        <div>\n          <label className=\"block text-sm font-medium text-gray-700\">Minimum Rating</label>\n          <select\n            value={filters.rating || ''}\n            onChange={(e) => handleFilterChange('rating', e.target.value ? Number(e.target.value) : undefined)}\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n          >\n            <option value=\"\">Any</option>\n            <option value=\"3\">3+ stars</option>\n            <option value=\"4\">4+ stars</option>\n            <option value=\"4.5\">4.5+ stars</option>\n          </select>\n        </div>\n\n        <div className=\"flex items-center\">\n          <input\n            type=\"checkbox\"\n            id=\"openNow\"\n            checked={filters.openNow || false}\n            onChange={(e) => handleFilterChange('openNow', e.target.checked)}\n            className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n          />\n          <label htmlFor=\"openNow\" className=\"ml-2 block text-sm text-gray-700\">\n            Open now\n          </label>\n        </div>\n\n        <div className=\"flex items-center\">\n          <input\n            type=\"checkbox\"\n            id=\"accessibility\"\n            checked={filters.accessibility || false}\n            onChange={(e) => handleFilterChange('accessibility', e.target.checked)}\n            className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n          />\n          <label htmlFor=\"accessibility\" className=\"ml-2 block text-sm text-gray-700\">\n            Wheelchair accessible\n          </label>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className={cn(\n      \"absolute z-20 transition-all duration-300 ease-in-out\",\n      isSearchFocused\n        ? \"w-full max-w-xl mx-auto left-0 right-0 top-4 px-4\"\n        : \"w-[calc(100%-32px)] max-w-md mx-auto left-0 right-0 top-4\"\n    )}>\n      <div className=\"relative\" ref={searchContainerRef}>\n        <div className={cn(\n          \"relative bg-white rounded-xl shadow-lg overflow-hidden\",\n          isSearchFocused ? \"shadow-xl\" : \"hover:shadow-xl transition-shadow\"\n        )}>\n          <div className=\"relative\">\n            <input\n              type=\"search\"\n              value={searchQuery}\n              onChange={(e) => handleSearch(e.target.value)}\n              onFocus={() => setIsSearchFocused(true)}\n              className={cn(\n                \"w-full px-4 pl-12 pr-10 py-3 border-none\",\n                \"bg-white focus:outline-none focus:ring-2 focus:ring-blue-500\",\n                \"text-gray-900 placeholder:text-gray-400\"\n              )}\n              autoComplete=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('search.placeholder', \"Search locations...\")}\n              inputMode=\"text\"\n              enterKeyHint=\"search\"\n            />\n            <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400\" />\n            {searchQuery && (\n              <button\n                onClick={() => {\n                  setSearchQuery('');\n                  setSearchResults([]);\n                  setShowResults(false);\n                  clearSearchMarkers();\n                }}\n                className=\"absolute right-3 top-1/2 -translate-y-1/2 p-1 rounded-full hover:bg-gray-100\"\n              >\n                <X className=\"w-5 h-5 text-gray-400\" />\n              </button>\n            )}\n        </div>\n\n        {isSearchFocused && (\n            <div className=\"search-container border-t border-gray-100\">\n              <div className=\"flex items-center justify-between px-4 py-2 border-b border-gray-100\">\n                <button\n                  onClick={() => setShowFilters(!showFilters)}\n                  className=\"flex items-center text-sm text-gray-600 hover:text-gray-900\"\n                >\n                  <Filter className=\"w-4 h-4 mr-1\" />\n                  Filters\n                </button>\n                {Object.keys(filters).length > 0 && (\n                  <button\n                    onClick={() => setFilters({})}\n                    className=\"text-sm text-blue-600 hover:text-blue-800\"\n                  >\n                    Clear filters\n                  </button>\n                )}\n              </div>\n\n              {showFilters && <FilterPanel />}\n\n              {showResults ? (\n                <div className=\"max-h-[60vh] overflow-y-auto\">\n                  {/* Show fuzzy category button if there are fuzzy matches and not already showing */}\n                  {fuzzyPoiMatches.length > 0 && !showingFuzzyCategory && (\n                    <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 border-b border-blue-200 p-4\">\n                      <button\n                        key=\"fuzzy-poi-category-btn\"\n                        onClick={() => handleResultSelect({\n                          id: 'fuzzy-poi-category',\n                          type: 'fuzzy-poi-category',\n                          place_type: ['category'],\n                          place_name: t('search.fuzzy_category', { query: searchQuery }),\n                          text: t('search.fuzzy_category', { query: searchQuery }),\n                          name: t('search.fuzzy_category', { query: searchQuery }),\n                          properties: { category: 'fuzzy-poi-category' },\n                        })}\n                        className=\"w-full text-left bg-white hover:bg-blue-50 border border-blue-200 rounded-lg p-4 font-semibold text-blue-900 transition-colors duration-200 shadow-sm\"\n                      >\n                        <div className=\"flex items-center\">\n                          <div className=\"flex-shrink-0 mr-3\">\n                            <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center\">\n                              <MapPin className=\"w-5 h-5 text-blue-600\" />\n                            </div>\n                          </div>\n                          <div className=\"flex-1\">\n                            <div className=\"font-bold text-blue-900 text-lg\">\n                              {t('search.fuzzy_category', { query: searchQuery })}\n                            </div>\n                            <div className=\"text-sm text-blue-700 mt-1\">\n                              {t('search.fuzzy_category_description', \"See the best reviews and recommended places and activities by ZapAround\")}\n                            </div>\n                          </div>\n                          <div className=\"flex-shrink-0\">\n                            <div className=\"w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center\">\n                              <span className=\"text-white text-xs font-bold\">‚Üí</span>\n                            </div>\n                          </div>\n                        </div>\n                      </button>\n                    </div>\n                  )}\n                  {searchResults.length > 0 ? (\n                    searchResults.map((result) => (\n                      <button\n                        key={`search-result-${result.id}`}\n                        onClick={() => handleResultSelect(result)}\n                        className=\"w-full text-left\"\n                      >\n                        <ResultCard result={{\n                          ...result,\n                          review_author: result.properties?.review_author,\n                          review_text: result.properties?.review_text,\n                          review_rating: result.properties?.review_rating,\n                          poi_data: result.properties?.poi_data,\n                          distance: result.properties?.distance,\n                        } as EnhancedSearchResult} />\n                      </button>\n                    ))\n                  ) : (\n                    <div className=\"py-8 text-center\">\n                      <MapPin className=\"w-8 h-8 mx-auto mb-2 text-gray-300\" />\n                      <p className=\"text-gray-500 font-medium\">\n                        {t('search.no_results', \"No {{category}} found\", {\n                          category: Object.keys(categoryQueries).find(key => \n                            categoryQueries[key].toLowerCase() === searchQuery.toLowerCase() ||\n                            searchQuery.toLowerCase().includes(key.toLowerCase())\n                          ) || searchQuery\n                        })}\n                      </p>\n                      <p className=\"text-sm text-gray-400 mt-1\">\n                        {t('search.try_again', \"Try zooming out or changing your search\")}\n                      </p>\n                    </div>\n                  )}\n                </div>\n              ) : (\n                <div className=\"p-4\">\n                  <div className=\"flex space-x-2 mb-4\">\n                    <button\n                      key=\"categories-tab\"\n                      onClick={() => setActiveTab('categories')}\n                      className={cn(\n                        \"flex-1 px-3 py-2 text-sm font-medium rounded-md\",\n                        activeTab === 'categories'\n                          ? \"bg-blue-500 text-white\"\n                          : \"bg-white text-gray-700 border border-gray-200\"\n                      )}\n                    >\n                      {t('search.tabs.categories', \"Categories\")}\n                    </button>\n                    <button\n                      key=\"favorites-tab\"\n                      onClick={() => setActiveTab('favorites')}\n                      className={cn(\n                        \"flex-1 px-3 py-2 text-sm font-medium rounded-md\",\n                        activeTab === 'favorites'\n                          ? \"bg-blue-500 text-white\"\n                          : \"bg-white text-gray-700 border border-gray-200\"\n                      )}\n                    >\n                      {t('search.tabs.recent', \"Recent\")}\n                    </button>\n                    </div>\n\n                  {activeTab === 'categories' ? (\n                    <div key=\"categories-content\">\n                      <div className=\"grid grid-cols-4 gap-2 mb-4\">\n                        {categoryButtons.map((btn) => (\n                          <button\n                            key={`category-button-${btn.id}`}\n                            onClick={() => {\n                              setSearchQuery(btn.query);\n                              handleSearch(btn.query);\n                              setIsSearchFocused(true);\n                            }}\n                            className=\"flex flex-col items-center p-2 bg-white border \n                              border-gray-200 rounded-md hover:bg-gray-50\"\n                          >\n                            {btn.icon}\n                            <span className=\"text-xs mt-1\">{btn.label}</span>\n                  </button>\n                ))}\n              </div>\n                      <div className=\"space-y-1\">\n                        {categoryList.map((cat) => (\n                  <button\n                            key={`category-list-${cat.id}`}\n                    onClick={() => {\n                              setSearchQuery(cat.query);\n                              handleSearch(cat.query);\n                              setIsSearchFocused(true);\n                    }}\n                            className=\"w-full flex items-center p-2 rounded-md hover:bg-gray-50\"\n                  >\n                            {cat.icon}\n                            <span className=\"ml-3 text-sm\">{cat.label}</span>\n                  </button>\n                        ))}\n                </div>\n                    </div>\n                  ) : (\n                    <div key=\"favorites-content\" className=\"space-y-1\">\n                      {favorites.length > 0 ? (\n                        favorites.map((item) => (\n                          <button\n                            key={`favorite-${item.id}`}\n                            onClick={() => handleLocationSelect(item)}\n                            className=\"w-full flex items-center p-2 rounded-md hover:bg-gray-50\"\n                          >\n                            {getCategoryIcon(item.properties?.category, item.place_type)}\n                            <div className=\"ml-3 text-left\">\n                              <div className=\"font-medium\">{item.text}</div>\n                              <div className=\"text-sm text-gray-500\">\n                                {item.place_name.split(',').slice(1).join(',').trim()}\n                    </div>\n                    </div>\n                  </button>\n                        ))\n                      ) : (\n                        <div key=\"no-favorites\" className=\"text-center py-4 text-gray-500\">\n                          <MapPin className=\"w-8 h-8 mx-auto mb-2 opacity-50\" />\n                          <p>{t('search.no_favorites', \"No favorites added\")}</p>\n              </div>\n            )}\n                    </div>\n                  )}\n                </div>\n              )}\n              </div>\n            )}\n              </div>\n      </div>\n    </div>\n  );\n}; "],"names":["formatDistance","meters","Math","round","toFixed","getCategoryIcon","category","placeType","includes","jsx","Home","className","MapPin","Store","Building","getCategoryColor","getCategoryEmoji","MapSearch","map","onLocationSelect","onSaveToFavorites","onGetDirections","t","useTranslation","searchQuery","setSearchQuery","useState","isSearchFocused","setIsSearchFocused","searchResults","setSearchResults","showResults","setShowResults","isSearching","setIsSearching","recentSearches","setRecentSearches","activeTab","setActiveTab","searchTimeout","useRef","searchMarkersRef","searchContainerRef","accessToken","sessionToken","uuidv4","filters","setFilters","showFilters","setShowFilters","selectedResult","setSelectedResult","favorites","setFavorites","fuzzyPoiMatches","setFuzzyPoiMatches","showingFuzzyCategory","setShowingFuzzyCategory","usePOIs","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","categoryButtons","id","label","icon","UtensilsCrossed","query","Coffee","Wine","ShoppingBag","categoryList","Hotel","Landmark","Palette","Film","Car","Pill","categoryQueries","food","cafe","bar","mall","hotel","attractions","landmark","museum","cinema","parking","pharmacy","grocery","clearSearchMarkers","savedSearches","localStorage","getItem","JSON","parse","e","savedFavorites","forEach","marker","remove","handleFilterChange","key","value","prev","searchPOIs","async","trim","length","searchTerm","toLowerCase","results","mapCenter","getCenter","currentLat","lat","currentLng","lng","data","poiResults","error","supabase","from","select","limit","poi","nameMatch","name","descriptionMatch","description","categoryMatch","categories","some","cat","categoryNameMatch","poi_categories","reviewMatches","poi_reviews","filter","review","notesMatch","notes","authorMatch","user_id","ratingType","averageRating","reviewCount","ratingTypeCounts","out_of_10","out_of_5","percentage","rating_type","maxCount","max","reviewsInMainType","reduce","sum","rating","distance","lat1","lon1","lat2","lon2","PI","a","sin","cos","atan2","sqrt","calculateDistance","isNearest","poiResult","place_name","address","center","place_type","properties","maki","source","text","poi_data","url","poi_category_id","created_at","updated_at","category_name","category_image_url","image_url","average_rating","review_count","matchingReview","review_author","slice","review_text","review_rating","push","sort","b","distanceA","Infinity","distanceB","handleSearch","clearTimeout","setTimeout","searchUrl","URL","geocodingUrl","poiSuggestions","type","full_address","searchParams","URLSearchParams","q","access_token","session_token","language","types","geocodingParams","autocomplete","append","bounds","getBounds","bbox","getWest","getSouth","getEast","getNorth","every","coord","isNaN","isFinite","join","priceRange","toString","openNow","accessibility","encodedQuery","encodeURIComponent","searchResponse","geocodingResponse","Promise","all","fetch","mapboxPoiSuggestions","ok","searchData","json","suggestions","suggestion","coordinates","longitude","latitude","geometry","metadata","context","isLocationPOI","feature_type","mapbox_id","Date","now","random","poi_category","feature_score","matching_name","matching_place_name","Boolean","addressSuggestions","geocodingData","features","feature","addressContext","find","c","startsWith","houseNumber","match","displayName","split","betterText","allSuggestions","uniqueSuggestions","acc","item","abs","handleResultSelect","handleLocationSelect","searchText","params","isPOI","response","Error","geocodedLocation","enhancedLocation","geocoded_place_name","geocoded_address","mapboxgl","LngLatBounds","extend","isEmpty","fitBounds","padding","maxZoom","location","locationCoordinates","Array","isArray","hasAddressData","isValidCoordinates","zoomLevel","zoom","flyTo","duration","markerEl","createElement","style","width","height","display","alignItems","justifyContent","cursor","transition","zIndex","position","transform","categoryColor","categoryEmoji","iconContainer","background","borderRadius","border","boxShadow","fontSize","overflow","textContent","appendChild","onmouseover","onmouseout","Marker","element","anchor","setLngLat","addTo","detailsCard","bottom","left","right","backgroundColor","borderTopLeftRadius","borderTopRightRadius","innerHTML","getContainer","showDetails","requestAnimationFrame","hideDetails","stopPropagation","querySelector","handleOutsideClick","cleanup","searchResult","updatedSearches","s","setItem","stringify","toggleFavorite","result","newFavorites","fav","saveFavorites","ResultCard","isFavorite","poiData","jsxs","cn","children","photos","src","alt","Star","onClick","Heart","priceLevel","repeat","openingHours","open","destinationAddress","encodedAddress","googleMapsUrl","navigator","userAgent","googleMapsAppUrl","iframe","timeout","window","onload","body","removeChild","handleGetDirections","Navigation","shareData","title","share","clipboard","writeText","alert","shareLocation","Share","FilterPanel","onChange","Number","checked","htmlFor","ref","onFocus","autoComplete","spellCheck","placeholder","inputMode","enterKeyHint","Search","X","Filter","Object","keys","btn"],"mappings":"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"}