{"version":3,"file":"components-optimizedimage.tsx.DVN-Ynzu.js","sources":["../../../../src/components/OptimizedImage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { cn } from '@/lib/utils';\n\ninterface OptimizedImageProps {\n  src: string;\n  alt: string;\n  width?: number;\n  height?: number;\n  className?: string;\n  priority?: boolean;\n  loading?: 'lazy' | 'eager';\n  sizes?: string;\n  quality?: number;\n  placeholder?: 'blur' | 'empty' | 'dominantColor';\n  blurDataURL?: string;\n  onLoad?: () => void;\n  onError?: () => void;\n  fallback?: string;\n  webp?: boolean;\n  avif?: boolean;\n  responsive?: boolean;\n  aspectRatio?: number;\n}\n\nexport function OptimizedImage({\n  src,\n  alt,\n  width,\n  height,\n  className,\n  priority = false,\n  loading = 'lazy',\n  sizes = '100vw',\n  quality = 75,\n  placeholder = 'empty',\n  blurDataURL,\n  onLoad,\n  onError,\n  fallback,\n  webp = true,\n  avif = false,\n  responsive = true,\n  aspectRatio,\n}: OptimizedImageProps) {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [isInView, setIsInView] = useState(priority);\n  const imgRef = useRef<HTMLImageElement>(null);\n  const observerRef = useRef<IntersectionObserver | null>(null);\n\n  // Generate optimized image URLs\n  const generateImageUrls = useCallback(() => {\n    const baseUrl = src.startsWith('http') ? src : `https://zaparound.com${src}`;\n    const url = new URL(baseUrl);\n    \n    // Add optimization parameters\n    if (width) url.searchParams.set('w', width.toString());\n    if (height) url.searchParams.set('h', height.toString());\n    if (quality) url.searchParams.set('q', quality.toString());\n    \n    const urls: { [key: string]: string } = {\n      default: url.toString(),\n    };\n\n    // Generate WebP version if supported\n    if (webp) {\n      const webpUrl = new URL(baseUrl);\n      if (width) webpUrl.searchParams.set('w', width.toString());\n      if (height) webpUrl.searchParams.set('h', height.toString());\n      if (quality) webpUrl.searchParams.set('q', quality.toString());\n      webpUrl.searchParams.set('fm', 'webp');\n      urls.webp = webpUrl.toString();\n    }\n\n    // Generate AVIF version if supported\n    if (avif) {\n      const avifUrl = new URL(baseUrl);\n      if (width) avifUrl.searchParams.set('w', width.toString());\n      if (height) avifUrl.searchParams.set('h', height.toString());\n      if (quality) avifUrl.searchParams.set('q', quality.toString());\n      avifUrl.searchParams.set('fm', 'avif');\n      urls.avif = avifUrl.toString();\n    }\n\n    return urls;\n  }, [src, width, height, quality, webp, avif]);\n\n  // Intersection Observer for lazy loading\n  useEffect(() => {\n    if (priority || !imgRef.current) return;\n\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsInView(true);\n          observer.disconnect();\n        }\n      },\n      {\n        rootMargin: '50px 0px',\n        threshold: 0.01,\n      }\n    );\n\n    observer.observe(imgRef.current);\n    observerRef.current = observer;\n\n    return () => {\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n      }\n    };\n  }, [priority]);\n\n  // Handle image load\n  const handleLoad = useCallback(() => {\n    setIsLoaded(true);\n    onLoad?.();\n  }, [onLoad]);\n\n  // Handle image error\n  const handleError = useCallback(() => {\n    setHasError(true);\n    onError?.();\n  }, [onError]);\n\n  // Generate responsive sizes\n  const generateSizes = useCallback(() => {\n    if (!responsive) return sizes;\n    \n    if (width && width <= 640) {\n      return '(max-width: 640px) 100vw, 50vw';\n    } else if (width && width <= 1024) {\n      return '(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 33vw';\n    } else {\n      return '(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 25vw';\n    }\n  }, [responsive, sizes, width]);\n\n  const imageUrls = generateImageUrls();\n  const responsiveSizes = generateSizes();\n\n  // Container styles for aspect ratio\n  const containerStyle: React.CSSProperties = {\n    position: 'relative',\n    overflow: 'hidden',\n    ...(aspectRatio && {\n      aspectRatio: aspectRatio.toString(),\n    }),\n    // Only set explicit width/height if no className is provided (non-responsive usage)\n    ...(width && height && !aspectRatio && !className && {\n      width: `${width}px`,\n      height: `${height}px`,\n    }),\n  };\n\n  // Image styles\n  const imageStyle: React.CSSProperties = {\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover',\n    transition: 'opacity 0.3s ease-in-out',\n    opacity: isLoaded ? 1 : 0,\n  };\n\n  return (\n    <div className={cn('relative', className)} style={containerStyle}>\n      {/* Placeholder */}\n      {!isLoaded && placeholder === 'blur' && blurDataURL && (\n        <img\n          src={blurDataURL}\n          alt=\"\"\n          className=\"absolute inset-0 w-full h-full object-cover blur-sm scale-110\"\n          style={{ filter: 'blur(10px)' }}\n        />\n      )}\n\n      {/* Loading skeleton */}\n      {!isLoaded && placeholder === 'empty' && (\n        <div className=\"absolute inset-0 bg-gray-200 animate-pulse\" />\n      )}\n\n      {/* Optimized image */}\n      {isInView && (\n        <picture>\n          {/* AVIF format */}\n          {avif && imageUrls.avif && (\n            <source srcSet={imageUrls.avif} type=\"image/avif\" />\n          )}\n          \n          {/* WebP format */}\n          {webp && imageUrls.webp && (\n            <source srcSet={imageUrls.webp} type=\"image/webp\" />\n          )}\n          \n          {/* Fallback image */}\n          <img\n            ref={imgRef}\n            src={hasError && fallback ? fallback : imageUrls.default}\n            alt={alt}\n            width={width}\n            height={height}\n            loading={loading}\n            sizes={responsiveSizes}\n            className={cn(\n              'transition-opacity duration-300',\n              isLoaded ? 'opacity-100' : 'opacity-0'\n            )}\n            style={imageStyle}\n            onLoad={handleLoad}\n            onError={handleError}\n            decoding=\"async\"\n            {...(priority && { fetchpriority: 'high' as const })}\n          />\n        </picture>\n      )}\n\n      {/* Error fallback */}\n      {hasError && !fallback && (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-gray-100 text-gray-500\">\n          <svg className=\"w-8 h-8\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path fillRule=\"evenodd\" d=\"M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z\" clipRule=\"evenodd\" />\n          </svg>\n        </div>\n      )}\n\n      {/* Loading indicator */}\n      {!isLoaded && !hasError && (\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <div className=\"w-6 h-6 border-2 border-gray-300 border-t-blue-600 rounded-full animate-spin\" />\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Export a simpler version for basic use cases\nexport const Image: React.FC<Omit<OptimizedImageProps, 'format' | 'fit' | 'position' | 'placeholder' | 'priority' | 'sizes' | 'srcSet'>> = (props) => {\n  return <OptimizedImage {...props} />;\n};\n\n// Export a hero image component for above-the-fold images\nexport const HeroImage: React.FC<OptimizedImageProps> = (props) => {\n  return <OptimizedImage {...props} priority loading=\"eager\" />;\n};\n\n// Export a lazy image component for below-the-fold images\nexport const LazyImage: React.FC<OptimizedImageProps> = (props) => {\n  return <OptimizedImage {...props} loading=\"lazy\" />;\n}; "],"names":["OptimizedImage","src","alt","width","height","className","priority","loading","sizes","quality","placeholder","blurDataURL","onLoad","onError","fallback","webp","avif","responsive","aspectRatio","isLoaded","setIsLoaded","useState","hasError","setHasError","isInView","setIsInView","imgRef","useRef","observerRef","generateImageUrls","useCallback","baseUrl","startsWith","url","URL","searchParams","set","toString","urls","default","webpUrl","avifUrl","useEffect","current","observer","IntersectionObserver","entry","isIntersecting","disconnect","rootMargin","threshold","observe","handleLoad","handleError","generateSizes","imageUrls","responsiveSizes","containerStyle","position","overflow","imageStyle","objectFit","transition","opacity","jsxs","cn","style","children","jsx","filter","srcSet","type","ref","decoding","fetchpriority","fill","viewBox","fillRule","d","clipRule"],"mappings":"qHAwBO,SAASA,GAAeC,IAC7BA,EAAAC,IACAA,EAAAC,MACAA,EAAAC,OACAA,EAAAC,UACAA,EAAAC,SACAA,GAAW,EAAAC,QACXA,EAAU,OAAAC,MACVA,EAAQ,QAAAC,QACRA,EAAU,GAAAC,YACVA,EAAc,QAAAC,YACdA,EAAAC,OACAA,EAAAC,QACAA,EAAAC,SACAA,EAAAC,KACAA,GAAO,EAAAC,KACPA,GAAO,EAAAC,WACPA,GAAa,EAAAC,YACbA,IAEA,MAAOC,EAAUC,GAAeC,EAAAA,UAAS,IAClCC,EAAUC,GAAeF,EAAAA,UAAS,IAClCG,EAAUC,GAAeJ,EAAAA,SAASf,GACnCoB,EAASC,SAAyB,MAClCC,EAAcD,SAAoC,MAGlDE,EAAoBC,EAAAA,aAAY,KACpC,MAAMC,EAAU9B,EAAI+B,WAAW,QAAU/B,EAAM,wBAAwBA,IACjEgC,EAAM,IAAIC,IAAIH,GAGhB5B,GAAW8B,EAAAE,aAAaC,IAAI,IAAKjC,EAAMkC,YACvCjC,GAAY6B,EAAAE,aAAaC,IAAI,IAAKhC,EAAOiC,YACzC5B,GAAawB,EAAAE,aAAaC,IAAI,IAAK3B,EAAQ4B,YAE/C,MAAMC,EAAkC,CACtCC,QAASN,EAAII,YAIf,GAAItB,EAAM,CACF,MAAAyB,EAAU,IAAIN,IAAIH,GACpB5B,GAAeqC,EAAAL,aAAaC,IAAI,IAAKjC,EAAMkC,YAC3CjC,GAAgBoC,EAAAL,aAAaC,IAAI,IAAKhC,EAAOiC,YAC7C5B,GAAiB+B,EAAAL,aAAaC,IAAI,IAAK3B,EAAQ4B,YAC3CG,EAAAL,aAAaC,IAAI,KAAM,QAC1BE,EAAAvB,KAAOyB,EAAQH,UAAS,CAI/B,GAAIrB,EAAM,CACF,MAAAyB,EAAU,IAAIP,IAAIH,GACpB5B,GAAesC,EAAAN,aAAaC,IAAI,IAAKjC,EAAMkC,YAC3CjC,GAAgBqC,EAAAN,aAAaC,IAAI,IAAKhC,EAAOiC,YAC7C5B,GAAiBgC,EAAAN,aAAaC,IAAI,IAAK3B,EAAQ4B,YAC3CI,EAAAN,aAAaC,IAAI,KAAM,QAC1BE,EAAAtB,KAAOyB,EAAQJ,UAAS,CAGxB,OAAAC,CAAA,GACN,CAACrC,EAAKE,EAAOC,EAAQK,EAASM,EAAMC,IAGvC0B,EAAAA,WAAU,KACJ,GAAApC,IAAaoB,EAAOiB,QAAS,OAEjC,MAAMC,EAAW,IAAIC,sBACnB,EAAEC,MACIA,EAAMC,iBACRtB,GAAY,GACZmB,EAASI,aAAW,GAGxB,CACEC,WAAY,WACZC,UAAW,MAOf,OAHSN,EAAAO,QAAQzB,EAAOiB,SACxBf,EAAYe,QAAUC,EAEf,KACDhB,EAAYe,SACdf,EAAYe,QAAQK,YAAW,CAEnC,GACC,CAAC1C,IAGE,MAAA8C,EAAatB,EAAAA,aAAY,KAC7BV,GAAY,GACHR,KAAA,GACR,CAACA,IAGEyC,EAAcvB,EAAAA,aAAY,KAC9BP,GAAY,GACFV,KAAA,GACT,CAACA,IAGEyC,EAAgBxB,EAAAA,aAAY,IAC3Bb,EAEDd,GAASA,GAAS,IACb,iCACEA,GAASA,GAAS,KACpB,2DAEA,2DAPeK,GASvB,CAACS,EAAYT,EAAOL,IAEjBoD,EAAY1B,IACZ2B,EAAkBF,IAGlBG,EAAsC,CAC1CC,SAAU,WACVC,SAAU,YACNzC,GAAe,CACjBA,YAAaA,EAAYmB,eAGvBlC,GAASC,IAAWc,IAAgBb,GAAa,CACnDF,MAAO,GAAGA,MACVC,OAAQ,GAAGA,QAKTwD,EAAkC,CACtCzD,MAAO,OACPC,OAAQ,OACRyD,UAAW,QACXC,WAAY,2BACZC,QAAS5C,EAAW,EAAI,GAIxB,OAAA6C,OAAC,OAAI3D,UAAW4D,EAAG,WAAY5D,GAAY6D,MAAOT,EAE/CU,SAAA,EAAChD,GAA4B,SAAhBT,GAA0BC,GACtCyD,EAAAA,IAAC,MAAA,CACCnE,IAAKU,EACLT,IAAI,GACJG,UAAU,gEACV6D,MAAO,CAAEG,OAAQ,iBAKnBlD,GAA4B,UAAhBT,GACX0D,EAAAA,IAAA,MAAA,CAAI/D,UAAU,+CAIhBmB,UACE,UAEE,CAAA2C,SAAA,CAAQnD,GAAAuC,EAAUvC,MAChBoD,EAAAA,IAAA,SAAA,CAAOE,OAAQf,EAAUvC,KAAMuD,KAAK,eAItCxD,GAAQwC,EAAUxC,MACjBqD,EAAAA,IAAC,UAAOE,OAAQf,EAAUxC,KAAMwD,KAAK,eAIvCH,EAAAA,IAAC,MAAA,CACCI,IAAK9C,EACLzB,IAAKqB,GAAYR,EAAWA,EAAWyC,EAAUhB,QACjDrC,MACAC,QACAC,SACAG,UACAC,MAAOgD,EACPnD,UAAW4D,EACT,kCACA9C,EAAW,cAAgB,aAE7B+C,MAAON,EACPhD,OAAQwC,EACRvC,QAASwC,EACToB,SAAS,WACJnE,GAAY,CAAEoE,cAAe,aAMvCpD,IAAaR,GACXsD,EAAAA,IAAA,MAAA,CAAI/D,UAAU,8EACb8D,SAAAC,EAAAA,IAAC,MAAI,CAAA/D,UAAU,UAAUsE,KAAK,eAAeC,QAAQ,YACnDT,SAACC,EAAAA,IAAA,OAAA,CAAKS,SAAS,UAAUC,EAAE,6FAA6FC,SAAS,iBAMrI5D,IAAaG,GACZ8C,EAAAA,IAAA,MAAA,CAAI/D,UAAU,oDACb8D,SAACC,EAAAA,IAAA,MAAA,CAAI/D,UAAU,qFAKzB"}