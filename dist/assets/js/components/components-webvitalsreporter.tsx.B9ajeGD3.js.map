{"version":3,"file":"components-webvitalsreporter.tsx.B9ajeGD3.js","sources":["../../../../src/components/WebVitalsReporter.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { onCLS, onFID, onLCP, onFCP, onTTFB, onINP } from 'web-vitals';\n\ninterface WebVitalsReporterProps {\n  enabled?: boolean;\n  debug?: boolean;\n  analyticsId?: string;\n}\n\nexport function WebVitalsReporter({ \n  enabled = true, \n  debug = false,\n  analyticsId = 'G-NK9ZZDPQ7K'\n}: WebVitalsReporterProps) {\n  \n  useEffect(() => {\n    if (!enabled) return;\n\n    // Function to send metrics to analytics\n    const sendToAnalytics = (metric: any) => {\n      // Send to Google Analytics\n      if (window.gtag && analyticsId) {\n        window.gtag('event', metric.name, {\n          event_category: 'Web Vitals',\n          event_label: metric.id,\n          value: Math.round(metric.name === 'CLS' ? metric.value * 1000 : metric.value),\n          non_interaction: true,\n        });\n      }\n\n      // Console log for debugging\n      if (debug) {\n        console.log('Web Vitals:', metric);\n      }\n\n      // Send to custom analytics if needed\n      if (window.dataLayer) {\n        window.dataLayer.push({\n          event: 'web_vitals',\n          metric_name: metric.name,\n          metric_value: metric.value,\n          metric_id: metric.id,\n          metric_rating: metric.rating,\n        });\n      }\n    };\n\n    // Monitor Core Web Vitals\n    onCLS(sendToAnalytics);\n    onFID(sendToAnalytics);\n    onLCP(sendToAnalytics);\n    \n    // Monitor additional metrics\n    onFCP(sendToAnalytics);\n    onTTFB(sendToAnalytics);\n    \n    // Monitor INP (Interaction to Next Paint) - new metric replacing FID\n    onINP(sendToAnalytics);\n\n  }, [enabled, debug, analyticsId]);\n\n  return null;\n}\n\n// Hook for manual Web Vitals reporting\nexport const useWebVitals = (callback?: (metric: any) => void) => {\n  useEffect(() => {\n    if (!callback) return;\n\n    onCLS(callback);\n    onFID(callback);\n    onLCP(callback);\n    onFCP(callback);\n    onTTFB(callback);\n    onINP(callback);\n  }, [callback]);\n};\n\n// Declare gtag type for TypeScript\ndeclare global {\n  interface Window {\n    gtag?: (command: string, action: string, config: any) => void;\n    dataLayer?: any[];\n  }\n}\n\nexport default WebVitalsReporter;\n"],"names":["WebVitalsReporter","enabled","debug","analyticsId","useEffect","sendToAnalytics","metric","window","gtag","name","event_category","event_label","id","value","Math","round","non_interaction","dataLayer","push","event","metric_name","metric_value","metric_id","metric_rating","rating","onCLS","onFID","onLCP","onFCP","onTTFB","onINP"],"mappings":"4JASO,SAASA,GAAkBC,QAChCA,GAAU,EAAAC,MACVA,GAAQ,EAAAC,YACRA,EAAc,iBAiDP,OA9CPC,EAAAA,WAAU,KACR,IAAKH,EAAS,OAGR,MAAAI,EAAmBC,IAEnBC,OAAOC,MAAQL,GACVI,OAAAC,KAAK,QAASF,EAAOG,KAAM,CAChCC,eAAgB,aAChBC,YAAaL,EAAOM,GACpBC,MAAOC,KAAKC,MAAsB,QAAhBT,EAAOG,KAAgC,IAAfH,EAAOO,MAAeP,EAAOO,OACvEG,iBAAiB,IAUjBT,OAAOU,WACTV,OAAOU,UAAUC,KAAK,CACpBC,MAAO,aACPC,YAAad,EAAOG,KACpBY,aAAcf,EAAOO,MACrBS,UAAWhB,EAAOM,GAClBW,cAAejB,EAAOkB,QACvB,EAKLC,EAAMpB,GACNqB,EAAMrB,GACNsB,EAAMtB,GAGNuB,EAAMvB,GACNwB,EAAOxB,GAGPyB,EAAMzB,EAAe,GAEpB,CAACJ,EAASC,EAAOC,IAEb,IACT"}