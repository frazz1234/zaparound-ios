{"version":3,"file":"components-fullcreatetripdialog.tsx.DCcbTx8N.js","sources":["../../../../src/components/FullCreateTripDialog.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Dialog, DialogContent, DialogTitle, DialogDescription } from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { useTranslation } from 'react-i18next';\nimport CreateTrip from '@/pages/create-trip';\nimport { X, PlusCircle } from 'lucide-react';\nimport { cn } from \"@/lib/utils\";\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { validateFreeTrip } from '@/components/subtrip/subtrip-utils/freeTripValidation';\nimport { FreeTripDialog } from '@/components/subtrip/subtrip-dialogs/FreeTripDialog';\nimport { UpgradeModal } from '@/components/UpgradeModal';\nimport { supabase } from '@/integrations/supabase/client';\n\ninterface FullCreateTripDialogProps {\n  session: any;\n  buttonVariant?: \"default\" | \"mobile\";\n}\n\nexport function FullCreateTripDialog({ session, buttonVariant = \"default\" }: FullCreateTripDialogProps) {\n  const [open, setOpen] = React.useState(false);\n  const [showFreeTripDialog, setShowFreeTripDialog] = useState(false);\n  const [showUpgradeModal, setShowUpgradeModal] = useState(false);\n  const [freeTripStatus, setFreeTripStatus] = useState<{\n    can_use: boolean;\n    remaining: number | null;\n    next_reset: string | null;\n    message: string;\n  } | null>(null);\n  const { t } = useTranslation('trip');\n  const [isLandscape, setIsLandscape] = useState(false);\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\n\n  // Handle screen orientation and resize\n  useEffect(() => {\n    const handleResize = () => {\n      setIsLandscape(window.innerWidth > window.innerHeight);\n      setWindowHeight(window.innerHeight);\n    };\n\n    handleResize(); // Initial check\n    window.addEventListener('resize', handleResize);\n    window.addEventListener('orientationchange', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('orientationchange', handleResize);\n    };\n  }, []);\n\n  const handleCreateTrip = async () => {\n    if (!session) {\n      setOpen(true);\n      return;\n    }\n\n    try {\n      // Check if user has a subscription\n      const { data: userRole } = await supabase\n        .from('user_roles')\n        .select('role')\n        .eq('user_id', session.user.id)\n        .single();\n\n      // If user has no subscription, validate free trip usage\n      if (userRole?.role === 'nosubs') {\n        const validationResult = await validateFreeTrip('zaptrip');\n        setFreeTripStatus(validationResult);\n\n        // Only show free trip dialog if user has used all 3 free trips\n        if (validationResult.remaining === 0) {\n          setShowFreeTripDialog(true);\n          return;\n        }\n      }\n\n      setOpen(true);\n    } catch (error) {\n      console.error('Error checking user role:', error);\n      setOpen(true);\n    }\n  };\n\n  return (\n    <>\n      <Dialog open={open} onOpenChange={setOpen}>\n        {buttonVariant === \"mobile\" ? (\n          <button className=\"flex flex-col items-center\" onClick={handleCreateTrip}>\n            <div className=\"relative\">\n              <PlusCircle className=\"w-8 h-8 text-primary\" />\n            </div>\n            <span className=\"text-xs mt-1\">{t('form.createZap')}</span>\n          </button>\n        ) : (\n          <Button\n            onClick={handleCreateTrip}\n            className={cn(\n              \"relative px-6 py-2 bg-gradient-to-r from-[#10B981] to-[#059669] text-white border-none hover:from-[#059669] hover:to-[#047857] hover:scale-105 transition-all duration-300 shadow-lg rounded-full font-medium tracking-wide\"\n            )}\n          >\n            <span className=\"flex items-center gap-2\">\n              <PlusCircle className=\"h-5 w-5\" />\n              {t('form.createZap')}\n            </span>\n          </Button>\n        )}\n        <DialogContent \n          className={cn(\n            // Base styles\n            \"bg-black/30 backdrop-blur-sm border shadow-lg rounded-xl overflow-hidden\",\n            \"p-0 gap-0\",\n            \n            // Dynamic width based on screen size\n            \"w-[98%] sm:w-[95%] md:w-[90%] lg:w-[85%] xl:w-[80%]\",\n            \"max-w-6xl\",\n            \n            // Dynamic height based on screen size and orientation\n            isLandscape\n              ? \"h-[98vh] max-h-[98vh]\" // Landscape mode\n              : windowHeight < 700\n                ? \"h-[95vh] max-h-[95vh]\" // Small screens\n                : \"h-[90vh] max-h-[90vh]\", // Regular screens\n            \n            // Additional responsive adjustments\n            \"min-h-0\",\n            \"flex flex-col\"\n          )}\n        >\n          <DialogTitle className=\"sr-only\">{t('form.createZap')}</DialogTitle>\n          <DialogDescription className=\"sr-only\">{t('form.description')}</DialogDescription>\n          \n          {/* Scrollable content area */}\n          <div className={cn(\n            \"flex-1 overflow-y-auto overflow-x-hidden\",\n            \"scrollbar-thin scrollbar-thumb-gray-400 scrollbar-track-transparent\",\n            \"p-3 sm:p-4 md:p-6\",\n            \"relative\",\n            // Additional padding for very small screens\n            windowHeight < 600 && \"p-2\",\n            // Adjust padding in landscape mode\n            isLandscape && \"p-2 sm:p-3\"\n          )}>\n            <CreateTrip session={session} onTripCreated={() => setOpen(false)} />\n          </div>\n\n          {/* Close button - adjusted for better touch targets */}\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            className={cn(\n              \"absolute z-50\",\n              \"top-2 right-2\",\n              \"h-8 w-8 sm:h-10 sm:w-10\",\n              \"bg-black/20 hover:bg-black/40\",\n              \"rounded-full\",\n              // Larger touch target on mobile\n              \"touch-action-manipulation\",\n              // Ensure visibility\n              \"text-white hover:text-white\",\n              // Safe area adjustments\n              \"safe-top safe-right\"\n            )}\n            onClick={() => setOpen(false)}\n          >\n            <X className=\"h-4 w-4 sm:h-5 sm:w-5\" />\n            <span className=\"sr-only\">Close</span>\n          </Button>\n        </DialogContent>\n      </Dialog>\n\n      {/* Free Trip Dialog */}\n      <FreeTripDialog\n        isOpen={showFreeTripDialog}\n        onClose={() => setShowFreeTripDialog(false)}\n        onUpgrade={() => {\n          setShowFreeTripDialog(false);\n          setShowUpgradeModal(true);\n        }}\n        remaining={freeTripStatus?.remaining ?? null}\n        nextReset={freeTripStatus?.next_reset ?? null}\n        tripType=\"zaptrip\"\n      />\n\n      {/* Upgrade Modal */}\n      <UpgradeModal\n        isOpen={showUpgradeModal}\n        onClose={() => setShowUpgradeModal(false)}\n      />\n    </>\n  );\n}"],"names":["FullCreateTripDialog","session","buttonVariant","open","setOpen","React","useState","showFreeTripDialog","setShowFreeTripDialog","showUpgradeModal","setShowUpgradeModal","freeTripStatus","setFreeTripStatus","t","useTranslation","isLandscape","setIsLandscape","windowHeight","setWindowHeight","window","innerHeight","useEffect","handleResize","innerWidth","addEventListener","removeEventListener","handleCreateTrip","async","data","userRole","supabase","from","select","eq","user","id","single","role","validationResult","validateFreeTrip","remaining","error","jsxs","Fragment","children","Dialog","onOpenChange","className","onClick","jsx","PlusCircle","Button","cn","DialogContent","DialogTitle","DialogDescription","CreateTrip","onTripCreated","variant","size","X","FreeTripDialog","isOpen","onClose","onUpgrade","nextReset","next_reset","tripType","UpgradeModal"],"mappings":"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"}