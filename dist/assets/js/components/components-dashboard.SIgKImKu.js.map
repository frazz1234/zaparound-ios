{"version":3,"file":"components-dashboard.SIgKImKu.js","sources":["../../../../src/components/dashboard/DashboardHeader.tsx","../../../../src/components/dashboard/filters/FilterBadges.tsx","../../../../src/components/dashboard/filters/TripFilters.tsx","../../../../src/components/dashboard/filters/SortButton.tsx","../../../../src/components/dashboard/filters/FilterBar.tsx","../../../../src/components/dashboard/TripDeleteDialog.tsx","../../../../src/components/dashboard/TripTypeBadge.tsx","../../../../src/components/dashboard/TripCardHeader.tsx","../../../../src/components/dashboard/TripCardMap.tsx","../../../../src/components/dashboard/TripContentPreview.tsx","../../../../src/components/dashboard/TravelAnimation.tsx","../../../../src/components/dashboard/TripCardDetails.tsx","../../../../src/components/dashboard/TripDeleteButton.tsx","../../../../src/components/dashboard/TripCard.tsx","../../../../src/components/dashboard/TripGrid.tsx","../../../../src/components/dashboard/TripList.tsx","../../../../src/components/dashboard/DashboardContent.tsx"],"sourcesContent":["import { Button } from \"@/components/ui/button\";\nimport { useTranslation } from 'react-i18next';\n\ninterface DashboardHeaderProps {\n  fullName: string | null;\n  onTripCreated: () => void;\n  userRole: string | null;\n  hasFreeTrip: boolean;\n}\n\nexport const DashboardHeader = ({ fullName, userRole, hasFreeTrip }: DashboardHeaderProps) => {\n  const { t } = useTranslation('dashboard');\n  // Extract the first name (first part before the space)\n  const firstName = fullName?.split(' ')[0];\n\n  return (\n    <div className=\"flex items-center justify-between mb-6\">\n      <div>\n        <h1 className=\"text-2xl font-bold text-gray-800\">\n          {t('welcome')}{firstName ? ` ${firstName}` : ''}!\n        </h1>\n        <p className=\"text-gray-600\">{t('planAdventure')}</p>\n      </div>\n    </div>\n  );\n};\n","import { Calendar, Map, X } from 'lucide-react';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { useTranslation } from 'react-i18next';\nimport { format } from 'date-fns';\n\ninterface FilterBadgesProps {\n  isFilterActive: boolean;\n  dateFilter: Date | undefined;\n  locationFilter: string;\n  activityFilter: string;\n  tripTypeFilter: string;\n  clearFilters: () => void;\n  setDateFilter: (date: Date | undefined) => void;\n  setLocationFilter: (location: string) => void;\n  setActivityFilter: (activity: string) => void;\n  setTripTypeFilter: (tripType: string) => void;\n}\n\nexport const FilterBadges = ({\n  isFilterActive,\n  dateFilter,\n  locationFilter,\n  activityFilter,\n  tripTypeFilter,\n  clearFilters,\n  setDateFilter,\n  setLocationFilter,\n  setActivityFilter,\n  setTripTypeFilter\n}: FilterBadgesProps) => {\n  const { t } = useTranslation('dashboard');\n\n  if (!isFilterActive) return null;\n\n  return (\n    <div className=\"flex flex-wrap gap-2 items-center\">\n      <Button \n        variant=\"outline\" \n        size=\"sm\" \n        onClick={clearFilters}\n        className=\"flex items-center gap-1\"\n      >\n        <X className=\"h-4 w-4\" />\n        {t('clearFilters')}\n      </Button>\n      \n      {dateFilter && (\n        <Badge variant=\"secondary\" className=\"flex items-center gap-1\">\n          <Calendar className=\"h-3 w-3\" />\n          {format(dateFilter, 'MMM dd, yyyy')}\n          <button onClick={() => setDateFilter(undefined)} className=\"ml-1\">\n            <X className=\"h-3 w-3\" />\n          </button>\n        </Badge>\n      )}\n      \n      {locationFilter && (\n        <Badge variant=\"secondary\" className=\"flex items-center gap-1\">\n          <Map className=\"h-3 w-3\" />\n          {locationFilter}\n          <button onClick={() => setLocationFilter('')} className=\"ml-1\">\n            <X className=\"h-3 w-3\" />\n          </button>\n        </Badge>\n      )}\n      \n      {activityFilter && (\n        <Badge variant=\"secondary\" className=\"flex items-center gap-1\">\n          {activityFilter}\n          <button onClick={() => setActivityFilter('')} className=\"ml-1\">\n            <X className=\"h-3 w-3\" />\n          </button>\n        </Badge>\n      )}\n      \n      {tripTypeFilter && (\n        <Badge variant=\"secondary\" className=\"flex items-center gap-1\">\n          {tripTypeFilter}\n          <button onClick={() => setTripTypeFilter('')} className=\"ml-1\">\n            <X className=\"h-3 w-3\" />\n          </button>\n        </Badge>\n      )}\n    </div>\n  );\n};\n","import { Filter } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { Calendar } from '@/components/ui/calendar';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { useTranslation } from 'react-i18next';\n\ninterface TripFiltersProps {\n  locationFilter: string;\n  dateFilter: Date | undefined;\n  activityFilter: string;\n  tripTypeFilter: string;\n  locations: string[];\n  categories: string[];\n  tripTypes: string[];\n  setLocationFilter: (location: string) => void;\n  setDateFilter: (date: Date | undefined) => void;\n  setActivityFilter: (activity: string) => void;\n  setTripTypeFilter: (tripType: string) => void;\n  isFilterOpen: boolean;\n  setIsFilterOpen: (open: boolean) => void;\n  applyFilters: () => void;\n  clearFilters: () => void;\n}\n\nexport const TripFilters = ({\n  locationFilter,\n  dateFilter,\n  activityFilter,\n  tripTypeFilter,\n  locations,\n  categories,\n  tripTypes,\n  setLocationFilter,\n  setDateFilter,\n  setActivityFilter,\n  setTripTypeFilter,\n  isFilterOpen,\n  setIsFilterOpen,\n  applyFilters,\n  clearFilters\n}: TripFiltersProps) => {\n  const { t } = useTranslation('dashboard');\n\n  return (\n    <Popover open={isFilterOpen} onOpenChange={setIsFilterOpen}>\n      <PopoverTrigger asChild>\n        <Button variant=\"outline\" size=\"sm\" className=\"flex items-center gap-1\">\n          <Filter className=\"h-4 w-4\" />\n          {t('filter.apply')}\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent \n        className=\"w-[calc(100vw-2rem)] md:w-80 p-4 bg-white shadow-lg rounded-md border z-50\" \n        align=\"end\"\n        sideOffset={8}\n      >\n        <div className=\"space-y-4\">\n          <h3 className=\"font-medium text-sm\">{t('filter.apply')}</h3>\n          \n          <div className=\"space-y-2\">\n            <label className=\"text-xs font-medium\">\n              {t('filter.location')}\n            </label>\n            <Select \n              value={locationFilter} \n              onValueChange={setLocationFilter}\n            >\n              <SelectTrigger className=\"h-8 text-xs\">\n                <SelectValue placeholder={t('filter.allLocations')} />\n              </SelectTrigger>\n              <SelectContent position=\"popper\" className=\"z-[60]\">\n                <SelectItem value=\"\">{t('filter.allLocations')}</SelectItem>\n                {locations.map(location => (\n                  <SelectItem key={location} value={location}>\n                    {location}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n          \n          <div className=\"space-y-2\">\n            <label className=\"text-xs font-medium\">\n              {t('filter.date')}\n            </label>\n            <div className=\"flex flex-col\">\n              <Popover>\n                <PopoverTrigger asChild>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    className={`h-8 text-xs justify-start text-left font-normal ${!dateFilter ? 'text-muted-foreground' : ''}`}\n                  >\n                    {dateFilter ? dateFilter.toLocaleDateString() : t('filter.date')}\n                  </Button>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-auto p-0 z-[70]\" align=\"start\">\n                  <Calendar\n                    mode=\"single\"\n                    selected={dateFilter}\n                    onSelect={setDateFilter}\n                    initialFocus\n                  />\n                </PopoverContent>\n              </Popover>\n              {dateFilter && (\n                <Button \n                  variant=\"ghost\" \n                  size=\"sm\" \n                  className=\"text-xs h-6 mt-1 self-end\" \n                  onClick={() => setDateFilter(undefined)}\n                >\n                  {t('filter.clear')}\n                </Button>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"space-y-2\">\n            <label className=\"text-xs font-medium\">\n              {t('filter.activity')}\n            </label>\n            <Select \n              value={activityFilter} \n              onValueChange={setActivityFilter}\n            >\n              <SelectTrigger className=\"h-8 text-xs\">\n                <SelectValue placeholder={t('filter.allCategories')} />\n              </SelectTrigger>\n              <SelectContent position=\"popper\" className=\"z-[60]\">\n                <SelectItem value=\"\">{t('filter.allCategories')}</SelectItem>\n                {categories.map(category => (\n                  <SelectItem key={category} value={category}>\n                    {category}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n          \n          <div className=\"space-y-2\">\n            <label className=\"text-xs font-medium\">\n              {t('filter.tripType')}\n            </label>\n            <Select \n              value={tripTypeFilter} \n              onValueChange={setTripTypeFilter}\n            >\n              <SelectTrigger className=\"h-8 text-xs\">\n                <SelectValue placeholder={t('filter.allTripTypes')} />\n              </SelectTrigger>\n              <SelectContent position=\"popper\" className=\"z-[60]\">\n                <SelectItem value=\"\">{t('filter.allTripTypes')}</SelectItem>\n                {tripTypes.map(type => (\n                  <SelectItem key={type} value={type}>\n                    {type}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n          \n          <div className=\"flex space-x-2 pt-2\">\n            <Button \n              variant=\"outline\" \n              onClick={clearFilters}\n              className=\"text-xs h-8 flex-1\"\n            >\n              {t('filter.clear')}\n            </Button>\n            <Button \n              onClick={applyFilters} \n              className=\"text-xs h-8 flex-1\"\n            >\n              {t('filter.apply')}\n            </Button>\n          </div>\n        </div>\n      </PopoverContent>\n    </Popover>\n  );\n};\n","import { ArrowUpDown } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { useTranslation } from 'react-i18next';\n\ninterface SortButtonProps {\n  sortOrder: 'newest' | 'oldest';\n  setSortOrder: (order: 'newest' | 'oldest') => void;\n}\n\nexport const SortButton = ({ sortOrder, setSortOrder }: SortButtonProps) => {\n  const { t } = useTranslation('dashboard');\n\n  return (\n    <Button\n      variant=\"outline\"\n      size=\"sm\"\n      onClick={() => setSortOrder(sortOrder === 'newest' ? 'oldest' : 'newest')}\n      className=\"flex items-center gap-1\"\n    >\n      <ArrowUpDown className=\"h-4 w-4\" />\n      {sortOrder === 'newest' ? t('filter.newest') : t('filter.oldest')}\n    </Button>\n  );\n};\n","\nimport { FilterBadges } from './FilterBadges';\nimport { TripFilters } from './TripFilters';\nimport { SortButton } from './SortButton';\n\ninterface FilterBarProps {\n  locationFilter: string;\n  dateFilter: Date | undefined;\n  activityFilter: string;\n  tripTypeFilter: string;\n  sortOrder: 'newest' | 'oldest';\n  isFilterActive: boolean;\n  isFilterOpen: boolean;\n  locations: string[];\n  categories: string[];\n  tripTypes: string[];\n  setLocationFilter: (location: string) => void;\n  setDateFilter: (date: Date | undefined) => void;\n  setActivityFilter: (activity: string) => void;\n  setTripTypeFilter: (tripType: string) => void;\n  setSortOrder: (order: 'newest' | 'oldest') => void;\n  setIsFilterOpen: (open: boolean) => void;\n  applyFilters: () => void;\n  clearFilters: () => void;\n}\n\nexport const FilterBar = ({\n  locationFilter,\n  dateFilter,\n  activityFilter,\n  tripTypeFilter,\n  sortOrder,\n  isFilterActive,\n  isFilterOpen,\n  locations,\n  categories,\n  tripTypes,\n  setLocationFilter,\n  setDateFilter,\n  setActivityFilter,\n  setTripTypeFilter,\n  setSortOrder,\n  setIsFilterOpen,\n  applyFilters,\n  clearFilters\n}: FilterBarProps) => {\n  return (\n    <div className=\"flex flex-col gap-4 w-full\">\n      <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-center gap-4\">\n        <FilterBadges\n          isFilterActive={isFilterActive}\n          dateFilter={dateFilter}\n          locationFilter={locationFilter}\n          activityFilter={activityFilter}\n          tripTypeFilter={tripTypeFilter}\n          clearFilters={clearFilters}\n          setDateFilter={setDateFilter}\n          setLocationFilter={setLocationFilter}\n          setActivityFilter={setActivityFilter}\n          setTripTypeFilter={setTripTypeFilter}\n        />\n        \n        <div className=\"flex gap-2 self-end sm:self-auto\">\n          <TripFilters\n            locationFilter={locationFilter}\n            dateFilter={dateFilter}\n            activityFilter={activityFilter}\n            tripTypeFilter={tripTypeFilter}\n            locations={locations}\n            categories={categories}\n            tripTypes={tripTypes}\n            setLocationFilter={setLocationFilter}\n            setDateFilter={setDateFilter}\n            setActivityFilter={setActivityFilter}\n            setTripTypeFilter={setTripTypeFilter}\n            isFilterOpen={isFilterOpen}\n            setIsFilterOpen={setIsFilterOpen}\n            applyFilters={applyFilters}\n            clearFilters={clearFilters}\n          />\n          \n          <SortButton\n            sortOrder={sortOrder}\n            setSortOrder={setSortOrder}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { AlertCircle, Loader2, Trash2 } from 'lucide-react';\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { useTranslation } from 'react-i18next';\n\ninterface TripDeleteDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  tripTitle: string;\n  onConfirm: () => void;\n  isDeleting?: boolean;\n}\n\nexport const TripDeleteDialog = ({ \n  open, \n  onOpenChange, \n  tripTitle, \n  onConfirm,\n  isDeleting = false\n}: TripDeleteDialogProps) => {\n  const { t } = useTranslation('dashboard');\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-md\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <AlertCircle className=\"h-5 w-5 text-destructive\" />\n            {t('trip.deletion.confirmQuestion')}\n          </DialogTitle>\n          <DialogDescription>\n            {t('trip.deletion.confirmDescription')}\n          </DialogDescription>\n        </DialogHeader>\n        <DialogFooter className=\"sm:justify-between mt-4\">\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            onClick={() => onOpenChange(false)}\n            disabled={isDeleting}\n          >\n            {t('trip.deletion.cancel')}\n          </Button>\n          <Button\n            type=\"button\"\n            variant=\"destructive\"\n            onClick={onConfirm}\n            className=\"gap-2\"\n            disabled={isDeleting}\n          >\n            {isDeleting ? (\n              <Loader2 className=\"h-4 w-4 animate-spin\" />\n            ) : (\n              <Trash2 className=\"h-4 w-4\" />\n            )}\n            {isDeleting ? t('trip.deletion.deleting') : t('trip.deletion.confirm')}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import { Badge } from \"@/components/ui/badge\";\nimport { useTranslation } from 'react-i18next';\n\ninterface TripTypeBadgeProps {\n  tripType: string | null | undefined;\n}\n\nexport const TripTypeBadge = ({ tripType }: TripTypeBadgeProps) => {\n  const { t } = useTranslation('trip');\n\n  if (!tripType) return null;\n\n  const getBadgeStyle = () => {\n    switch(tripType) {\n      case 'ZapOut':\n        return 'bg-emerald-100 text-emerald-800 border border-emerald-200 hover:bg-emerald-200';\n      case 'ZapRoad':\n        return 'bg-amber-100 text-amber-800 border border-amber-200 hover:bg-amber-200';\n      case 'ZapTrip':\n      default:\n        return 'bg-sky-100 text-sky-800 border border-sky-200 hover:bg-sky-200';\n    }\n  };\n\n  const getLabel = () => {\n    switch(tripType) {\n      case 'ZapOut':\n        return 'ZapOut ';\n      case 'ZapRoad':\n        return 'ZapRoad';\n      case 'ZapTrip':\n      default:\n        return 'ZapTrip';\n    }\n  };\n\n  return (\n    <Badge variant=\"outline\" className={`${getBadgeStyle()} font-medium px-3 py-1`}>\n      {getLabel()}\n    </Badge>\n  );\n};\n","import { MapPin, Calendar, Plane, Car, Map, Compass, Route, Navigation, PlaneTakeoff, CableCar } from 'lucide-react';\nimport { TripTypeBadge } from './TripTypeBadge';\n\ninterface TripCardHeaderProps {\n  title: string;\n  tripType: string | null | undefined;\n}\n\nexport const TripCardHeader = ({ title, tripType }: TripCardHeaderProps) => {\n  const getBgColor = () => {\n    switch(tripType) {\n      case 'ZapOut':\n        return 'bg-gradient-to-r from-emerald-500 to-emerald-600';\n      case 'ZapRoad':\n        return 'bg-gradient-to-r from-amber-500 to-amber-600';\n      case 'ZapTrip':\n      default:\n        return 'bg-gradient-to-r from-sky-500 to-sky-600';\n    }\n  };\n  \n  const getIcon = () => {\n    switch(tripType) {\n      case 'ZapOut':\n        return <CableCar className=\"h-5 w-5 mr-2 text-white/90\" />;\n      case 'ZapRoad':\n        return <Car className=\"h-5 w-5 mr-2 text-white/90\" />;\n      case 'ZapTrip':\n      default:\n        return <PlaneTakeoff className=\"h-5 w-5 mr-2 text-white/90\" />;\n    }\n  };\n\n  return (\n    <div className={`${getBgColor()} px-5 py-3 text-primary-foreground flex justify-between items-center shadow-sm rounded-t-lg`}>\n      <div className=\"flex items-center space-x-1 max-w-[70%]\">\n        {getIcon()}\n        <h2 className=\"text-lg font-semibold truncate\">{title}</h2>\n      </div>\n      {tripType && <TripTypeBadge tripType={tripType} />}\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { MapPin } from 'lucide-react';\n\ninterface TripCardMapProps {\n  coordinates: [number, number] | null;\n  location: string | null;\n  tripId: string;\n  tripTitle: string;\n}\n\n// Utility function to parse coordinates in any format\nconst parseCoordinates = (coordsData: any): [number, number] | null => {\n  if (!coordsData) return null;\n  \n  try {\n    // Case 1: Already an array of numbers\n    if (Array.isArray(coordsData) && coordsData.length === 2) {\n      const [lng, lat] = coordsData;\n      if (typeof lng === 'number' && typeof lat === 'number' && !isNaN(lng) && !isNaN(lat)) {\n        return [lng, lat];\n      }\n    }\n    \n    // Case 2: JSON string of an array\n    if (typeof coordsData === 'string') {\n      try {\n        const parsed = JSON.parse(coordsData);\n        if (Array.isArray(parsed) && parsed.length === 2) {\n          const [lng, lat] = parsed;\n          if (typeof lng === 'number' && typeof lat === 'number' && !isNaN(lng) && !isNaN(lat)) {\n            return [lng, lat];\n          }\n        }\n      } catch {\n        // Not a valid JSON string, try other formats\n      }\n      \n      // Case 3: String format \"lat,lng\" or \"lng,lat\"\n      if (coordsData.includes(',')) {\n        const parts = coordsData.split(',').map(part => parseFloat(part.trim()));\n        if (parts.length === 2 && !isNaN(parts[0]) && !isNaN(parts[1])) {\n          return [parts[0], parts[1]] as [number, number];\n        }\n      }\n    }\n    \n    // Case 4: Object with lat/lng or latitude/longitude properties\n    if (typeof coordsData === 'object' && coordsData !== null) {\n      if ('lat' in coordsData && 'lng' in coordsData) {\n        const { lat, lng } = coordsData;\n        if (typeof lat === 'number' && typeof lng === 'number' && !isNaN(lat) && !isNaN(lng)) {\n          return [lng, lat];\n        }\n      }\n      if ('latitude' in coordsData && 'longitude' in coordsData) {\n        const { latitude, longitude } = coordsData;\n        if (typeof latitude === 'number' && typeof longitude === 'number' && !isNaN(latitude) && !isNaN(longitude)) {\n          return [longitude, latitude];\n        }\n      }\n    }\n    \n    return null;\n  } catch (e) {\n    console.error('Error parsing coordinates:', e, coordsData);\n    return null;\n  }\n};\n\nexport const TripCardMap = ({ coordinates, location, tripId, tripTitle }: TripCardMapProps) => {\n  const [validCoordinates, setValidCoordinates] = useState<[number, number] | null>(null);\n  const [mapUrl, setMapUrl] = useState<string>('');\n  \n  useEffect(() => {\n    const parsedCoords = parseCoordinates(coordinates);\n    if (parsedCoords) {\n      console.log(`TripCard ${tripId} (${tripTitle}): Setting valid coordinates:`, parsedCoords);\n      setValidCoordinates(parsedCoords);\n    } else {\n      console.log(`TripCard ${tripId} (${tripTitle}): No valid coordinates for ${location || \"unknown location\"}`);\n      setValidCoordinates(null);\n    }\n  }, [tripId, coordinates, tripTitle, location]);\n\n  useEffect(() => {\n    if (validCoordinates) {\n      // Mapbox access token\n      const accessToken = 'pk.eyJ1IjoibWlzdGVyZnJhenoiLCJhIjoiY203M2ZnM3BoMDhpMTJqcTNiYWpkamIzNyJ9.2SlcuEPIL2yCJw5TIPunVQ';\n      \n      // Create marker param for the static map\n      const marker = `pin-s+3b82f6(${validCoordinates[0]},${validCoordinates[1]})`;\n      \n      // Create the static map URL (streets style with marker)\n      const url = `https://api.mapbox.com/styles/v1/mapbox/streets-v11/static/${marker}/${validCoordinates[0]},${validCoordinates[1]},12/400x144?access_token=${accessToken}`;\n      \n      setMapUrl(url);\n    }\n  }, [validCoordinates]);\n\n  if (!validCoordinates) {\n    return (\n      <div className=\"w-full h-36 bg-gray-100 flex flex-col items-center justify-center\">\n        <MapPin className=\"w-8 h-8 text-gray-400 mb-2\" />\n        <p className=\"text-sm text-gray-500\">No location set</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full h-36 dashboard-card-map\">\n      <img\n        src={mapUrl}\n        alt={`Map of ${location || 'location'}`}\n        className=\"w-full h-full border-b object-cover dashboard-trip-map\"\n        loading=\"lazy\"\n      />\n    </div>\n  );\n};\n","import ReactMarkdown from 'react-markdown';\nimport { useTranslation } from 'react-i18next';\n\ninterface TripContentPreviewProps {\n  content: string;\n}\n\n// Helper to extract [PREVIEW]...[/PREVIEW] section\nfunction extractPreview(content: string): string | null {\n  const match = content.match(/\\[PREVIEW\\]([\\s\\S]*?)\\[\\/PREVIEW\\]/i);\n  return match ? match[1].trim() : null;\n}\n\nexport const TripContentPreview = ({ content }: TripContentPreviewProps) => {\n  const { t } = useTranslation('trip');\n\n  if (!content) return null;\n\n  // Only show the [PREVIEW] section if present, else fallback to old logic\n  const preview = extractPreview(content);\n  const previewText = preview || content;\n\n  const getContentPreview = (text: string) => {\n    const lines = text.split('\\n').filter(line => line.trim() !== '');\n    // Show more lines on desktop (4 lines instead of 2)\n    return lines.slice(0, 4).join('\\n') + (lines.length > 4 ? '...' : '');\n  };\n  \n  // Helper function to safely get translations with fallbacks\n  const safeTranslate = (key: string, fallback: string): string => {\n    const translation = t(key);\n    // Check if the translation is the same as the key (indicating it wasn't found)\n    return translation === key ? fallback : translation;\n  };\n\n  return (\n    <div className=\"mt-4 p-5 bg-gradient-to-br from-gray-50 to-gray-100/80 rounded-xl border border-gray-200/50 shadow-sm min-h-[16rem]\">\n      <h3 className=\"text-sm font-semibold text-gray-700 mb-3 flex items-center\">\n        <span className=\"inline-block w-1.5 h-1.5 rounded-full bg-primary/70 mr-2\"></span>\n        {t('aiContent.travelTips')}\n      </h3>\n      <div className=\"text-sm text-gray-600 prose prose-sm max-w-none line-clamp-4 sm:line-clamp-4 md:line-clamp-6 lg:line-clamp-8 prose-a:text-blue-600 prose-a:underline hover:prose-a:text-blue-800 leading-relaxed\">\n        <ReactMarkdown>{getContentPreview(previewText)}</ReactMarkdown>\n      </div>\n    </div>\n  );\n};\n","import { motion } from 'framer-motion';\nimport { Plane, Mountain, Sun, Cloud, Waves, MapPin, Compass } from 'lucide-react';\nimport { useTranslation } from 'react-i18next';\n\nexport const TravelAnimation = () => {\n  const { t } = useTranslation('common');\n  \n  return (\n    <div className=\"relative h-12 w-full overflow-hidden rounded-md\">\n      {/* Sky background with gradient */}\n      <div className=\"absolute inset-0 bg-gradient-to-b from-blue-400 via-blue-300 to-blue-100\"></div>\n      \n      {/* Sun with rays */}\n      <motion.div \n        className=\"absolute top-2 right-6\"\n        initial={{ opacity: 0.7, scale: 0.9 }}\n        animate={{ opacity: 1, scale: 1.1 }}\n        transition={{ duration: 3, repeat: Infinity, repeatType: \"reverse\" }}\n      >\n        <div className=\"relative\">\n          <Sun className=\"h-5 w-5 text-yellow-400\" />\n          <motion.div \n            className=\"absolute inset-0 rounded-full bg-yellow-200 opacity-30\"\n            initial={{ scale: 1 }}\n            animate={{ scale: 1.5 }}\n            transition={{ duration: 2, repeat: Infinity, repeatType: \"reverse\" }}\n          />\n        </div>\n      </motion.div>\n      \n      {/* Multiple clouds at different positions and speeds */}\n      <motion.div \n        className=\"absolute top-2 left-10\"\n        initial={{ x: -30 }}\n        animate={{ x: 100 }}\n        transition={{ duration: 20, repeat: Infinity, repeatType: \"loop\" }}\n      >\n        <Cloud className=\"h-3 w-3 text-white\" />\n      </motion.div>\n      \n      <motion.div \n        className=\"absolute top-3 left-24\"\n        initial={{ x: -20 }}\n        animate={{ x: 80 }}\n        transition={{ duration: 15, repeat: Infinity, repeatType: \"loop\", delay: 2 }}\n      >\n        <Cloud className=\"h-2 w-2 text-white\" />\n      </motion.div>\n      \n      <motion.div \n        className=\"absolute top-1 left-5\"\n        initial={{ x: -10 }}\n        animate={{ x: 60 }}\n        transition={{ duration: 18, repeat: Infinity, repeatType: \"loop\", delay: 1 }}\n      >\n        <Cloud className=\"h-2 w-2 text-white\" />\n      </motion.div>\n      \n      {/* Ocean waves */}\n      <motion.div \n        className=\"absolute bottom-0 w-full h-3 flex items-end\"\n        initial={{ y: 0 }}\n        animate={{ y: -1 }}\n        transition={{ duration: 1.5, repeat: Infinity, repeatType: \"reverse\" }}\n      >\n        <Waves className=\"w-full h-full text-blue-500\" />\n      </motion.div>\n      \n      {/* Mountains in the background with different heights */}\n      <div className=\"absolute bottom-2 w-full flex justify-between\">\n        <Mountain className=\"h-4 w-4 text-emerald-700\" />\n        <Mountain className=\"h-6 w-6 text-emerald-800\" />\n        <Mountain className=\"h-3 w-3 text-emerald-600\" />\n        <Mountain className=\"h-5 w-5 text-emerald-700\" />\n        <Mountain className=\"h-4 w-4 text-emerald-800\" />\n      </div>\n      \n      {/* Map pin for destination */}\n      <motion.div \n        className=\"absolute bottom-3 right-8\"\n        initial={{ y: -2 }}\n        animate={{ y: 0 }}\n        transition={{ duration: 1, repeat: Infinity, repeatType: \"reverse\" }}\n      >\n        <MapPin className=\"h-4 w-4 text-red-500\" />\n      </motion.div>\n      \n      {/* Compass for navigation */}\n      <motion.div \n        className=\"absolute top-2 left-2\"\n        animate={{ rotate: 360 }}\n        transition={{ duration: 10, repeat: Infinity, ease: \"linear\" }}\n      >\n        <Compass className=\"h-3 w-3 text-gray-700\" />\n      </motion.div>\n      \n      {/* Animated plane with trail effect */}\n      <motion.div \n        className=\"absolute\"\n        initial={{ x: -30, y: 15 }}\n        animate={{ x: 150, y: 10 }}\n        transition={{ duration: 4, repeat: Infinity, repeatType: \"loop\" }}\n      >\n        <div className=\"relative\">\n          <Plane className=\"h-5 w-5 text-gray-700 transform rotate-12\" />\n          <motion.div \n            className=\"absolute top-1/2 right-full w-10 h-0.5 bg-gradient-to-r from-transparent to-white opacity-50\"\n            initial={{ width: 0 }}\n            animate={{ width: 10 }}\n            transition={{ duration: 0.3, repeat: Infinity, repeatType: \"loop\" }}\n          />\n        </div>\n      </motion.div>\n    </div>\n  );\n}; ","import { format, isValid, parseISO } from 'date-fns';\nimport { enUS, fr, es } from 'date-fns/locale';\nimport { Calendar, MapPin } from 'lucide-react';\nimport { TripContentPreview } from './TripContentPreview';\nimport { useTranslation } from 'react-i18next';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { TravelAnimation } from './TravelAnimation';\nimport { useEffect, useState, useRef, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface TripCardDetailsProps {\n  title: string;\n  description: string;\n  startDate: string;\n  endDate: string;\n  location: string | null;\n  aiContent: string | null;\n  tripType?: string | null;\n  isAiContentLoading?: boolean;\n  zapOutDate?: string;\n}\n\n// Secure HTML parser for anchor tags only\nconst parseSecureLinks = (htmlString: string): React.ReactNode[] => {\n  try {\n    // Create a temporary DOM element to safely parse HTML\n    const tempDiv = document.createElement('div');\n    tempDiv.innerHTML = htmlString;\n    \n    const result: React.ReactNode[] = [];\n    let currentIndex = 0;\n    \n    // Process child nodes\n    for (let i = 0; i < tempDiv.childNodes.length; i++) {\n      const node = tempDiv.childNodes[i];\n      \n      if (node.nodeType === Node.TEXT_NODE) {\n        // Text node - add as is\n        const text = node.textContent || '';\n        if (text.trim()) {\n          result.push(text);\n        }\n      } else if (node.nodeType === Node.ELEMENT_NODE) {\n        const element = node as Element;\n        \n        if (element.tagName.toLowerCase() === 'a') {\n          // Anchor tag - extract attributes safely\n          const href = element.getAttribute('href');\n          const className = element.getAttribute('class') || '';\n          const textContent = element.textContent || '';\n          \n          // Validate href is a safe internal route\n          if (href && isValidInternalRoute(href)) {\n            result.push(\n              <Link\n                key={`link-${currentIndex++}`}\n                to={href}\n                className={className}\n                onClick={(e) => e.stopPropagation()}\n              >\n                {textContent}\n              </Link>\n            );\n          } else {\n            // If href is invalid, just render the text content\n            result.push(textContent);\n          }\n        } else {\n          // Non-anchor elements - just render text content\n          result.push(element.textContent || '');\n        }\n      }\n    }\n    \n    return result;\n  } catch (error) {\n    console.error('Error parsing secure links:', error);\n    // Fallback: return the original string as plain text\n    return [htmlString];\n  }\n};\n\n// Validate that the href is a safe internal route\nconst isValidInternalRoute = (href: string): boolean => {\n  // Only allow internal routes that start with /\n  // This prevents external URLs, javascript:, data:, etc.\n  return href.startsWith('/') && !href.includes('javascript:') && !href.includes('data:');\n};\n\nexport const TripCardDetails = ({ \n  title, \n  description, \n  startDate, \n  endDate, \n  location, \n  aiContent,\n  tripType,\n  isAiContentLoading = false,\n  zapOutDate\n}: TripCardDetailsProps) => {\n  const { t, i18n } = useTranslation('trip');\n  const isZapOut = tripType === 'ZapOut';\n  const isZapRoad = tripType === 'ZapRoad';\n  \n  // State for random wait message\n  const [waitMessage, setWaitMessage] = useState<string>('Loading travel information...');\n  // Ref to store all available messages\n  const messagesRef = useRef<string[]>([]);\n  // Ref to track used message indices to avoid immediate repetition\n  const usedIndicesRef = useRef<number[]>([]);\n  // Ref for the interval timer\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  \n  // Function to select a random message that hasn't been used recently\n  const selectRandomMessage = useCallback(() => {\n    const messages = messagesRef.current;\n    if (!messages.length) return;\n    \n    // If we've used all messages, reset the used indices\n    if (usedIndicesRef.current.length >= messages.length - 1) {\n      usedIndicesRef.current = [];\n    }\n    \n    // Get available indices (not recently used)\n    const availableIndices = Array.from(\n      { length: messages.length }, \n      (_, i) => i\n    ).filter(i => !usedIndicesRef.current.includes(i));\n    \n    // Select a random index from available ones\n    const randomIndex = availableIndices[Math.floor(Math.random() * availableIndices.length)];\n    \n    // Add to used indices\n    usedIndicesRef.current.push(randomIndex);\n    \n    // Set the new message\n    setWaitMessage(messages[randomIndex]);\n  }, []);\n  \n  // Function to start the message rotation\n  const startMessageRotation = useCallback(() => {\n    // Clear any existing interval\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n    }\n    \n    // Set new interval to change message every 4 seconds\n    intervalRef.current = setInterval(() => {\n      selectRandomMessage();\n    }, 4000);\n  }, [selectRandomMessage]);\n  \n  // Load all available messages\n  useEffect(() => {\n    try {\n      // Get the array of wait messages\n      let messages;\n      try {\n        messages = t('trip.aiContent.waitMessages', { returnObjects: true });\n      } catch (e) {\n        console.warn(\"Failed with trip.aiContent.waitMessages, trying alternative format\");\n      }\n      \n      if (!Array.isArray(messages) || messages.length === 0) {\n        try {\n          messages = t('trip:aiContent.waitMessages', { returnObjects: true });\n        } catch (e) {\n          console.warn(\"Failed with trip:aiContent.waitMessages\");\n        }\n      }\n      \n      // Hardcoded fallback messages in case translations fail\n      const fallbackMessages = [\n        t('aiContent.waitMessages.0'),\n        t('aiContent.waitMessages.1'),\n        t('aiContent.waitMessages.2'),\n        t('aiContent.waitMessages.3'),\n        t('aiContent.waitMessages.4'),\n        t('aiContent.waitMessages.5'),\n        t('aiContent.waitMessages.6'),\n        t('aiContent.waitMessages.7'),\n        t('aiContent.waitMessages.8'),\n        t('aiContent.waitMessages.9')\n      ];\n      \n      // Use the messages if they're valid, otherwise use fallbacks\n      const validMessages = Array.isArray(messages) && messages.length > 0 \n        ? messages.filter(msg => typeof msg === 'string')\n        : fallbackMessages;\n      \n      // Store all valid messages in the ref\n      messagesRef.current = validMessages;\n      \n      // Set initial message\n      selectRandomMessage();\n    } catch (error) {\n      console.error(\"Error loading wait messages:\", error);\n      // Set fallback messages\n      messagesRef.current = [\n        t('aiContent.waitMessages.0'),\n        t('aiContent.waitMessages.1'),\n        t('aiContent.waitMessages.2')\n      ];\n      selectRandomMessage();\n    }\n    \n    // Start the interval to change messages\n    startMessageRotation();\n    \n    // Clean up interval on unmount\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [t, i18n.language, selectRandomMessage, startMessageRotation]);\n  \n  // Effect to handle loading state changes\n  useEffect(() => {\n    if (isAiContentLoading) {\n      // Start rotating messages when loading\n      startMessageRotation();\n    } else {\n      // Stop rotating messages when not loading\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n    }\n    \n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isAiContentLoading, startMessageRotation]);\n  \n  // Safely format date\n  const formatSafeDate = (dateString: string | null | undefined) => {\n    try {\n      if (!dateString) return '';\n      const date = parseISO(dateString);\n      if (isValid(date)) {\n        let locale = enUS;\n        if (i18n.language === 'fr') locale = fr;\n        else if (i18n.language === 'es') locale = es;\n        return format(date, 'PPP', { locale });\n      }\n      return dateString;\n    } catch (error) {\n      console.error(\"Error formatting date:\", error, dateString);\n      return '';\n    }\n  };\n\n  // Helper function to safely get translations with fallbacks\n  const safeTranslate = (key: string, fallback: string): string => {\n    try {\n      const translation = t(key);\n      // Check if the translation is the same as the key (indicating it wasn't found)\n      return translation === key ? fallback : translation;\n    } catch (e) {\n      console.warn(`Translation failed for key: ${key}, using fallback`);\n      return fallback;\n    }\n  };\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"flex items-center justify-between mb-2\">\n        <h3 className=\"text-lg font-semibold text-gray-900 line-clamp-1\">{title}</h3>\n      </div>\n      \n      <div className=\"text-sm text-gray-500 line-clamp-2 mb-3\">\n        {description}\n      </div>\n      \n      {isAiContentLoading && (\n        <div className=\"mb-4\">\n          <div className=\"bg-gradient-to-r from-emerald-700/60 to-emerald-800/60 rounded-lg p-3 border border-emerald-600/50 shadow-lg shadow-emerald-700/25\">\n            <p className=\"text-sm text-emerald-50 font-medium flex items-center justify-center gap-2\">\n              <span className=\"inline-block w-2 h-2 rounded-full bg-emerald-300 animate-pulse\"></span>\n              {t('aiContent.emailNotification', 'We\\'ll send you an email when your adventure is ready! ✨')}\n            </p>\n          </div>\n        </div>\n      )}\n\n      {!isAiContentLoading && (\n        <div className=\"flex items-center text-sm text-gray-600 mb-2\">\n          <Calendar className=\"h-4 w-4 mr-1\" />\n          <span className=\"font-medium mr-2\">\n            {tripType === 'ZapOut'\n              ? t('types.zapOut.when')\n              : tripType === 'ZapRoad'\n                ? t('types.zapRoad.dates')\n                : t('form.date')}\n          </span>\n          <span>{\n            tripType === 'ZapOut' && zapOutDate\n              ? formatSafeDate(zapOutDate)\n              : formatSafeDate(startDate)\n          }</span>\n          {tripType !== 'ZapOut' && endDate && endDate !== startDate && (\n            <>\n              <span className=\"mx-1\">-</span>\n              <span>{formatSafeDate(endDate)}</span>\n            </>\n          )}\n        </div>\n      )}\n      \n      {location && !isAiContentLoading && (\n        <div className=\"flex items-center text-sm text-gray-600 mb-3\">\n          <MapPin className=\"h-4 w-4 mr-1\" />\n          <span className=\"line-clamp-1\">{location}</span>\n        </div>\n      )}\n      \n      {isAiContentLoading ? (\n        <div className=\"mt-4 p-5 bg-gradient-to-br from-blue-900/60 to-indigo-900/60 rounded-xl border border-blue-700/20 relative shadow-lg shadow-blue-900/10 backdrop-blur-sm min-h-[16rem] h-[16rem]\">\n          <div className=\"mb-3\">\n            <h3 className=\"text-sm font-semibold text-blue-100 flex items-center\">\n              <span className=\"inline-block w-1.5 h-1.5 rounded-full bg-blue-400 mr-2\"></span>\n              {t('aiContent.travelTips')}\n            </h3>\n          </div>\n          \n          {/* Travel animation */}\n          <div className=\"my-3 h-12\">\n            <TravelAnimation />\n          </div>\n          \n          {/* Waiting message with links */}\n          <div className=\"mt-4 text-center h-[8rem] flex items-center justify-center mb-3 px-2\">\n            <div className=\"text-sm font-medium text-blue-50 whitespace-normal break-words px-5 py-2 rounded-lg bg-white/15 inline-block shadow-inner shadow-blue-500/10 transition-all duration-500 leading-relaxed border border-white/15 max-w-[90%]\">\n              <div className=\"mb-3\">\n                <p className=\"text-blue-50\">{waitMessage}</p>\n              </div>\n              <div className=\"text-xs text-blue-200\">\n                {parseSecureLinks(\n                  t('aiContent.waitingMessage', 'While you\\'re waiting, visit the ZapMap, travel blogs or the Community!')\n                )}\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"mt-3 space-y-2\">\n            <Skeleton className=\"h-4 w-full bg-white/10 rounded-md\" />\n            <Skeleton className=\"h-4 w-3/4 bg-white/10 rounded-md\" />\n          </div>\n        </div>\n      ) : (\n        aiContent && <TripContentPreview content={aiContent} />\n      )}\n    </div>\n  );\n};\n","\nimport { Trash2 } from 'lucide-react';\nimport { Button } from \"@/components/ui/button\";\n\ninterface TripDeleteButtonProps {\n  onClick: (e: React.MouseEvent) => void;\n}\n\nexport const TripDeleteButton = ({ onClick }: TripDeleteButtonProps) => {\n  return (\n    <Button\n      variant=\"destructive\"\n      size=\"icon\"\n      className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity z-20\"\n      onClick={onClick}\n      aria-label=\"Delete trip\"\n    >\n      <Trash2 className=\"h-4 w-4\" />\n    </Button>\n  );\n};\n","import { motion } from 'framer-motion';\nimport { useNavigate } from 'react-router-dom';\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { TripDeleteDialog } from './TripDeleteDialog';\nimport { TripCardHeader } from './TripCardHeader';\nimport { TripCardMap } from './TripCardMap';\nimport { TripCardDetails } from './TripCardDetails';\nimport { TripDeleteButton } from './TripDeleteButton';\nimport { supabase } from '@/integrations/supabase/client';\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useTranslation } from 'react-i18next';\n\ninterface TripCardProps {\n  trip: {\n    id: string;\n    title: string;\n    description: string;\n    start_date: string;\n    end_date: string;\n    location: string | null;\n    coordinates: [number, number] | null;\n    ai_content: string | null;\n    trip_type?: string | null;\n    date: string;\n  };\n  onDelete: (tripId: string) => Promise<boolean>;\n  userRole: string | null;\n  hasFreeTrip: boolean;\n}\n\nexport function TripCard({ trip, onDelete, userRole, hasFreeTrip }: TripCardProps) {\n  const navigate = useNavigate();\n  const { toast } = useToast();\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [isAiContentLoading, setIsAiContentLoading] = useState(false);\n  const [localAiContent, setLocalAiContent] = useState<string | null>(trip.ai_content);\n  const pollingIntervalRef = useRef<NodeJS.Timeout | null>(null);\n  const pollingCountRef = useRef(0);\n  const MAX_POLLING_COUNT = 60; // Stop polling after ~5 minutes (5 seconds × 60)\n  const POLLING_INTERVAL = 5000; // Check every 5 seconds\n  const { i18n } = useTranslation();\n  const lang = i18n.language;   \n  const handleClick = () => {\n    // Navigate to different routes based on trip type\n    if (trip.trip_type === 'ZapOut') {\n      navigate(`/${lang}/zapout/${trip.id}`);\n    } else if (trip.trip_type === 'ZapRoad') {\n      navigate(`/${lang}/zaproad/${trip.id}`);\n    } else {  \n      navigate(`/${lang}/trips/${trip.id}`);\n    }\n  };\n\n  const handleDeleteClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    setDeleteDialogOpen(true);\n  };\n\n  const confirmDelete = async () => {\n    try {\n      setIsDeleting(true);\n      const success = await onDelete(trip.id);\n      if (success) {\n        setDeleteDialogOpen(false);\n      }\n      return success;\n    } catch (error) {\n      console.error(\"Error during delete confirmation:\", error);\n      return false;\n    } finally {\n      setIsDeleting(false);\n    }\n  };\n\n  // Function to check for AI content updates\n  const checkForAiContentUpdates = useCallback(async () => {\n    if (!trip.id) return;\n\n    try {\n      pollingCountRef.current += 1;\n      console.log(`Polling for AI content updates (attempt ${pollingCountRef.current})`);\n\n      let result;\n      if (trip.trip_type === 'ZapOut') {\n        const { data } = await supabase\n          .from('zapout_data')\n          .select('ai_content')\n          .eq('id', trip.id)\n          .single();\n        result = data;\n      } else if (trip.trip_type === 'ZapRoad') {\n        const { data } = await supabase\n          .from('zaproad_data')\n          .select('ai_content')\n          .eq('id', trip.id)\n          .single();\n        result = data;\n      } else {\n        const { data } = await supabase\n          .from('trips')\n          .select('ai_content')\n          .eq('id', trip.id)\n          .single();\n        result = data;\n      }\n\n      if (result && result.ai_content) {\n        console.log('AI content found, stopping polling');\n        setLocalAiContent(result.ai_content);\n\n        // Clear the polling interval\n        if (pollingIntervalRef.current) {\n          clearInterval(pollingIntervalRef.current);\n          pollingIntervalRef.current = null;\n        }\n\n        // Update loading state\n        setIsAiContentLoading(false);\n      } else if (pollingCountRef.current >= MAX_POLLING_COUNT) {\n        console.log('Max polling attempts reached, stopping');\n        setIsAiContentLoading(false);\n        if (pollingIntervalRef.current) {\n          clearInterval(pollingIntervalRef.current);\n          pollingIntervalRef.current = null;\n        }\n        toast({\n          title: \"Note\",\n          description: \"AI content generation is taking longer than expected. Please refresh the page later.\",\n        });\n      }\n    } catch (error) {\n      console.error('Error checking for AI content updates:', error);\n    }\n  }, [trip.id, trip.trip_type, toast]);\n\n  // Effect to handle AI content polling\n  useEffect(() => {\n    // Start polling if there's no AI content\n    if (!localAiContent) {\n      setIsAiContentLoading(true);\n      console.log('Starting AI content polling');\n      \n      // Check immediately\n      checkForAiContentUpdates();\n      \n      // Then check every 5 seconds\n      pollingIntervalRef.current = setInterval(checkForAiContentUpdates, POLLING_INTERVAL);\n    }\n    \n    return () => {\n      if (pollingIntervalRef.current) {\n        clearInterval(pollingIntervalRef.current);\n        pollingIntervalRef.current = null;\n      }\n    };\n  }, [localAiContent, checkForAiContentUpdates]);\n\n  return (\n    <>\n      <motion.div\n        className={`bg-white rounded-lg shadow-md overflow-hidden relative group ${\n          isAiContentLoading \n            ? 'cursor-not-allowed' \n            : 'cursor-pointer hover:shadow-lg'\n        }`}\n        whileHover={{ scale: isAiContentLoading ? 1 : 1.02 }}\n        transition={{ duration: 0.3 }}\n        onClick={handleClick}\n      >\n        {/* Overlay to darken the entire card by 30% during loading */}\n        {isAiContentLoading && (\n          <div className=\"absolute inset-0 bg-black/30 z-10\"></div>\n        )}\n        \n        <TripCardHeader \n          title={trip.title} \n          tripType={trip.trip_type} \n        />\n        \n        <TripDeleteButton onClick={handleDeleteClick} />\n        \n        <div className=\"relative\">\n          <TripCardMap \n            coordinates={trip.coordinates}\n            location={trip.location}\n            tripId={trip.id}\n            tripTitle={trip.title}\n          />\n        </div>\n        \n        <div className={`relative ${isAiContentLoading ? 'z-20' : ''}`}>\n          <TripCardDetails \n            title={trip.title}\n            description={trip.description}\n            startDate={trip.start_date}\n            endDate={trip.end_date}\n            location={trip.location}\n            aiContent={localAiContent}\n            tripType={trip.trip_type}\n            zapOutDate={trip.trip_type === 'ZapOut' ? trip.date : undefined}\n            isAiContentLoading={isAiContentLoading}\n          />\n        </div>\n      </motion.div>\n\n      <TripDeleteDialog\n        open={deleteDialogOpen}\n        onOpenChange={setDeleteDialogOpen}\n        tripTitle={trip.title}\n        onConfirm={confirmDelete}\n        isDeleting={isDeleting}\n      />\n    </>\n  );\n}\n","import { TripCard } from './TripCard';\nimport { Button } from '@/components/ui/button';\nimport { useTranslation } from 'react-i18next';\n\ninterface Trip {\n  id: string;\n  title: string;\n  description: string;\n  start_date: string;\n  end_date: string;\n  location: string | null;\n  coordinates: [number, number] | null;\n  ai_content: string | null;\n  trip_type?: string | null;\n  category?: string | null;\n  created_at: string;\n}\n\ninterface TripGridProps {\n  trips: Trip[];\n  filteredTrips: Trip[];\n  onDeleteTrip: (tripId: string) => Promise<boolean>;\n  clearFilters: () => void;\n  userRole: string | null;\n  hasFreeTrip: boolean;\n}\n\nexport const TripGrid = ({ trips, filteredTrips, onDeleteTrip, clearFilters, userRole, hasFreeTrip }: TripGridProps) => {\n  const { t } = useTranslation('dashboard');\n\n  if (trips.length === 0) {\n    return (\n      <div className=\"text-center py-12\">\n        <p className=\"text-gray-600\">{t('trip.empty.noneYet')}</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n      {filteredTrips.length > 0 ? (\n        filteredTrips.map((trip) => (\n          <TripCard \n            key={trip.id} \n            trip={trip} \n            onDelete={onDeleteTrip}\n            userRole={userRole}\n            hasFreeTrip={hasFreeTrip}\n          />\n        ))\n      ) : (\n        <div className=\"col-span-3 text-center py-8\">\n          <p className=\"text-gray-500\">{t('trip.filter.noResults')}</p>\n          <Button variant=\"link\" onClick={clearFilters}>\n            {t('clearFilters')}\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Calendar } from 'lucide-react';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { FilterBar } from './filters/FilterBar';\nimport { TripGrid } from './TripGrid';\n\ninterface Trip {\n  id: string;\n  title: string;\n  description: string;\n  start_date: string;\n  end_date: string;\n  location: string | null;\n  coordinates: [number, number] | null;\n  ai_content: string | null;\n  trip_type?: string | null;\n  category?: string | null;\n  created_at: string;\n}\n\ninterface TripListProps {\n  trips: Trip[];\n  onDeleteTrip: (tripId: string) => Promise<boolean>;\n  userRole: string | null;\n  hasFreeTrip: boolean;\n}\n\nexport const TripList = ({ trips, onDeleteTrip, userRole, hasFreeTrip }: TripListProps) => {\n  const { t } = useTranslation('dashboard');\n  const [locationFilter, setLocationFilter] = useState('');\n  const [dateFilter, setDateFilter] = useState<Date | undefined>(undefined);\n  const [activityFilter, setActivityFilter] = useState('');\n  const [sortOrder, setSortOrder] = useState<'newest' | 'oldest'>('newest');\n  const [tripTypeFilter, setTripTypeFilter] = useState('');\n  const [isFilterActive, setIsFilterActive] = useState(false);\n  const [isFilterOpen, setIsFilterOpen] = useState(false);\n\n  const filteredTrips = trips.filter(trip => {\n    if (locationFilter && trip.location) {\n      if (!trip.location.toLowerCase().includes(locationFilter.toLowerCase())) {\n        return false;\n      }\n    }\n\n    if (dateFilter && trip.start_date) {\n      const tripStartDate = new Date(trip.start_date);\n      const filterDate = new Date(dateFilter);\n      \n      tripStartDate.setHours(0, 0, 0, 0);\n      filterDate.setHours(0, 0, 0, 0);\n      \n      if (tripStartDate.getTime() !== filterDate.getTime()) {\n        return false;\n      }\n    }\n\n    if (activityFilter && trip.category) {\n      if (trip.category !== activityFilter) {\n        return false;\n      }\n    }\n\n    if (tripTypeFilter && trip.trip_type) {\n      if (trip.trip_type !== tripTypeFilter) {\n        return false;\n      }\n    }\n\n    return true;\n  }).sort((a, b) => {\n    const dateA = new Date(a.created_at).getTime();\n    const dateB = new Date(b.created_at).getTime();\n    return sortOrder === 'newest' ? dateB - dateA : dateA - dateB;\n  });\n\n  const clearFilters = () => {\n    setLocationFilter('');\n    setDateFilter(undefined);\n    setActivityFilter('');\n    setTripTypeFilter('');\n    setIsFilterActive(false);\n  };\n\n  const applyFilters = () => {\n    setIsFilterActive(\n      !!locationFilter || !!dateFilter || !!activityFilter || !!tripTypeFilter\n    );\n    setIsFilterOpen(false);\n  };\n\n  // Get unique categories and locations for filter options\n  const categories = Array.from(\n    new Set(trips.filter(trip => trip.category).map(trip => trip.category))\n  ).filter(Boolean) as string[];\n  \n  const locations = Array.from(\n    new Set(trips.filter(trip => trip.location).map(trip => trip.location))\n  ).filter(Boolean) as string[];\n  \n  const tripTypes = Array.from(\n    new Set(trips.filter(trip => trip.trip_type).map(trip => trip.trip_type))\n  ).filter(Boolean) as string[];\n\n  if (trips.length === 0) {\n    return (\n      <div className=\"text-center py-12\">\n        <Calendar className=\"mx-auto h-12 w-12 text-gray-400 mb-2\" />\n        <p className=\"text-gray-600\">{t('trip.empty.noneYet')}</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <FilterBar\n        locationFilter={locationFilter}\n        dateFilter={dateFilter}\n        activityFilter={activityFilter}\n        tripTypeFilter={tripTypeFilter}\n        sortOrder={sortOrder}\n        isFilterActive={isFilterActive}\n        isFilterOpen={isFilterOpen}\n        locations={locations}\n        categories={categories}\n        tripTypes={tripTypes}\n        setLocationFilter={setLocationFilter}\n        setDateFilter={setDateFilter}\n        setActivityFilter={setActivityFilter}\n        setTripTypeFilter={setTripTypeFilter}\n        setSortOrder={setSortOrder}\n        setIsFilterOpen={setIsFilterOpen}\n        applyFilters={applyFilters}\n        clearFilters={clearFilters}\n      />\n      \n      <TripGrid \n        trips={trips}\n        filteredTrips={filteredTrips}\n        onDeleteTrip={onDeleteTrip}\n        clearFilters={clearFilters}\n        userRole={userRole}\n        hasFreeTrip={hasFreeTrip}\n      />\n    </div>\n  );\n};\n","import { motion } from 'framer-motion';\nimport { Loader2 } from 'lucide-react';\nimport { DashboardHeader } from '@/components/dashboard/DashboardHeader';\nimport { TripList } from '@/components/dashboard/TripList';\nimport { Trip } from '@/hooks/useTrips';\nimport { useTranslation } from 'react-i18next';\n\ninterface DashboardContentProps {\n  loading: boolean;\n  trips: Trip[];\n  fullName: string | null;\n  onTripCreated: () => void;\n  onDeleteTrip: (tripId: string) => Promise<boolean>;\n  userRole: string | null;\n  hasFreeTrip: boolean;\n}\n\nexport function DashboardContent({ \n  loading,\n  trips,\n  fullName,\n  onTripCreated,\n  onDeleteTrip,\n  userRole,\n  hasFreeTrip\n}: DashboardContentProps) {\n  const { t } = useTranslation('dashboard');\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <Loader2 className=\"h-8 w-8 animate-spin\" />\n      </div>\n    );\n  }\n\n  // For nosubs users with free trip, only show their free trip\n  const displayTrips = trips;\n\n  return (\n    <motion.div\n      className=\"container mx-auto p-8\"\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      <DashboardHeader \n        fullName={fullName}\n        onTripCreated={onTripCreated}\n        userRole={userRole}\n        hasFreeTrip={hasFreeTrip}\n      />\n      \n      {loading ? (\n        <p className=\"text-center text-gray-500\">{t('loading')}</p>\n      ) : (\n        <TripList \n          trips={displayTrips} \n          onDeleteTrip={onDeleteTrip}\n          userRole={userRole}\n          hasFreeTrip={hasFreeTrip}\n        />\n      )}\n    </motion.div>\n  );\n}\n"],"names":["DashboardHeader","fullName","userRole","hasFreeTrip","t","useTranslation","firstName","split","jsx","className","children","jsxs","FilterBadges","isFilterActive","dateFilter","locationFilter","activityFilter","tripTypeFilter","clearFilters","setDateFilter","setLocationFilter","setActivityFilter","setTripTypeFilter","Button","variant","size","onClick","X","Badge","Calendar","format","Map","TripFilters","locations","categories","tripTypes","isFilterOpen","setIsFilterOpen","applyFilters","Popover","open","onOpenChange","PopoverTrigger","asChild","Filter","PopoverContent","align","sideOffset","Select","value","onValueChange","SelectTrigger","SelectValue","placeholder","SelectContent","position","SelectItem","map","location","toLocaleDateString","mode","selected","onSelect","initialFocus","category","type","SortButton","sortOrder","setSortOrder","ArrowUpDown","FilterBar","TripDeleteDialog","tripTitle","onConfirm","isDeleting","Dialog","DialogContent","DialogHeader","DialogTitle","AlertCircle","DialogDescription","DialogFooter","disabled","Loader2","Trash2","TripTypeBadge","tripType","getBadgeStyle","getLabel","TripCardHeader","title","getBgColor","CableCar","Car","PlaneTakeoff","getIcon","TripCardMap","coordinates","tripId","validCoordinates","setValidCoordinates","useState","mapUrl","setMapUrl","useEffect","parsedCoords","coordsData","Array","isArray","length","lng","lat","isNaN","parsed","JSON","parse","includes","parts","part","parseFloat","trim","latitude","longitude","e","parseCoordinates","accessToken","url","src","alt","loading","MapPin","TripContentPreview","content","preview","match","extractPreview","previewText","ReactMarkdown","text","lines","filter","line","slice","join","getContentPreview","TravelAnimation","motion","div","initial","opacity","scale","animate","transition","duration","repeat","Infinity","repeatType","Sun","x","Cloud","delay","y","Waves","Mountain","rotate","ease","Compass","Plane","width","parseSecureLinks","htmlString","tempDiv","document","createElement","innerHTML","result","currentIndex","i","childNodes","node","nodeType","Node","TEXT_NODE","textContent","push","ELEMENT_NODE","element","tagName","toLowerCase","href","getAttribute","isValidInternalRoute","Link","to","stopPropagation","error","startsWith","TripCardDetails","description","startDate","endDate","aiContent","isAiContentLoading","zapOutDate","i18n","waitMessage","setWaitMessage","messagesRef","useRef","usedIndicesRef","intervalRef","selectRandomMessage","useCallback","messages","current","availableIndices","from","_","randomIndex","Math","floor","random","startMessageRotation","clearInterval","setInterval","returnObjects","fallbackMessages","validMessages","msg","language","formatSafeDate","dateString","date","parseISO","isValid","locale","enUS","fr","es","Fragment","Skeleton","TripDeleteButton","TripCard","trip","onDelete","navigate","useNavigate","toast","useToast","deleteDialogOpen","setDeleteDialogOpen","setIsDeleting","setIsAiContentLoading","localAiContent","setLocalAiContent","ai_content","pollingIntervalRef","pollingCountRef","lang","checkForAiContentUpdates","async","id","trip_type","data","supabase","select","eq","single","whileHover","start_date","end_date","success","TripGrid","trips","filteredTrips","onDeleteTrip","TripList","setIsFilterActive","tripStartDate","Date","filterDate","setHours","getTime","sort","a","b","dateA","created_at","dateB","Set","Boolean","DashboardContent","onTripCreated","displayTrips","exit"],"mappings":"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"}