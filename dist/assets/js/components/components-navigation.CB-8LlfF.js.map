{"version":3,"mappings":"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","names":["UserAvatar","url","size","className","jsxs","Avatar","cn","sm","default","children","jsx","AvatarImage","src","alt","AvatarFallback","User","LazyUpgradePopup","lazy","__vitePreload","import","__VITE_PRELOAD__","then","m","UpgradePopup","LazyZapBookingPopup","ZapBookingPopup","LazyFullCreateTripDialog","module","FullCreateTripDialog","DesktopNavigation","session","onSignOut","t","i18n","useTranslation","zapbookingT","location","useLocation","navigate","useNavigate","userRole","isAdmin","useUserRole","theme","useTheme","avatarUrl","setAvatarUrl","useState","isUpgradePopupOpen","setIsUpgradePopupOpen","isBusinessUser","setIsBusinessUser","isZapBookingPopupOpen","setIsZapBookingPopupOpen","useEffect","user","id","getProfile","checkBusinessStatus","async","userId","data","error","supabase","from","select","eq","single","avatar_url","publicUrl","storage","getPublicUrl","businessData","businessError","memberData","memberError","isActive","path","pathname","isDashboardPage","endsWith","isMapDashboardPage","isHomePage","language","Link","to","reloadDocument","Button","variant","DropdownMenu","DropdownMenuTrigger","asChild","ns","ChevronDown","DropdownMenuContent","align","DropdownMenuItem","onClick","e","preventDefault","ThemeToggle","Suspense","fallback","isOpen","onClose","DropdownMenuSeparator","FileText","Users","Fragment","href","target","rel","Building2","DollarSign","DropdownMenuSub","DropdownMenuSubTrigger","Globe","DropdownMenuSubContent","DropdownMenuRadioGroup","value","onValueChange","newLanguage","changeLanguage","auth","getUser","update","localStorage","setItem","Date","now","toString","dbError","pathSegments","split","filter","Boolean","SUPPORTED_LANGUAGES","includes","newPath","join","replace","toast","title","description","duration","map","lng","languageInfo","en","name","flag","fr","es","DropdownMenuRadioItem","LogOut","LanguageSelector","LogIn"],"ignoreList":[],"sources":["../../../../src/components/navigation/UserAvatar.tsx","../../../../src/components/navigation/DesktopNavigation.tsx"],"sourcesContent":["import React from 'react';\nimport { User } from 'lucide-react';\nimport { Avatar, AvatarImage, AvatarFallback } from '@/components/ui/avatar';\nimport { cn } from '@/lib/utils';\n\ninterface UserAvatarProps {\n  url: string | null;\n  size?: 'sm' | 'default';\n  className?: string;\n}\n\nexport function UserAvatar({ url, size = 'default', className }: UserAvatarProps) {\n  const sizeClasses = {\n    sm: 'h-8 w-8',\n    default: 'h-10 w-10'\n  };\n\n  return (\n    <Avatar className={cn(sizeClasses[size], className)}>\n      <AvatarImage src={url || ''} alt=\"User avatar\" />\n      <AvatarFallback>\n        <User className=\"h-4 w-4\" />\n      </AvatarFallback>\n    </Avatar>\n  );\n} ","import React, { useState, useEffect, lazy, Suspense } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { LanguageSelector } from '@/components/LanguageSelector';\nimport { Button } from '@/components/ui/button';\nimport { ChevronDown, LogIn, FileText, Users, Building2, DollarSign, Globe, LogOut } from 'lucide-react';\nimport { toast } from '@/components/ui/use-toast';\nimport { useUserRole } from '@/hooks/useUserRole';\nimport { ThemeToggle } from '@/components/theme-toggle';\nimport { UserAvatar } from './UserAvatar';\nimport { supabase } from '@/integrations/supabase/client';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  DropdownMenuSeparator,\n  DropdownMenuSub,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n} from '@/components/ui/dropdown-menu';\nimport { SUPPORTED_LANGUAGES } from '@/i18n';\nimport { useTheme } from \"@/components/theme-provider\"\n// Remove eager popup imports to avoid pulling them into the main bundle\nconst LazyUpgradePopup = lazy(() => import('@/components/UpgradePopup').then(m => ({ default: m.UpgradePopup })));\nconst LazyZapBookingPopup = lazy(() => import('@/components/ZapBookingPopup').then(m => ({ default: m.ZapBookingPopup })));\n\n// Lazy-load the heavy FullCreateTripDialog (mapbox-gl, create-trip wizard …)\nconst LazyFullCreateTripDialog = lazy(() => import('@/components/FullCreateTripDialog').then(module => ({ default: module.FullCreateTripDialog })));\n\ninterface DesktopNavigationProps {\n  session: any;\n  onSignOut: () => void;\n  isAdmin?: boolean;\n}\n\nexport function DesktopNavigation({ session, onSignOut }: DesktopNavigationProps) {\n  const { t, i18n } = useTranslation('navigation');\n  const { t: zapbookingT } = useTranslation('zapbooking');\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { userRole, isAdmin, refreshRole } = useUserRole();\n  const { theme } = useTheme();\n  const [avatarUrl, setAvatarUrl] = useState<string | null>(null);\n  const [isUpgradePopupOpen, setIsUpgradePopupOpen] = useState(false);\n  const [isBusinessUser, setIsBusinessUser] = useState(false);\n  const [isZapBookingPopupOpen, setIsZapBookingPopupOpen] = useState(false);\n  \n  useEffect(() => {\n    if (session?.user?.id) {\n      getProfile(session.user.id);\n      // Check if user has business access (for external redirect)\n      checkBusinessStatus(session.user.id);\n    }\n  }, [session?.user?.id]);\n\n  const getProfile = async (userId: string) => {\n    try {\n      const { data, error } = await supabase\n        .from('profiles')\n        .select('avatar_url')\n        .eq('id', userId)\n        .single();\n\n      if (error) throw error;\n      \n      if (data?.avatar_url) {\n        const { data: { publicUrl } } = supabase.storage\n          .from('avatars')\n          .getPublicUrl(data.avatar_url);\n        setAvatarUrl(publicUrl);\n      } else {\n        setAvatarUrl(null);\n      }\n    } catch (error) {\n      console.error('Error fetching profile:', error);\n    }\n  };\n  \n  const checkBusinessStatus = async (userId: string) => {\n    try {\n      // Check if user owns a business\n      const { data: businessData, error: businessError } = await supabase\n        .from('businesses')\n        .select('id')\n        .eq('owner_id', userId)\n        .single();\n\n      if (!businessError && businessData) {\n        setIsBusinessUser(true);\n        return;\n      }\n\n      // Check if user is a team member\n      const { data: memberData, error: memberError } = await supabase\n        .from('business_members')\n        .select('id')\n        .eq('user_id', userId)\n        .single();\n\n      if (!memberError && memberData) {\n        setIsBusinessUser(true);\n      }\n    } catch (error) {\n      console.error('Error checking business status:', error);\n    }\n  };\n  \n  const isActive = (path: string) => location.pathname === path;\n  const isDashboardPage = location.pathname.endsWith('/dashboard');\n  const isMapDashboardPage = location.pathname.endsWith('/map-dashboard');\n  const isHomePage = location.pathname === '/' || location.pathname === `/${i18n.language}` || location.pathname === `/${i18n.language}/`;\n  \n  // Add debug logs\n  console.log('Current path:', location.pathname);\n  console.log('Is Dashboard Page:', isDashboardPage);\n  console.log('Is Map Dashboard Page:', isMapDashboardPage);\n  \n  const handleTripCreated = () => {\n    // This is a no-op function to satisfy the required prop\n  };\n  \n\n  \n\n  \n  const handleZapBookingClick = (e: React.MouseEvent) => {\n    if (!isAdmin) {\n      e.preventDefault();\n      setIsZapBookingPopupOpen(true);\n    }\n  };\n\n  const handleLanguageChange = async (newLanguage: string) => {\n    try {\n      if (i18n.language === newLanguage) return;\n      await i18n.changeLanguage(newLanguage);\n\n      // Persist to user profile if logged in\n      try {\n        const { data: { user } } = await supabase.auth.getUser();\n        if (user?.id) {\n          await supabase\n            .from('profiles')\n            .update({ language: newLanguage })\n            .eq('id', user.id);\n          // Update local cache to align with App.tsx behavior\n          localStorage.setItem('user_language', newLanguage);\n          localStorage.setItem('user_language_timestamp', Date.now().toString());\n        }\n      } catch (dbError) {\n        console.error('Error updating language in profile:', dbError);\n      }\n\n      const pathSegments = location.pathname.split('/').filter(Boolean);\n      const isLanguageInPath = SUPPORTED_LANGUAGES.includes(pathSegments[0]);\n\n      if (isLanguageInPath) {\n        pathSegments[0] = newLanguage;\n        const newPath = '/' + pathSegments.join('/');\n        navigate(newPath, { replace: true });\n      } else {\n        const newPath = `/${newLanguage}${location.pathname}`;\n        navigate(newPath, { replace: true });\n      }\n\n      // Show success toast\n      toast({\n        title: t('languageChanged'),\n        description: t('languageChangedDescription'),\n        duration: 2000,\n      });\n      \n    } catch (error) {\n      console.error('Error changing language:', error);\n      toast({\n        title: t('error'),\n        description: t('errorDescription'),\n        variant: \"destructive\",\n        duration: 3000,\n      });\n    }\n  };\n\n  const languageDisplayNames: Record<string, string> = {\n    en: 'English',\n    fr: 'Français',\n    es: 'Español',\n  };\n  \n  return (\n    <header className=\"sticky top-0 z-50 w-full hidden md:block bg-background/90 backdrop-blur-md border-b shadow-sm\">\n      <div className=\"container flex h-16 items-center\">\n        <div className=\"flex items-center justify-between w-full\">\n          <Link \n            to={session && (userRole === 'nosubs' || userRole === 'tier1' || userRole === 'tier2' || userRole === 'tier3' || userRole === 'tier4') \n              ? `/${i18n.language}/dashboard` \n              : `/${i18n.language}`} \n            reloadDocument\n            className=\"flex items-center\"\n          >\n            <img\n              src={theme === \"dark\" ? \"/zaparound-uploads/transparentwhite.png\" : \"/zaparound-uploads/transparentnoliner.webp\"}\n              alt=\"ZapAround\"\n              className=\"h-8 mr-4\"\n            />\n          </Link>\n          \n          {/* Desktop navigation links for non-connected users */}\n          {!session && (\n            <div className=\"flex-1 flex justify-center\">\n              <div className=\"flex items-center space-x-6\">\n                {/* Only show home link for non-authenticated users and when not on homepage */}\n                {!isHomePage && (\n                  <Link\n                    to={`/${i18n.language}`}\n                    reloadDocument\n                  >\n                    <Button \n                      variant=\"outline\" \n                      className={`px-6 py-3 h-auto transition-all duration-200 rounded-lg shadow-sm hover:shadow-md ${\n                        isActive('/') \n                          ? 'bg-blue-50 border-blue-300 text-blue-700 shadow-md' \n                          : 'bg-white hover:bg-blue-50 border-gray-200 hover:border-blue-300 text-gray-700 hover:text-blue-700'\n                      }`}\n                    >\n                      <span className=\"text-lg mr-2\">🏠</span>\n                      <span className=\"font-medium text-sm\">{t('home')}</span>\n                    </Button>\n                  </Link>\n                )}\n                \n\n\n                <Link to={`/${i18n.language}/community`}>\n                  <Button \n                    variant=\"outline\" \n                    className={`px-6 py-3 h-auto transition-all duration-200 rounded-lg shadow-sm hover:shadow-md ${\n                      isActive('/community') \n                        ? 'bg-orange-50 border-orange-300 text-orange-700 shadow-md' \n                        : 'bg-white hover:bg-orange-50 border-gray-200 hover:border-orange-300 text-gray-700 hover:text-orange-700'\n                    }`}\n                  >\n                    <span className=\"text-lg mr-2\">👥</span>\n                    <span className=\"font-medium text-sm\">{t('community')}</span>\n                  </Button>\n                </Link>\n\n                {/* ZapBooking Dropdown for non-connected users */}\n                <DropdownMenu>\n                  <DropdownMenuTrigger asChild>\n                    <Button \n                      variant=\"outline\" \n                      className=\"px-6 py-3 h-auto bg-white hover:bg-green-50 border border-gray-200 hover:border-green-300 text-gray-700 hover:text-green-700 transition-all duration-200 rounded-lg shadow-sm hover:shadow-md\"\n                    >\n                      <span className=\"text-lg mr-2\">✈️</span>\n                      <span className=\"font-medium text-sm\">{zapbookingT('menu.title', { ns: 'zapbooking' })}</span>\n                      <ChevronDown className=\"ml-2 h-4 w-4 text-gray-500\" />\n                    </Button>\n                  </DropdownMenuTrigger>\n                  <DropdownMenuContent className=\"w-64 bg-white border border-gray-200 shadow-lg rounded-lg\" align=\"center\">\n                    <div className=\"p-3 border-b border-gray-100 bg-gray-50 rounded-t-lg\">\n                      <h3 className=\"font-medium text-gray-800 text-sm\">{t('bookYourTrip')}</h3>\n                    </div>\n                    <DropdownMenuItem asChild>\n                      <Link \n                        to={`/${i18n.language}/travel-flight`} \n                        reloadDocument\n                        className=\"cursor-pointer w-full flex items-center p-3 hover:bg-gray-50 transition-colors duration-150\"\n                      >\n                        <span className=\"mr-3 text-xl\">✈️</span>\n                        <div>\n                          <div className=\"font-medium text-gray-900 text-sm\">{zapbookingT('menu.flights', { ns: 'zapbooking' })}</div>\n                          <div className=\"text-xs text-gray-500\">{t('findFlightsBookHotels')}</div>\n                        </div>\n                      </Link>\n                    </DropdownMenuItem>\n                  </DropdownMenuContent>\n                </DropdownMenu>\n              </div>\n            </div>\n          )}\n\n          {/* Desktop navigation for connected users - center buttons */}\n          {session && (\n            <div className=\"flex-1 flex justify-center\">\n                             <div className=\"flex items-center space-x-6\">\n                 {/* ZapBoard Button - Minimalist & Clean */}\n                 {!isDashboardPage && (\n                   <Link to={`/${i18n.language}/dashboard`}>\n                     <Button \n                       variant=\"outline\" \n                       className=\"px-6 py-3 h-auto bg-white hover:bg-blue-50 border border-gray-200 hover:border-blue-300 text-gray-700 hover:text-blue-700 transition-all duration-200 rounded-lg shadow-sm hover:shadow-md\"\n                     >\n                       <span className=\"text-lg mr-2\">🏠</span>\n                       <span className=\"font-medium text-sm\">{t('zapboard')}</span>\n                     </Button>\n                   </Link>\n                 )}\n                 \n                 {/* ZapBooking Dropdown - Modern Card Style */}\n                 <DropdownMenu>\n                   <DropdownMenuTrigger asChild>\n                     <Button \n                       variant=\"outline\" \n                       onClick={handleZapBookingClick}\n                       className=\"px-6 py-3 h-auto bg-white hover:bg-green-50 border border-gray-200 hover:border-green-300 text-gray-700 hover:text-green-700 transition-all duration-200 rounded-lg shadow-sm hover:shadow-md\"\n                     >\n                       <span className=\"text-lg mr-2\">✈️</span>\n                       <span className=\"font-medium text-sm\">{zapbookingT('menu.title', { ns: 'zapbooking' })}</span>\n                       <ChevronDown className=\"ml-2 h-4 w-4 text-gray-500\" />\n                     </Button>\n                   </DropdownMenuTrigger>\n                   <DropdownMenuContent className=\"w-64 bg-white border border-gray-200 shadow-lg rounded-lg\" align=\"center\">\n                     <div className=\"p-3 border-b border-gray-100 bg-gray-50 rounded-t-lg\">\n                       <h3 className=\"font-medium text-gray-800 text-sm\">{t('bookYourTrip')}</h3>\n                     </div>\n                     <DropdownMenuItem asChild>\n                       <Link \n                         to={`/${i18n.language}/travel-flight`} \n                         reloadDocument\n                         className=\"cursor-pointer w-full flex items-center p-3 hover:bg-gray-50 transition-colors duration-150\"\n                         \n                       >\n                         <span className=\"mr-3 text-xl\">✈️</span>\n                         <div>\n                           <div className=\"font-medium text-gray-900 text-sm\">{zapbookingT('menu.flights', { ns: 'zapbooking' })}</div>\n                           <div className=\"text-xs text-gray-500\">{t('findFlightsBookHotels')}</div>\n                         </div>\n                       </Link>\n                     </DropdownMenuItem>\n                   </DropdownMenuContent>\n                 </DropdownMenu>\n\n                 {/* ZapMap Button - Subtle & Elegant */}\n                 {!isMapDashboardPage && (\n                   <Button \n                     variant=\"outline\"\n                     onClick={(e) => {\n                       e.preventDefault();\n                       navigate(`/${i18n.language}/map-dashboard`);\n                     }}\n                     className=\"px-6 py-3 h-auto bg-white hover:bg-purple-50 border border-gray-200 hover:border-purple-300 text-gray-700 hover:text-purple-700 transition-all duration-200 rounded-lg shadow-sm hover:shadow-md\"\n                   >\n                     <span className=\"text-lg mr-2\">🌍</span>\n                     <span className=\"font-medium text-sm\">{t('mapView')}</span>\n                   </Button>\n                 )}\n\n                 {/* Community Button - Clean & Modern */}\n                 <Link to={`/${i18n.language}/community`}>\n                   <Button \n                     variant=\"outline\"\n                     className={`px-6 py-3 h-auto transition-all duration-200 rounded-lg shadow-sm hover:shadow-md ${\n                       isActive('/community') \n                         ? 'bg-orange-50 border-orange-300 text-orange-700 shadow-md' \n                         : 'bg-white hover:bg-orange-50 border-gray-200 hover:border-orange-300 text-gray-700 hover:text-orange-700'\n                     }`}\n                   >\n                     <span className=\"text-lg mr-2\">👥</span>\n                     <span className=\"font-medium text-sm\">{t('community')}</span>\n                   </Button>\n                 </Link>\n               </div>\n            </div>\n          )}\n        </div>\n        \n        <div className=\"flex items-center space-x-4\">\n          {!session ? (\n            <>\n              <ThemeToggle />\n              <LanguageSelector variant=\"outline\" />\n              \n              {/* Blog Button for non-connected users */}\n              <Link to={`/${i18n.language}/blog`}>\n                <Button variant=\"outline\" className=\"flex items-center gap-2\">\n                  <span className=\"text-lg\">📚</span>\n                  {t('blog')}\n                </Button>\n              </Link>\n              \n              <Link to={`/${i18n.language}/auth`}>\n                <Button\n                  className=\"relative px-6 py-2 bg-gradient-to-r from-[#10B981] to-[#059669] text-white border-none hover:from-[#059669] hover:to-[#047857] hover:scale-105 transition-all duration-300 shadow-lg rounded-full font-medium tracking-wide\"\n                >\n                  <span className=\"flex items-center gap-2\">\n                    <LogIn className=\"w-5 h-5\" />\n                    {t('signIn')}\n                  </span>\n                </Button>\n              </Link>\n            </>\n          ) : (\n            <div className=\"flex items-center space-x-4\">\n              <ThemeToggle />\n\n\n\n\n              \n              {/* Create Trip Button – loaded on-demand to cut initial JS ↘ */}\n              <Suspense fallback={null}>\n                <LazyFullCreateTripDialog session={session} />\n              </Suspense>\n              \n              {/* Upgrade Popup – lazy */}\n              <Suspense fallback={null}>\n                <LazyUpgradePopup \n                  isOpen={isUpgradePopupOpen}\n                  onClose={() => setIsUpgradePopupOpen(false)}\n                />\n              </Suspense>\n              \n              {/* ZapBooking Popup – lazy */}\n              <Suspense fallback={null}>\n                <LazyZapBookingPopup \n                  isOpen={isZapBookingPopupOpen}\n                  onClose={() => setIsZapBookingPopupOpen(false)}\n                />\n              </Suspense>\n              \n              {/* User Dropdown */}\n              <DropdownMenu>\n                <DropdownMenuTrigger asChild>\n                  <Button variant=\"ghost\" className=\"flex items-center gap-1 p-0\">\n                    <UserAvatar url={avatarUrl} size=\"sm\" />\n                    <ChevronDown className=\"h-4 w-4\" />\n                  </Button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent className=\"w-56 bg-white\" align=\"end\">\n                  <DropdownMenuItem asChild>\n                    <Link to={`/${i18n.language}/profile`} className=\"cursor-pointer w-full flex items-center\">\n                      <UserAvatar url={avatarUrl} size=\"sm\" className=\"mr-2\" />\n                      {t('profile')}\n                    </Link>\n                  </DropdownMenuItem>\n                  <DropdownMenuSeparator />\n                  <DropdownMenuItem asChild>\n                    <Link to={`/${i18n.language}/blog`} className=\"cursor-pointer w-full flex items-center\">\n                      <FileText className=\"mr-2 h-4 w-4\" />\n                      {t('blog')}\n                    </Link>\n                  </DropdownMenuItem>\n                  <DropdownMenuItem asChild>\n                    <Link to={`/${i18n.language}/community`} className=\"cursor-pointer w-full flex items-center\">\n                      <Users className=\"mr-2 h-4 w-4\" />\n                      {t('community')}\n                    </Link>\n                  </DropdownMenuItem>\n                  \n                  {/* Business Dashboard - Only show for business users */}\n                  {isBusinessUser && (\n                    <>\n                      <DropdownMenuSeparator />\n                      <DropdownMenuItem asChild>\n                        <a href=\"https://business.zaparound.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"cursor-pointer w-full flex items-center\">\n                          <Building2 className=\"mr-2 h-4 w-4\" />\n                          {t('business')}\n                        </a>\n                      </DropdownMenuItem>\n                    </>\n                  )}\n                  \n                  {/* Tools Section */}\n                  <DropdownMenuSeparator />\n                  <DropdownMenuItem asChild>\n                    <Link to={`/${i18n.language}/currency-converter`} className=\"cursor-pointer w-full flex items-center\">\n                      <DollarSign className=\"mr-2 h-4 w-4\" />\n                      {t('currencyConverter')}\n                    </Link>\n                  </DropdownMenuItem>\n                  \n                  {/* Language submenu for all connected users */}\n                  <DropdownMenuSub>\n                    <DropdownMenuSubTrigger>\n                      <div className=\"flex items-center\">\n                        <Globe className=\"mr-2 h-4 w-4\" />\n                        {t('language')}\n                      </div>\n                    </DropdownMenuSubTrigger>\n                    <DropdownMenuSubContent className=\"bg-white\">\n                      <DropdownMenuRadioGroup value={i18n.language} onValueChange={handleLanguageChange}>\n                        {SUPPORTED_LANGUAGES.map((lng) => {\n                          const languageData: Record<string, { name: string; flag: string }> = {\n                            en: { name: 'English', flag: '🇺🇸' },\n                            fr: { name: 'Français', flag: '🇫🇷' },\n                            es: { name: 'Español', flag: '🇪🇸' }\n                          };\n                          const languageInfo = languageData[lng];\n                          \n                          return (\n                            <DropdownMenuRadioItem key={lng} value={lng} className=\"cursor-pointer\">\n                              <div className=\"flex items-center gap-2\">\n                                <span>{languageInfo.flag}</span>\n                                <span>{languageInfo.name}</span>\n                              </div>\n                            </DropdownMenuRadioItem>\n                          );\n                        })}\n                      </DropdownMenuRadioGroup>\n                    </DropdownMenuSubContent>\n                  </DropdownMenuSub>\n\n                  <DropdownMenuSeparator />\n                  <DropdownMenuItem onClick={onSignOut} className=\"cursor-pointer\">\n                    <LogOut className=\"mr-2 h-4 w-4\" />\n                    {t('signOut')}\n                  </DropdownMenuItem>\n                </DropdownMenuContent>\n              </DropdownMenu>\n            </div>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n}\n"],"file":"assets/js/components/components-navigation.CB-8LlfF.js"}