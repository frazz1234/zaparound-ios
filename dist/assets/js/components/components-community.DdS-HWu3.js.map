{"version":3,"file":"components-community.DdS-HWu3.js","sources":["../../../../src/components/community/MediaUpload.tsx","../../../../src/components/community/MediaDisplay.tsx","../../../../src/components/community/LocationDisplay.tsx","../../../../src/components/community/EventCarousel.tsx","../../../../src/components/community/LocationHeader.tsx","../../../../src/components/community/GooglePlacesSearch.tsx","../../../../src/components/community/PostBlurOverlay.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from '@/components/ui/button';\nimport { ImageIcon, Video, X, Plus, Play, Pause } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { MediaFile } from '@/types/community';\n\ninterface MediaUploadProps {\n  onMediaChange: (media: MediaFile[]) => void;\n  maxFiles?: number;\n  className?: string;\n  disabled?: boolean;\n}\n\nexport const MediaUpload: React.FC<MediaUploadProps> = ({\n  onMediaChange,\n  maxFiles = 10,\n  className,\n  disabled = false\n}) => {\n  const { t } = useTranslation('community');\n  const [mediaFiles, setMediaFiles] = useState<MediaFile[]>([]);\n  const [playingVideo, setPlayingVideo] = useState<string | null>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = Array.from(event.target.files || []);\n    \n    if (mediaFiles.length + files.length > maxFiles) {\n      alert(t('media.maxFilesExceeded', { max: maxFiles }));\n      return;\n    }\n\n    const newMediaFiles: MediaFile[] = [];\n\n    files.forEach((file) => {\n      // Validate file type\n      const isImage = file.type.startsWith('image/');\n      const isVideo = file.type.startsWith('video/');\n      \n      if (!isImage && !isVideo) {\n        alert(t('media.invalidFileType', { filename: file.name }));\n        return;\n      }\n\n      // Validate file size (max 50MB for videos, 10MB for images)\n      const maxSize = isVideo ? 50 * 1024 * 1024 : 10 * 1024 * 1024;\n      if (file.size > maxSize) {\n        alert(t(isVideo ? 'media.fileTooLargeVideo' : 'media.fileTooLargeImage', { filename: file.name }));\n        return;\n      }\n\n      const id = Math.random().toString(36).substr(2, 9);\n      const preview = URL.createObjectURL(file);\n      \n      newMediaFiles.push({\n        id,\n        file,\n        preview,\n        type: isImage ? 'image' : 'video'\n      });\n    });\n\n    const updatedMedia = [...mediaFiles, ...newMediaFiles];\n    setMediaFiles(updatedMedia);\n    onMediaChange(updatedMedia);\n  };\n\n  const removeMedia = (id: string) => {\n    const updatedMedia = mediaFiles.filter(media => media.id !== id);\n    setMediaFiles(updatedMedia);\n    onMediaChange(updatedMedia);\n    \n    // Stop video if it was playing\n    if (playingVideo === id) {\n      setPlayingVideo(null);\n    }\n  };\n\n  const toggleVideoPlayback = (id: string) => {\n    setPlayingVideo(playingVideo === id ? null : id);\n  };\n\n  const getLayoutClass = (count: number) => {\n    if (count === 1) return 'grid-cols-1';\n    if (count === 2) return 'grid-cols-2';\n    if (count === 3) return 'grid-cols-3';\n    if (count === 4) return 'grid-cols-2 grid-rows-2';\n    return 'grid-cols-3 grid-rows-2';\n  };\n\n  const renderMediaPreview = (media: MediaFile, index: number) => {\n    const isPlaying = playingVideo === media.id;\n    \n    return (\n      <div\n        key={media.id}\n        className={cn(\n          \"relative group overflow-hidden rounded-lg bg-gray-100\",\n          mediaFiles.length === 1 ? \"aspect-video\" : \"aspect-square\",\n          mediaFiles.length === 2 ? \"aspect-video\" : \"\",\n          mediaFiles.length === 3 && index === 0 ? \"col-span-2 row-span-2 aspect-video\" : \"\",\n          mediaFiles.length === 4 ? \"aspect-square\" : \"\",\n          mediaFiles.length > 4 && index === 0 ? \"col-span-2 row-span-2 aspect-video\" : \"\"\n        )}\n      >\n        {media.type === 'image' ? (\n          <img\n            src={media.preview}\n            alt=\"Preview\"\n            className=\"w-full h-full object-cover\"\n          />\n        ) : (\n          <video\n            src={media.preview}\n            className=\"w-full h-full object-cover\"\n            muted\n            loop\n            playsInline\n            ref={(el) => {\n              if (el) {\n                if (isPlaying) {\n                  el.play().catch(() => {});\n                } else {\n                  el.pause();\n                }\n              }\n            }}\n          />\n        )}\n        \n        {/* Overlay with controls */}\n        <div className=\"absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-all duration-200 flex items-center justify-center\">\n          {media.type === 'video' && (\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"opacity-0 group-hover:opacity-100 transition-opacity duration-200 bg-white/20 hover:bg-white/30 text-white\"\n              onClick={() => toggleVideoPlayback(media.id)}\n            >\n              {isPlaying ? (\n                <Pause className=\"h-4 w-4\" />\n              ) : (\n                <Play className=\"h-4 w-4\" />\n              )}\n            </Button>\n          )}\n        </div>\n        \n        {/* Remove button */}\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity duration-200 bg-red-500 hover:bg-red-600 text-white h-6 w-6 p-0\"\n          onClick={() => removeMedia(media.id)}\n        >\n          <X className=\"h-3 w-3\" />\n        </Button>\n        \n        {/* File type indicator */}\n        <div className=\"absolute bottom-2 left-2 bg-black/50 text-white text-xs px-2 py-1 rounded\">\n          {media.type === 'video' ? t('media.video') : t('media.image')}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className={cn(\"space-y-4\", className)}>\n      {/* Upload button */}\n      {mediaFiles.length < maxFiles && (\n        <Button\n          type=\"button\"\n          variant=\"outline\"\n          className=\"flex items-center gap-2\"\n          disabled={disabled}\n          onClick={() => fileInputRef.current?.click()}\n        >\n          <ImageIcon className=\"h-4 w-4\" />\n          <span className=\"hidden sm:inline\">{t('media.addPhotosVideos')}</span>\n        </Button>\n      )}\n      \n      {/* Hidden file input */}\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        multiple\n        accept=\"image/*,video/*\"\n        className=\"hidden\"\n        onChange={handleFileSelect}\n        disabled={disabled}\n      />\n      \n      {/* Media preview grid */}\n      {mediaFiles.length > 0 && (\n        <div className={cn(\n          \"grid gap-2\",\n          getLayoutClass(mediaFiles.length)\n        )}>\n          {mediaFiles.map((media, index) => renderMediaPreview(media, index))}\n          \n          {/* Show more indicator */}\n          {mediaFiles.length > 5 && (\n            <div className=\"relative aspect-square bg-gray-100 rounded-lg flex items-center justify-center\">\n              <div className=\"absolute inset-0 bg-black/50 rounded-lg flex items-center justify-center\">\n                <div className=\"text-white text-center\">\n                  <Plus className=\"h-8 w-8 mx-auto mb-2\" />\n                  <p className=\"text-sm font-medium\">\n                    {t('media.moreFiles', { count: mediaFiles.length - 5 })}\n                  </p>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n      \n      {/* File count indicator */}\n      {mediaFiles.length > 0 && (\n        <p className=\"text-sm text-gray-500\">\n          {t('media.filesSelected', { count: mediaFiles.length, max: maxFiles })}\n        </p>\n      )}\n    </div>\n  );\n}; ","import React, { useState, useRef } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Dialog, DialogContent } from '@/components/ui/dialog';\nimport { ChevronLeft, ChevronRight, X, Play, Pause, Maximize2, Download } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { MediaItem } from '@/types/community';\n\ninterface MediaDisplayProps {\n  media: MediaItem[] | string; // Can be array of media items or legacy image_url string\n  className?: string;\n  maxPreview?: number;\n}\n\nexport const MediaDisplay: React.FC<MediaDisplayProps> = ({\n  media,\n  className,\n  maxPreview = 5\n}) => {\n  const [selectedIndex, setSelectedIndex] = useState<number | null>(null);\n  const [playingVideo, setPlayingVideo] = useState<string | null>(null);\n  const [orientationById, setOrientationById] = useState<Record<string, 'portrait' | 'landscape' | 'square'>>({});\n  const videoRefs = useRef<{ [key: string]: HTMLVideoElement | null }>({});\n  // Touch swipe refs for mobile navigation\n  const touchStartXRef = useRef<number | null>(null);\n  const touchStartYRef = useRef<number | null>(null);\n  const isSwipingRef = useRef<boolean>(false);\n\n  // Handle both new media_urls array and old image_url string\n  let allMedia: MediaItem[] = [];\n  \n  if (Array.isArray(media)) {\n    // New format: array of media items\n    allMedia = media;\n  } else if (typeof media === 'string' && media.trim() !== '') {\n    // Old format: single image URL string\n    allMedia = [{ id: 'legacy-image', url: media, type: 'image' as const }];\n  }\n\n  if (!allMedia || allMedia.length === 0) return null;\n\n  const handleMediaClick = (index: number) => {\n    setSelectedIndex(index);\n    // Stop any playing videos when opening gallery\n    setPlayingVideo(null);\n  };\n\n  const closeGallery = () => {\n    setSelectedIndex(null);\n    setPlayingVideo(null);\n  };\n\n  const navigateGallery = (direction: 'prev' | 'next') => {\n    if (selectedIndex === null) return;\n    \n    const newIndex = direction === 'prev' \n      ? (selectedIndex - 1 + allMedia.length) % allMedia.length\n      : (selectedIndex + 1) % allMedia.length;\n    \n    setSelectedIndex(newIndex);\n    setPlayingVideo(null);\n  };\n\n  const onTouchStart = (e: React.TouchEvent) => {\n    if (allMedia.length <= 1) return;\n    const touch = e.touches[0];\n    touchStartXRef.current = touch.clientX;\n    touchStartYRef.current = touch.clientY;\n    isSwipingRef.current = false;\n  };\n\n  const onTouchMove = (e: React.TouchEvent) => {\n    if (touchStartXRef.current === null || touchStartYRef.current === null) return;\n    const touch = e.touches[0];\n    const deltaX = touch.clientX - touchStartXRef.current;\n    const deltaY = touch.clientY - touchStartYRef.current;\n    if (Math.abs(deltaX) > 10 && Math.abs(deltaX) > Math.abs(deltaY)) {\n      // Horizontal swipe detected\n      isSwipingRef.current = true;\n      e.preventDefault();\n    }\n  };\n\n  const onTouchEnd = (e: React.TouchEvent) => {\n    if (touchStartXRef.current === null || touchStartYRef.current === null) return;\n    const touch = e.changedTouches[0];\n    const deltaX = touch.clientX - touchStartXRef.current;\n    const deltaY = touch.clientY - touchStartYRef.current;\n    const horizontal = Math.abs(deltaX) > Math.abs(deltaY) && Math.abs(deltaX) > 50;\n    if (horizontal) {\n      navigateGallery(deltaX > 0 ? 'prev' : 'next');\n    }\n    touchStartXRef.current = null;\n    touchStartYRef.current = null;\n    isSwipingRef.current = false;\n  };\n\n  const toggleVideoPlayback = (mediaId: string) => {\n    setPlayingVideo(playingVideo === mediaId ? null : mediaId);\n  };\n\n  const getContainerLayoutClass = (count: number) => {\n    if (count === 1) return 'grid-cols-1';\n    if (count === 2) return 'grid-cols-2';\n    if (count === 3) return 'grid-cols-2 grid-rows-2'; // Facebook-like: 1 tall on left, 2 stacked on right\n    if (count === 4) return 'grid-cols-2 grid-rows-2';\n    return 'grid-cols-3 grid-rows-2'; // 5+: 3 columns with first tile emphasized\n  };\n\n  const getItemLayoutClass = (index: number, count: number, item: MediaItem) => {\n    const orientation = orientationById[item.id] || (item.type === 'video' ? 'landscape' : undefined);\n\n    // Base tile styles\n    let classes = [\n      'relative',\n      'group',\n      'overflow-hidden',\n      'rounded-lg',\n      'bg-gray-100',\n      'cursor-pointer',\n      'w-full',\n      'h-full',\n    ];\n\n    // Aspect ratio per configuration\n    if (count === 1) {\n      classes.push(orientation === 'portrait' ? 'aspect-[4/5]' : orientation === 'square' ? 'aspect-square' : 'aspect-video');\n    } else if (count === 2) {\n      // Keep side-by-side consistent yet orientation-aware\n      classes.push(orientation === 'portrait' ? 'aspect-[4/5]' : 'aspect-[4/3]');\n    } else if (count === 3) {\n      // Facebook style: first item tall on the left (spans 2 rows), two stacked on right\n      if (index === 0) {\n        classes.push('row-span-2');\n        classes.push(orientation === 'portrait' ? 'aspect-[3/4]' : 'aspect-[4/3]');\n      } else {\n        classes.push('aspect-square');\n      }\n    } else if (count === 4) {\n      classes.push('aspect-square');\n    } else {\n      // 5+ images: first tile emphasized spanning 2x2, others fill\n      if (index === 0) {\n        classes.push('col-span-2', 'row-span-2');\n        classes.push(orientation === 'portrait' ? 'aspect-[3/4]' : 'aspect-video');\n      } else {\n        classes.push('aspect-square');\n      }\n    }\n\n    return classes.join(' ');\n  };\n\n  const handleImageLoad = (id: string) => (e: React.SyntheticEvent<HTMLImageElement>) => {\n    const img = e.currentTarget;\n    const { naturalWidth, naturalHeight } = img;\n    if (!naturalWidth || !naturalHeight) return;\n    const ratio = naturalWidth / naturalHeight;\n    const orientation: 'portrait' | 'landscape' | 'square' = ratio === 1 ? 'square' : ratio > 1 ? 'landscape' : 'portrait';\n    setOrientationById((prev) => (prev[id] ? prev : { ...prev, [id]: orientation }));\n  };\n\n  const renderMediaItem = (item: MediaItem, index: number) => {\n    const isPlaying = playingVideo === item.id;\n    const isVideo = item.type === 'video';\n    \n    return (\n      <div\n        key={item.id}\n        className={getItemLayoutClass(index, Math.min(allMedia.length, maxPreview), item)}\n        onClick={() => handleMediaClick(index)}\n      >\n        {isVideo ? (\n          <video\n            ref={(el) => {\n              videoRefs.current[item.id] = el;\n            }}\n            src={item.url}\n            poster={item.thumbnail}\n            className=\"w-full h-full object-cover\"\n            muted\n            loop\n            playsInline\n            onPlay={() => setPlayingVideo(item.id)}\n            onPause={() => setPlayingVideo(null)}\n          />\n        ) : (\n          <img\n            src={item.url}\n            alt=\"Media content\"\n            className=\"w-full h-full object-cover\"\n            onLoad={handleImageLoad(item.id)}\n          />\n        )}\n        \n        {/* Overlay with controls */}\n        <div className=\"absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-all duration-200 flex items-center justify-center\">\n          {isVideo && (\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"opacity-0 group-hover:opacity-100 transition-opacity duration-200 bg-white/20 hover:bg-white/30 text-white\"\n              onClick={(e) => {\n                e.stopPropagation();\n                toggleVideoPlayback(item.id);\n              }}\n            >\n              {isPlaying ? (\n                <Pause className=\"h-4 w-4\" />\n              ) : (\n                <Play className=\"h-4 w-4\" />\n              )}\n            </Button>\n          )}\n        </div>\n        \n        {/* Video indicator */}\n        {isVideo && (\n          <div className=\"absolute top-2 left-2 bg-black/50 text-white text-xs px-2 py-1 rounded flex items-center gap-1\">\n            <Play className=\"h-3 w-3\" />\n            VIDEO\n          </div>\n        )}\n        \n        {/* Show more indicator for last item */}\n        {index === maxPreview - 1 && allMedia.length > maxPreview && (\n          <div className=\"absolute inset-0 bg-black/50 flex items-center justify-center\">\n            <div className=\"text-white text-center\">\n              <p className=\"text-lg font-bold\">+{allMedia.length - maxPreview}</p>\n              <p className=\"text-sm\">more</p>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const renderGalleryItem = (item: MediaItem, index: number) => {\n    const isPlaying = playingVideo === item.id;\n    const isVideo = item.type === 'video';\n    \n    return (\n      <div\n        key={item.id}\n        className=\"relative w-full h-full flex items-center justify-center\"\n      >\n        {isVideo ? (\n          <video\n            ref={(el) => {\n              videoRefs.current[item.id] = el;\n            }}\n            src={item.url}\n            poster={item.thumbnail}\n            className=\"block max-w-[100svw] max-h-[100svh] w-auto h-auto object-contain\"\n            controls\n            autoPlay={isPlaying}\n            onPlay={() => setPlayingVideo(item.id)}\n            onPause={() => setPlayingVideo(null)}\n          />\n        ) : (\n          <img\n            src={item.url}\n            alt=\"Media content\"\n            className=\"block max-w-[100svw] max-h-[100svh] w-auto h-auto object-contain\"\n            draggable={false}\n          />\n        )}\n        \n        {/* Gallery controls */}\n        <div className=\"absolute top-4 right-4 flex gap-2\">\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"bg-black/50 hover:bg-black/70 text-white\"\n            onClick={() => {\n              const link = document.createElement('a');\n              link.href = item.url;\n              link.download = `media-${index + 1}`;\n              link.click();\n            }}\n          >\n            <Download className=\"h-4 w-4\" />\n          </Button>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"bg-black/50 hover:bg-black/70 text-white\"\n            onClick={() => {\n              if (isVideo) {\n                toggleVideoPlayback(item.id);\n              } else {\n                window.open(item.url, '_blank');\n              }\n            }}\n          >\n            <Maximize2 className=\"h-4 w-4\" />\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  const displayMedia = allMedia.slice(0, maxPreview);\n\n  return (\n    <>\n      <div\n        className={cn(\n          // Grid with consistent row heights for Facebook-like stacking\n          \"grid gap-2 auto-rows-[120px] sm:auto-rows-[160px]\",\n          getContainerLayoutClass(displayMedia.length),\n          className\n        )}\n      >\n        {displayMedia.map((item, index) => renderMediaItem(item, index))}\n      </div>\n\n      {/* Gallery Dialog */}\n      <Dialog open={selectedIndex !== null} onOpenChange={closeGallery}>\n        <DialogContent className=\"max-w-none w-screen h-[100dvh] p-0 bg-black sm:bg-[#fcfcfc] border-0 shadow-none rounded-none overflow-hidden\">\n          <div\n            className=\"relative w-full h-full flex items-center justify-center bg-black\"\n            onTouchStart={onTouchStart}\n            onTouchMove={onTouchMove}\n            onTouchEnd={onTouchEnd}\n            style={{ touchAction: 'pan-y' }}\n          >\n            {/* Close button */}\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"absolute top-4 left-4 z-10 bg-black/60 hover:bg-black/70 text-white\"\n            onClick={closeGallery}\n          >\n              <X className=\"h-4 w-4\" />\n            </Button>\n            \n            {/* Navigation buttons */}\n            {allMedia.length > 1 && (\n              <>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"absolute top-1/2 left-4 z-10 bg-black/60 hover:bg-black/70 text-white transform -translate-y-1/2\"\n                  onClick={() => navigateGallery('prev')}\n                >\n                  <ChevronLeft className=\"h-6 w-6\" />\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"absolute top-1/2 right-4 z-10 bg-black/60 hover:bg-black/70 text-white transform -translate-y-1/2\"\n                  onClick={() => navigateGallery('next')}\n                >\n                  <ChevronRight className=\"h-6 w-6\" />\n                </Button>\n              </>\n            )}\n            \n            {/* Current media */}\n            {selectedIndex !== null && renderGalleryItem(allMedia[selectedIndex], selectedIndex)}\n            \n            {/* Counter */}\n            <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 bg-black/50 text-white px-3 py-1 rounded-full text-sm\">\n              {selectedIndex !== null ? selectedIndex + 1 : 0} / {allMedia.length}\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}; ","import React from 'react';\nimport { MapPin, Star, Clock, Eye } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { createPlaceUrl } from '@/utils/placeUtils';\n\ninterface LocationDisplayProps {\n  location: string;\n  placeId?: string;\n  placeLat?: number;\n  placeLng?: number;\n  placeTypes?: string[];\n  placeRating?: number;\n  placeUserRatingsTotal?: number;\n  className?: string;\n  place?: any;\n}\n\nexport const LocationDisplay: React.FC<LocationDisplayProps> = ({\n  location,\n  placeId,\n  placeLat,\n  placeLng,\n  placeTypes,\n  placeRating,\n  placeUserRatingsTotal,\n  className,\n  place\n}) => {\n  const { t } = useTranslation('community');\n  const navigate = useNavigate();\n\n  if (!location) return null;\n\n  const getPlaceIcon = (types?: string[]) => {\n    if (!types || types.length === 0) return '📍';\n    \n    if (types.includes('restaurant') || types.includes('food')) {\n      return '🍽️';\n    } else if (types.includes('tourist_attraction') || types.includes('point_of_interest')) {\n      return '🏛️';\n    } else if (types.includes('lodging') || types.includes('hotel')) {\n      return '🏨';\n    } else if (types.includes('shopping_mall') || types.includes('store')) {\n      return '🛍️';\n    } else if (types.includes('park') || types.includes('natural_feature')) {\n      return '🌳';\n    } else if (types.includes('museum')) {\n      return '🏛️';\n    } else if (types.includes('amusement_park') || types.includes('entertainment')) {\n      return '🎡';\n    } else {\n      return '📍';\n    }\n  };\n\n  const getPlaceTypeLabel = (types?: string[]) => {\n    if (!types || types.length === 0) return null;\n    \n    const typeLabels: { [key: string]: string } = {\n      restaurant: 'Restaurant',\n      food: 'Food',\n      tourist_attraction: 'Tourist Attraction',\n      point_of_interest: 'Point of Interest',\n      lodging: 'Lodging',\n      hotel: 'Hotel',\n      shopping_mall: 'Shopping Mall',\n      store: 'Store',\n      park: 'Park',\n      natural_feature: 'Natural Feature',\n      museum: 'Museum',\n      amusement_park: 'Amusement Park',\n      entertainment: 'Entertainment'\n    };\n\n    for (const type of types) {\n      if (typeLabels[type]) {\n        return typeLabels[type];\n      }\n    }\n    \n    return null;\n  };\n\n  const hasPlaceDetails = placeId && placeLat && placeLng;\n  const hasNewPlaceData = place && place.place_id;\n\n  const handlePlaceClick = () => {\n    if (hasNewPlaceData) {\n      // Use new place data structure with SEO-friendly URL\n      const placeUrl = createPlaceUrl(place.place_id, place.name);\n      navigate(placeUrl, {\n        state: {\n          placeId: place.place_id,\n          name: place.name,\n          lat: place.geometry?.location?.lat,\n          lng: place.geometry?.location?.lng,\n          types: place.types,\n          rating: place.rating,\n          userRatingsTotal: place.user_ratings_total\n        }\n      });\n    } else if (hasPlaceDetails) {\n      // Use old place data structure with SEO-friendly URL\n      const placeUrl = createPlaceUrl(placeId!, location);\n      navigate(placeUrl, {\n        state: {\n          placeId,\n          name: location,\n          lat: placeLat,\n          lng: placeLng,\n          types: placeTypes,\n          rating: placeRating,\n          userRatingsTotal: placeUserRatingsTotal\n        }\n      });\n    }\n  };\n\n  // If we have new place data, use it\n  if (hasNewPlaceData) {\n    return (\n      <div \n        className=\"inline-flex items-center space-x-2 bg-blue-50 hover:bg-blue-100 px-3 py-1 rounded-full text-sm text-blue-700 cursor-pointer transition-colors duration-200\"\n        onClick={handlePlaceClick}\n      >\n        <MapPin className=\"h-3 w-3\" />\n        <span className=\"font-medium\">{place.name}</span>\n        {place.rating && (\n          <div className=\"flex items-center space-x-1\">\n            <Star className=\"h-3 w-3 text-yellow-500 fill-current\" />\n            <span className=\"text-xs\">{place.rating.toFixed(1)}</span>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  // Fallback to old structure or simple display\n  return (\n    <div className={cn('flex items-start space-x-2 text-sm text-[#62626a]', className)}>\n      <div className=\"flex-shrink-0 mt-0.5\">\n        <MapPin className=\"h-4 w-4\" />\n      </div>\n      \n      <div className=\"flex-1 min-w-0\">\n        <div className=\"flex items-center space-x-2\">\n          {hasPlaceDetails && (\n            <span className=\"text-base\">{getPlaceIcon(placeTypes)}</span>\n          )}\n          <span className=\"font-medium text-[#030303] truncate\">{location}</span>\n          \n          {hasPlaceDetails && (\n            <button\n              onClick={handlePlaceClick}\n              className=\"ml-2 px-3 py-1 text-xs bg-[#61936f] text-white rounded-full hover:bg-[#4a7c5a] transition-colors duration-200 flex items-center space-x-1\"\n              title=\"View place details\"\n            >\n              <span>View</span>\n              <Eye className=\"h-3 w-3\" />\n            </button>\n          )}\n        </div>\n        \n        {hasPlaceDetails && (\n          <div className=\"flex items-center space-x-4 mt-1\">\n            {placeRating && (\n              <div className=\"flex items-center space-x-1\">\n                <Star className=\"h-3 w-3 text-yellow-500 fill-current\" />\n                <span className=\"text-xs\">\n                  {placeRating.toFixed(1)}\n                  {placeUserRatingsTotal && ` (${placeUserRatingsTotal})`}\n                </span>\n              </div>\n            )}\n            \n            {getPlaceTypeLabel(placeTypes) && (\n              <span className=\"text-xs bg-[#fcfcfc] px-2 py-1 rounded-full border border-[#62626a]/20\">\n                {getPlaceTypeLabel(placeTypes)}\n              </span>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}; ","import React, { useState, useMemo } from 'react';\nimport { format } from 'date-fns';\nimport { MapPin } from 'lucide-react';\nimport {\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselNext,\n  CarouselPrevious,\n} from \"@/components/ui/carousel\";\nimport { Badge } from '@/components/ui/badge';\nimport { cn } from '@/lib/utils';\n\ninterface EventbriteEvent {\n  id: string;\n  name: string;\n  description: string;\n  url: string;\n  startDate: string;\n  endDate: string;\n  timezone: string;\n  imageUrl?: string;\n  type?: string;\n  venue?: {\n    name: string;\n    address: {\n      city: string;\n      region: string;\n    };\n  };\n}\n\ninterface EventCarouselProps {\n  events: EventbriteEvent[];\n  isLoading: boolean;\n  loadingText: string;\n  noEventsText: string;\n}\n\nconst EVENT_TYPES = [\n  { id: 'all', label: 'All' },\n  { id: 'music', label: 'Music' },\n  { id: 'sports', label: 'Sports' },\n  { id: 'arts', label: 'Arts & Theatre' },\n  { id: 'family', label: 'Family' },\n  { id: 'comedy', label: 'Comedy' },\n  { id: 'film', label: 'Film' },\n  { id: 'food', label: 'Food & Drink' },\n  { id: 'festival', label: 'Festivals' },\n  { id: 'business', label: 'Business' },\n  { id: 'other', label: 'Other' }\n];\n\nexport function EventCarousel({ events, isLoading, loadingText, noEventsText }: EventCarouselProps) {\n  const [selectedType, setSelectedType] = useState('all');\n\n  // Calculate available event types\n  const availableEventTypes = useMemo(() => {\n    if (!Array.isArray(events) || events.length === 0) return [];\n    \n    const typeCounts = events.reduce((acc, event) => {\n      const type = event.type || 'other';\n      acc[type] = (acc[type] || 0) + 1;\n      return acc;\n    }, {} as Record<string, number>);\n\n    return EVENT_TYPES.filter(type => \n      type.id === 'all' || typeCounts[type.id] > 0\n    );\n  }, [events]);\n\n  const filteredEvents = selectedType === 'all' \n    ? events \n    : events.filter(event => event.type?.toLowerCase() === selectedType);\n\n  if (isLoading) {\n    return (\n      <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-3\">\n        {[1, 2, 3, 4].map((i) => (\n          <div key={i} className=\"animate-pulse\">\n            <div className=\"rounded-lg bg-[#f4f4f5] h-24 sm:h-32 mb-2\" />\n            <div className=\"space-y-1\">\n              <div className=\"h-3 bg-[#f4f4f5] rounded w-3/4\" />\n              <div className=\"h-2 bg-[#f4f4f5] rounded w-1/2\" />\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  if (!Array.isArray(events) || events.length === 0) {\n    return (\n      <div className=\"text-center py-6 text-[#62626a]\">\n        <p>{noEventsText}</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {availableEventTypes.length > 1 && (\n        <div className=\"relative\">\n          <div className=\"flex items-center space-x-1.5 overflow-x-auto pb-2 scrollbar-hide -mx-4 px-4\">\n            {availableEventTypes.map((type) => (\n              <button\n                key={type.id}\n                onClick={() => setSelectedType(type.id)}\n                className={cn(\n                  \"px-3 py-1.5 rounded-full text-xs sm:text-sm font-medium transition-all duration-200 whitespace-nowrap flex-shrink-0\",\n                  selectedType === type.id\n                    ? \"bg-[#61936f] text-white shadow-sm\"\n                    : \"bg-white text-[#62626a] hover:bg-gray-50 border border-gray-200\"\n                )}\n              >\n                {type.label}\n              </button>\n            ))}\n          </div>\n          {/* Scroll indicator */}\n          <div className=\"absolute right-0 top-0 bottom-0 w-8 bg-gradient-to-l from-white pointer-events-none\" />\n        </div>\n      )}\n\n      <div className=\"relative -mx-2\">\n        <Carousel\n          opts={{\n            align: \"start\",\n            loop: true,\n          }}\n          className=\"w-full\"\n        >\n          <CarouselContent className=\"-ml-2\">\n            {filteredEvents.map((event) => (\n              <CarouselItem key={event.id} className=\"pl-2 basis-1/2 sm:basis-1/3 md:basis-1/4\">\n                <a\n                  href={event.url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"block group\"\n                >\n                  <div className=\"relative rounded-lg overflow-hidden\">\n                    <div className=\"relative aspect-[16/9] sm:aspect-[4/3] overflow-hidden\">\n                      <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 to-black/10 z-10 opacity-60 group-hover:opacity-80 transition-opacity\" />\n                      <img\n                        src={event.imageUrl || '/placeholder-event.jpg'}\n                        alt={event.name}\n                        className=\"absolute inset-0 w-full h-full object-cover transform group-hover:scale-105 transition duration-500\"\n                      />\n                      \n                      <div className=\"absolute inset-0 z-20 p-1.5 sm:p-2 flex flex-col justify-between\">\n                        <div className=\"flex justify-between items-start\">\n                          <Badge className=\"bg-white/90 text-[#030303] hover:bg-white text-[10px] sm:text-xs\">\n                            {format(new Date(event.startDate), 'MMM d')}\n                          </Badge>\n                        </div>\n                        \n                        <div>\n                          <h3 className=\"text-xs sm:text-sm text-white font-medium mb-0.5 line-clamp-2 group-hover:text-[#61936f] transition-colors\">\n                            {event.name}\n                          </h3>\n                          {event.venue && (\n                            <div className=\"flex items-center text-white/80 text-[10px] sm:text-xs\">\n                              <MapPin className=\"w-2.5 h-2.5 mr-0.5 flex-shrink-0\" />\n                              <span className=\"truncate\">\n                                {event.venue.address.city}, {event.venue.address.region}\n                              </span>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </a>\n              </CarouselItem>\n            ))}\n          </CarouselContent>\n          <div className=\"hidden md:block\">\n            <CarouselPrevious className=\"absolute -left-2 top-1/2 -translate-y-1/2 h-6 w-6 rounded-full bg-white/80 border-none text-[#030303] hover:bg-white shadow-md\" />\n            <CarouselNext className=\"absolute -right-2 top-1/2 -translate-y-1/2 h-6 w-6 rounded-full bg-white/80 border-none text-[#030303] hover:bg-white shadow-md\" />\n          </div>\n        </Carousel>\n      </div>\n    </div>\n  );\n} ","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { motion } from 'framer-motion';\nimport { MapPin, Loader2, Calendar, Navigation } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport {\n  Card,\n  CardContent,\n} from '@/components/ui/card';\nimport { Slider } from '@/components/ui/slider';\nimport { supabase } from '@/integrations/supabase/client';\nimport { EventCarousel } from './EventCarousel';\nimport { getCachedLocation, setCachedLocation } from '@/lib/utils';\n\ninterface LocationData {\n  city: string;\n  region: string;\n  country: string;\n  formatted: string;\n  coordinates: {\n    latitude: number;\n    longitude: number;\n  };\n}\n\ninterface EventbriteEvent {\n  id: string;\n  name: string;\n  description: string;\n  url: string;\n  startDate: string;\n  endDate: string;\n  timezone: string;\n  imageUrl?: string;\n  venue?: {\n    name: string;\n    address: {\n      city: string;\n      region: string;\n    };\n  };\n}\n\nexport function LocationHeader() {\n  const { t } = useTranslation('community');\n  const [location, setLocation] = useState<LocationData | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [events, setEvents] = useState<EventbriteEvent[]>([]);\n  const [loadingEvents, setLoadingEvents] = useState(false);\n  const [searchRadius, setSearchRadius] = useState<number>(30);\n\n  const getLocationFromCoords = async (latitude: number, longitude: number) => {\n    try {\n      const { data, error } = await supabase.functions.invoke('geocode', {\n        body: { latitude, longitude }\n      });\n\n      if (error) {\n        throw error;\n      }\n\n      if (data) {\n        const locationData = {\n          city: data.city,\n          region: data.region,\n          country: data.country,\n          formatted: data.formatted,\n          coordinates: {\n            latitude,\n            longitude\n          }\n        };\n        \n        setLocation(locationData);\n        setCachedLocation(locationData);\n\n        // After getting location, fetch nearby events\n        fetchNearbyEvents(latitude, longitude);\n      } else {\n        throw new Error('Location not found');\n      }\n    } catch (err) {\n      console.error('Error fetching location details:', err);\n      setError(t('locationError'));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchNearbyEvents = async (latitude: number, longitude: number) => {\n    setLoadingEvents(true);\n    try {\n      const { data, error } = await supabase.functions.invoke('eventbrite-events', {\n        body: { latitude, longitude, radius: searchRadius }\n      });\n\n      if (error) throw error;\n      setEvents(data.events);\n    } catch (err) {\n      console.error('Error fetching events:', err);\n    } finally {\n      setLoadingEvents(false);\n    }\n  };\n\n  const detectLocation = () => {\n    setLoading(true);\n    setError(null);\n    setEvents([]);\n    \n    // Check for cached location first\n    const cachedLocation = getCachedLocation();\n    if (cachedLocation) {\n      setLocation(cachedLocation.data);\n      fetchNearbyEvents(\n        cachedLocation.data.coordinates.latitude,\n        cachedLocation.data.coordinates.longitude\n      );\n      setLoading(false);\n      return;\n    }\n    \n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          getLocationFromCoords(position.coords.latitude, position.coords.longitude);\n        },\n        (err) => {\n          console.error('Geolocation error:', err);\n          setError(t('locationPermissionError'));\n          setLoading(false);\n        },\n        {\n          enableHighAccuracy: true,\n          timeout: 5000,\n          maximumAge: 0\n        }\n      );\n    } else {\n      setError(t('locationNotSupported'));\n      setLoading(false);\n    }\n  };\n\n  // Add effect to refetch events when radius changes\n  useEffect(() => {\n    if (location?.coordinates) {\n      fetchNearbyEvents(location.coordinates.latitude, location.coordinates.longitude);\n    }\n  }, [searchRadius]);\n\n  // Initial location detection\n  useEffect(() => {\n    detectLocation();\n  }, []);\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: -20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n      className=\"w-full space-y-6\"\n    >\n      {/* Mobile Layout */}\n      <div className=\"flex flex-col space-y-4 sm:hidden\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            {loading ? (\n              <div className=\"flex items-center space-x-2 text-[#030303]\">\n                <Loader2 className=\"h-5 w-5 animate-spin\" />\n                <span className=\"text-sm\">{t('detectingLocation')}</span>\n              </div>\n            ) : error ? (\n              <div className=\"flex items-center space-x-2\">\n                <p className=\"text-red-500 text-sm\">{error}</p>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={detectLocation}\n                  className=\"text-[#62626a] hover:text-[#030303]\"\n                >\n                  <MapPin className=\"h-4 w-4 mr-1\" />\n                  {t('retryLocation')}\n                </Button>\n              </div>\n            ) : location ? (\n              <div className=\"flex items-center space-x-2\">\n                <MapPin className=\"h-5 w-5 text-[#61936f]\" />\n                <div>\n                  <h2 className=\"text-[#030303] font-medium leading-snug\">\n                    {t('yourLocation')}\n                  </h2>\n                  <p className=\"text-sm text-[#62626a] truncate max-w-[200px]\">\n                    {location.formatted}\n                  </p>\n                </div>\n              </div>\n            ) : null}\n\n            {location && (\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={detectLocation}\n                className=\"text-[#62626a] hover:text-[#030303] ml-auto\"\n              >\n                {t('updateLocation')}\n              </Button>\n            )}\n          </div>\n        </div>\n\n        {location && (\n          <div className=\"flex items-center space-x-3 px-1\">\n            <Navigation className=\"h-4 w-4 text-[#62626a]\" />\n            <div className=\"flex-1 w-24\">\n              <Slider\n                value={[searchRadius]}\n                onValueChange={(value) => setSearchRadius(value[0])}\n                min={1}\n                max={50}\n                step={1}\n                className=\"[&_.bg-primary]:bg-[#61936f]\"\n              />\n            </div>\n            <span className=\"text-sm font-medium text-[#62626a] min-w-[3ch]\">\n              {searchRadius}\n              <span className=\"text-[#62626a]/60 ml-0.5\">km</span>\n            </span>\n          </div>\n        )}\n      </div>\n\n      {/* Desktop Layout */}\n      <div className=\"hidden sm:flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          {loading ? (\n            <div className=\"flex items-center space-x-2 text-[#030303]\">\n              <Loader2 className=\"h-5 w-5 animate-spin\" />\n              <span className=\"text-sm\">{t('detectingLocation')}</span>\n            </div>\n          ) : error ? (\n            <div className=\"flex items-center space-x-2\">\n              <p className=\"text-red-500 text-sm\">{error}</p>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={detectLocation}\n                className=\"text-[#62626a] hover:text-[#030303]\"\n              >\n                <MapPin className=\"h-4 w-4 mr-1\" />\n                {t('retryLocation')}\n              </Button>\n            </div>\n          ) : location ? (\n            <>\n              <MapPin className=\"h-5 w-5 text-[#61936f]\" />\n              <div>\n                <h2 className=\"text-[#030303] font-medium\">\n                  {t('yourLocation')}\n                </h2>\n                <p className=\"text-sm text-[#62626a]\">{location.formatted}</p>\n              </div>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={detectLocation}\n                className=\"text-[#62626a] hover:text-[#030303] ml-2\"\n              >\n                {t('updateLocation')}\n              </Button>\n            </>\n          ) : null}\n        </div>\n\n        {location && (\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center space-x-2 text-[#62626a]\">\n              <Navigation className=\"h-4 w-4\" />\n              <span className=\"text-sm font-medium\">{searchRadius}km</span>\n            </div>\n            <div className=\"w-24\">\n              <Slider\n                value={[searchRadius]}\n                onValueChange={(value) => setSearchRadius(value[0])}\n                min={1}\n                max={50}\n                step={1}\n                className=\"[&_.bg-primary]:bg-[#61936f]\"\n              />\n            </div>\n          </div>\n        )}\n      </div>\n\n      {location && (\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center space-x-2\">\n            <Calendar className=\"h-5 w-5 text-[#61936f]\" />\n            <h2 className=\"text-lg font-medium text-[#030303]\">\n              {t('nearbyEvents')}\n            </h2>\n          </div>\n          \n          <EventCarousel\n            events={events}\n            isLoading={loadingEvents}\n            loadingText={t('loadingEvents')}\n            noEventsText={t('noEventsFound')}\n          />\n        </div>\n      )}\n    </motion.div>\n  );\n} ","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { MapPin, Loader2, X, Search, Navigation } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { supabase } from '@/integrations/supabase/client';\nimport { cn } from '@/lib/utils';\nimport { useToast } from '@/hooks/use-toast';\n\ninterface PlaceSuggestion {\n  place_id: string;\n  description: string;\n  structured_formatting: {\n    main_text: string;\n    secondary_text: string;\n  };\n  types: string[];\n}\n\ninterface PlaceDetails {\n  place_id: string;\n  name: string;\n  formatted_address: string;\n  geometry: {\n    location: {\n      lat: number;\n      lng: number;\n    };\n  };\n  types: string[];\n  rating?: number;\n  user_ratings_total?: number;\n  opening_hours?: {\n    open_now: boolean;\n  };\n}\n\ninterface GooglePlacesSearchProps {\n  value: string;\n  onChange: (location: string, placeDetails?: PlaceDetails) => void;\n  placeholder?: string;\n  className?: string;\n  disabled?: boolean;\n  currentLocation?: {\n    lat: number;\n    lng: number;\n  };\n}\n\nexport const GooglePlacesSearch: React.FC<GooglePlacesSearchProps> = ({\n  value,\n  onChange,\n  placeholder,\n  className,\n  disabled = false,\n  currentLocation\n}) => {\n  const { t, i18n } = useTranslation('community');\n  const { toast } = useToast();\n  const [suggestions, setSuggestions] = useState<PlaceSuggestion[]>([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isGettingLocation, setIsGettingLocation] = useState(false);\n  const [selectedPlace, setSelectedPlace] = useState<PlaceDetails | null>(null);\n  const [inputValue, setInputValue] = useState(value);\n  const [userLocation, setUserLocation] = useState<{lat: number, lng: number} | null>(currentLocation || null);\n  const searchTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  // Update input value when prop changes\n  useEffect(() => {\n    setInputValue(value);\n  }, [value]);\n\n  // Update user location when currentLocation prop changes\n  useEffect(() => {\n    if (currentLocation) {\n      setUserLocation(currentLocation);\n    }\n  }, [currentLocation]);\n\n  // Close suggestions when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (containerRef.current && !containerRef.current.contains(event.target as Node)) {\n        setShowSuggestions(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const getCurrentLocation = async () => {\n    if (!navigator.geolocation) {\n      toast({\n        title: 'Location Not Supported',\n        description: 'Geolocation is not supported by your browser.',\n        variant: 'destructive',\n      });\n      return null;\n    }\n\n    setIsGettingLocation(true);\n    \n    try {\n      const position = await new Promise<GeolocationPosition>((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 60000\n        });\n      });\n\n      const location = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      };\n\n      setUserLocation(location);\n      return location;\n    } catch (error) {\n      console.error('Error getting location:', error);\n      toast({\n        title: 'Location Error',\n        description: 'Unable to get your current location. Please check your location permissions.',\n        variant: 'destructive',\n      });\n      return null;\n    } finally {\n      setIsGettingLocation(false);\n    }\n  };\n\n  const searchNearbyPlaces = async () => {\n    const location = await getCurrentLocation();\n    if (!location) return;\n\n    setIsLoading(true);\n    try {\n      const { data, error } = await supabase.functions.invoke('google-places-search', {\n        body: {\n          action: 'search',\n          query: 'nearby places',\n          location: location,\n          radius: 5000, // 5km radius\n          types: 'point_of_interest,tourist_attraction,restaurant,store,lodging',\n          language: i18n.language\n        }\n      });\n\n      if (error) {\n        console.error('Error searching nearby places:', error);\n        toast({\n          title: 'Search Error',\n          description: 'Unable to find nearby places.',\n          variant: 'destructive',\n        });\n        return;\n      }\n\n      if (data.status === 'OK' && data.results) {\n        // Convert search results to suggestion format\n        const nearbySuggestions: PlaceSuggestion[] = data.results.slice(0, 8).map((place: any) => ({\n          place_id: place.place_id,\n          description: place.name,\n          structured_formatting: {\n            main_text: place.name,\n            secondary_text: place.formatted_address || place.vicinity || ''\n          },\n          types: place.types || []\n        }));\n\n        setSuggestions(nearbySuggestions);\n        setShowSuggestions(true);\n        \n\n      } else {\n        setSuggestions([]);\n        setShowSuggestions(false);\n        toast({\n          title: 'No Places Found',\n          description: 'No places found near your current location.',\n          variant: 'destructive',\n        });\n      }\n    } catch (error) {\n      console.error('Error searching nearby places:', error);\n      toast({\n        title: 'Search Error',\n        description: 'Unable to search for nearby places.',\n        variant: 'destructive',\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const searchPlaces = useCallback(async (query: string) => {\n    if (!query.trim() || query.length < 2) {\n      setSuggestions([]);\n      setShowSuggestions(false);\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const { data, error } = await supabase.functions.invoke('google-places-search', {\n        body: {\n          action: 'autocomplete',\n          query: query.trim(),\n          location: userLocation,\n          radius: 50000, // 50km radius\n          language: i18n.language\n        }\n      });\n\n      if (error) {\n        console.error('Error searching places:', error);\n        return;\n      }\n\n      if (data.status === 'OK' && data.predictions) {\n        setSuggestions(data.predictions);\n        setShowSuggestions(true);\n      } else {\n        setSuggestions([]);\n        setShowSuggestions(false);\n      }\n    } catch (error) {\n      console.error('Error searching places:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [userLocation, i18n.language]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = e.target.value;\n    setInputValue(newValue);\n    onChange(newValue);\n\n    // Clear previous timeout\n    if (searchTimeoutRef.current) {\n      clearTimeout(searchTimeoutRef.current);\n    }\n\n    // Debounce search\n    searchTimeoutRef.current = setTimeout(() => {\n      searchPlaces(newValue);\n    }, 300);\n  };\n\n  const handleSuggestionClick = async (suggestion: PlaceSuggestion) => {\n    setIsLoading(true);\n    try {\n      // Get place details\n      const { data, error } = await supabase.functions.invoke('google-places-search', {\n        body: {\n          action: 'details',\n          placeId: suggestion.place_id,\n          fields: 'place_id,name,formatted_address,geometry,types,rating,user_ratings_total,opening_hours',\n          language: i18n.language\n        }\n      });\n\n      if (error) {\n        console.error('Error getting place details:', error);\n        return;\n      }\n\n      if (data.status === 'OK' && data.result) {\n        const placeDetails = data.result as PlaceDetails;\n        setSelectedPlace(placeDetails);\n        setInputValue(placeDetails.name);\n        onChange(placeDetails.name, placeDetails);\n      }\n    } catch (error) {\n      console.error('Error getting place details:', error);\n    } finally {\n      setIsLoading(false);\n      setShowSuggestions(false);\n    }\n  };\n\n  const handleClear = () => {\n    setInputValue('');\n    setSelectedPlace(null);\n    setSuggestions([]);\n    setShowSuggestions(false);\n    onChange('');\n  };\n\n  const getPlaceIcon = (types: string[]) => {\n    if (types.includes('restaurant') || types.includes('food')) {\n      return '🍽️';\n    } else if (types.includes('tourist_attraction') || types.includes('point_of_interest')) {\n      return '🏛️';\n    } else if (types.includes('lodging') || types.includes('hotel')) {\n      return '🏨';\n    } else if (types.includes('shopping_mall') || types.includes('store')) {\n      return '🛍️';\n    } else if (types.includes('park') || types.includes('natural_feature')) {\n      return '🌳';\n    } else if (types.includes('museum')) {\n      return '🏛️';\n    } else if (types.includes('amusement_park') || types.includes('entertainment')) {\n      return '🎡';\n    } else {\n      return '📍';\n    }\n  };\n\n  return (\n    <div ref={containerRef} className={cn('relative', className)}>\n      <div className=\"relative\">\n        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n          <MapPin className=\"h-4 w-4 text-[#62626a]\" />\n        </div>\n        <Input\n          ref={inputRef}\n          type=\"text\"\n          value={inputValue}\n          onChange={handleInputChange}\n          placeholder={placeholder || t('searchLocation')}\n          disabled={disabled}\n          className=\"pl-10 pr-20\"\n          onFocus={() => {\n            if (suggestions.length > 0) {\n              setShowSuggestions(true);\n            }\n          }}\n        />\n        <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 space-x-1\">\n          {/* Location Button */}\n          <Button\n            type=\"button\"\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={searchNearbyPlaces}\n            disabled={isGettingLocation || disabled}\n            className=\"h-8 w-8 p-0 text-[#62626a] hover:text-[#030303] hover:bg-gray-100\"\n            title=\"Find nearby places\"\n          >\n            {isGettingLocation ? (\n              <Loader2 className=\"h-4 w-4 animate-spin\" />\n            ) : (\n              <Navigation className=\"h-4 w-4\" />\n            )}\n          </Button>\n          \n          {/* Clear/Search Button */}\n          {isLoading ? (\n            <Loader2 className=\"h-4 w-4 animate-spin text-[#62626a]\" />\n          ) : inputValue ? (\n            <Button\n              type=\"button\"\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={handleClear}\n              className=\"h-6 w-6 p-0 text-[#62626a] hover:text-[#030303]\"\n            >\n              <X className=\"h-4 w-4\" />\n            </Button>\n          ) : (\n            <Search className=\"h-4 w-4 text-[#62626a]\" />\n          )}\n        </div>\n      </div>\n\n      {/* Suggestions Dropdown */}\n      {showSuggestions && suggestions.length > 0 && (\n        <div \n          className=\"absolute z-50 w-full mt-1 bg-white border border-gray-200 rounded-lg shadow-lg overflow-y-auto max-h-60\"\n          style={{ \n            maxHeight: '240px',\n            minHeight: '48px'\n          }}\n        >\n          {suggestions.map((suggestion, index) => (\n            <button\n              key={suggestion.place_id}\n              type=\"button\"\n              onClick={() => handleSuggestionClick(suggestion)}\n              className={cn(\n                'w-full px-4 py-3 text-left hover:bg-gray-50 focus:bg-gray-50 focus:outline-none transition-colors',\n                'active:bg-gray-100 touch-manipulation min-h-[48px]', // Mobile touch improvements\n                index === 0 ? 'rounded-t-lg' : '',\n                index === suggestions.length - 1 ? 'rounded-b-lg' : ''\n              )}\n            >\n              <div className=\"flex items-start space-x-3\">\n                <span className=\"text-lg flex-shrink-0\">\n                  {getPlaceIcon(suggestion.types)}\n                </span>\n                <div className=\"flex-1 min-w-0\">\n                  <div className=\"font-medium text-[#030303] break-words\">\n                    {suggestion.structured_formatting.main_text}\n                  </div>\n                  <div className=\"text-sm text-[#62626a] break-words\">\n                    {suggestion.structured_formatting.secondary_text}\n                  </div>\n                </div>\n              </div>\n            </button>\n          ))}\n        </div>\n      )}\n\n      {/* Selected Place Details */}\n      {selectedPlace && (\n        <div className=\"mt-2 p-3 bg-[#fcfcfc] border border-[#62626a]/20 rounded-lg\">\n          <div className=\"flex items-start space-x-3\">\n            <div className=\"flex-shrink-0\">\n              <span className=\"text-lg\">{getPlaceIcon(selectedPlace.types)}</span>\n            </div>\n            <div className=\"flex-1 min-w-0\">\n              <div className=\"font-medium text-[#030303]\">{selectedPlace.name}</div>\n              <div className=\"text-sm text-[#62626a]\">{selectedPlace.formatted_address}</div>\n              {selectedPlace.rating && (\n                <div className=\"flex items-center space-x-2 mt-1\">\n                  <div className=\"flex items-center\">\n                    <span className=\"text-yellow-500\">★</span>\n                    <span className=\"text-sm text-[#62626a] ml-1\">\n                      {selectedPlace.rating.toFixed(1)}\n                    </span>\n                  </div>\n                  {selectedPlace.user_ratings_total && (\n                    <span className=\"text-xs text-[#62626a]\">\n                      ({selectedPlace.user_ratings_total} reviews)\n                    </span>\n                  )}\n                </div>\n              )}\n              {selectedPlace.opening_hours && (\n                <div className=\"mt-1\">\n                  <span className={cn(\n                    'text-xs px-2 py-1 rounded-full',\n                    selectedPlace.opening_hours.open_now\n                      ? 'bg-green-100 text-green-800'\n                      : 'bg-red-100 text-red-800'\n                  )}>\n                    {selectedPlace.opening_hours.open_now ? t('openNow') : t('closed')}\n                  </span>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}; ","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from '@/components/ui/button';\nimport { Lock, UserPlus, LogIn } from 'lucide-react';\nimport { motion } from 'framer-motion';\nimport { cn } from '@/lib/utils';\n\ninterface PostBlurOverlayProps {\n  onConnectClick: () => void;\n  onSignupClick: () => void;\n  className?: string;\n}\n\nexport function PostBlurOverlay({ onConnectClick, onSignupClick, className }: PostBlurOverlayProps) {\n  const { t } = useTranslation('community');\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      className={cn(\n        \"absolute inset-0 bg-white/80 backdrop-blur-md rounded-xl z-10\",\n        \"flex flex-col items-center justify-center p-2 sm:p-6\",\n        \"border border-gray-200/50\",\n        className\n      )}\n    >\n      {/* Blur effect overlay */}\n      <div className=\"absolute inset-0 bg-gradient-to-br from-white/60 to-white/40 rounded-xl\" />\n      \n      {/* Content */}\n      <div className=\"relative z-20 text-center space-y-2 sm:space-y-4\">\n        {/* Icon */}\n        <motion.div\n          initial={{ scale: 0.8, opacity: 0 }}\n          animate={{ scale: 1, opacity: 1 }}\n          transition={{ delay: 0.1 }}\n          className=\"mx-auto w-10 h-10 sm:w-16 sm:h-16 bg-gradient-to-br from-[#61936f] to-[#4a7c59] rounded-full flex items-center justify-center shadow-lg\"\n        >\n          <Lock className=\"w-5 h-5 sm:w-8 sm:h-8 text-white\" />\n        </motion.div>\n\n        {/* Title */}\n        <motion.h3\n          initial={{ y: 20, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          transition={{ delay: 0.2 }}\n          className=\"text-base sm:text-xl font-bold text-gray-800\"\n        >\n          {t('postBlur.title', 'Connect to Create Posts')}\n        </motion.h3>\n\n        {/* Description */}\n        <motion.p\n          initial={{ y: 20, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          transition={{ delay: 0.3 }}\n          className=\"text-xs sm:text-base text-gray-600 max-w-[200px] sm:max-w-sm mx-auto px-1 sm:px-2\"\n        >\n          {t('postBlur.description', 'Join our community to share your travel stories, connect with fellow travelers, and create amazing posts.')}\n        </motion.p>\n\n        {/* Buttons */}\n        <motion.div\n          initial={{ y: 20, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          transition={{ delay: 0.4 }}\n          className=\"flex flex-col sm:flex-row gap-1.5 sm:gap-3 w-full max-w-[180px] sm:max-w-xs mx-auto\"\n        >\n          <Button\n            onClick={onConnectClick}\n            size=\"sm\"\n            className=\"flex-1 bg-gradient-to-r from-[#61936f] to-[#4a7c59] hover:from-[#4a7c59] hover:to-[#3d6b4a] text-white font-medium shadow-lg hover:shadow-xl transition-all duration-300 text-xs sm:text-base py-1.5 sm:py-2\"\n          >\n            <LogIn className=\"w-3 h-3 sm:w-4 sm:h-4 mr-1.5 sm:mr-2\" />\n            {t('postBlur.connect', 'Connect')}\n          </Button>\n          \n          <Button\n            onClick={onSignupClick}\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"flex-1 border-[#61936f] text-[#61936f] hover:bg-[#61936f] hover:text-white font-medium shadow-lg hover:shadow-xl transition-all duration-300 text-xs sm:text-base py-1.5 sm:py-2\"\n          >\n            <UserPlus className=\"w-3 h-3 sm:w-4 sm:h-4 mr-1.5 sm:mr-2\" />\n            {t('postBlur.signup', 'Sign Up')}\n          </Button>\n        </motion.div>\n      </div>\n    </motion.div>\n  );\n}\n"],"names":["MediaUpload","onMediaChange","maxFiles","className","disabled","t","useTranslation","mediaFiles","setMediaFiles","useState","playingVideo","setPlayingVideo","fileInputRef","useRef","renderMediaPreview","media","index","isPlaying","id","jsxs","cn","length","children","type","jsx","src","preview","alt","muted","loop","playsInline","ref","el","play","catch","pause","Button","variant","size","onClick","toggleVideoPlayback","Pause","Play","updatedMedia","filter","removeMedia","X","current","click","ImageIcon","multiple","accept","onChange","event","files","Array","from","target","alert","max","newMediaFiles","forEach","file","isImage","startsWith","isVideo","filename","name","maxSize","Math","random","toString","substr","URL","createObjectURL","push","count","map","Plus","MediaDisplay","maxPreview","selectedIndex","setSelectedIndex","orientationById","setOrientationById","videoRefs","touchStartXRef","touchStartYRef","isSwipingRef","allMedia","isArray","trim","url","closeGallery","navigateGallery","direction","newIndex","mediaId","getItemLayoutClass","item","orientation","classes","join","renderMediaItem","min","handleMediaClick","poster","thumbnail","onPlay","onPause","onLoad","e","img","currentTarget","naturalWidth","naturalHeight","ratio","prev","stopPropagation","displayMedia","slice","Fragment","Dialog","open","onOpenChange","DialogContent","onTouchStart","touch","touches","clientX","clientY","onTouchMove","deltaX","deltaY","abs","preventDefault","onTouchEnd","changedTouches","style","touchAction","ChevronLeft","ChevronRight","controls","autoPlay","draggable","link","document","createElement","href","download","Download","window","Maximize2","renderGalleryItem","LocationDisplay","location","placeId","placeLat","placeLng","placeTypes","placeRating","placeUserRatingsTotal","place","navigate","useNavigate","getPlaceTypeLabel","types","typeLabels","restaurant","food","tourist_attraction","point_of_interest","lodging","hotel","shopping_mall","store","park","natural_feature","museum","amusement_park","entertainment","hasPlaceDetails","hasNewPlaceData","place_id","handlePlaceClick","placeUrl","createPlaceUrl","state","lat","geometry","lng","rating","userRatingsTotal","user_ratings_total","MapPin","Star","toFixed","includes","title","Eye","EVENT_TYPES","label","EventCarousel","events","isLoading","loadingText","noEventsText","selectedType","setSelectedType","availableEventTypes","useMemo","typeCounts","reduce","acc","filteredEvents","toLowerCase","i","Carousel","opts","align","CarouselContent","CarouselItem","rel","imageUrl","Badge","format","Date","startDate","venue","address","city","region","CarouselPrevious","CarouselNext","LocationHeader","setLocation","loading","setLoading","error","setError","setEvents","loadingEvents","setLoadingEvents","searchRadius","setSearchRadius","fetchNearbyEvents","async","latitude","longitude","data","supabase","functions","invoke","body","radius","err","detectLocation","cachedLocation","getCachedLocation","coordinates","navigator","geolocation","getCurrentPosition","position","Error","locationData","country","formatted","setCachedLocation","getLocationFromCoords","coords","enableHighAccuracy","timeout","maximumAge","useEffect","motion","div","initial","opacity","y","animate","transition","duration","Loader2","Navigation","Slider","value","onValueChange","step","Calendar","GooglePlacesSearch","placeholder","currentLocation","i18n","toast","useToast","suggestions","setSuggestions","showSuggestions","setShowSuggestions","setIsLoading","isGettingLocation","setIsGettingLocation","selectedPlace","setSelectedPlace","inputValue","setInputValue","userLocation","setUserLocation","searchTimeoutRef","containerRef","inputRef","handleClickOutside","contains","addEventListener","removeEventListener","searchPlaces","useCallback","query","action","language","status","predictions","getPlaceIcon","Input","newValue","clearTimeout","setTimeout","onFocus","description","Promise","resolve","reject","getCurrentLocation","results","nearbySuggestions","structured_formatting","main_text","secondary_text","formatted_address","vicinity","Search","maxHeight","minHeight","suggestion","fields","result","placeDetails","handleSuggestionClick","opening_hours","open_now","PostBlurOverlay","onConnectClick","onSignupClick","exit","scale","delay","Lock","h3","p","LogIn","UserPlus"],"mappings":"k2BAcO,MAAMA,EAA0C,EACrDC,gBACAC,WAAW,GACXC,YACAC,YAAW,MAEX,MAAMC,EAAEA,GAAMC,EAAe,cACtBC,EAAYC,GAAiBC,EAAAA,SAAsB,KACnDC,EAAcC,GAAmBF,EAAAA,SAAwB,MAC1DG,EAAeC,SAAyB,MAoExCC,EAAqB,CAACC,EAAkBC,KACtC,MAAAC,EAAYP,IAAiBK,EAAMG,GAGvC,OAAAC,EAAAA,KAAC,MAAA,CAEChB,UAAWiB,EACT,wDACsB,IAAtBb,EAAWc,OAAe,eAAiB,gBACrB,IAAtBd,EAAWc,OAAe,eAAiB,GACrB,IAAtBd,EAAWc,QAA0B,IAAVL,EAAc,qCAAuC,GAC1D,IAAtBT,EAAWc,OAAe,gBAAkB,GAC5Cd,EAAWc,OAAS,GAAe,IAAVL,EAAc,qCAAuC,IAG/EM,SAAA,CAAe,UAAfP,EAAMQ,KACLC,EAAAA,IAAC,MAAA,CACCC,IAAKV,EAAMW,QACXC,IAAI,UACJxB,UAAU,+BAGZqB,EAAAA,IAAC,QAAA,CACCC,IAAKV,EAAMW,QACXvB,UAAU,6BACVyB,OAAK,EACLC,MAAI,EACJC,aAAW,EACXC,IAAMC,IACAA,IACEf,EACCe,EAAAC,OAAOC,OAAM,SAEhBF,EAAGG,QACL,UAOP,MAAI,CAAAhC,UAAU,gIACZmB,SAAe,UAAfP,EAAMQ,MACLC,EAAAA,IAACY,EAAA,CACCC,QAAQ,QACRC,KAAK,KACLnC,UAAU,6GACVoC,QAAS,KAAMC,OA3DEtB,EA2DkBH,EAAMG,QA1DnCP,EAAAD,IAAiBQ,EAAK,KAAOA,GADnB,IAACA,CA2D0B,EAE1CI,SAAAL,QACEwB,EAAM,CAAAtC,UAAU,YAEjBqB,EAAAA,IAACkB,EAAK,CAAAvC,UAAU,gBAOxBqB,EAAAA,IAACY,EAAA,CACCC,QAAQ,QACRC,KAAK,KACLnC,UAAU,8IACVoC,QAAS,IAtFG,CAACrB,IACnB,MAAMyB,EAAepC,EAAWqC,QAAgB7B,GAAAA,EAAMG,KAAOA,IAC7DV,EAAcmC,GACd1C,EAAc0C,GAGVjC,IAAiBQ,GACnBP,EAAgB,KAAI,EA+EDkC,CAAY9B,EAAMG,IAEjCI,SAAAE,EAAAA,IAACsB,EAAE,CAAA3C,UAAU,cAIdqB,EAAAA,IAAA,MAAA,CAAIrB,UAAU,4EACZmB,SAAe,UAATP,EAAAQ,KAAmBlB,EAAE,eAAiBA,EAAE,mBAjE5CU,EAAMG,GAmEb,EAIJ,cACG,MAAI,CAAAf,UAAWiB,EAAG,YAAajB,GAE7BmB,SAAA,CAAAf,EAAWc,OAASnB,GACnBiB,EAAAA,KAACiB,EAAA,CACCb,KAAK,SACLc,QAAQ,UACRlC,UAAU,0BACVC,WACAmC,QAAS,IAAM3B,EAAamC,SAASC,QAErC1B,SAAA,CAACE,EAAAA,IAAAyB,EAAA,CAAU9C,UAAU,kBACpB,OAAK,CAAAA,UAAU,mBAAoBmB,SAAAjB,EAAE,8BAK1CmB,EAAAA,IAAC,QAAA,CACCO,IAAKnB,EACLW,KAAK,OACL2B,UAAQ,EACRC,OAAO,kBACPhD,UAAU,SACViD,SArKoBC,IACxB,MAAMC,EAAQC,MAAMC,KAAKH,EAAMI,OAAOH,OAAS,IAE/C,GAAI/C,EAAWc,OAASiC,EAAMjC,OAASnB,EAErC,YADAwD,MAAMrD,EAAE,yBAA0B,CAAEsD,IAAKzD,KAI3C,MAAM0D,EAA6B,GAE7BN,EAAAO,SAASC,IAEb,MAAMC,EAAUD,EAAKvC,KAAKyC,WAAW,UAC/BC,EAAUH,EAAKvC,KAAKyC,WAAW,UAEjC,IAACD,IAAYE,EAEf,YADAP,MAAMrD,EAAE,wBAAyB,CAAE6D,SAAUJ,EAAKK,QAKpD,MAAMC,EAAUH,EAAU,SAAmB,SACzC,GAAAH,EAAKxB,KAAO8B,EAEd,YADMV,MAAArD,EAAE4D,EAAU,0BAA4B,0BAA2B,CAAEC,SAAUJ,EAAKK,QAItF,MAAAjD,EAAKmD,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,GAC1C9C,EAAU+C,IAAIC,gBAAgBZ,GAEpCF,EAAce,KAAK,CACjBzD,KACA4C,OACApC,UACAH,KAAMwC,EAAU,QAAU,SAC3B,IAGH,MAAMpB,EAAe,IAAIpC,KAAeqD,GACxCpD,EAAcmC,GACd1C,EAAc0C,EAAY,EA8HtBvC,aAIDG,EAAWc,OAAS,GACnBF,EAAAA,KAAC,OAAIhB,UAAWiB,EACd,cAlHgBwD,EAmHDrE,EAAWc,OAlHlB,IAAVuD,EAAoB,cACV,IAAVA,EAAoB,cACV,IAAVA,EAAoB,cACV,IAAVA,EAAoB,0BACjB,4BAgHAtD,SAAA,CAAAf,EAAWsE,KAAI,CAAC9D,EAAOC,IAAUF,EAAmBC,EAAOC,KAG3DT,EAAWc,OAAS,GACnBG,EAAAA,IAAC,OAAIrB,UAAU,iFACbmB,SAACE,EAAAA,IAAA,MAAA,CAAIrB,UAAU,2EACbmB,SAACH,EAAAA,KAAA,MAAA,CAAIhB,UAAU,yBACbmB,SAAA,CAACE,EAAAA,IAAAsD,EAAA,CAAK3E,UAAU,yBACfqB,EAAAA,IAAA,IAAA,CAAErB,UAAU,sBACVmB,SAAEjB,EAAA,kBAAmB,CAAEuE,MAAOrE,EAAWc,OAAS,gBAUhEd,EAAWc,OAAS,GAClBG,EAAAA,IAAA,IAAA,CAAErB,UAAU,wBACVmB,SAAAjB,EAAE,sBAAuB,CAAEuE,MAAOrE,EAAWc,OAAQsC,IAAKzD,SA1I5C,IAAC0E,CA6ItB,ECnNSG,EAA4C,EACvDhE,QACAZ,YACA6E,aAAa,MAEb,MAAOC,EAAeC,GAAoBzE,EAAAA,SAAwB,OAC3DC,EAAcC,GAAmBF,EAAAA,SAAwB,OACzD0E,EAAiBC,GAAsB3E,EAAAA,SAA8D,CAAA,GACtG4E,EAAYxE,EAAmDA,OAAA,IAE/DyE,EAAiBzE,SAAsB,MACvC0E,EAAiB1E,SAAsB,MACvC2E,EAAe3E,UAAgB,GAGrC,IAAI4E,EAAwB,GAU5B,GARIlC,MAAMmC,QAAQ3E,GAEL0E,EAAA1E,EACe,iBAAVA,GAAuC,KAAjBA,EAAM4E,SAEjCF,EAAA,CAAC,CAAEvE,GAAI,eAAgB0E,IAAK7E,EAAOQ,KAAM,YAGjDkE,GAAgC,IAApBA,EAASpE,OAAqB,OAAA,KAEzC,MAMAwE,EAAe,KACnBX,EAAiB,MACjBvE,EAAgB,KAAI,EAGhBmF,EAAmBC,IACvB,GAAsB,OAAlBd,EAAwB,OAEtB,MAAAe,EAAyB,SAAdD,GACZd,EAAgB,EAAIQ,EAASpE,QAAUoE,EAASpE,QAChD4D,EAAgB,GAAKQ,EAASpE,OAEnC6D,EAAiBc,GACjBrF,EAAgB,KAAI,EAqChB6B,EAAuByD,IACXtF,EAAAD,IAAiBuF,EAAU,KAAOA,EAAO,EAWrDC,EAAqB,CAAClF,EAAe4D,EAAeuB,KAClD,MAAAC,EAAcjB,EAAgBgB,EAAKjF,MAAsB,UAAdiF,EAAK5E,KAAmB,iBAAc,GAGvF,IAAI8E,EAAU,CACZ,WACA,QACA,kBACA,aACA,cACA,iBACA,SACA,UA6BK,OAzBO,IAAVzB,EACFyB,EAAQ1B,KAAqB,aAAhByB,EAA6B,eAAiC,WAAhBA,EAA2B,gBAAkB,gBACrF,IAAVxB,EAETyB,EAAQ1B,KAAqB,aAAhByB,EAA6B,eAAiB,gBACxC,IAAVxB,EAEK,IAAV5D,GACFqF,EAAQ1B,KAAK,cACb0B,EAAQ1B,KAAqB,aAAhByB,EAA6B,eAAiB,iBAE3DC,EAAQ1B,KAAK,iBAEI,IAAVC,EACTyB,EAAQ1B,KAAK,iBAGC,IAAV3D,GACMqF,EAAA1B,KAAK,aAAc,cAC3B0B,EAAQ1B,KAAqB,aAAhByB,EAA6B,eAAiB,iBAE3DC,EAAQ1B,KAAK,iBAIV0B,EAAQC,KAAK,IAAG,EAYnBC,EAAkB,CAACJ,EAAiBnF,KAClC,MAAAC,EAAYP,IAAiByF,EAAKjF,GAClC+C,EAAwB,UAAdkC,EAAK5E,KAGnB,OAAAJ,EAAAA,KAAC,MAAA,CAEChB,UAAW+F,EAAmBlF,EAAOqD,KAAKmC,IAAIf,EAASpE,OAAQ2D,GAAamB,GAC5E5D,QAAS,IAjIU,CAACvB,IACxBkE,EAAiBlE,GAEjBL,EAAgB,KAAI,EA8HD8F,CAAiBzF,GAE/BM,SAAA,CACC2C,EAAAzC,EAAAA,IAAC,QAAA,CACCO,IAAMC,IACMqD,EAAAtC,QAAQoD,EAAKjF,IAAMc,CAAA,EAE/BP,IAAK0E,EAAKP,IACVc,OAAQP,EAAKQ,UACbxG,UAAU,6BACVyB,OAAK,EACLC,MAAI,EACJC,aAAW,EACX8E,OAAQ,IAAMjG,EAAgBwF,EAAKjF,IACnC2F,QAAS,IAAMlG,EAAgB,QAGjCa,EAAAA,IAAC,MAAA,CACCC,IAAK0E,EAAKP,IACVjE,IAAI,gBACJxB,UAAU,6BACV2G,QAtCe5F,EAsCSiF,EAAKjF,GAtCE6F,IACvC,MAAMC,EAAMD,EAAEE,eACRC,aAAEA,EAAcC,cAAAA,GAAkBH,EACpC,IAACE,IAAiBC,EAAe,OACrC,MAAMC,EAAQF,EAAeC,EACvBf,EAA6D,IAAVgB,EAAc,SAAWA,EAAQ,EAAI,YAAc,WAC5GhC,GAAoBiC,GAAUA,EAAKnG,GAAMmG,EAAO,IAAKA,EAAMnG,CAACA,GAAKkF,IAAc,KAqC1E5E,EAAAA,IAAA,MAAA,CAAIrB,UAAU,gIACZmB,SACC2C,GAAAzC,EAAAA,IAACY,EAAA,CACCC,QAAQ,QACRC,KAAK,KACLnC,UAAU,6GACVoC,QAAUwE,IACRA,EAAEO,kBACF9E,EAAoB2D,EAAKjF,GAAE,EAG5BI,SAAAL,QACEwB,EAAM,CAAAtC,UAAU,YAEjBqB,EAAAA,IAACkB,EAAK,CAAAvC,UAAU,gBAOvB8D,GACC9C,EAAAA,KAAC,MAAI,CAAAhB,UAAU,iGACbmB,SAAA,CAACE,EAAAA,IAAAkB,EAAA,CAAKvC,UAAU,YAAY,WAM/Ba,IAAUgE,EAAa,GAAKS,EAASpE,OAAS2D,GAC5CxD,EAAAA,IAAA,MAAA,CAAIrB,UAAU,gEACbmB,SAACH,EAAAA,KAAA,MAAA,CAAIhB,UAAU,yBACbmB,SAAA,CAACH,EAAAA,KAAA,IAAA,CAAEhB,UAAU,oBAAoBmB,SAAA,CAAA,IAAEmE,EAASpE,OAAS2D,KACpDxD,EAAAA,IAAA,IAAA,CAAErB,UAAU,UAAUmB,SAAI,gBA7D5B6E,EAAKjF,IAfQ,IAACA,CAgFrB,EAqEEqG,EAAe9B,EAAS+B,MAAM,EAAGxC,GAEvC,OAEI7D,EAAAA,KAAAsG,WAAA,CAAAnG,SAAA,CAAAE,EAAAA,IAAC,MAAA,CACCrB,UAAWiB,EAET,qDAhNyBwD,EAiND2C,EAAalG,OAhN7B,IAAVuD,EAAoB,cACV,IAAVA,EAAoB,cACV,IAAVA,GACU,IAAVA,EADoB,0BAEjB,2BA6MDzE,GAGDmB,SAAAiG,EAAa1C,KAAI,CAACsB,EAAMnF,IAAUuF,EAAgBJ,EAAMnF,OAI3DQ,EAAAA,IAACkG,EAAO,CAAAC,KAAwB,OAAlB1C,EAAwB2C,aAAc/B,EAClDvE,SAAAE,EAAAA,IAACqG,EAAc,CAAA1H,UAAU,gHACvBmB,SAAAH,EAAAA,KAAC,MAAA,CACChB,UAAU,mEACV2H,aAnQYf,IAChB,GAAAtB,EAASpE,QAAU,EAAG,OACpB,MAAA0G,EAAQhB,EAAEiB,QAAQ,GACxB1C,EAAevC,QAAUgF,EAAME,QAC/B1C,EAAexC,QAAUgF,EAAMG,QAC/B1C,EAAazC,SAAU,CAAA,EA+PfoF,YA5PWpB,IACnB,GAA+B,OAA3BzB,EAAevC,SAA+C,OAA3BwC,EAAexC,QAAkB,OAClE,MAAAgF,EAAQhB,EAAEiB,QAAQ,GAClBI,EAASL,EAAME,QAAU3C,EAAevC,QACxCsF,EAASN,EAAMG,QAAU3C,EAAexC,QAC1CsB,KAAKiE,IAAIF,GAAU,IAAM/D,KAAKiE,IAAIF,GAAU/D,KAAKiE,IAAID,KAEvD7C,EAAazC,SAAU,EACvBgE,EAAEwB,iBAAe,EAqPXC,WAjPUzB,IAClB,GAA+B,OAA3BzB,EAAevC,SAA+C,OAA3BwC,EAAexC,QAAkB,OAClE,MAAAgF,EAAQhB,EAAE0B,eAAe,GACzBL,EAASL,EAAME,QAAU3C,EAAevC,QACxCsF,EAASN,EAAMG,QAAU3C,EAAexC,QAC3BsB,KAAKiE,IAAIF,GAAU/D,KAAKiE,IAAID,IAAWhE,KAAKiE,IAAIF,GAAU,IAE3DtC,EAAAsC,EAAS,EAAI,OAAS,QAExC9C,EAAevC,QAAU,KACzBwC,EAAexC,QAAU,KACzByC,EAAazC,SAAU,CAAA,EAuOf2F,MAAO,CAAEC,YAAa,SAGxBrH,SAAA,CAAAE,EAAAA,IAACY,EAAA,CACCC,QAAQ,QACRC,KAAK,KACLnC,UAAU,sEACVoC,QAASsD,EAEPvE,SAAAE,EAAAA,IAACsB,EAAE,CAAA3C,UAAU,cAIdsF,EAASpE,OAAS,GAEfF,EAAAA,KAAAsG,EAAAA,SAAA,CAAAnG,SAAA,CAAAE,EAAAA,IAACY,EAAA,CACCC,QAAQ,QACRC,KAAK,KACLnC,UAAU,mGACVoC,QAAS,IAAMuD,EAAgB,QAE/BxE,SAAAE,EAAAA,IAACoH,EAAY,CAAAzI,UAAU,cAEzBqB,EAAAA,IAACY,EAAA,CACCC,QAAQ,QACRC,KAAK,KACLnC,UAAU,oGACVoC,QAAS,IAAMuD,EAAgB,QAE/BxE,SAAAE,EAAAA,IAACqH,EAAa,CAAA1I,UAAU,iBAMX,OAAlB8E,GA3He,EAACkB,EAAiBnF,KACpC,MAAAC,EAAYP,IAAiByF,EAAKjF,GAClC+C,EAAwB,UAAdkC,EAAK5E,KAGnB,OAAAJ,EAAAA,KAAC,MAAA,CAEChB,UAAU,0DAETmB,SAAA,CACC2C,EAAAzC,EAAAA,IAAC,QAAA,CACCO,IAAMC,IACMqD,EAAAtC,QAAQoD,EAAKjF,IAAMc,CAAA,EAE/BP,IAAK0E,EAAKP,IACVc,OAAQP,EAAKQ,UACbxG,UAAU,mEACV2I,UAAQ,EACRC,SAAU9H,EACV2F,OAAQ,IAAMjG,EAAgBwF,EAAKjF,IACnC2F,QAAS,IAAMlG,EAAgB,QAGjCa,EAAAA,IAAC,MAAA,CACCC,IAAK0E,EAAKP,IACVjE,IAAI,gBACJxB,UAAU,mEACV6I,WAAW,IAKf7H,EAAAA,KAAC,MAAI,CAAAhB,UAAU,oCACbmB,SAAA,CAAAE,EAAAA,IAACY,EAAA,CACCC,QAAQ,QACRC,KAAK,KACLnC,UAAU,2CACVoC,QAAS,KACD,MAAA0G,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOjD,EAAKP,IACZqD,EAAAI,SAAW,SAASrI,EAAQ,IACjCiI,EAAKjG,OAAM,EAGb1B,SAAAE,EAAAA,IAAC8H,EAAS,CAAAnJ,UAAU,cAEtBqB,EAAAA,IAACY,EAAA,CACCC,QAAQ,QACRC,KAAK,KACLnC,UAAU,2CACVoC,QAAS,KACH0B,EACFzB,EAAoB2D,EAAKjF,IAElBqI,OAAA5B,KAAKxB,EAAKP,IAAK,SAAQ,EAIlCtE,SAAAE,EAAAA,IAACgI,EAAU,CAAArJ,UAAU,mBApDpBgG,EAAKjF,GAuDZ,EA8DiCuI,CAAkBhE,EAASR,GAAgBA,GAGtE9D,EAAAA,KAAC,MAAI,CAAAhB,UAAU,8GACZmB,SAAA,CAAkB,OAAA2D,EAAOA,EAAgB,EAAI,EAAE,MAAIQ,EAASpE,oBAvQzC,IAACuD,CA4Q/B,EC7VS8E,EAAkD,EAC7DC,WACAC,UACAC,WACAC,WACAC,aACAC,cACAC,wBACA9J,YACA+J,YAEA,MAAM7J,EAAEA,GAAMC,EAAe,aACvB6J,EAAWC,IAEb,IAACT,EAAiB,OAAA,KAEhB,MAsBAU,EAAqBC,IACzB,IAAKA,GAA0B,IAAjBA,EAAMjJ,OAAqB,OAAA,KAEzC,MAAMkJ,EAAwC,CAC5CC,WAAY,aACZC,KAAM,OACNC,mBAAoB,qBACpBC,kBAAmB,oBACnBC,QAAS,UACTC,MAAO,QACPC,cAAe,gBACfC,MAAO,QACPC,KAAM,OACNC,gBAAiB,kBACjBC,OAAQ,SACRC,eAAgB,iBAChBC,cAAe,iBAGjB,IAAA,MAAW7J,KAAQ+I,EACb,GAAAC,EAAWhJ,GACb,OAAOgJ,EAAWhJ,GAIf,OAAA,IAAA,EAGH8J,EAAkBzB,GAAWC,GAAYC,EACzCwB,EAAkBpB,GAASA,EAAMqB,SAEjCC,EAAmB,KACvB,GAAIF,EAAiB,CAEnB,MAAMG,EAAWC,EAAexB,EAAMqB,SAAUrB,EAAM/F,MACtDgG,EAASsB,EAAU,CACjBE,MAAO,CACL/B,QAASM,EAAMqB,SACfpH,KAAM+F,EAAM/F,KACZyH,IAAK1B,EAAM2B,UAAUlC,UAAUiC,IAC/BE,IAAK5B,EAAM2B,UAAUlC,UAAUmC,IAC/BxB,MAAOJ,EAAMI,MACbyB,OAAQ7B,EAAM6B,OACdC,iBAAkB9B,EAAM+B,8BAGnBZ,EAAiB,CAEpB,MAAAI,EAAWC,EAAe9B,EAAUD,GAC1CQ,EAASsB,EAAU,CACjBE,MAAO,CACL/B,UACAzF,KAAMwF,EACNiC,IAAK/B,EACLiC,IAAKhC,EACLQ,MAAOP,EACPgC,OAAQ/B,EACRgC,iBAAkB/B,IAErB,GAKL,OAAIqB,EAEAnK,EAAAA,KAAC,MAAA,CACChB,UAAU,6JACVoC,QAASiJ,EAETlK,SAAA,CAACE,EAAAA,IAAA0K,EAAA,CAAO/L,UAAU,YACjBqB,EAAAA,IAAA,OAAA,CAAKrB,UAAU,cAAemB,WAAM6C,OACpC+F,EAAM6B,QACJ5K,OAAA,MAAA,CAAIhB,UAAU,8BACbmB,SAAA,CAACE,EAAAA,IAAA2K,EAAA,CAAKhM,UAAU,yCAChBqB,MAAC,QAAKrB,UAAU,UAAWmB,WAAMyK,OAAOK,QAAQ,kBASvD,MAAI,CAAAjM,UAAWiB,EAAG,oDAAqDjB,GACtEmB,SAAA,CAAAE,EAAAA,IAAC,OAAIrB,UAAU,uBACbmB,eAAC4K,EAAO,CAAA/L,UAAU,cAGpBgB,EAAAA,KAAC,MAAI,CAAAhB,UAAU,iBACbmB,SAAA,CAACH,EAAAA,KAAA,MAAA,CAAIhB,UAAU,8BACZmB,SAAA,CAAA+J,SACE,OAAK,CAAAlL,UAAU,YAAamB,UAlHjBgJ,EAkH8BP,EAjH7CO,GAA0B,IAAjBA,EAAMjJ,OAEhBiJ,EAAM+B,SAAS,eAAiB/B,EAAM+B,SAAS,QAC1C,MACE/B,EAAM+B,SAAS,uBAAyB/B,EAAM+B,SAAS,qBACzD,MACE/B,EAAM+B,SAAS,YAAc/B,EAAM+B,SAAS,SAC9C,KACE/B,EAAM+B,SAAS,kBAAoB/B,EAAM+B,SAAS,SACpD,MACE/B,EAAM+B,SAAS,SAAW/B,EAAM+B,SAAS,mBAC3C,KACE/B,EAAM+B,SAAS,UACjB,MACE/B,EAAM+B,SAAS,mBAAqB/B,EAAM+B,SAAS,iBACrD,KAEA,KAjBgC,QAmHlC7K,EAAAA,IAAA,OAAA,CAAKrB,UAAU,sCAAuCmB,SAASqI,IAE/D0B,GACClK,EAAAA,KAAC,SAAA,CACCoB,QAASiJ,EACTrL,UAAU,4IACVmM,MAAM,qBAENhL,SAAA,CAAAE,EAAAA,IAAC,QAAKF,SAAI,SACVE,EAAAA,IAAC+K,EAAI,CAAApM,UAAU,kBAKpBkL,GACClK,EAAAA,KAAC,MAAI,CAAAhB,UAAU,mCACZmB,SAAA,CACC0I,GAAA7I,EAAAA,KAAC,MAAI,CAAAhB,UAAU,8BACbmB,SAAA,CAACE,EAAAA,IAAA2K,EAAA,CAAKhM,UAAU,yCAChBgB,EAAAA,KAAC,OAAK,CAAAhB,UAAU,UACbmB,SAAA,CAAA0I,EAAYoC,QAAQ,GACpBnC,GAAyB,KAAKA,WAKpCI,EAAkBN,IACjBvI,EAAAA,IAAC,QAAKrB,UAAU,yEACbmB,SAAkB+I,EAAAN,cAhJZ,IAACO,CAsJpB,EClJEkC,EAAc,CAClB,CAAEtL,GAAI,MAAOuL,MAAO,OACpB,CAAEvL,GAAI,QAASuL,MAAO,SACtB,CAAEvL,GAAI,SAAUuL,MAAO,UACvB,CAAEvL,GAAI,OAAQuL,MAAO,kBACrB,CAAEvL,GAAI,SAAUuL,MAAO,UACvB,CAAEvL,GAAI,SAAUuL,MAAO,UACvB,CAAEvL,GAAI,OAAQuL,MAAO,QACrB,CAAEvL,GAAI,OAAQuL,MAAO,gBACrB,CAAEvL,GAAI,WAAYuL,MAAO,aACzB,CAAEvL,GAAI,WAAYuL,MAAO,YACzB,CAAEvL,GAAI,QAASuL,MAAO,UAGjB,SAASC,GAAcC,OAAEA,EAAAC,UAAQA,EAAWC,YAAAA,EAAAC,aAAaA,IAC9D,MAAOC,EAAcC,GAAmBvM,EAAAA,SAAS,OAG3CwM,EAAsBC,EAAAA,SAAQ,KAC9B,IAAC3J,MAAMmC,QAAQiH,IAA6B,IAAlBA,EAAOtL,OAAc,MAAO,GAE1D,MAAM8L,EAAaR,EAAOS,QAAO,CAACC,EAAKhK,KAC/B,MAAA9B,EAAO8B,EAAM9B,MAAQ,QAEpB,OADP8L,EAAI9L,IAAS8L,EAAI9L,IAAS,GAAK,EACxB8L,CAAA,GACN,IAEH,OAAOb,EAAY5J,WACL,QAAZrB,EAAKL,IAAgBiM,EAAW5L,EAAKL,IAAM,GAC7C,GACC,CAACyL,IAEEW,EAAkC,QAAjBP,EACnBJ,EACAA,EAAO/J,QAAOS,GAASA,EAAM9B,MAAMgM,gBAAkBR,IAEzD,OAAIH,QAEC,MAAI,CAAAzM,UAAU,uDACZmB,SAAA,CAAC,EAAG,EAAG,EAAG,GAAGuD,KAAK2I,GAChBrM,EAAAA,KAAA,MAAA,CAAYhB,UAAU,gBACrBmB,SAAA,CAACE,EAAAA,IAAA,MAAA,CAAIrB,UAAU,8CACfgB,EAAAA,KAAC,MAAI,CAAAhB,UAAU,YACbmB,SAAA,CAACE,EAAAA,IAAA,MAAA,CAAIrB,UAAU,mCACfqB,EAAAA,IAAC,MAAI,CAAArB,UAAU,wCAJTqN,OAYbjK,MAAMmC,QAAQiH,IAA6B,IAAlBA,EAAOtL,OASnCF,EAAAA,KAAC,MAAI,CAAAhB,UAAU,YACZmB,SAAA,CAAA2L,EAAoB5L,OAAS,GAC3BF,EAAAA,KAAA,MAAA,CAAIhB,UAAU,WACbmB,SAAA,CAAAE,MAAC,OAAIrB,UAAU,+EACZmB,SAAoB2L,EAAApI,KAAKtD,GACxBC,EAAAA,IAAC,SAAA,CAECe,QAAS,IAAMyK,EAAgBzL,EAAKL,IACpCf,UAAWiB,EACT,sHACA2L,IAAiBxL,EAAKL,GAClB,oCACA,mEAGLI,SAAKC,EAAAkL,OATDlL,EAAKL,QAchBM,EAAAA,IAAC,MAAI,CAAArB,UAAU,2FAInBqB,EAAAA,IAAC,MAAI,CAAArB,UAAU,iBACbmB,SAAAH,EAAAA,KAACsM,EAAA,CACCC,KAAM,CACJC,MAAO,QACP9L,MAAM,GAER1B,UAAU,SAEVmB,SAAA,CAACE,EAAAA,IAAAoM,EAAA,CAAgBzN,UAAU,QACxBmB,SAAegM,EAAAzI,KAAKxB,GACnB7B,EAAAA,IAACqM,EAA4B,CAAA1N,UAAU,2CACrCmB,SAAAE,EAAAA,IAAC,IAAA,CACC4H,KAAM/F,EAAMuC,IACZnC,OAAO,SACPqK,IAAI,sBACJ3N,UAAU,cAEVmB,eAAC,MAAI,CAAAnB,UAAU,sCACbmB,SAACH,EAAAA,KAAA,MAAA,CAAIhB,UAAU,yDACbmB,SAAA,CAACE,EAAAA,IAAA,MAAA,CAAIrB,UAAU,0HACfqB,EAAAA,IAAC,MAAA,CACCC,IAAK4B,EAAM0K,UAAY,yBACvBpM,IAAK0B,EAAMc,KACXhE,UAAU,wGAGZgB,EAAAA,KAAC,MAAI,CAAAhB,UAAU,mEACbmB,SAAA,CAAAE,MAAC,MAAI,CAAArB,UAAU,mCACbmB,SAAAE,EAAAA,IAACwM,GAAM7N,UAAU,mEACdmB,SAAO2M,EAAA,IAAIC,KAAK7K,EAAM8K,WAAY,oBAItC,MACC,CAAA7M,SAAA,CAAAE,EAAAA,IAAC,KAAG,CAAArB,UAAU,6GACXmB,SAAA+B,EAAMc,OAERd,EAAM+K,OACJjN,OAAA,MAAA,CAAIhB,UAAU,yDACbmB,SAAA,CAACE,EAAAA,IAAA0K,EAAA,CAAO/L,UAAU,qCAClBgB,EAAAA,KAAC,OAAK,CAAAhB,UAAU,WACbmB,SAAA,CAAA+B,EAAM+K,MAAMC,QAAQC,KAAK,KAAGjL,EAAM+K,MAAMC,QAAQE,2BA/BhDlL,EAAMnC,QA2C7BC,EAAAA,KAAC,MAAI,CAAAhB,UAAU,kBACbmB,SAAA,CAACE,EAAAA,IAAAgN,EAAA,CAAiBrO,UAAU,mIAC5BqB,EAAAA,IAACiN,EAAa,CAAAtO,UAAU,qJAtF7B,MAAI,CAAAA,UAAU,kCACbmB,SAACE,EAAAA,IAAA,IAAA,CAAGF,cA2FZ,CC9IO,SAASoN,IACd,MAAMrO,EAAEA,GAAMC,EAAe,cACtBqJ,EAAUgF,GAAelO,EAAAA,SAA8B,OACvDmO,EAASC,GAAcpO,EAAAA,UAAS,IAChCqO,EAAOC,GAAYtO,EAAAA,SAAwB,OAC3CkM,EAAQqC,GAAavO,EAAAA,SAA4B,KACjDwO,EAAeC,GAAoBzO,EAAAA,UAAS,IAC5C0O,EAAcC,GAAmB3O,EAAAA,SAAiB,IAwCnD4O,EAAoBC,MAAOC,EAAkBC,KACjDN,GAAiB,GACb,IACI,MAAAO,KAAEA,EAAMX,MAAAA,SAAgBY,EAASC,UAAUC,OAAO,oBAAqB,CAC3EC,KAAM,CAAEN,WAAUC,YAAWM,OAAQX,KAGvC,GAAIL,EAAaA,MAAAA,EACjBE,EAAUS,EAAK9C,cACRoD,GACoC,CAC3C,QACAb,GAAiB,EAAK,GAIpBc,EAAiB,KACrBnB,GAAW,GACXE,EAAS,MACTC,EAAU,IAGV,MAAMiB,EAAiBC,IACvB,GAAID,EAOF,OANAtB,EAAYsB,EAAeR,MAC3BJ,EACEY,EAAeR,KAAKU,YAAYZ,SAChCU,EAAeR,KAAKU,YAAYX,gBAElCX,GAAW,GAIT,gBAAiBuB,UACnBA,UAAUC,YAAYC,oBACnBC,IAzEuBjB,OAAOC,EAAkBC,KACjD,IACI,MAAAC,KAAEA,EAAMX,MAAAA,SAAgBY,EAASC,UAAUC,OAAO,UAAW,CACjEC,KAAM,CAAEN,WAAUC,eAGpB,GAAIV,EACIA,MAAAA,EAGR,IAAIW,EAkBI,MAAA,IAAIe,MAAM,sBAlBR,CACR,MAAMC,EAAe,CACnBnC,KAAMmB,EAAKnB,KACXC,OAAQkB,EAAKlB,OACbmC,QAASjB,EAAKiB,QACdC,UAAWlB,EAAKkB,UAChBR,YAAa,CACXZ,WACAC,cAIJb,EAAY8B,GACZG,EAAkBH,GAGlBpB,EAAkBE,EAAUC,EAAS,QAIhCO,GAEEhB,EAAA1O,EAAE,iBAAgB,CAC3B,QACAwO,GAAW,EAAK,GAwCZgC,CAAsBN,EAASO,OAAOvB,SAAUgB,EAASO,OAAOtB,UAAS,IAE1EO,IAEUhB,EAAA1O,EAAE,4BACXwO,GAAW,EAAK,GAElB,CACEkC,oBAAoB,EACpBC,QAAS,IACTC,WAAY,KAIPlC,EAAA1O,EAAE,yBACXwO,GAAW,GAAK,EAiBlB,OAZFqC,EAAAA,WAAU,KACJvH,GAAUwG,aACZd,EAAkB1F,EAASwG,YAAYZ,SAAU5F,EAASwG,YAAYX,UAAS,GAEhF,CAACL,IAGJ+B,EAAAA,WAAU,KACOlB,GAAA,GACd,IAGD7O,EAAAA,KAACgQ,EAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAGC,GAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,WAAY,CAAEC,SAAU,IACxBvR,UAAU,mBAGVmB,SAAA,CAACH,EAAAA,KAAA,MAAA,CAAIhB,UAAU,oCACbmB,SAAA,CAAAE,EAAAA,IAAC,OAAIrB,UAAU,oCACbmB,SAACH,EAAAA,KAAA,MAAA,CAAIhB,UAAU,8BACZmB,SAAA,CACCsN,EAAAzN,EAAAA,KAAC,MAAI,CAAAhB,UAAU,6CACbmB,SAAA,CAACE,EAAAA,IAAAmQ,EAAA,CAAQxR,UAAU,+BAClB,OAAK,CAAAA,UAAU,UAAWmB,SAAAjB,EAAE,0BAE7ByO,EACD3N,EAAAA,KAAA,MAAA,CAAIhB,UAAU,8BACbmB,SAAA,CAACE,EAAAA,IAAA,IAAA,CAAErB,UAAU,uBAAwBmB,SAAMwN,IAC3C3N,EAAAA,KAACiB,EAAA,CACCC,QAAQ,QACRC,KAAK,KACLC,QAASyN,EACT7P,UAAU,sCAEVmB,SAAA,CAACE,EAAAA,IAAA0K,EAAA,CAAO/L,UAAU,iBACjBE,EAAE,uBAGLsJ,EACDxI,EAAAA,KAAA,MAAA,CAAIhB,UAAU,8BACbmB,SAAA,CAACE,EAAAA,IAAA0K,EAAA,CAAO/L,UAAU,kCACjB,MACC,CAAAmB,SAAA,CAAAE,MAAC,KAAG,CAAArB,UAAU,0CACXmB,SAAAjB,EAAE,kBAEJmB,EAAAA,IAAA,IAAA,CAAErB,UAAU,gDACVmB,WAASqP,kBAId,KAEHhH,GACCnI,EAAAA,IAACY,EAAA,CACCC,QAAQ,QACRC,KAAK,KACLC,QAASyN,EACT7P,UAAU,8CAETmB,WAAE,yBAMVqI,GACCxI,EAAAA,KAAC,MAAI,CAAAhB,UAAU,mCACbmB,SAAA,CAACE,EAAAA,IAAAoQ,EAAA,CAAWzR,UAAU,2BACtBqB,EAAAA,IAAC,MAAI,CAAArB,UAAU,cACbmB,SAAAE,EAAAA,IAACqQ,EAAA,CACCC,MAAO,CAAC3C,GACR4C,cAAgBD,GAAU1C,EAAgB0C,EAAM,IAChDtL,IAAK,EACL7C,IAAK,GACLqO,KAAM,EACN7R,UAAU,mCAGdgB,EAAAA,KAAC,OAAK,CAAAhB,UAAU,iDACbmB,SAAA,CAAA6N,EACA3N,EAAAA,IAAA,OAAA,CAAKrB,UAAU,2BAA2BmB,SAAE,gBAOrDH,EAAAA,KAAC,MAAI,CAAAhB,UAAU,8CACbmB,SAAA,CAAAE,EAAAA,IAAC,OAAIrB,UAAU,8BACZmB,WACEH,EAAAA,KAAA,MAAA,CAAIhB,UAAU,6CACbmB,SAAA,CAACE,EAAAA,IAAAmQ,EAAA,CAAQxR,UAAU,+BAClB,OAAK,CAAAA,UAAU,UAAWmB,SAAAjB,EAAE,0BAE7ByO,EACD3N,EAAAA,KAAA,MAAA,CAAIhB,UAAU,8BACbmB,SAAA,CAACE,EAAAA,IAAA,IAAA,CAAErB,UAAU,uBAAwBmB,SAAMwN,IAC3C3N,EAAAA,KAACiB,EAAA,CACCC,QAAQ,QACRC,KAAK,KACLC,QAASyN,EACT7P,UAAU,sCAEVmB,SAAA,CAACE,EAAAA,IAAA0K,EAAA,CAAO/L,UAAU,iBACjBE,EAAE,uBAGLsJ,EAEAxI,EAAAA,KAAAsG,EAAAA,SAAA,CAAAnG,SAAA,CAACE,EAAAA,IAAA0K,EAAA,CAAO/L,UAAU,kCACjB,MACC,CAAAmB,SAAA,CAAAE,MAAC,KAAG,CAAArB,UAAU,6BACXmB,SAAAjB,EAAE,kBAEJmB,EAAAA,IAAA,IAAA,CAAErB,UAAU,yBAA0BmB,WAASqP,eAElDnP,EAAAA,IAACY,EAAA,CACCC,QAAQ,QACRC,KAAK,KACLC,QAASyN,EACT7P,UAAU,2CAETmB,WAAE,uBAGL,OAGLqI,GACCxI,EAAAA,KAAC,MAAI,CAAAhB,UAAU,8BACbmB,SAAA,CAACH,EAAAA,KAAA,MAAA,CAAIhB,UAAU,6CACbmB,SAAA,CAACE,EAAAA,IAAAoQ,EAAA,CAAWzR,UAAU,YACtBgB,EAAAA,KAAC,OAAK,CAAAhB,UAAU,sBAAuBmB,SAAA,CAAA6N,EAAa,WAEtD3N,EAAAA,IAAC,MAAI,CAAArB,UAAU,OACbmB,SAAAE,EAAAA,IAACqQ,EAAA,CACCC,MAAO,CAAC3C,GACR4C,cAAgBD,GAAU1C,EAAgB0C,EAAM,IAChDtL,IAAK,EACL7C,IAAK,GACLqO,KAAM,EACN7R,UAAU,yCAOnBwJ,GACCxI,EAAAA,KAAC,MAAI,CAAAhB,UAAU,YACbmB,SAAA,CAACH,EAAAA,KAAA,MAAA,CAAIhB,UAAU,8BACbmB,SAAA,CAACE,EAAAA,IAAAyQ,EAAA,CAAS9R,UAAU,iCACnB,KAAG,CAAAA,UAAU,qCACXmB,SAAAjB,EAAE,qBAIPmB,EAAAA,IAACkL,EAAA,CACCC,SACAC,UAAWqC,EACXpC,YAAaxM,EAAE,iBACfyM,aAAczM,EAAE,wBAM5B,CC1QO,MAAM6R,EAAwD,EACnEJ,QACA1O,WACA+O,cACAhS,YACAC,YAAW,EACXgS,sBAEA,MAAM/R,EAAEA,EAAAgS,KAAGA,GAAS/R,EAAe,cAC7BgS,MAAEA,GAAUC,KACXC,EAAaC,GAAkBhS,EAAAA,SAA4B,KAC3DiS,EAAiBC,GAAsBlS,EAAAA,UAAS,IAChDmM,EAAWgG,GAAgBnS,EAAAA,UAAS,IACpCoS,EAAmBC,GAAwBrS,EAAAA,UAAS,IACpDsS,EAAeC,GAAoBvS,EAAAA,SAA8B,OACjEwS,EAAYC,GAAiBzS,EAAAA,SAASqR,IACtCqB,EAAcC,GAAmB3S,EAAAA,SAA4C2R,GAAmB,MACjGiB,EAAmBxS,SAA8B,MACjDyS,EAAezS,SAAuB,MACtC0S,EAAW1S,SAAyB,MAG1CqQ,EAAAA,WAAU,KACRgC,EAAcpB,EAAK,GAClB,CAACA,IAGJZ,EAAAA,WAAU,KACJkB,GACFgB,EAAgBhB,EAAe,GAEhC,CAACA,IAGJlB,EAAAA,WAAU,KACF,MAAAsC,EAAsBnQ,IACtBiQ,EAAavQ,UAAYuQ,EAAavQ,QAAQ0Q,SAASpQ,EAAMI,SAC/DkP,GAAmB,EAAK,EAK5B,OADSzJ,SAAAwK,iBAAiB,YAAaF,GAChC,IAAMtK,SAASyK,oBAAoB,YAAaH,EAAkB,GACxE,IAEH,MAyGMI,EAAeC,eAAYvE,MAAOwE,IACtC,IAAKA,EAAMnO,QAAUmO,EAAMzS,OAAS,EAGlC,OAFAoR,EAAe,SACfE,GAAmB,GAIrBC,GAAa,GACT,IACI,MAAAnD,KAAEA,QAAMX,SAAgBY,EAASC,UAAUC,OAAO,uBAAwB,CAC9EC,KAAM,CACJkE,OAAQ,eACRD,MAAOA,EAAMnO,OACbgE,SAAUwJ,EACVrD,OAAQ,IACRkE,SAAU3B,EAAK2B,YAInB,GAAIlF,EAEF,OAGkB,OAAhBW,EAAKwE,QAAmBxE,EAAKyE,aAC/BzB,EAAehD,EAAKyE,aACpBvB,GAAmB,KAEnBF,EAAe,IACfE,GAAmB,UAEd7D,GACuC,CAC9C,QACA8D,GAAa,EAAK,IAEnB,CAACO,EAAcd,EAAK2B,WA0DjBG,EAAgB7J,GAChBA,EAAM+B,SAAS,eAAiB/B,EAAM+B,SAAS,QAC1C,MACE/B,EAAM+B,SAAS,uBAAyB/B,EAAM+B,SAAS,qBACzD,MACE/B,EAAM+B,SAAS,YAAc/B,EAAM+B,SAAS,SAC9C,KACE/B,EAAM+B,SAAS,kBAAoB/B,EAAM+B,SAAS,SACpD,MACE/B,EAAM+B,SAAS,SAAW/B,EAAM+B,SAAS,mBAC3C,KACE/B,EAAM+B,SAAS,UACjB,MACE/B,EAAM+B,SAAS,mBAAqB/B,EAAM+B,SAAS,iBACrD,KAEA,KAKT,OAAAlL,OAAC,OAAIY,IAAKuR,EAAcnT,UAAWiB,EAAG,WAAYjB,GAChDmB,SAAA,CAACH,EAAAA,KAAA,MAAA,CAAIhB,UAAU,WACbmB,SAAA,CAAAE,EAAAA,IAAC,OAAIrB,UAAU,uEACbmB,eAAC4K,EAAO,CAAA/L,UAAU,6BAEpBqB,EAAAA,IAAC4S,EAAA,CACCrS,IAAKwR,EACLhS,KAAK,OACLuQ,MAAOmB,EACP7P,SAtFmB2D,IACnB,MAAAsN,EAAWtN,EAAEtD,OAAOqO,MAC1BoB,EAAcmB,GACdjR,EAASiR,GAGLhB,EAAiBtQ,SACnBuR,aAAajB,EAAiBtQ,SAIfsQ,EAAAtQ,QAAUwR,YAAW,KACpCX,EAAaS,EAAQ,GACpB,IAAG,EA0EAlC,YAAaA,GAAe9R,EAAE,kBAC9BD,WACAD,UAAU,cACVqU,QAAS,KACHhC,EAAYnR,OAAS,GACvBsR,GAAmB,EAAI,IAI7BxR,EAAAA,KAAC,MAAI,CAAAhB,UAAU,8DAEbmB,SAAA,CAAAE,EAAAA,IAACY,EAAA,CACCb,KAAK,SACLc,QAAQ,QACRC,KAAK,KACLC,QA5MiB+M,UACnB,MAAA3F,OA1CmB2F,WACrB,IAACc,UAAUC,YAMN,OALDiC,EAAA,CACJhG,MAAO,yBACPmI,YAAa,gDACbpS,QAAS,gBAEJ,KAGTyQ,GAAqB,GAEjB,IACF,MAAMvC,QAAiB,IAAImE,SAA6B,CAACC,EAASC,KACtDxE,UAAAC,YAAYC,mBAAmBqE,EAASC,EAAQ,CACxD7D,oBAAoB,EACpBC,QAAS,IACTC,WAAY,KACb,IAGGtH,EAAW,CACfiC,IAAK2E,EAASO,OAAOvB,SACrBzD,IAAKyE,EAASO,OAAOtB,WAIhB,OADP4D,EAAgBzJ,GACTA,QACAmF,GAOA,OALDwD,EAAA,CACJhG,MAAO,iBACPmI,YAAa,+EACbpS,QAAS,gBAEJ,IAAA,CACP,QACAyQ,GAAqB,EAAK,GAKL+B,GACvB,GAAKlL,EAAL,CAEAiJ,GAAa,GACT,IACI,MAAAnD,KAAEA,QAAMX,SAAgBY,EAASC,UAAUC,OAAO,uBAAwB,CAC9EC,KAAM,CACJkE,OAAQ,SACRD,MAAO,gBACPnK,WACAmG,OAAQ,IACRxF,MAAO,gEACP0J,SAAU3B,EAAK2B,YAInB,GAAIlF,EAOF,YALMwD,EAAA,CACJhG,MAAO,eACPmI,YAAa,gCACbpS,QAAS,gBAKb,GAAoB,OAAhBoN,EAAKwE,QAAmBxE,EAAKqF,QAAS,CAElC,MAAAC,EAAuCtF,EAAKqF,QAAQtN,MAAM,EAAG,GAAG3C,KAAKqF,IAAgB,CACzFqB,SAAUrB,EAAMqB,SAChBkJ,YAAavK,EAAM/F,KACnB6Q,sBAAuB,CACrBC,UAAW/K,EAAM/F,KACjB+Q,eAAgBhL,EAAMiL,mBAAqBjL,EAAMkL,UAAY,IAE/D9K,MAAOJ,EAAMI,OAAS,OAGxBmI,EAAesC,GACfpC,GAAmB,EAAI,MAIvBF,EAAe,IACfE,GAAmB,GACbL,EAAA,CACJhG,MAAO,kBACPmI,YAAa,8CACbpS,QAAS,sBAGNyM,GAEDwD,EAAA,CACJhG,MAAO,eACPmI,YAAa,sCACbpS,QAAS,eACV,CACD,QACAuQ,GAAa,EAAK,CA1DL,CA0DK,EAiJZxS,SAAUyS,GAAqBzS,EAC/BD,UAAU,oEACVmM,MAAM,qBAELhL,SAAAuR,QACElB,EAAQ,CAAAxR,UAAU,yBAEnBqB,EAAAA,IAACoQ,EAAW,CAAAzR,UAAU,cAKzByM,EACEpL,EAAAA,IAAAmQ,EAAA,CAAQxR,UAAU,wCACjB8S,EACFzR,EAAAA,IAACY,EAAA,CACCb,KAAK,SACLc,QAAQ,QACRC,KAAK,KACLC,QA1EQ,KAClB2Q,EAAc,IACdF,EAAiB,MACjBP,EAAe,IACfE,GAAmB,GACnBvP,EAAS,GAAE,EAsEDjD,UAAU,kDAEVmB,SAAAE,EAAAA,IAACsB,EAAE,CAAA3C,UAAU,cAGfqB,MAAC6T,EAAO,CAAAlV,UAAU,iCAMvBuS,GAAmBF,EAAYnR,OAAS,GACvCG,EAAAA,IAAC,MAAA,CACCrB,UAAU,0GACVuI,MAAO,CACL4M,UAAW,QACXC,UAAW,QAGZjU,SAAYkR,EAAA3N,KAAI,CAAC2Q,EAAYxU,IAC5BQ,EAAAA,IAAC,SAAA,CAECD,KAAK,SACLgB,QAAS,IAlIS+M,OAAOkG,IACnC5C,GAAa,GACT,IAEI,MAAAnD,KAAEA,QAAMX,SAAgBY,EAASC,UAAUC,OAAO,uBAAwB,CAC9EC,KAAM,CACJkE,OAAQ,UACRnK,QAAS4L,EAAWjK,SACpBkK,OAAQ,yFACRzB,SAAU3B,EAAK2B,YAInB,GAAIlF,EAEF,OAGF,GAAoB,OAAhBW,EAAKwE,QAAmBxE,EAAKiG,OAAQ,CACvC,MAAMC,EAAelG,EAAKiG,OAC1B1C,EAAiB2C,GACjBzC,EAAcyC,EAAaxR,MAClBf,EAAAuS,EAAaxR,KAAMwR,EAAY,QAEnC7G,GAC4C,CACnD,QACA8D,GAAa,GACbD,GAAmB,EAAK,GAsGDiD,CAAsBJ,GACrCrV,UAAWiB,EACT,oGACA,qDACU,IAAVJ,EAAc,eAAiB,GAC/BA,IAAUwR,EAAYnR,OAAS,EAAI,eAAiB,IAGtDC,SAAAH,EAAAA,KAAC,MAAI,CAAAhB,UAAU,6BACbmB,SAAA,CAAAE,MAAC,QAAKrB,UAAU,wBACbmB,SAAa6S,EAAAqB,EAAWlL,SAE3BnJ,EAAAA,KAAC,MAAI,CAAAhB,UAAU,iBACbmB,SAAA,CAAAE,MAAC,MAAI,CAAArB,UAAU,yCACZmB,SAAAkU,EAAWR,sBAAsBC,kBAEnC,MAAI,CAAA9U,UAAU,qCACZmB,SAAAkU,EAAWR,sBAAsBE,wBAnBnCM,EAAWjK,cA6BvBwH,SACE,MAAI,CAAA5S,UAAU,8DACbmB,SAACH,EAAAA,KAAA,MAAA,CAAIhB,UAAU,6BACbmB,SAAA,CAACE,EAAAA,IAAA,MAAA,CAAIrB,UAAU,gBACbmB,SAACE,EAAAA,IAAA,OAAA,CAAKrB,UAAU,UAAWmB,SAAa6S,EAAApB,EAAczI,WAExDnJ,EAAAA,KAAC,MAAI,CAAAhB,UAAU,iBACbmB,SAAA,CAAAE,EAAAA,IAAC,MAAI,CAAArB,UAAU,6BAA8BmB,SAAAyR,EAAc5O,OAC1D3C,EAAAA,IAAA,MAAA,CAAIrB,UAAU,yBAA0BmB,WAAc6T,oBACtDpC,EAAchH,QACZ5K,OAAA,MAAA,CAAIhB,UAAU,mCACbmB,SAAA,CAACH,EAAAA,KAAA,MAAA,CAAIhB,UAAU,oBACbmB,SAAA,CAACE,EAAAA,IAAA,OAAA,CAAKrB,UAAU,kBAAkBmB,SAAC,MACnCE,MAAC,QAAKrB,UAAU,8BACbmB,WAAcyK,OAAOK,QAAQ,QAGjC2G,EAAc9G,oBACZ9K,OAAA,OAAA,CAAKhB,UAAU,yBAAyBmB,SAAA,CAAA,IACrCyR,EAAc9G,mBAAmB,kBAK1C8G,EAAc8C,eACZrU,MAAA,MAAA,CAAIrB,UAAU,OACbmB,SAAAE,EAAAA,IAAC,QAAKrB,UAAWiB,EACf,iCACA2R,EAAc8C,cAAcC,SACxB,8BACA,2BAEHxU,SAAcyR,EAAA8C,cAAcC,SAAWzV,EAAE,WAAaA,EAAE,wBAQzE,ECrbG,SAAS0V,GAAgBC,eAAEA,EAAgBC,cAAAA,EAAA9V,UAAeA,IAC/D,MAAME,EAAEA,GAAMC,EAAe,aAG3B,OAAAa,EAAAA,KAACgQ,EAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,GACpBE,QAAS,CAAEF,QAAS,GACpB4E,KAAM,CAAE5E,QAAS,GACjBnR,UAAWiB,EACT,gEACA,uDACA,4BACAjB,GAIFmB,SAAA,CAACE,EAAAA,IAAA,MAAA,CAAIrB,UAAU,4EAGfgB,EAAAA,KAAC,MAAI,CAAAhB,UAAU,mDAEbmB,SAAA,CAAAE,EAAAA,IAAC2P,EAAOC,IAAP,CACCC,QAAS,CAAE8E,MAAO,GAAK7E,QAAS,GAChCE,QAAS,CAAE2E,MAAO,EAAG7E,QAAS,GAC9BG,WAAY,CAAE2E,MAAO,IACrBjW,UAAU,0IAEVmB,SAAAE,EAAAA,IAAC6U,EAAK,CAAAlW,UAAU,uCAIlBqB,EAAAA,IAAC2P,EAAOmF,GAAP,CACCjF,QAAS,CAAEE,EAAG,GAAID,QAAS,GAC3BE,QAAS,CAAED,EAAG,EAAGD,QAAS,GAC1BG,WAAY,CAAE2E,MAAO,IACrBjW,UAAU,+CAETmB,SAAAjB,EAAE,iBAAkB,6BAIvBmB,EAAAA,IAAC2P,EAAOoF,EAAP,CACClF,QAAS,CAAEE,EAAG,GAAID,QAAS,GAC3BE,QAAS,CAAED,EAAG,EAAGD,QAAS,GAC1BG,WAAY,CAAE2E,MAAO,IACrBjW,UAAU,oFAETmB,SAAAjB,EAAE,uBAAwB,+GAI7Bc,EAAAA,KAACgQ,EAAOC,IAAP,CACCC,QAAS,CAAEE,EAAG,GAAID,QAAS,GAC3BE,QAAS,CAAED,EAAG,EAAGD,QAAS,GAC1BG,WAAY,CAAE2E,MAAO,IACrBjW,UAAU,sFAEVmB,SAAA,CAAAH,EAAAA,KAACiB,EAAA,CACCG,QAASyT,EACT1T,KAAK,KACLnC,UAAU,+MAEVmB,SAAA,CAACE,EAAAA,IAAAgV,EAAA,CAAMrW,UAAU,yCAChBE,EAAE,mBAAoB,cAGzBc,EAAAA,KAACiB,EAAA,CACCG,QAAS0T,EACT5T,QAAQ,UACRC,KAAK,KACLnC,UAAU,mLAEVmB,SAAA,CAACE,EAAAA,IAAAiV,EAAA,CAAStW,UAAU,yCACnBE,EAAE,kBAAmB,sBAMlC"}