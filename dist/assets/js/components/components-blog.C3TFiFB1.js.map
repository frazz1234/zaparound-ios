{"version":3,"file":"components-blog.C3TFiFB1.js","sources":["../../../../src/lib/utils.ts","../../../../src/components/blog/BlogCard.tsx","../../../../src/components/blog/BlogFilters.tsx","../../../../src/components/blog/EnhancedBlogCard.tsx","../../../../src/components/blog/EnhancedBlogList.tsx","../../../../src/components/blog/BlogPagination.tsx","../../../../src/components/blog/BlogHeader.tsx","../../../../src/components/blog/BlogContent.tsx","../../../../src/components/blog/BlogMetaTags.tsx","../../../../src/components/blog/BlogDetail.tsx","../../../../src/components/blog/BlogWidgets.tsx"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\ninterface CachedLocation {\n  data: {\n    city: string;\n    region: string;\n    country: string;\n    formatted: string;\n    coordinates: {\n      latitude: number;\n      longitude: number;\n    };\n  };\n  timestamp: number;\n}\n\nconst LOCATION_CACHE_KEY = 'zaparounds_location_cache';\nconst CACHE_EXPIRATION = 15 * 60 * 1000; // 15 minutes in milliseconds\n\nexport function getCachedLocation(): CachedLocation | null {\n  const cached = localStorage.getItem(LOCATION_CACHE_KEY);\n  if (!cached) return null;\n\n  const parsedCache = JSON.parse(cached) as CachedLocation;\n  const now = Date.now();\n\n  // Check if cache is expired\n  if (now - parsedCache.timestamp > CACHE_EXPIRATION) {\n    localStorage.removeItem(LOCATION_CACHE_KEY);\n    return null;\n  }\n\n  return parsedCache;\n}\n\nexport function setCachedLocation(location: CachedLocation['data']): void {\n  const cache: CachedLocation = {\n    data: location,\n    timestamp: Date.now()\n  };\n  localStorage.setItem(LOCATION_CACHE_KEY, JSON.stringify(cache));\n}\n","import { Link } from 'react-router-dom';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Calendar, Tag } from 'lucide-react';\nimport { format } from 'date-fns';\nimport { useTranslation } from 'react-i18next';\nimport { Blog, getLocalizedContent } from '@/hooks/useBlogs';\nimport { createSlug } from '@/utils/blogUtils';\nimport { OptimizedImage } from '@/components/OptimizedImage';\n\ninterface BlogCardProps {\n  blog: Blog;\n}\n\nexport function BlogCard({ blog }: BlogCardProps) {\n  const { t, i18n } = useTranslation('blog');\n  const language = i18n.language;\n  const localizedContent = getLocalizedContent(blog, language);\n  \n  // Format date for better display\n  const formattedDate = blog.published_at \n    ? format(new Date(blog.published_at), 'PPP') \n    : format(new Date(blog.created_at), 'PPP');\n\n  // Create URL-friendly slug from English title\n  const blogSlug = blog.title_en ? createSlug(blog.title_en) : blog.id;\n  const blogPath = `/${language}/blog/${blogSlug}`;\n  \n  // Calculate estimated reading time\n  const wordsPerMinute = 200;\n  const content = typeof localizedContent.content === 'string' ? localizedContent.content : '';\n  const wordCount = content.trim() ? content.split(/\\s+/).filter(word => word.length > 0).length : 0;\n  const readingTime = Math.max(1, Math.ceil(wordCount / wordsPerMinute));\n\n  // Ensure title is always a string\n  const safeTitle = typeof localizedContent.title === 'string' \n    ? localizedContent.title \n    : '';\n\n  return (\n    <Card className=\"overflow-hidden transition-all hover:shadow-lg h-full flex flex-col\">\n      {blog.image_url && (\n        <div className=\"aspect-video overflow-hidden\">\n          <OptimizedImage\n            src={blog.image_url}\n            alt={safeTitle}\n            width={400}\n            height={225}\n            quality={85}\n            priority={true}\n            className=\"w-full h-full object-cover transition-transform hover:scale-105 duration-300\"\n            onError={() => {\n              console.error('Failed to load blog card image:', blog.image_url);\n            }}\n          />\n        </div>\n      )}\n      <CardHeader className=\"pb-2\">\n        <CardTitle className=\"line-clamp-2 text-xl font-bold hover:text-primary transition-colors\">\n          <Link to={blogPath}>\n            {safeTitle}\n          </Link>\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"flex-grow pb-2\">\n        <CardDescription className=\"line-clamp-3 text-sm\">\n          {localizedContent.excerpt || (content && content.substring(0, 150) + '...')}\n        </CardDescription>\n      </CardContent>\n      <CardFooter className=\"pt-2 border-t\">\n        <Link \n          to={blogPath}\n          className=\"text-primary hover:text-primary/80 font-medium text-sm flex items-center group\"\n          aria-label={`Read more about ${safeTitle}`}\n        >\n          {t('card.readMore')} \n          <svg \n            xmlns=\"http://www.w3.org/2000/svg\" \n            className=\"h-4 w-4 ml-1 transition-transform group-hover:translate-x-1\" \n            fill=\"none\" \n            viewBox=\"0 0 24 24\" \n            stroke=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14 5l7 7m0 0l-7 7m7-7H3\" />\n          </svg>\n        </Link>\n      </CardFooter>\n    </Card>\n  );\n}\n","import { useState, useCallback, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Search, Filter, X, Calendar, Tag, MapPin, TrendingUp } from 'lucide-react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { debounce } from 'lodash';\n\nexport interface BlogFiltersState {\n  search: string;\n  category: string;\n  dateRange: string;\n  sortBy: 'newest' | 'oldest' | 'popular' | 'trending';\n  tags: string[];\n  location?: string;\n}\n\ninterface BlogFiltersProps {\n  filters: BlogFiltersState;\n  onFiltersChange: (filters: BlogFiltersState) => void;\n  availableCategories: string[];\n  availableTags: string[];\n  availableLocations: string[];\n  isLoading?: boolean;\n  totalResults?: number;\n}\n\nconst SORT_OPTIONS = [\n  { value: 'newest', label: 'filters.newest', icon: Calendar },\n  { value: 'oldest', label: 'filters.oldest', icon: Calendar },\n  { value: 'popular', label: 'filters.popular', icon: TrendingUp },\n  { value: 'trending', label: 'filters.trending', icon: TrendingUp }\n] as const;\n\nconst DATE_RANGE_OPTIONS = [\n  { value: '', label: 'blog.dateRange.all' },\n  { value: 'week', label: 'blog.dateRange.week' },\n  { value: 'month', label: 'blog.dateRange.month' },\n  { value: 'quarter', label: 'blog.dateRange.quarter' },\n  { value: 'year', label: 'blog.dateRange.year' }\n] as const;\n\nexport function BlogFilters({\n  filters,\n  onFiltersChange,\n  availableCategories,\n  availableTags,\n  availableLocations,\n  isLoading = false,\n  totalResults = 0\n}: BlogFiltersProps) {\n  const { t } = useTranslation('blog');\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [searchInput, setSearchInput] = useState(filters.search);\n\n  // Debounced search handler\n  const debouncedSearchChange = useCallback(\n    debounce((value: string) => {\n      onFiltersChange({ ...filters, search: value });\n    }, 300),\n    [filters, onFiltersChange]\n  );\n\n  const handleSearchChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setSearchInput(value);\n    debouncedSearchChange(value);\n  }, [debouncedSearchChange]);\n\n  const handleFilterChange = useCallback((key: keyof BlogFiltersState, value: any) => {\n    onFiltersChange({ ...filters, [key]: value });\n  }, [filters, onFiltersChange]);\n\n  const handleTagToggle = useCallback((tag: string) => {\n    const newTags = filters.tags.includes(tag)\n      ? filters.tags.filter(t => t !== tag)\n      : [...filters.tags, tag];\n    handleFilterChange('tags', newTags);\n  }, [filters.tags, handleFilterChange]);\n\n  const clearFilters = useCallback(() => {\n    const clearedFilters: BlogFiltersState = {\n      search: '',\n      category: '',\n      dateRange: '',\n      sortBy: 'newest',\n      tags: [],\n      location: ''\n    };\n    setSearchInput('');\n    onFiltersChange(clearedFilters);\n  }, [onFiltersChange]);\n\n  const activeFiltersCount = useMemo(() => {\n    let count = 0;\n    if (filters.search) count++;\n    if (filters.category) count++;\n    if (filters.dateRange) count++;\n    if (filters.tags.length > 0) count++;\n    if (filters.location) count++;\n    return count;\n  }, [filters]);\n\n  const hasActiveFilters = activeFiltersCount > 0;\n\n  return (\n    <Card className=\"mb-6 border-0 shadow-sm bg-gradient-to-r from-blue-50/50 to-indigo-50/50\">\n      <CardContent className=\"p-4\">\n        {/* Main Filter Row */}\n        <div className=\"flex flex-col lg:flex-row gap-4 items-stretch lg:items-center\">\n          {/* Search Input */}\n          <div className=\"relative flex-1 min-w-0\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n            <Input\n              placeholder={t('filters.searchPlaceholder')}\n              value={searchInput}\n              onChange={handleSearchChange}\n              className=\"pl-10 pr-4 h-10 bg-white/80 backdrop-blur-sm border-white/20 focus:bg-white\"\n              disabled={isLoading}\n            />\n          </div>\n\n          {/* Category Filter */}\n          <div className=\"min-w-[140px]\">\n            <Select \n              value={filters.category} \n              onValueChange={(value) => handleFilterChange('category', value)}\n              disabled={isLoading}\n            >\n              <SelectTrigger className=\"h-10 bg-white/80 backdrop-blur-sm border-white/20 focus:bg-white\">\n                <SelectValue placeholder={t('filters.allCategories')} />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"\">{t('filters.allCategories')}</SelectItem>\n                {availableCategories.map(category => (\n                  <SelectItem key={category} value={category}>\n                    <div className=\"flex items-center gap-2\">\n                      <Tag className=\"h-3 w-3\" />\n                      {category}\n                    </div>\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Sort By */}\n          <div className=\"min-w-[120px]\">\n            <Select \n              value={filters.sortBy} \n              onValueChange={(value: any) => handleFilterChange('sortBy', value)}\n              disabled={isLoading}\n            >\n              <SelectTrigger className=\"h-10 bg-white/80 backdrop-blur-sm border-white/20 focus:bg-white\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                {SORT_OPTIONS.map(option => {\n                  const Icon = option.icon;\n                  return (\n                    <SelectItem key={option.value} value={option.value}>\n                      <div className=\"flex items-center gap-2\">\n                        <Icon className=\"h-3 w-3\" />\n                        {t(option.label)}\n                      </div>\n                    </SelectItem>\n                  );\n                })}\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Advanced Filters Toggle */}\n          <div className=\"flex items-center gap-2\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => setIsExpanded(!isExpanded)}\n              className=\"h-10 bg-white/80 backdrop-blur-sm border-white/20 hover:bg-white\"\n              disabled={isLoading}\n            >\n              <Filter className=\"h-4 w-4 mr-2\" />\n              {t('filters.advanced')}\n              {activeFiltersCount > 0 && (\n                <Badge variant=\"secondary\" className=\"ml-2 h-5 min-w-[20px] p-1\">\n                  {activeFiltersCount}\n                </Badge>\n              )}\n            </Button>\n\n            {hasActiveFilters && (\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={clearFilters}\n                className=\"h-10 text-muted-foreground hover:text-destructive\"\n                disabled={isLoading}\n              >\n                <X className=\"h-4 w-4\" />\n              </Button>\n            )}\n          </div>\n        </div>\n\n        {/* Advanced Filters */}\n        <AnimatePresence>\n          {isExpanded && (\n            <motion.div\n              initial={{ height: 0, opacity: 0 }}\n              animate={{ height: 'auto', opacity: 1 }}\n              exit={{ height: 0, opacity: 0 }}\n              transition={{ duration: 0.2 }}\n              className=\"overflow-hidden\"\n            >\n              <div className=\"pt-4 border-t border-white/20 mt-4 space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {/* Date Range */}\n                  <div>\n                    <label className=\"text-sm font-medium text-muted-foreground mb-2 block\">\n                      {t('filters.dateRange')}\n                    </label>\n                    <Select\n                      value={filters.dateRange}\n                      onValueChange={(value) => handleFilterChange('dateRange', value)}\n                      disabled={isLoading}\n                    >\n                      <SelectTrigger className=\"bg-white/80\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {DATE_RANGE_OPTIONS.map(option => (\n                          <SelectItem key={option.value} value={option.value}>\n                            {t(option.label)}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n\n                  {/* Location Filter */}\n                  {availableLocations.length > 0 && (\n                    <div>\n                      <label className=\"text-sm font-medium text-muted-foreground mb-2 block\">\n                        {t('filters.location')}\n                      </label>\n                      <Select\n                        value={filters.location || ''}\n                        onValueChange={(value) => handleFilterChange('location', value)}\n                        disabled={isLoading}\n                      >\n                        <SelectTrigger className=\"bg-white/80\">\n                          <SelectValue placeholder={t('filters.allLocations')} />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"\">{t('filters.allLocations')}</SelectItem>\n                          {availableLocations.map(location => (\n                            <SelectItem key={location} value={location}>\n                              <div className=\"flex items-center gap-2\">\n                                <MapPin className=\"h-3 w-3\" />\n                                {location}\n                              </div>\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                    </div>\n                  )}\n                </div>\n\n                {/* Tags */}\n                {availableTags.length > 0 && (\n                  <div>\n                    <label className=\"text-sm font-medium text-muted-foreground mb-2 block\">\n                      {t('filters.tags')}\n                    </label>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {availableTags.map(tag => (\n                        <Badge\n                          key={tag}\n                          variant={filters.tags.includes(tag) ? \"default\" : \"outline\"}\n                          className=\"cursor-pointer hover:bg-primary/80 transition-colors\"\n                          onClick={() => handleTagToggle(tag)}\n                        >\n                          {tag}\n                          {filters.tags.includes(tag) && (\n                            <X className=\"h-3 w-3 ml-1\" />\n                          )}\n                        </Badge>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n\n        {/* Results Summary */}\n        {totalResults > 0 && (\n          <div className=\"mt-4 pt-4 border-t border-white/20\">\n            <div className=\"flex items-center justify-between text-sm text-muted-foreground\">\n              <span>\n                {t('filters.resultsFound', { count: totalResults })}\n              </span>\n              {hasActiveFilters && (\n                <span>{t('filters.filtered')}</span>\n              )}\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","import { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent, CardFooter, CardHeader } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Calendar, Clock, Tag, MapPin, User, Share2, TrendingUp, Mail } from 'lucide-react';\nimport { format } from 'date-fns';\nimport { useTranslation } from 'react-i18next';\nimport { Blog, getLocalizedContent } from '@/hooks/useBlogs';\nimport { createSlug } from '@/utils/blogUtils';\nimport { OptimizedImage } from '@/components/OptimizedImage';\nimport { motion } from 'framer-motion';\nimport { cn } from '@/lib/utils';\nimport { useState } from 'react';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\nimport { Check, Copy } from 'lucide-react';\nimport { toast } from '@/hooks/use-toast';\n\ninterface BlogCardProps {\n  blog: Blog;\n  variant?: 'default' | 'featured' | 'compact' | 'minimal';\n  showDescription?: boolean;\n  showAuthor?: boolean;\n  index?: number;\n  className?: string;\n}\n\nexport function BlogCard({ \n  blog, \n  variant = 'default',\n  showDescription = true,\n  showAuthor = true,\n  index = 0,\n  className \n}: BlogCardProps) {\n  const { t, i18n } = useTranslation('blog');\n  const language = i18n.language;\n  const localizedContent = getLocalizedContent(blog, language);\n  const [showShareDialog, setShowShareDialog] = useState(false);\n  const [copied, setCopied] = useState(false);\n  \n  // Format date for better display\n  const formattedDate = useMemo(() => {\n    const date = blog.published_at ? new Date(blog.published_at) : new Date(blog.created_at);\n    return format(date, 'PPP');\n  }, [blog.published_at, blog.created_at]);\n\n  // Create URL-friendly slug from English title\n  const blogSlug = useMemo(() => {\n    return blog.title_en ? createSlug(blog.title_en) : blog.id;\n  }, [blog.title_en, blog.id]);\n\n  const blogPath = `/${language}/blog/${blogSlug}`;\n  \n  // Calculate estimated reading time\n  const readingTime = useMemo(() => {\n    const wordsPerMinute = 200;\n    const content = typeof localizedContent.content === 'string' ? localizedContent.content : '';\n    const wordCount = content.trim() ? content.split(/\\s+/).filter(word => word.length > 0).length : 0;\n    return Math.max(1, Math.ceil(wordCount / wordsPerMinute));\n  }, [localizedContent.content]);\n\n  // Ensure title is always a string\n  const safeTitle = typeof localizedContent.title === 'string' ? localizedContent.title : '';\n  const safeExcerpt = typeof localizedContent.excerpt === 'string' ? localizedContent.excerpt : '';\n\n  // Ensure image_url is absolute\n  const absoluteImageUrl = blog.image_url\n    ? (blog.image_url.startsWith('http') ? blog.image_url : `${window.location.origin}${blog.image_url}`)\n    : null;\n\n  // Share functionality\n  const currentUrl = window.location.origin + blogPath;\n  \n  const handleShare = async () => {\n    // Check if we're on macOS or if navigator.share is available\n    const isMacOS = navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n    const hasNativeShare = navigator.share && !isMacOS;\n    const shareUrl = window.location.origin + blogPath;\n    if (hasNativeShare) {\n      try {\n        const shareText = t('share.mobileText', { \n          title: safeTitle,\n          site: 'ZapAround'\n        });\n        const shareData: any = {\n          title: safeTitle,\n          text: shareText,\n          url: shareUrl,\n        };\n        // Only add files if we can fetch and convert the image to a File object\n        if (absoluteImageUrl) {\n          try {\n            const response = await fetch(absoluteImageUrl);\n            const blob = await response.blob();\n            // Try to get the file extension from the URL\n            const extMatch = absoluteImageUrl.match(/\\.([a-zA-Z0-9]+)(?:\\?|#|$)/);\n            const ext = extMatch ? extMatch[1] : 'jpg';\n            const file = new File([blob], `image.${ext}`, { type: blob.type });\n            if (navigator.canShare && navigator.canShare({ files: [file] })) {\n              shareData.files = [file];\n            }\n          } catch (err) {\n            // If image fetch fails, just share without files\n            console.warn('Could not fetch image for sharing:', err);\n          }\n        }\n        await navigator.share(shareData);\n      } catch (error) {\n        if (error instanceof Error && error.name !== 'AbortError') {\n          console.error('Error sharing:', error);\n        }\n      }\n    } else {\n      setShowShareDialog(true);\n    }\n  };\n\n  const handleCopyLink = async () => {\n    try {\n      const shareUrl = window.location.origin + blogPath;\n      await navigator.clipboard.writeText(shareUrl);\n      setCopied(true);\n      toast({\n        title: t('share.linkCopied'),\n        description: t('share.linkCopiedDescription'),\n      });\n      setTimeout(() => setCopied(false), 2000);\n    } catch (error) {\n      console.error('Failed to copy link:', error);\n      toast({\n        title: t('share.copyError'),\n        description: t('share.copyErrorDescription'),\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const handleSocialShare = (platform: string) => {\n    const shareText = t('share.mobileText', { \n      title: safeTitle,\n      site: 'ZapAround'\n    });\n    \n    const encodedText = encodeURIComponent(shareText);\n    const encodedUrl = encodeURIComponent(currentUrl);\n    \n    let shareUrl = '';\n    \n    switch (platform) {\n      case 'facebook':\n        shareUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodedUrl}&quote=${encodeURIComponent(safeTitle)}`;\n        break;\n      case 'twitter':\n        shareUrl = `https://twitter.com/intent/tweet?text=${encodedText}&url=${encodedUrl}`;\n        break;\n      case 'linkedin':\n        shareUrl = `https://www.linkedin.com/sharing/share-offsite/?url=${encodedUrl}`;\n        break;\n      case 'whatsapp':\n        shareUrl = `https://wa.me/?text=${encodedText}%20${encodedUrl}`;\n        break;\n      case 'telegram':\n        shareUrl = `https://t.me/share/url?url=${encodedUrl}&text=${encodedText}`;\n        break;\n      case 'email':\n        shareUrl = `mailto:?subject=${encodeURIComponent(safeTitle)}&body=${encodedText}%0A%0A${encodedUrl}`;\n        break;\n      default:\n        return;\n    }\n    \n    // Open in new window\n    window.open(shareUrl, '_blank', 'width=600,height=400,scrollbars=yes,resizable=yes');\n  };\n\n  // Animation variants for staggered appearance\n  const cardVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: (i: number) => ({\n      opacity: 1,\n      y: 0,\n      transition: {\n        delay: i * 0.1,\n        duration: 0.4,\n        ease: \"easeOut\"\n      }\n    })\n  };\n\n  if (variant === 'featured') {\n    return (\n      <motion.div\n        custom={index}\n        initial=\"hidden\"\n        animate=\"visible\"\n        variants={cardVariants}\n        className={cn(\"group\", className)}\n      >\n        <Card className=\"overflow-hidden border-0 shadow-lg hover:shadow-xl transition-all duration-300 bg-gradient-to-br from-white to-gray-50/50\">\n          <div className=\"relative\">\n            {blog.image_url && (\n              <div className=\"aspect-[16/9] lg:aspect-[21/9] overflow-hidden\">\n                <OptimizedImage\n                  src={blog.image_url}\n                  alt={safeTitle}\n                  width={800}\n                  height={400}\n                  quality={90}\n                  priority={true}\n                  className=\"w-full h-full object-cover transition-transform duration-300 group-hover:scale-105\"\n                />\n                <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent\" />\n              </div>\n            )}\n            \n            {/* Featured Badge removed for featured variant */}\n\n\n\n            {/* Overlay Content */}\n            <div className=\"absolute bottom-0 left-0 right-0 p-6 text-white\">\n              {blog.category && (\n                <Link\n                  to={`/${language}/blog/category/${blog.category.toLowerCase().replace(/\\s+/g, '-').replace(/[^a-z0-9-]/g, '')}`}\n                  onClick={(e) => e.stopPropagation()}\n                >\n                  <Badge variant=\"outline\" className=\"mb-3 border-white/30 text-white bg-white/10 backdrop-blur-sm hover:bg-white/20 transition-colors cursor-pointer\">\n                    <Tag className=\"w-3 h-3 mr-1\" />\n                    {blog.category}\n                  </Badge>\n                </Link>\n              )}\n              \n              <h2 className=\"text-2xl lg:text-3xl font-bold mb-2 line-clamp-2 leading-tight\">\n                {safeTitle}\n              </h2>\n              \n              {/* Description removed for featured variant */}\n\n              <div className=\"flex items-center gap-4 text-sm text-white/80\">\n                <div className=\"flex items-center gap-1\">\n                  <Calendar className=\"w-4 h-4\" />\n                  {formattedDate}\n                </div>\n                <div className=\"flex items-center gap-1\">\n                  <Clock className=\"w-4 h-4\" />\n                  {t('detail.readingTime', { time: readingTime })}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <CardContent className=\"p-6\">\n            <div className=\"flex flex-col items-center gap-3\">\n              <Link to={blogPath} className=\"w-full max-w-xs\">\n                <Button className=\"w-full\" size=\"lg\">\n                  {t('actions.readMore')}\n                </Button>\n              </Link>\n              <Button \n                variant=\"outline\" \n                size=\"lg\"\n                onClick={handleShare}\n                aria-label={t('share.title')}\n                className=\"border-white/30 text-white hover:bg-white/20\"\n              >\n                <Share2 className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Share Dialog */}\n        <Dialog open={showShareDialog} onOpenChange={setShowShareDialog}>\n          <DialogContent className=\"sm:max-w-md\">\n            <DialogHeader>\n              <DialogTitle className=\"text-center\">{t('share.title')}</DialogTitle>\n            </DialogHeader>\n            <div className=\"space-y-4\">\n              {/* Blog Preview */}\n              <div className=\"bg-gray-50 rounded-lg p-4 border\">\n                {absoluteImageUrl && (\n                  <div className=\"aspect-video overflow-hidden rounded-md mb-3\">\n                    <img\n                      src={absoluteImageUrl}\n                      alt={safeTitle}\n                      width={400}\n                      height={225}\n                      className=\"w-full h-full object-cover\"\n                      onError={(e) => {\n                        (e.target as HTMLImageElement).src = '/placeholder.svg';\n                      }}\n                    />\n                  </div>\n                )}\n                <h3 className=\"font-semibold text-sm mb-2 line-clamp-2\">\n                  {safeTitle}\n                </h3>\n                {safeExcerpt && (\n                  <p className=\"text-xs text-muted-foreground line-clamp-2 mb-2\">\n                    {safeExcerpt}\n                  </p>\n                )}\n                <div className=\"flex items-center gap-2 text-xs text-muted-foreground\">\n                  <span>ZapAround</span>\n                  <span>•</span>\n                  <span>{formattedDate}</span>\n                </div>\n              </div>\n              <div className=\"text-center\">\n                <p className=\"text-sm text-muted-foreground mb-4\">\n                  {t('share.description')}\n                </p>\n                <div className=\"bg-gray-50 rounded-lg p-3 border\">\n                  <p className=\"text-xs text-gray-600 break-all font-mono\">\n                    {window.location.origin + blogPath}\n                  </p>\n                </div>\n              </div>\n              <div className=\"space-y-3\">\n                <div className=\"text-center\">\n                  <p className=\"text-sm font-medium mb-3\">{t('share.shareVia')}</p>\n                  <div className=\"flex justify-center gap-2 flex-wrap\">\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => handleSocialShare('facebook')}\n                      className=\"flex items-center gap-2\"\n                    >\n                      <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\"/>\n                      </svg>\n                      Facebook\n                    </Button>\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => handleSocialShare('twitter')}\n                      className=\"flex items-center gap-2\"\n                    >\n                      <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"/>\n                      </svg>\n                      Twitter\n                    </Button>\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => handleSocialShare('whatsapp')}\n                      className=\"flex items-center gap-2\"\n                    >\n                      <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path d=\"M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.488\"/>\n                      </svg>\n                      WhatsApp\n                    </Button>\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => handleSocialShare('telegram')}\n                      className=\"flex items-center gap-2\"\n                    >\n                      <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path d=\"M11.944 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0a12 12 0 0 0-.056 0zm4.962 7.224c.1-.002.321.023.465.14a.506.506 0 0 1 .171.325c.016.093.036.306.02.472-.18 1.898-.962 6.502-1.36 8.627-.168.9-.499 1.201-.82 1.23-.696.065-1.225-.46-1.9-.902-1.056-.693-1.653-1.124-2.678-1.8-1.185-.78-.417-1.21.258-1.91.177-.184 3.247-2.977 3.307-3.23.007-.032.014-.15-.056-.212s-.174-.041-.249-.024c-.106.024-1.793 1.14-5.061 3.345-.48.33-.913.49-1.302.48-.428-.008-1.252-.241-1.865-.44-.752-.245-1.349-.374-1.297-.789.027-.216.325-.437.893-.663 3.498-1.524 5.83-2.529 6.998-3.014 3.332-1.386 4.025-1.627 4.476-1.635z\"/>\n                      </svg>\n                      Telegram\n                    </Button>\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => handleSocialShare('email')}\n                      className=\"flex items-center gap-2\"\n                    >\n                      <Mail className=\"w-4 h-4\" />\n                      Email\n                    </Button>\n                  </div>\n                </div>\n                \n                <div className=\"text-center\">\n                  <p className=\"text-sm text-muted-foreground mb-3\">{t('share.orCopyLink')}</p>\n                  <Button \n                    onClick={handleCopyLink}\n                    className=\"flex items-center gap-2 mx-auto\"\n                    disabled={copied}\n                  >\n                    {copied ? (\n                      <>\n                        <Check className=\"w-4 h-4\" />\n                        {t('share.copied')}\n                      </>\n                    ) : (\n                      <>\n                        <Copy className=\"w-4 h-4\" />\n                        {t('share.copyLink')}\n                      </>\n                    )}\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </motion.div>\n    );\n  }\n\n  if (variant === 'compact') {\n    return (\n      <motion.div\n        custom={index}\n        initial=\"hidden\"\n        animate=\"visible\"\n        variants={cardVariants}\n        className={cn(\"group\", className)}\n      >\n        <Link to={blogPath}>\n          <Card className=\"overflow-hidden border border-gray-200 hover:shadow-md transition-all duration-200 h-full\">\n            <div className=\"flex gap-4 p-4\">\n              {blog.image_url && (\n                <div className=\"aspect-square w-20 flex-shrink-0 overflow-hidden rounded-md\">\n                  <OptimizedImage\n                    src={blog.image_url}\n                    alt={safeTitle}\n                    width={80}\n                    height={80}\n                    quality={75}\n                    priority={true}\n                    className=\"w-full h-full object-cover\"\n                  />\n                </div>\n              )}\n              \n              <div className=\"flex-1 min-w-0\">\n                <h3 className=\"font-semibold text-sm line-clamp-2 mb-1\">\n                  {safeTitle}\n                </h3>\n                \n                <div className=\"flex items-center gap-2 text-xs text-muted-foreground mb-2\">\n                  <Calendar className=\"w-3 h-3\" />\n                  {formattedDate}\n                  <Clock className=\"w-3 h-3\" />\n                  {t('detail.readingTime', { time: readingTime })}\n                </div>\n\n                {blog.category && (\n                  <Link\n                    to={`/${language}/blog/category/${blog.category.toLowerCase().replace(/\\s+/g, '-').replace(/[^a-z0-9-]/g, '')}`}\n                    onClick={(e) => e.stopPropagation()}\n                  >\n                    <Badge variant=\"outline\" className=\"text-xs hover:bg-primary hover:text-primary-foreground transition-colors cursor-pointer\">\n                      {blog.category}\n                    </Badge>\n                  </Link>\n                )}\n              </div>\n            </div>\n          </Card>\n        </Link>\n      </motion.div>\n    );\n  }\n\n  if (variant === 'minimal') {\n    return (\n      <motion.div\n        custom={index}\n        initial=\"hidden\"\n        animate=\"visible\"\n        variants={cardVariants}\n        className={cn(\"group\", className)}\n      >\n        <Link to={blogPath} className=\"block\">\n          <div className=\"py-4 border-b border-gray-100 hover:bg-gray-50/50 transition-colors duration-200 rounded-lg px-4\">\n            <div className=\"flex items-start justify-between gap-4\">\n              <div className=\"flex-1 min-w-0\">\n                <h3 className=\"font-semibold text-base line-clamp-2 mb-1 group-hover:text-primary transition-colors\">\n                  {safeTitle}\n                </h3>\n                \n                {showDescription && safeExcerpt && (\n                  <p className=\"text-muted-foreground text-sm line-clamp-2 mb-2\">\n                    {safeExcerpt}\n                  </p>\n                )}\n\n                <div className=\"flex items-center gap-3 text-xs text-muted-foreground\">\n                  <span>{formattedDate}</span>\n                  <span>•</span>\n                  <span>{t('detail.readingTime', { time: readingTime })}</span>\n                  {blog.category && (\n                    <>\n                      <span>•</span>\n                      <Link\n                        to={`/${language}/blog/category/${blog.category.toLowerCase().replace(/\\s+/g, '-').replace(/[^a-z0-9-]/g, '')}`}\n                        className=\"hover:text-primary transition-colors\"\n                        onClick={(e) => e.stopPropagation()}\n                      >\n                        {blog.category}\n                      </Link>\n                    </>\n                  )}\n                </div>\n              </div>\n\n              {blog.image_url && (\n                <div className=\"aspect-square w-16 flex-shrink-0 overflow-hidden rounded\">\n                  <OptimizedImage\n                    src={blog.image_url}\n                    alt={safeTitle}\n                    width={64}\n                    height={64}\n                    quality={75}\n                    priority={true}\n                    className=\"w-full h-full object-cover\"\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n        </Link>\n      </motion.div>\n    );\n  }\n\n  // Default variant\n  return (\n    <motion.div\n      custom={index}\n      initial=\"hidden\"\n      animate=\"visible\"\n      variants={cardVariants}\n      className={cn(\"group\", className)}\n    >\n      <Card className=\"overflow-hidden transition-all hover:shadow-lg h-full flex flex-col border border-gray-200\">\n        {blog.image_url && (\n          <div className=\"aspect-video overflow-hidden relative\">\n            <OptimizedImage\n              src={blog.image_url}\n              alt={safeTitle}\n              width={400}\n              height={225}\n              quality={85}\n              priority={true}\n              className=\"w-full h-full object-cover transition-transform hover:scale-105 duration-300\"\n            />\n            \n\n          </div>\n        )}\n\n        <CardHeader className=\"pb-3\">\n          <div className=\"flex items-center justify-between mb-2\">\n            {blog.category && (\n              <Link\n                to={`/${language}/blog/category/${blog.category.toLowerCase().replace(/\\s+/g, '-').replace(/[^a-z0-9-]/g, '')}`}\n                onClick={(e) => e.stopPropagation()}\n              >\n                <Badge variant=\"outline\" className=\"text-xs hover:bg-primary hover:text-primary-foreground transition-colors cursor-pointer\">\n                  <Tag className=\"w-3 h-3 mr-1\" />\n                  {blog.category}\n                </Badge>\n              </Link>\n            )}\n            \n            {blog.location && (\n              <Badge variant=\"outline\" className=\"text-xs bg-blue-50 border-blue-200\">\n                <MapPin className=\"w-3 h-3 mr-1\" />\n                {blog.location}\n              </Badge>\n            )}\n          </div>\n\n          <h3 className=\"text-lg font-semibold line-clamp-2 leading-tight group-hover:text-primary transition-colors\">\n            {safeTitle}\n          </h3>\n        </CardHeader>\n\n        <CardContent className=\"flex-1 pt-0\">\n          {showDescription && safeExcerpt && (\n            <p className=\"text-muted-foreground text-sm line-clamp-3 mb-4\">\n              {safeExcerpt}\n            </p>\n          )}\n\n          <div className=\"flex items-center gap-4 text-xs text-muted-foreground mb-4\">\n            <div className=\"flex items-center gap-1\">\n              <Calendar className=\"w-3 h-3\" />\n              {formattedDate}\n            </div>\n            <div className=\"flex items-center gap-1\">\n              <Clock className=\"w-3 h-3\" />\n                                {t('detail.readingTime', { time: readingTime })}\n            </div>\n          </div>\n\n\n        </CardContent>\n\n        <CardFooter className=\"pt-0\">\n          <div className=\"flex items-center justify-between w-full\">\n            <Link to={blogPath} className=\"flex-1\">\n              <Button variant=\"outline\" className=\"w-full\">\n                {t('actions.readMore')}\n              </Button>\n            </Link>\n            \n            <Button \n              variant=\"ghost\" \n              size=\"sm\" \n              className=\"ml-2\"\n              onClick={handleShare}\n              aria-label={t('share.title')}\n            >\n              <Share2 className=\"w-4 h-4\" />\n            </Button>\n          </div>\n        </CardFooter>\n      </Card>\n\n      {/* Share Dialog */}\n      <Dialog open={showShareDialog} onOpenChange={setShowShareDialog}>\n        <DialogContent className=\"sm:max-w-md\">\n          <DialogHeader>\n            <DialogTitle className=\"text-center\">{t('share.title')}</DialogTitle>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            {/* Blog Preview */}\n            <div className=\"bg-gray-50 rounded-lg p-4 border\">\n              {absoluteImageUrl && (\n                <div className=\"aspect-video overflow-hidden rounded-md mb-3\">\n                  <img\n                    src={absoluteImageUrl}\n                    alt={safeTitle}\n                    width={400}\n                    height={225}\n                    className=\"w-full h-full object-cover\"\n                    onError={(e) => {\n                      (e.target as HTMLImageElement).src = '/placeholder.svg';\n                    }}\n                  />\n                </div>\n              )}\n              <h3 className=\"font-semibold text-sm mb-2 line-clamp-2\">\n                {safeTitle}\n              </h3>\n              {safeExcerpt && (\n                <p className=\"text-xs text-muted-foreground line-clamp-2 mb-2\">\n                  {safeExcerpt}\n                </p>\n              )}\n              <div className=\"flex items-center gap-2 text-xs text-muted-foreground\">\n                <span>ZapAround</span>\n                <span>•</span>\n                <span>{formattedDate}</span>\n              </div>\n            </div>\n\n            <div className=\"text-center\">\n              <p className=\"text-sm text-muted-foreground mb-4\">\n                {t('share.description')}\n              </p>\n              <div className=\"bg-gray-50 rounded-lg p-3 border\">\n                <p className=\"text-xs text-gray-600 break-all font-mono\">\n                  {window.location.origin + blogPath}\n                </p>\n              </div>\n            </div>\n            <div className=\"space-y-3\">\n              <div className=\"text-center\">\n                <p className=\"text-sm font-medium mb-3\">{t('share.shareVia')}</p>\n                <div className=\"flex justify-center gap-2 flex-wrap\">\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => handleSocialShare('facebook')}\n                    className=\"flex items-center gap-2\"\n                  >\n                    <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\"/>\n                    </svg>\n                    Facebook\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => handleSocialShare('twitter')}\n                    className=\"flex items-center gap-2\"\n                  >\n                    <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"/>\n                    </svg>\n                    Twitter\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => handleSocialShare('whatsapp')}\n                    className=\"flex items-center gap-2\"\n                  >\n                    <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path d=\"M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.488\"/>\n                    </svg>\n                    WhatsApp\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => handleSocialShare('telegram')}\n                    className=\"flex items-center gap-2\"\n                  >\n                    <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path d=\"M11.944 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0a12 12 0 0 0-.056 0zm4.962 7.224c.1-.002.321.023.465.14a.506.506 0 0 1 .171.325c.016.093.036.306.02.472-.18 1.898-.962 6.502-1.36 8.627-.168.9-.499 1.201-.82 1.23-.696.065-1.225-.46-1.9-.902-1.056-.693-1.653-1.124-2.678-1.8-1.185-.78-.417-1.21.258-1.91.177-.184 3.247-2.977 3.307-3.23.007-.032.014-.15-.056-.212s-.174-.041-.249-.024c-.106.024-1.793 1.14-5.061 3.345-.48.33-.913.49-1.302.48-.428-.008-1.252-.241-1.865-.44-.752-.245-1.349-.374-1.297-.789.027-.216.325-.437.893-.663 3.498-1.524 5.83-2.529 6.998-3.014 3.332-1.386 4.025-1.627 4.476-1.635z\"/>\n                    </svg>\n                    Telegram\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => handleSocialShare('email')}\n                    className=\"flex items-center gap-2\"\n                  >\n                    <Mail className=\"w-4 h-4\" />\n                    Email\n                  </Button>\n                </div>\n              </div>\n              \n              <div className=\"text-center\">\n                <p className=\"text-sm text-muted-foreground mb-3\">{t('share.orCopyLink')}</p>\n                <Button \n                  onClick={handleCopyLink}\n                  className=\"flex items-center gap-2 mx-auto\"\n                  disabled={copied}\n                >\n                  {copied ? (\n                    <>\n                      <Check className=\"w-4 h-4\" />\n                      {t('share.copied')}\n                    </>\n                  ) : (\n                    <>\n                      <Copy className=\"w-4 h-4\" />\n                      {t('share.copyLink')}\n                    </>\n                  )}\n                </Button>\n              </div>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </motion.div>\n  );\n}\n\n// Loading skeleton for blog cards\nexport function BlogCardSkeleton({ variant = 'default' }: { variant?: 'default' | 'featured' | 'compact' | 'minimal' }) {\n  if (variant === 'featured') {\n    return (\n      <Card className=\"overflow-hidden\">\n        <Skeleton className=\"aspect-[21/9] w-full\" />\n        <CardContent className=\"p-6\">\n          <Skeleton className=\"h-4 w-20 mb-3\" />\n          <Skeleton className=\"h-8 w-full mb-2\" />\n          <Skeleton className=\"h-6 w-3/4 mb-4\" />\n          <div className=\"flex gap-4\">\n            <Skeleton className=\"h-4 w-24\" />\n            <Skeleton className=\"h-4 w-20\" />\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (variant === 'compact') {\n    return (\n      <Card className=\"overflow-hidden\">\n        <div className=\"flex gap-4 p-4\">\n          <Skeleton className=\"aspect-square w-20 flex-shrink-0 rounded-md\" />\n          <div className=\"flex-1\">\n            <Skeleton className=\"h-4 w-full mb-2\" />\n            <Skeleton className=\"h-3 w-24 mb-2\" />\n            <Skeleton className=\"h-4 w-16\" />\n          </div>\n        </div>\n      </Card>\n    );\n  }\n\n  if (variant === 'minimal') {\n    return (\n      <div className=\"py-4 border-b border-gray-100\">\n        <div className=\"flex justify-between gap-4\">\n          <div className=\"flex-1\">\n            <Skeleton className=\"h-5 w-full mb-2\" />\n            <Skeleton className=\"h-4 w-3/4 mb-2\" />\n            <Skeleton className=\"h-3 w-48\" />\n          </div>\n          <Skeleton className=\"aspect-square w-16 flex-shrink-0 rounded\" />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Card className=\"overflow-hidden h-full flex flex-col\">\n      <Skeleton className=\"aspect-video w-full\" />\n      <CardHeader className=\"pb-3\">\n        <Skeleton className=\"h-4 w-20 mb-2\" />\n        <Skeleton className=\"h-6 w-full mb-1\" />\n        <Skeleton className=\"h-5 w-3/4\" />\n      </CardHeader>\n      <CardContent className=\"flex-1 pt-0\">\n        <Skeleton className=\"h-4 w-full mb-1\" />\n        <Skeleton className=\"h-4 w-full mb-1\" />\n        <Skeleton className=\"h-4 w-2/3 mb-4\" />\n        <div className=\"flex gap-4\">\n          <Skeleton className=\"h-3 w-20\" />\n          <Skeleton className=\"h-3 w-16\" />\n        </div>\n      </CardContent>\n      <CardFooter className=\"pt-0\">\n        <Skeleton className=\"h-10 w-full\" />\n      </CardFooter>\n    </Card>\n  );\n}\n","import { useState, useEffect, useCallback, useRef, useMemo } from 'react';\nimport { useBlogs, useBlogsByCategory } from '@/hooks/useBlogs';\nimport { BlogFilters, BlogFiltersState } from './BlogFilters';\nimport { BlogCard, BlogCardSkeleton } from './EnhancedBlogCard';\nimport { useTranslation } from 'react-i18next';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { supabase } from '@/integrations/supabase/client';\nimport { RealtimePostgresChangesPayload } from '@supabase/supabase-js';\nimport { Button } from '@/components/ui/button';\nimport { AlertCircle, RefreshCw, BookOpen, Grid, List, Loader2 } from 'lucide-react';\nimport { Blog } from '@/types/blog';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { debounce } from 'lodash';\n\ntype ViewMode = 'grid' | 'list' | 'minimal';\n\ninterface BlogListState {\n  currentPage: number;\n  totalPages: number;\n  totalPosts: number;\n  isLoading: boolean;\n  error: string | null;\n  viewMode: ViewMode;\n  filters: BlogFiltersState;\n}\n\n// Define a type for the blog payload\ntype BlogPayload = {\n  id: string;\n  published_at: string | null;\n  is_published: boolean;\n  [key: string]: any;\n} | null;\n\nexport function EnhancedBlogList() {\n  const { t, i18n } = useTranslation('blog');\n  const queryClient = useQueryClient();\n  const blogsRef = useRef<HTMLDivElement>(null);\n  const postsPerPage = 12;\n\n  const [state, setState] = useState<BlogListState>({\n    currentPage: 1,\n    totalPages: 1,\n    totalPosts: 0,\n    isLoading: false,\n    error: null,\n    viewMode: 'grid',\n    filters: {\n      search: '',\n      category: '',\n      dateRange: '',\n      sortBy: 'newest',\n      tags: [],\n      location: ''\n    }\n  });\n\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [featuredBlogs, setFeaturedBlogs] = useState<Blog[]>([]);\n\n  // Subscribe to real-time updates\n  useEffect(() => {\n    const channel = supabase\n      .channel('blogs_changes')\n      .on(\n        'postgres_changes',\n        {\n          event: '*',\n          schema: 'public',\n          table: 'blogs'\n        },\n        (payload: RealtimePostgresChangesPayload<BlogPayload>) => {\n          if (payload.new && 'is_published' in payload.new && payload.new.is_published) {\n            queryClient.invalidateQueries({ queryKey: ['blogs'] });\n          }\n        }\n      )\n      .subscribe();\n\n    return () => {\n      supabase.removeChannel(channel);\n    };\n  }, [queryClient]);\n\n  // Fetch blogs based on filters\n  const shouldUseCategoryQuery = Boolean(state.filters.category && state.filters.category.trim() !== '');\n  \n  const { \n    data: blogsData, \n    isLoading: isBlogsLoading, \n    error: fetchError \n  } = useBlogs(\n    state.currentPage, \n    postsPerPage, \n    i18n.language\n  );\n\n  const { \n    data: categoryBlogsData, \n    isLoading: isCategoryLoading,\n    error: categoryError \n  } = useBlogsByCategory(\n    state.filters.category,\n    state.currentPage,\n    postsPerPage,\n    {\n      enabled: shouldUseCategoryQuery,\n      staleTime: 1000 * 60 * 5,\n      gcTime: 1000 * 60 * 30,\n    }\n  );\n\n  // Determine which data to use\n  const currentData = shouldUseCategoryQuery ? categoryBlogsData : blogsData;\n  const currentLoading = shouldUseCategoryQuery ? isCategoryLoading : isBlogsLoading;\n  const currentError = shouldUseCategoryQuery ? categoryError : fetchError;\n\n  // Update state when data changes\n  useEffect(() => {\n    if (currentData) {\n      setState(prev => ({\n        ...prev,\n        totalPages: currentData.totalPages || 1,\n        totalPosts: currentData.count || 0,\n        isLoading: false,\n        error: null\n      }));\n    }\n  }, [currentData]);\n\n  // Update loading state\n  useEffect(() => {\n    setState(prev => ({\n      ...prev,\n      isLoading: currentLoading\n    }));\n  }, [currentLoading]);\n\n  // Handle errors\n  useEffect(() => {\n    if (currentError) {\n      setState(prev => ({\n        ...prev,\n        error: t('error.title'),\n        isLoading: false\n      }));\n    }\n  }, [currentError, t]);\n\n  // Filter and sort blogs\n  const filteredAndSortedBlogs = useMemo(() => {\n    if (!currentData?.blogs) return [];\n\n    let blogs = [...currentData.blogs].filter((blog: Blog) => blog.is_published);\n\n    // Apply search filter\n    if (state.filters.search) {\n      const searchLower = state.filters.search.toLowerCase();\n      blogs = blogs.filter(blog => {\n        const titleMatch = blog.title_en?.toLowerCase().includes(searchLower) ||\n                          blog.title_fr?.toLowerCase().includes(searchLower) ||\n                          blog.title_es?.toLowerCase().includes(searchLower);\n        const contentMatch = blog.content_en?.toLowerCase().includes(searchLower) ||\n                            blog.content_fr?.toLowerCase().includes(searchLower) ||\n                            blog.content_es?.toLowerCase().includes(searchLower);\n        return titleMatch || contentMatch;\n      });\n    }\n\n    // Apply location filter\n    if (state.filters.location) {\n      blogs = blogs.filter(blog => blog.location === state.filters.location);\n    }\n\n    // Apply date range filter\n    if (state.filters.dateRange) {\n      const now = new Date();\n      const filterDate = new Date();\n      \n      switch (state.filters.dateRange) {\n        case 'week':\n          filterDate.setDate(now.getDate() - 7);\n          break;\n        case 'month':\n          filterDate.setMonth(now.getMonth() - 1);\n          break;\n        case 'quarter':\n          filterDate.setMonth(now.getMonth() - 3);\n          break;\n        case 'year':\n          filterDate.setFullYear(now.getFullYear() - 1);\n          break;\n      }\n      \n      blogs = blogs.filter(blog => {\n        const blogDate = new Date(blog.published_at || blog.created_at);\n        return blogDate >= filterDate;\n      });\n    }\n\n    // Apply tags filter\n    if (state.filters.tags.length > 0) {\n      blogs = blogs.filter(blog => \n        state.filters.tags.some(tag => \n          blog.activities?.includes(tag) || \n          blog.category?.toLowerCase().includes(tag.toLowerCase())\n        )\n      );\n    }\n\n    // Apply sorting\n    blogs.sort((a, b) => {\n      const dateA = new Date(a.published_at || a.created_at);\n      const dateB = new Date(b.published_at || b.created_at);\n      \n      switch (state.filters.sortBy) {\n        case 'oldest':\n          return dateA.getTime() - dateB.getTime();\n        case 'popular':\n          // Placeholder for popularity sorting - would need view counts\n          return dateB.getTime() - dateA.getTime();\n        case 'trending':\n          // Placeholder for trending sorting - would need engagement metrics\n          return dateB.getTime() - dateA.getTime();\n        case 'newest':\n        default:\n          return dateB.getTime() - dateA.getTime();\n      }\n    });\n\n    return blogs;\n  }, [currentData, state.filters]);\n\n  // Get unique categories, tags, and locations for filters\n  const filterOptions = useMemo(() => {\n    if (!currentData?.blogs) {\n      return { categories: [], tags: [], locations: [] };\n    }\n\n    const categories = Array.from(\n      new Set(\n        currentData.blogs\n          .filter((blog: Blog) => blog.category)\n          .map((blog: Blog) => blog.category)\n      )\n    ).filter(Boolean) as string[];\n\n    const tags = Array.from(\n      new Set(\n        currentData.blogs\n          .flatMap((blog: Blog) => blog.activities || [])\n          .filter(Boolean)\n      )\n    ) as string[];\n\n    const locations = Array.from(\n      new Set(\n        currentData.blogs\n          .filter((blog: Blog) => blog.location)\n          .map((blog: Blog) => blog.location)\n      )\n    ).filter(Boolean) as string[];\n\n    return { categories, tags, locations };\n  }, [currentData]);\n\n  // Fetch featured blogs\n  useEffect(() => {\n    const fetchFeaturedBlogs = async () => {\n      try {\n        const { data, error } = await supabase\n          .from('blogs')\n          .select('*')\n          .eq('is_published', true)\n          .order('published_at', { ascending: false })\n          .limit(3);\n\n        if (!error && data) {\n          setFeaturedBlogs(data);\n        }\n      } catch (err) {\n        console.error('Error fetching featured blogs:', err);\n      }\n    };\n\n    fetchFeaturedBlogs();\n  }, []);\n\n  // Handle refresh\n  const handleRefresh = useCallback(async () => {\n    setIsRefreshing(true);\n    try {\n      await queryClient.invalidateQueries({ queryKey: ['blogs'] });\n    } catch (err) {\n              setState(prev => ({ ...prev, error: t('error.title') }));\n    } finally {\n      setIsRefreshing(false);\n    }\n  }, [queryClient, t]);\n\n  // Handle page change\n  const handlePageChange = useCallback((page: number) => {\n    setState(prev => ({ ...prev, currentPage: page }));\n    if (blogsRef.current) {\n      blogsRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, []);\n\n  // Handle filters change\n  const handleFiltersChange = useCallback((filters: BlogFiltersState) => {\n    setState(prev => ({\n      ...prev,\n      filters,\n      currentPage: 1 // Reset to first page when filters change\n    }));\n  }, []);\n\n  // Handle view mode change\n  const handleViewModeChange = useCallback((viewMode: ViewMode) => {\n    setState(prev => ({ ...prev, viewMode }));\n  }, []);\n\n  // Show loading state\n  if (state.isLoading && state.currentPage === 1) {\n    return (\n      <div className=\"space-y-6\">\n        <BlogFilters\n          filters={state.filters}\n          onFiltersChange={handleFiltersChange}\n          availableCategories={filterOptions.categories}\n          availableTags={filterOptions.tags}\n          availableLocations={filterOptions.locations}\n          isLoading={true}\n        />\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {Array.from({ length: 9 }).map((_, i) => (\n            <BlogCardSkeleton key={i} variant=\"default\" />\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  // Show error state\n  if (state.error && !state.isLoading) {\n    return (\n      <div className=\"flex flex-col items-center justify-center py-12\">\n        <AlertCircle className=\"h-12 w-12 text-destructive mx-auto mb-4\" />\n        <h3 className=\"text-lg font-semibold mb-2\">{t('error.title')}</h3>\n        <p className=\"text-muted-foreground mb-4\">{t('error.description')}</p>\n        <Button onClick={handleRefresh} disabled={isRefreshing}>\n          {isRefreshing ? (\n            <>\n              <RefreshCw className=\"mr-2 h-4 w-4 animate-spin\" />\n              {t('error.refreshing')}\n            </>\n          ) : (\n            <>\n              <RefreshCw className=\"mr-2 h-4 w-4\" />\n              {t('error.tryAgain')}\n            </>\n          )}\n        </Button>\n      </div>\n    );\n  }\n\n  // Show empty state\n  if (filteredAndSortedBlogs.length === 0 && !state.isLoading) {\n    return (\n      <div className=\"space-y-6\">\n        <BlogFilters\n          filters={state.filters}\n          onFiltersChange={handleFiltersChange}\n          availableCategories={filterOptions.categories}\n          availableTags={filterOptions.tags}\n          availableLocations={filterOptions.locations}\n          totalResults={0}\n        />\n        \n        <div className=\"text-center py-12\">\n          <BookOpen className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n                  <h3 className=\"text-lg font-semibold mb-2\">{t('empty.noPosts')}</h3>\n        <p className=\"text-muted-foreground mb-4\">{t('empty.noPostsDescription')}</p>\n          <Button variant=\"outline\" onClick={() => handleFiltersChange({\n            search: '',\n            category: '',\n            dateRange: '',\n            sortBy: 'newest',\n            tags: [],\n            location: ''\n          })}>\n            {t('filters.clearFilters')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\" ref={blogsRef}>\n      {/* Filters */}\n      <BlogFilters\n        filters={state.filters}\n        onFiltersChange={handleFiltersChange}\n        availableCategories={filterOptions.categories}\n        availableTags={filterOptions.tags}\n        availableLocations={filterOptions.locations}\n        isLoading={state.isLoading}\n        totalResults={filteredAndSortedBlogs.length}\n      />\n\n      {/* Featured Section */}\n      {featuredBlogs.length > 0 && state.currentPage === 1 && !Object.values(state.filters).some(f => \n        Array.isArray(f) ? f.length > 0 : f !== '' && f !== 'newest'\n      ) && (\n        <Card className=\"mb-8 border-0 bg-gradient-to-r from-primary/5 to-secondary/5\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <BookOpen className=\"w-5 h-5\" />\n              {t('card.featured')}\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6\">\n              {featuredBlogs.slice(0, 3).map((blog, index) => (\n                <BlogCard\n                  key={blog.id}\n                  blog={blog}\n                  variant=\"featured\"\n                  index={index}\n                />\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* View Mode Selector */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-2\">\n          <span className=\"text-sm text-muted-foreground\">\n            {t('viewModes.title')}:\n          </span>\n          <Tabs value={state.viewMode} onValueChange={handleViewModeChange as any}>\n            <TabsList className=\"grid w-full grid-cols-3\">\n              <TabsTrigger value=\"grid\" className=\"flex items-center gap-1\">\n                <Grid className=\"w-4 h-4\" />\n                {t('viewModes.grid')}\n              </TabsTrigger>\n              <TabsTrigger value=\"list\" className=\"flex items-center gap-1\">\n                <List className=\"w-4 h-4\" />\n                {t('viewModes.list')}\n              </TabsTrigger>\n              <TabsTrigger value=\"minimal\" className=\"flex items-center gap-1\">\n                <List className=\"w-4 h-4\" />\n                {t('viewModes.minimal')}\n              </TabsTrigger>\n            </TabsList>\n          </Tabs>\n        </div>\n\n        {state.isLoading && (\n          <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n            <Loader2 className=\"w-4 h-4 animate-spin\" />\n            {t('loading.posts')}\n          </div>\n        )}\n      </div>\n\n      {/* Blog Grid/List */}\n      <AnimatePresence mode=\"wait\">\n        <motion.div\n          key={state.viewMode}\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          exit={{ opacity: 0, y: -20 }}\n          transition={{ duration: 0.2 }}\n          className={`\n            ${state.viewMode === 'grid' ? 'grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6' : ''}\n            ${state.viewMode === 'list' ? 'grid grid-cols-1 lg:grid-cols-2 gap-4' : ''}\n            ${state.viewMode === 'minimal' ? 'space-y-0' : ''}\n          `}\n        >\n          {filteredAndSortedBlogs.map((blog, index) => (\n            <BlogCard\n              key={blog.id}\n              blog={blog}\n              variant={state.viewMode === 'grid' ? 'default' : state.viewMode === 'list' ? 'compact' : 'minimal'}\n              index={index}\n              showDescription={state.viewMode !== 'minimal'}\n            />\n          ))}\n        </motion.div>\n      </AnimatePresence>\n\n      {/* Load More / Pagination */}\n      {state.totalPages > 1 && (\n        <div className=\"flex justify-center pt-8\">\n          <div className=\"flex items-center gap-2\">\n            <Button\n              variant=\"outline\"\n              disabled={state.currentPage === 1 || state.isLoading}\n              onClick={() => handlePageChange(state.currentPage - 1)}\n            >\n              {t('pagination.previous')}\n            </Button>\n            \n            <div className=\"flex items-center gap-1\">\n              {Array.from({ length: Math.min(5, state.totalPages) }, (_, i) => {\n                const page = i + 1;\n                return (\n                  <Button\n                    key={page}\n                    variant={page === state.currentPage ? \"default\" : \"outline\"}\n                    size=\"sm\"\n                    onClick={() => handlePageChange(page)}\n                    disabled={state.isLoading}\n                  >\n                    {page}\n                  </Button>\n                );\n              })}\n            </div>\n            \n            <Button\n              variant=\"outline\"\n              disabled={state.currentPage === state.totalPages || state.isLoading}\n              onClick={() => handlePageChange(state.currentPage + 1)}\n            >\n              {t('pagination.next')}\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import { useTranslation } from 'react-i18next';\nimport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n} from '@/components/ui/pagination';\nimport { Button } from '@/components/ui/button';\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\n\ninterface BlogPaginationProps {\n  currentPage: number;\n  totalPages: number;\n  totalPosts: number;\n  postsPerPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport function BlogPagination({\n  currentPage,\n  totalPages,\n  totalPosts,\n  postsPerPage,\n  onPageChange,\n}: BlogPaginationProps) {\n  const { t } = useTranslation('blog');\n\n  // Don't show pagination if there's only one page or no posts\n  if (totalPages <= 1 || totalPosts === 0) {\n    return null;\n  }\n\n  // Calculate the range of posts being shown\n  const startPost = (currentPage - 1) * postsPerPage + 1;\n  const endPost = Math.min(currentPage * postsPerPage, totalPosts);\n\n  // Generate page numbers to show\n  const getPageNumbers = () => {\n    const pages = [];\n    const maxVisiblePages = 5;\n    \n    if (totalPages <= maxVisiblePages) {\n      // Show all pages if total is small\n      for (let i = 1; i <= totalPages; i++) {\n        pages.push(i);\n      }\n    } else {\n      // Show first page, last page, current page, and neighbors\n      if (currentPage <= 3) {\n        // Near the beginning\n        for (let i = 1; i <= 4; i++) {\n          pages.push(i);\n        }\n        pages.push('ellipsis');\n        pages.push(totalPages);\n      } else if (currentPage >= totalPages - 2) {\n        // Near the end\n        pages.push(1);\n        pages.push('ellipsis');\n        for (let i = totalPages - 3; i <= totalPages; i++) {\n          pages.push(i);\n        }\n      } else {\n        // In the middle\n        pages.push(1);\n        pages.push('ellipsis');\n        for (let i = currentPage - 1; i <= currentPage + 1; i++) {\n          pages.push(i);\n        }\n        pages.push('ellipsis');\n        pages.push(totalPages);\n      }\n    }\n    \n    return pages;\n  };\n\n  const pageNumbers = getPageNumbers();\n\n  return (\n    <div className=\"flex flex-col items-center gap-4 py-8\">\n      {/* Posts count info */}\n      <div className=\"text-sm text-muted-foreground\">\n        {t('pagination.showing')} {startPost} {t('pagination.to')} {endPost} {t('pagination.ofTotal', { total: totalPosts })}\n      </div>\n\n      {/* Pagination controls */}\n      <Pagination>\n        <PaginationContent>\n          {/* Previous button */}\n          <PaginationItem>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => onPageChange(currentPage - 1)}\n              disabled={currentPage === 1}\n              className=\"gap-2\"\n            >\n              <ChevronLeft className=\"h-4 w-4\" />\n              {t('pagination.previous')}\n            </Button>\n          </PaginationItem>\n\n          {/* Page numbers */}\n          {pageNumbers.map((page, index) => (\n            <PaginationItem key={index}>\n              {page === 'ellipsis' ? (\n                <PaginationEllipsis />\n              ) : (\n                <Button\n                  variant={currentPage === page ? \"default\" : \"outline\"}\n                  size=\"sm\"\n                  onClick={() => onPageChange(page as number)}\n                  className=\"min-w-[40px]\"\n                >\n                  {page}\n                </Button>\n              )}\n            </PaginationItem>\n          ))}\n\n          {/* Next button */}\n          <PaginationItem>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => onPageChange(currentPage + 1)}\n              disabled={currentPage === totalPages}\n              className=\"gap-2\"\n            >\n              {t('pagination.next')}\n              <ChevronRight className=\"h-4 w-4\" />\n            </Button>\n          </PaginationItem>\n        </PaginationContent>\n      </Pagination>\n\n      {/* Page indicator */}\n      <div className=\"text-sm text-muted-foreground\">\n                  {t('pagination.page')} {currentPage} {t('pagination.of')} {totalPages}\n      </div>\n    </div>\n  );\n} ","import { useMemo } from 'react';\nimport { format } from 'date-fns';\nimport { Calendar, Tag } from 'lucide-react';\nimport { Blog } from '@/types/blog';\nimport { getLocalizedContent } from '@/utils/blogUtils';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\n\ninterface BlogHeaderProps {\n  blog: Blog;\n  language: string;\n}\n\nexport function BlogHeader({ blog, language }: BlogHeaderProps) {\n  const { t } = useTranslation('blog');\n  \n  // Memoize localized content to prevent recalculation on each render\n  const localizedContent = useMemo(() => {\n    return getLocalizedContent(blog, language);\n  }, [blog, language]);\n\n  // Memoize formatted date to prevent recalculation on each render\n  const formattedDate = useMemo(() => {\n    return blog.published_at \n      ? format(new Date(blog.published_at), 'PPP')\n      : format(new Date(blog.created_at), 'PPP');\n  }, [blog]);\n\n  // Memoize reading time calculation\n  const readingTime = useMemo(() => {\n    if (!localizedContent.content) return 1;\n    const wordsPerMinute = 200;\n    const content = localizedContent.content.trim();\n    const wordCount = content ? content.split(/\\s+/).filter(word => word.length > 0).length : 0;\n    return Math.max(1, Math.ceil(wordCount / wordsPerMinute));\n  }, [localizedContent.content]);\n\n  return (\n    <header className=\"p-6 border-b\">\n      <h1 className=\"text-3xl md:text-4xl font-bold mb-4 text-primary\">{localizedContent.title}</h1>\n      \n      <div className=\"flex flex-wrap items-center gap-4 text-muted-foreground mb-4\">\n        <div className=\"flex items-center\">\n          <Calendar className=\"mr-1.5 h-4 w-4\" />\n          <span>\n            {blog.published_at \n                          ? `${t('detail.publishedOn')} ${formattedDate}`\n            : `${t('detail.createdOn')} ${formattedDate}`}\n          </span>\n        </div>\n        {blog.category && (\n          <div className=\"flex items-center\">\n            <Tag className=\"mr-1.5 h-4 w-4\" />\n            <Link \n              to={`/${language}/blog/category/${blog.category.toLowerCase()}`}\n              className=\"text-primary font-medium hover:underline\"\n            >\n              {blog.category}\n            </Link>\n          </div>\n        )}\n        <div className=\"text-sm text-muted-foreground\">\n                      {t('detail.readingTime', { time: readingTime })}\n        </div>\n      </div>\n      \n\n    </header>\n  );\n}\n","import { useMemo, useState, SyntheticEvent } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { format } from 'date-fns';\nimport { ImageOff } from 'lucide-react';\nimport { Blog } from '@/types/blog';\nimport { getLocalizedContent } from '@/utils/blogUtils';\nimport { useTranslation } from 'react-i18next';\n\ninterface BlogContentProps {\n  blog: Blog;\n  language: string;\n}\n\nexport function BlogContent({ blog, language }: BlogContentProps) {\n  const { t } = useTranslation('blog');\n  const [imageError, setImageError] = useState(false);\n  \n  // Memoize localized content to prevent recalculation on each render\n  const localizedContent = useMemo(() => {\n    return getLocalizedContent(blog, language);\n  }, [blog, language]);\n\n  // Memoize formatted date for the footer\n  const formattedDate = useMemo(() => {\n    return blog.published_at \n      ? format(new Date(blog.published_at), 'PPP')\n      : format(new Date(blog.created_at), 'PPP');\n  }, [blog]);\n\n  // Handle image loading error\n  const handleImageError = (e: SyntheticEvent<HTMLImageElement, Event>) => {\n    console.error('Failed to load blog image:', blog.image_url);\n    setImageError(true);\n  };\n\n  // Ensure title is always a string\n  const safeTitle = typeof localizedContent.title === 'string' \n    ? localizedContent.title \n    : '';\n\n  // Ensure content is always a string\n  const safeContent = typeof localizedContent.content === 'string' \n    ? localizedContent.content \n    : '';\n\n  // Ensure image_url is absolute\n  const imageUrl = blog.image_url\n    ? (blog.image_url.startsWith('http') ? blog.image_url : `https://zaparound.com${blog.image_url}`)\n    : null;\n\n  // Debug: log the image URL\n  if (imageUrl) {\n    console.log('Blog image URL:', imageUrl);\n  }\n\n  return (\n    <>\n      {imageUrl && !imageError ? (\n        <div className=\"w-full aspect-[16/9] relative\">\n          <img \n            src={imageUrl} \n            alt={safeTitle} \n            className=\"w-full h-full object-cover\"\n            loading=\"lazy\"\n            decoding=\"async\"\n            width=\"1200\"\n            height=\"675\"\n            sizes=\"(max-width: 768px) 100vw, 1200px\"\n            onError={handleImageError}\n          />\n        </div>\n      ) : blog.image_url && imageError ? (\n        <div className=\"w-full aspect-[16/9] bg-gray-100 flex flex-col items-center justify-center\">\n          <ImageOff className=\"h-12 w-12 text-gray-400 mb-2\" />\n                      <p className=\"text-gray-500 text-sm\">{t('error.imageNotAvailable')}</p>\n        </div>\n      ) : null}\n      \n      <div className=\"p-6 md:p-8 prose prose-lg max-w-none\">\n        <ReactMarkdown>{safeContent}</ReactMarkdown>\n      </div>\n      \n      <footer className=\"px-6 py-4 bg-gray-50 border-t\">\n        <div className=\"flex justify-between items-center\">\n          <span className=\"text-sm text-muted-foreground\">\n            ZapAround - {t('detail.publishedOn')} {formattedDate}\n          </span>\n        </div>\n      </footer>\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\nimport { Blog } from '@/types/blog';\nimport { getLocalizedContent } from '@/utils/blogUtils';\n\ninterface BlogMetaTagsProps {\n  blog: Blog;\n  locale: string;\n  url: string;\n}\n\nexport function BlogMetaTags({ blog, locale, url }: BlogMetaTagsProps) {\n  const fullUrl = `https://zaparound.com${url}`;\n  const fullImageUrl = blog.image_url \n    ? (blog.image_url.startsWith('http') ? blog.image_url : `https://zaparound.com${blog.image_url}`)\n    : 'https://zaparound.com/og-image.png';\n\n  // Get localized content based on locale\n  const lang = locale.split('_')[0];\n  const localizedContent = getLocalizedContent(blog, lang);\n  const description = localizedContent.excerpt || localizedContent.content.substring(0, 160);\n\n  const structuredData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BlogPosting\",\n    \"headline\": localizedContent.title,\n    \"description\": description,\n    \"image\": fullImageUrl,\n    \"author\": {\n      \"@type\": \"Person\",\n      \"name\": \"ZapAround Team\"\n    },\n    \"publisher\": {\n      \"@type\": \"Organization\",\n      \"name\": \"ZapAround\",\n      \"logo\": {\n        \"@type\": \"ImageObject\",\n        \"url\": \"https://zaparound.com/zaparound-uploads/transparentnoliner.webp\"\n      }\n    },\n    \"datePublished\": blog.published_at || blog.created_at,\n    \"dateModified\": blog.updated_at,\n    \"mainEntityOfPage\": {\n      \"@type\": \"WebPage\",\n      \"@id\": fullUrl\n    },\n    \"url\": fullUrl,\n    \"wordCount\": localizedContent.content.length,\n    \"articleSection\": blog.category || \"Travel\",\n    \"keywords\": blog.category || \"travel, trip planning, ZapAround\"\n  };\n\n  const alternateLocales = ['en_US', 'fr_FR', 'es_ES'].filter(loc => loc !== locale);\n\n  return (\n    <Helmet>\n      {/* Basic Meta Tags */}\n      <title>{`${localizedContent.title} - ZapAround Blog`}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"keywords\" content={blog.category || \"travel, trip planning, ZapAround\"} />\n      <meta name=\"author\" content=\"ZapAround Team\" />\n      <meta name=\"language\" content={locale.split('_')[0]} />\n      \n      {/* Canonical URL */}\n      <link rel=\"canonical\" href={fullUrl} />\n      \n      {/* Alternate Language Links */}\n      {alternateLocales.map(loc => {\n        const langCode = loc.split('_')[0];\n        const alternateUrl = `https://zaparound.com/${langCode}/blog/${blog.slug}`;\n        return (\n          <link key={loc} rel=\"alternate\" hrefLang={loc} href={alternateUrl} />\n        );\n      })}\n      \n      {/* Open Graph Meta Tags */}\n      <meta property=\"og:title\" content={localizedContent.title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:url\" content={fullUrl} />\n      <meta property=\"og:image\" content={fullImageUrl} />\n      <meta property=\"og:image:width\" content=\"1200\" />\n      <meta property=\"og:image:height\" content=\"630\" />\n      <meta property=\"og:image:alt\" content={localizedContent.title} />\n      <meta property=\"og:site_name\" content=\"ZapAround\" />\n      <meta property=\"og:locale\" content={locale} />\n      {alternateLocales.map(loc => (\n        <meta key={loc} property=\"og:locale:alternate\" content={loc} />\n      ))}\n      \n      {/* Article specific Open Graph tags */}\n      <meta property=\"article:published_time\" content={blog.published_at || blog.created_at} />\n      <meta property=\"article:modified_time\" content={blog.updated_at} />\n      <meta property=\"article:author\" content=\"ZapAround Team\" />\n      <meta property=\"article:section\" content={blog.category || \"Travel\"} />\n      {blog.category && (\n        <meta property=\"article:tag\" content={blog.category} />\n      )}\n      \n      {/* Twitter Card Meta Tags */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={localizedContent.title} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={fullImageUrl} />\n      <meta name=\"twitter:image:alt\" content={localizedContent.title} />\n      <meta name=\"twitter:site\" content=\"@zaparound\" />\n      <meta name=\"twitter:creator\" content=\"@zaparound\" />\n      \n      {/* Structured Data */}\n      <script type=\"application/ld+json\">\n        {JSON.stringify(structuredData)}\n      </script>\n    </Helmet>\n  );\n} ","import { useEffect } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport { ChevronLeft, AlertTriangle } from 'lucide-react';\nimport { useTranslation } from 'react-i18next';\nimport { useBlogById } from '@/hooks/useBlogs';\n\nimport { BlogHeader } from './BlogHeader';\nimport { BlogContent } from './BlogContent';\nimport { BlogMetaTags } from './BlogMetaTags';\nimport { Button } from '@/components/ui/button';\nimport { onCLS, onFID, onLCP } from 'web-vitals';\n\nexport function BlogDetail() {\n  const { blogSlug = '' } = useParams();\n  const { t, i18n } = useTranslation('blog');\n  const language = i18n.language;\n  const { data: blog, isLoading, error } = useBlogById(blogSlug);\n  const navigate = useNavigate();\n\n  // Monitor Core Web Vitals\n  useEffect(() => {\n    // Report Core Web Vitals\n    onCLS(console.log);\n    onFID(console.log);\n    onLCP(console.log);\n  }, []);\n\n\n\n  if (isLoading) {\n    return (\n      <div className=\"container mx-auto py-8 px-4\">\n        <div className=\"animate-pulse space-y-4\">\n          <div className=\"h-8 bg-gray-200 rounded w-3/4\"></div>\n          <div className=\"h-4 bg-gray-200 rounded w-1/2\"></div>\n          <div className=\"h-64 bg-gray-200 rounded\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  // Handle the case where the blog is not found\n  if (blog?.notFound) {\n    return (\n      <div className=\"container mx-auto py-12 px-4 text-center\">\n        <div className=\"flex flex-col items-center justify-center gap-4 max-w-md mx-auto\">\n          <AlertTriangle className=\"h-16 w-16 text-amber-500\" />\n          <h1 className=\"text-2xl font-bold text-gray-800\">\n            {t('error.notFound')}\n          </h1>\n          <p className=\"text-gray-600 mb-6\">\n            {t('error.notFoundDescription')}\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4\">\n            <Button \n              variant=\"outline\"\n              onClick={() => navigate(-1)}\n              className=\"flex items-center gap-2\"\n            >\n              <ChevronLeft className=\"h-4 w-4\" />\n              {t('form.back')}\n            </Button>\n            <Button \n              onClick={() => navigate(`/${language}/blog`)}\n              className=\"flex items-center gap-2\"\n            >\n              {t('detail.backToList')}\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error || !blog) {\n    return (\n      <div className=\"container mx-auto py-8 px-4 text-center\">\n        <h1 className=\"text-2xl font-bold mb-4 text-red-500\">\n          {t('error.title')}\n        </h1>\n        <p className=\"mb-6\">\n          {error?.message || t('error.description')}\n        </p>\n        <Link \n          to={`/${language}/blog`} \n          className=\"inline-flex items-center text-primary hover:underline\"\n        >\n          <ChevronLeft className=\"mr-1 h-4 w-4\" />\n          {t('detail.backToList')}\n        </Link>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {blog && (\n        <BlogMetaTags \n          blog={blog} \n          locale={language === 'en' ? 'en_US' : language === 'fr' ? 'fr_FR' : 'es_ES'} \n          url={`/${language}/blog/${blogSlug}`} \n        />\n      )}\n    \n      <div className=\"container mx-auto py-8 px-4 max-w-4xl\">\n        <Link \n          to={`/${language}/blog`} \n          className=\"inline-flex items-center text-primary hover:underline mb-8\"\n        >\n          <ChevronLeft className=\"mr-1 h-4 w-4\" />\n          {t('detail.backToList')}\n        </Link>\n        \n        <article className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n          {/* Blog header section with title and metadata */}\n          <BlogHeader blog={blog} language={language} />\n          \n          {/* Blog content section with image, content and footer */}\n          <BlogContent blog={blog} language={language} />\n        </article>\n      </div>\n    </>\n  );\n}\n","import { useMemo } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { Blog, getLocalizedContent } from '@/hooks/useBlogs';\nimport { createSlug } from '@/utils/blogUtils';\nimport { OptimizedImage } from '@/components/OptimizedImage';\nimport { Calendar, Clock, ArrowRight, TrendingUp } from 'lucide-react';\nimport { format } from 'date-fns';\nimport { motion } from 'framer-motion';\n\ninterface RelatedPostsProps {\n  currentBlog: Blog;\n  relatedBlogs: Blog[];\n  isLoading?: boolean;\n}\n\ninterface PopularPostsProps {\n  blogs: Blog[];\n  isLoading?: boolean;\n}\n\ninterface CategoryWidgetProps {\n  categories: { name: string; count: number; color?: string }[];\n  onCategorySelect?: (category: string) => void;\n  isLoading?: boolean;\n}\n\ninterface RecentPostsProps {\n  blogs: Blog[];\n  isLoading?: boolean;\n}\n\nexport function RelatedPosts({ currentBlog, relatedBlogs, isLoading = false }: RelatedPostsProps) {\n  const { t, i18n } = useTranslation('blog');\n  const language = i18n.language;\n\n  const filteredRelated = useMemo(() => {\n    if (!Array.isArray(relatedBlogs)) {\n      return [];\n    }\n    return relatedBlogs\n      .filter(blog => blog.id !== currentBlog.id && blog.is_published)\n      .slice(0, 3);\n  }, [relatedBlogs, currentBlog.id]);\n\n  if (isLoading) {\n    return (\n      <Card>\n        <CardHeader>\n                      <CardTitle>{t('widgets.related.title')}</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {Array.from({ length: 3 }).map((_, i) => (\n              <div key={i} className=\"flex gap-3\">\n                <div className=\"w-16 h-16 bg-gray-200 rounded animate-pulse\" />\n                <div className=\"flex-1 space-y-2\">\n                  <div className=\"h-4 bg-gray-200 rounded animate-pulse\" />\n                  <div className=\"h-3 bg-gray-200 rounded animate-pulse w-3/4\" />\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (filteredRelated.length === 0) {\n    return null;\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <ArrowRight className=\"w-5 h-5\" />\n          {t('widgets.related.title')}\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {filteredRelated.map((blog, index) => {\n            const localizedContent = getLocalizedContent(blog, language);\n            const blogSlug = createSlug(blog.title_en || blog.id);\n            const blogPath = `/${language}/blog/${blogSlug}`;\n\n            return (\n              <motion.div\n                key={blog.id}\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ delay: index * 0.1 }}\n              >\n                <Link to={blogPath} className=\"flex gap-3 group\">\n                  {blog.image_url && (\n                    <div className=\"w-16 h-16 rounded overflow-hidden flex-shrink-0\">\n                      <OptimizedImage\n                        src={blog.image_url}\n                        alt={localizedContent.title}\n                        width={64}\n                        height={64}\n                        priority={true}\n                        className=\"w-full h-full object-cover group-hover:scale-105 transition-transform\"\n                      />\n                    </div>\n                  )}\n                  <div className=\"flex-1 min-w-0\">\n                    <h4 className=\"font-medium text-sm line-clamp-2 group-hover:text-primary transition-colors\">\n                      {localizedContent.title}\n                    </h4>\n                    <div className=\"flex items-center gap-2 text-xs text-muted-foreground mt-1\">\n                      <Calendar className=\"w-3 h-3\" />\n                      {format(new Date(blog.published_at || blog.created_at), 'MMM dd')}\n                    </div>\n                  </div>\n                </Link>\n              </motion.div>\n            );\n          })}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport function PopularPosts({ blogs, isLoading = false }: PopularPostsProps) {\n  const { t, i18n } = useTranslation('blog');\n  const language = i18n.language;\n\n  const popularBlogs = useMemo(() => {\n    if (!Array.isArray(blogs)) {\n      return [];\n    }\n    return blogs\n      .filter(blog => blog.is_published)\n      .slice(0, 5);\n  }, [blogs]);\n\n  if (isLoading) {\n    return (\n      <Card>\n        <CardHeader>\n                      <CardTitle>{t('widgets.popular.title')}</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-3\">\n            {Array.from({ length: 5 }).map((_, i) => (\n              <div key={i} className=\"flex items-center gap-3\">\n                <div className=\"w-8 h-8 bg-gray-200 rounded animate-pulse\" />\n                <div className=\"flex-1 space-y-1\">\n                  <div className=\"h-3 bg-gray-200 rounded animate-pulse\" />\n                  <div className=\"h-2 bg-gray-200 rounded animate-pulse w-2/3\" />\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <TrendingUp className=\"w-5 h-5\" />\n          {t('widgets.popular.title')}\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-3\">\n          {popularBlogs.map((blog, index) => {\n            const localizedContent = getLocalizedContent(blog, language);\n            const blogSlug = createSlug(blog.title_en || blog.id);\n            const blogPath = `/${language}/blog/${blogSlug}`;\n\n            return (\n              <motion.div\n                key={blog.id}\n                initial={{ opacity: 0, y: 10 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: index * 0.05 }}\n              >\n                <Link to={blogPath} className=\"flex items-center gap-3 group\">\n                  <div className=\"w-8 h-8 rounded-full bg-primary/10 flex items-center justify-center text-primary font-bold text-sm flex-shrink-0\">\n                    {index + 1}\n                  </div>\n                  <div className=\"flex-1 min-w-0\">\n                    <h4 className=\"font-medium text-sm line-clamp-2 group-hover:text-primary transition-colors\">\n                      {localizedContent.title}\n                    </h4>\n\n                  </div>\n                </Link>\n              </motion.div>\n            );\n          })}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport function CategoryWidget({ categories, onCategorySelect, isLoading = false }: CategoryWidgetProps) {\n  const { t } = useTranslation('blog');\n\n  if (isLoading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>{t('widgets.categories')}</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-2\">\n            {Array.from({ length: 6 }).map((_, i) => (\n              <div key={i} className=\"h-6 bg-gray-200 rounded animate-pulse\" />\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{t('widgets.categories')}</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-2\">\n          {Array.isArray(categories) ? categories.map((category, index) => (\n            <motion.div\n              key={category.name}\n              initial={{ opacity: 0, x: -10 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ delay: index * 0.05 }}\n            >\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"w-full justify-between h-auto p-2\"\n                onClick={() => onCategorySelect?.(category.name)}\n              >\n                <span className=\"text-left\">{category.name}</span>\n                <Badge variant=\"secondary\" className=\"ml-2\">\n                  {category.count}\n                </Badge>\n              </Button>\n            </motion.div>\n          )) : null}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport function RecentPosts({ blogs, isLoading = false }: RecentPostsProps) {\n  const { t, i18n } = useTranslation('blog');\n  const language = i18n.language;\n\n  const recentBlogs = useMemo(() => {\n    if (!Array.isArray(blogs)) {\n      return [];\n    }\n    return blogs\n      .filter(blog => blog.is_published)\n      .sort((a, b) => {\n        const dateA = new Date(a.published_at || a.created_at);\n        const dateB = new Date(b.published_at || b.created_at);\n        return dateB.getTime() - dateA.getTime();\n      })\n      .slice(0, 4);\n  }, [blogs]);\n\n  if (isLoading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>{t('widgets.recent.title')}</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {Array.from({ length: 4 }).map((_, i) => (\n              <div key={i} className=\"space-y-2\">\n                <div className=\"h-4 bg-gray-200 rounded animate-pulse\" />\n                <div className=\"h-3 bg-gray-200 rounded animate-pulse w-1/2\" />\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Clock className=\"w-5 h-5\" />\n          {t('widgets.recent.title')}\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {recentBlogs.map((blog, index) => {\n            const localizedContent = getLocalizedContent(blog, language);\n            const blogSlug = createSlug(blog.title_en || blog.id);\n            const blogPath = `/${language}/blog/${blogSlug}`;\n\n            return (\n              <motion.div\n                key={blog.id}\n                initial={{ opacity: 0, y: 10 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: index * 0.1 }}\n              >\n                <Link to={blogPath} className=\"block group\">\n                  <h4 className=\"font-medium text-sm line-clamp-2 group-hover:text-primary transition-colors mb-1\">\n                    {localizedContent.title}\n                  </h4>\n                  <div className=\"flex items-center gap-2 text-xs text-muted-foreground\">\n                    <Calendar className=\"w-3 h-3\" />\n                    {format(new Date(blog.published_at || blog.created_at), 'PPP')}\n                  </div>\n                  {blog.category && (\n                    <Badge variant=\"outline\" className=\"mt-2 text-xs\">\n                      {blog.category}\n                    </Badge>\n                  )}\n                </Link>\n              </motion.div>\n            );\n          })}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":["cn","inputs","twMerge","clsx","LOCATION_CACHE_KEY","getCachedLocation","cached","localStorage","getItem","parsedCache","JSON","parse","Date","now","timestamp","removeItem","setCachedLocation","location","cache","data","setItem","stringify","BlogCard","blog","t","i18n","useTranslation","language","localizedContent","getLocalizedContent","published_at","format","created_at","blogPath","title_en","createSlug","id","content","trim","split","filter","word","length","safeTitle","title","jsxs","Card","className","children","image_url","jsx","OptimizedImage","src","alt","width","height","quality","priority","onError","CardHeader","CardTitle","Link","to","CardContent","CardDescription","excerpt","substring","CardFooter","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","SORT_OPTIONS","value","label","icon","Calendar","TrendingUp","DATE_RANGE_OPTIONS","BlogFilters","filters","onFiltersChange","availableCategories","availableTags","availableLocations","isLoading","totalResults","isExpanded","setIsExpanded","useState","searchInput","setSearchInput","search","debouncedSearchChange","useCallback","debounce","handleSearchChange","e","target","handleFilterChange","key","handleTagToggle","tag","newTags","tags","includes","clearFilters","category","dateRange","sortBy","activeFiltersCount","useMemo","count","hasActiveFilters","Search","Input","placeholder","onChange","disabled","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectItem","map","Tag","option","Icon","Button","variant","size","onClick","Filter","Badge","X","AnimatePresence","motion","div","initial","opacity","animate","exit","transition","duration","MapPin","showDescription","showAuthor","index","showShareDialog","setShowShareDialog","copied","setCopied","formattedDate","date","readingTime","wordCount","Math","max","ceil","safeExcerpt","absoluteImageUrl","startsWith","window","origin","currentUrl","handleShare","async","isMacOS","navigator","platform","toUpperCase","indexOf","hasNativeShare","share","shareUrl","shareText","site","shareData","text","url","response","fetch","blob","extMatch","match","ext","file","File","type","canShare","files","err","error","Error","name","handleCopyLink","clipboard","writeText","toast","description","setTimeout","handleSocialShare","encodedText","encodeURIComponent","encodedUrl","open","cardVariants","hidden","y","visible","i","delay","ease","custom","variants","toLowerCase","replace","stopPropagation","Clock","time","Share2","Dialog","onOpenChange","DialogContent","DialogHeader","DialogTitle","Mail","Fragment","Check","Copy","BlogCardSkeleton","Skeleton","EnhancedBlogList","queryClient","useQueryClient","blogsRef","useRef","state","setState","currentPage","totalPages","totalPosts","viewMode","isRefreshing","setIsRefreshing","featuredBlogs","setFeaturedBlogs","useEffect","channel","supabase","on","event","schema","table","payload","new","is_published","invalidateQueries","queryKey","subscribe","removeChannel","shouldUseCategoryQuery","Boolean","blogsData","isBlogsLoading","fetchError","useBlogs","categoryBlogsData","isCategoryLoading","categoryError","useBlogsByCategory","enabled","staleTime","gcTime","currentData","currentLoading","currentError","prev","filteredAndSortedBlogs","blogs","searchLower","titleMatch","title_fr","title_es","contentMatch","content_en","content_fr","content_es","filterDate","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","some","activities","sort","a","b","dateA","dateB","getTime","filterOptions","categories","locations","Array","from","Set","flatMap","select","eq","order","ascending","limit","fetchFeaturedBlogs","handleRefresh","handlePageChange","page","current","scrollIntoView","behavior","handleFiltersChange","handleViewModeChange","_","AlertCircle","RefreshCw","ref","Object","values","f","isArray","BookOpen","slice","Tabs","TabsList","TabsTrigger","Grid","List","Loader2","mode","min","BlogPagination","postsPerPage","onPageChange","startPost","endPost","pageNumbers","pages","push","getPageNumbers","total","Pagination","PaginationContent","PaginationItem","ChevronLeft","PaginationEllipsis","ChevronRight","BlogHeader","BlogContent","imageError","setImageError","safeContent","imageUrl","loading","decoding","sizes","ImageOff","ReactMarkdown","BlogMetaTags","locale","fullUrl","fullImageUrl","lang","structuredData","headline","image","author","publisher","logo","datePublished","dateModified","updated_at","mainEntityOfPage","articleSection","keywords","alternateLocales","loc","Helmet","rel","href","alternateUrl","slug","hrefLang","property","BlogDetail","blogSlug","useParams","useBlogById","navigate","useNavigate","onCLS","console","log","onFID","onLCP","notFound","AlertTriangle","message","RelatedPosts","currentBlog","relatedBlogs","filteredRelated","ArrowRight","x"],"mappings":"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"}