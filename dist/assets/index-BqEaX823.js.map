{"version":3,"mappings":"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","names":["Dashboard","lazy","import","__VITE_PRELOAD__","MapDashboard","TripDetails","CreateTrip","__vitePreload","then","n","P","About","Contact","NotFound","Pricing","Blog","BlogCategory","Admin","BlogPost","BlogEdit","ResetPassword","PrivacyPolicy","TermsOfService","T","CookiePolicy","C","GdprCompliance","G","LegalInformation","L","Community","FAQ","DevSurvey","CurrencyConverter","TravelFlight","Unsubscribe","ProfileLayout","a","ProfilePersonalInfo","b","ProfilePassport","c","ProfileSecurity","S","ProfileEmail","E","ProfileSubscription","d","ProfilePreferences","e","ProfileAccount","A","LANGUAGE_CACHE_KEY","LANGUAGE_TIMESTAMP_KEY","CACHE_EXPIRY","LoadingFallback","jsx","className","children","jsxs","authChannel","BroadcastChannel","RouteChangeTracker","location","useLocation","useEffect","analytics","pageView","pathname","Layout","session","shouldHideFooter","endsWith","includes","shouldHideNav","isCreateTripPage","cn","Navigation","Footer","NavigateWithLang","to","replace","lang","useParams","i18n","useTranslation","currentLang","language","startsWith","targetPath","Navigate","App","setSession","useState","user","setUser","loading","setLoading","supabase","auth","getSession","data","cachedTimestamp","localStorage","getItem","now","Date","parseInt","removeItem","async","cachedLanguage","languageTimestamp","i18next","changeLanguage","error","from","select","eq","id","single","setItem","toString","err","fetchLanguage","subscription","onAuthStateChange","event","prevSession","access_token","postMessage","type","refresh_token","expires_at","hashedId","btoa","substring","setUserId","handleAuthMessage","newSession","addEventListener","handleAppUpdate","window","unsubscribe","removeEventListener","ThemeProvider","defaultTheme","storageKey","HelmetProvider","CookieConsentProvider","TooltipProvider","Toaster","UpdateNotification","WebVitalsReporter","enabled","debug","Router","LanguageRouter","Suspense","fallback","Routes","Route","path","element","HomePageAccessControl","Index","Auth","index","CommunityPost","CommunityShare","ZapPlaces","FlightBooking","FlightBookingDetails","HotelBooking","Bookings","BookingDetail","Analytics","SpeedInsights","APP_VERSION","toISOString","split","CACHE_KEY","versionManager","getCurrentVersion","setCurrentVersion","version","clearCache","appCaches","caches","keys","filter","name","Promise","all","map","delete","shouldUpdate","storedVersion","dispatchEvent","CustomEvent","initSWUpdateListener","queryClient","QueryClient","defaultOptions","queries","retry","failureCount","message","status","staleTime","gcTime","refetchOnWindowFocus","refetchOnMount","refetchOnReconnect","retryDelay","attemptIndex","Math","min","mutations","ReactDOM","createRoot","document","getElementById","render","React","StrictMode","QueryClientProvider","client"],"ignoreList":[],"sources":["../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["import { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { BrowserRouter as Router, Routes, Route, Navigate, useLocation, Outlet, useParams } from \"react-router-dom\";\nimport { useState, useEffect, Suspense, lazy } from \"react\";\nimport { supabase } from \"./integrations/supabase/client\";\nimport { Footer } from \"./components/Footer\";\nimport { Navigation } from \"./components/Navigation\";\nimport { HelmetProvider } from 'react-helmet-async';\nimport { cn } from \"@/lib/utils\";\nimport { useTranslation } from 'react-i18next';\n\nimport Index from \"./pages/Index\";\nimport Auth from \"./pages/Auth\";\nimport { HomePageAccessControl } from \"./components/HomePageAccessControl\";\nimport { Analytics } from \"@vercel/analytics/react\";\nimport { SpeedInsights } from \"@vercel/speed-insights/react\";\nimport { UpdateNotification } from \"./components/UpdateNotification\";\nimport { CookieConsentProvider } from \"./providers/CookieConsentProvider\";\nimport { ThemeProvider } from \"./components/theme-provider\";\nimport { analytics } from \"./services/analytics\";\nimport i18next from 'i18next';\nimport TripNoAccess from './pages/TripNoAccess';\nimport CommunityPost from '@/pages/CommunityPost';\nimport CommunityShare from '@/pages/CommunityShare';\nimport { FlightBooking } from './pages/booking/FlightBooking';\nimport { FlightBookingDetails } from './pages/booking/FlightBookingDetails';\nimport { HotelBooking } from './pages/booking/HotelBooking';\nimport { Bookings } from './pages/bookings/Bookings';\nimport { BookingDetail } from './pages/bookings/BookingDetail';\nimport { LanguageRouter } from './components/LanguageRouter';\nimport ZapPlaces from '@/pages/ZapPlaces';\nimport WebVitalsReporter from '@/components/WebVitalsReporter';\n\n// Lazy load non-critical routes\nconst Dashboard = lazy(() => import(\"./pages/Dashboard\"));\nconst MapDashboard = lazy(() => import(\"./pages/MapDashboard\"));\nconst TripDetails = lazy(() => import(\"./pages/TripDetails\"));\nconst CreateTrip = lazy(() => import(\"./pages/create-trip\"));\nconst Profile = lazy(() => import(\"./pages/Profile\"));\nconst About = lazy(() => import(\"./pages/About\"));\nconst Contact = lazy(() => import(\"./pages/Contact\"));\nconst NotFound = lazy(() => import(\"./pages/NotFound\"));\nconst Pricing = lazy(() => import(\"./pages/Pricing\"));\nconst Blog = lazy(() => import(\"./pages/EnhancedBlog\"));\nconst BlogCategory = lazy(() => import(\"./pages/BlogCategory\"));\nconst Admin = lazy(() => import(\"./pages/Admin\"));\nconst BlogPost = lazy(() => import(\"./pages/BlogPost\"));\nconst BlogEdit = lazy(() => import(\"./pages/BlogEdit\"));\nconst ResetPassword = lazy(() => import('@/pages/ResetPassword'));\nconst PrivacyPolicy = lazy(() => import('./pages/legal/PrivacyPolicy'));\nconst TermsOfService = lazy(() => import('./pages/legal/TermsOfService'));\nconst CookiePolicy = lazy(() => import('./pages/legal/CookiePolicy'));\nconst GdprCompliance = lazy(() => import('./pages/legal/GdprCompliance'));\nconst LegalInformation = lazy(() => import('./pages/legal/LegalInformation'));\nconst Community = lazy(() => import('./pages/Community'));\nconst FAQ = lazy(() => import('./pages/FAQ'));\nconst DevSurvey = lazy(() => import('./pages/DevSurvey'));\nconst CurrencyConverter = lazy(() => import('./pages/CurrencyConverter'));\nconst TravelFlight = lazy(() => import('./pages/TravelFlight'));\nconst Unsubscribe = lazy(() => import('./pages/Unsubscribe'));\n\n\n\n// Profile routes\nconst ProfileLayout = lazy(() => import('./pages/profile/ProfileLayout'));\nconst ProfilePersonalInfo = lazy(() => import('./pages/profile/PersonalInfo'));\nconst ProfilePassport = lazy(() => import('./pages/profile/Passport'));\nconst ProfileSecurity = lazy(() => import('./pages/profile/Security'));\nconst ProfileEmail = lazy(() => import('./pages/profile/Email'));\nconst ProfileSubscription = lazy(() => import('./pages/profile/Subscription'));\nconst ProfilePreferences = lazy(() => import('./pages/profile/Preferences'));\nconst ProfileAccount = lazy(() => import('./pages/profile/Account'));\n\n// Constants for caching\nconst LANGUAGE_CACHE_KEY = 'user_language';\nconst LANGUAGE_TIMESTAMP_KEY = 'user_language_timestamp';\nconst CACHE_EXPIRY = 10 * 60 * 1000; // 10 minutes, same as role cache\n\n// Loading fallback component\nconst LoadingFallback = () => (\n  <div className=\"flex items-center justify-center min-h-[60vh]\">\n    <div className=\"animate-pulse space-y-4\">\n      <div className=\"h-12 w-12 bg-blue-200 rounded-full mx-auto\"></div>\n      <div className=\"h-4 w-32 bg-blue-200 rounded mx-auto\"></div>\n    </div>\n  </div>\n);\n\n// Broadcast channel for cross-tab communication\nconst authChannel = typeof BroadcastChannel !== 'undefined' \n  ? new BroadcastChannel('auth_channel') \n  : null;\n\n// Analytics route change tracker\nfunction RouteChangeTracker() {\n  const location = useLocation();\n  \n  useEffect(() => {\n    // Track page view on route change\n    analytics.pageView(location.pathname);\n  }, [location]);\n  \n  return null;\n}\n\n// Layout component to handle footer visibility\ninterface LayoutProps {\n  children: React.ReactNode;\n  session: any;\n}\n\nfunction Layout({ children, session }: LayoutProps) {\n  const location = useLocation();\n  const shouldHideFooter = location.pathname.endsWith('/map-dashboard') || \n                          location.pathname.endsWith('/create-trip') || \n                          location.pathname.includes('/unsubscribe');\n  const shouldHideNav = location.pathname.includes('/unsubscribe');\n  const isCreateTripPage = location.pathname.endsWith('/create-trip');\n  \n  return (\n    <div className={cn(\n      \"min-h-screen flex flex-col pb-16 md:pb-0\",\n      !isCreateTripPage && \"bg-background text-foreground\"\n    )}>\n      {!shouldHideNav && <Navigation session={session} />}\n      <div className=\"flex-grow\">\n        {children}\n      </div>\n      {!shouldHideFooter && <Footer />}\n    </div>\n  );\n}\n\n\n\n// Custom Navigate component that handles language-aware redirects\nfunction NavigateWithLang({ to, replace = true }: { to: string; replace?: boolean }) {\n  const { lang } = useParams();\n  const { i18n } = useTranslation();\n  \n  // Get the current language from URL params or i18n\n  const currentLang = lang || i18n.language || 'en';\n  \n  // If the target path already includes a language prefix, use it as is\n  if (to.startsWith('/:lang/')) {\n    const targetPath = to.replace('/:lang/', `/${currentLang}/`);\n    return <Navigate to={targetPath} replace={replace} />;\n  }\n  \n  // If the target path doesn't have a language prefix, add it\n  if (!to.startsWith('/')) {\n    to = '/' + to;\n  }\n  \n  const targetPath = `/${currentLang}${to}`;\n  return <Navigate to={targetPath} replace={replace} />;\n}\n\nfunction App() {\n  const [session, setSession] = useState(null);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Get initial session\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      setSession(session);\n      setUser(session?.user ?? null);\n      // For initial load, we only need to clear cache if there's no session\n      // or if the timestamp is old, not on every session\n      if (session) {\n        try {\n          const cachedTimestamp = localStorage.getItem('userRoleTimestamp');\n          const now = Date.now();\n          \n          if (!cachedTimestamp || (now - parseInt(cachedTimestamp)) > CACHE_EXPIRY) {\n            localStorage.removeItem('userRole');\n            localStorage.removeItem('isAdmin');\n            localStorage.removeItem('userRoleTimestamp');\n            localStorage.removeItem(LANGUAGE_CACHE_KEY);\n            localStorage.removeItem(LANGUAGE_TIMESTAMP_KEY);\n          }\n\n          // Fetch user's language preference with caching\n          const fetchLanguage = async () => {\n            try {\n              // Check cache first\n              const cachedLanguage = localStorage.getItem(LANGUAGE_CACHE_KEY);\n              const languageTimestamp = localStorage.getItem(LANGUAGE_TIMESTAMP_KEY);\n              const now = Date.now();\n\n              // Use cached language if it's still valid\n              if (cachedLanguage && languageTimestamp && \n                  (now - parseInt(languageTimestamp)) <= CACHE_EXPIRY) {\n                await i18next.changeLanguage(cachedLanguage);\n                return;\n              }\n\n              // Fetch from database if cache is invalid or missing\n              const { data, error } = await supabase\n                .from('profiles')\n                .select('language')\n                .eq('id', session.user.id)\n                .single();\n              \n              if (!error && data?.language) {\n                // Update cache\n                localStorage.setItem(LANGUAGE_CACHE_KEY, data.language);\n                localStorage.setItem(LANGUAGE_TIMESTAMP_KEY, now.toString());\n                await i18next.changeLanguage(data.language);\n              }\n            } catch (err) {\n              console.error(\"Error fetching user language:\", err);\n            }\n          };\n          \n          void fetchLanguage();\n        } catch (err) {\n          console.error(\"Error clearing localStorage cache:\", err);\n        }\n      }\n      setLoading(false);\n    });\n\n    // Listen for auth changes\n    const {\n      data: { subscription },\n    } = supabase.auth.onAuthStateChange((event, session) => {\n      // Only update session when it changes\n      setSession(prevSession => {\n        if (!prevSession && !session) return prevSession;\n        if (!prevSession && session) {\n          // Fetch language preference when user logs in\n          if (session.user) {\n            const fetchLanguage = async () => {\n              try {\n                // Check cache first\n                const cachedLanguage = localStorage.getItem(LANGUAGE_CACHE_KEY);\n                const languageTimestamp = localStorage.getItem(LANGUAGE_TIMESTAMP_KEY);\n                const now = Date.now();\n\n                // Use cached language if it's still valid\n                if (cachedLanguage && languageTimestamp && \n                    (now - parseInt(languageTimestamp)) <= CACHE_EXPIRY) {\n                  await i18next.changeLanguage(cachedLanguage);\n                  return;\n                }\n\n                // Fetch from database if cache is invalid or missing\n                const { data, error } = await supabase\n                  .from('profiles')\n                  .select('language')\n                  .eq('id', session.user.id)\n                  .single();\n                \n                if (!error && data?.language) {\n                  // Update cache\n                  localStorage.setItem(LANGUAGE_CACHE_KEY, data.language);\n                  localStorage.setItem(LANGUAGE_TIMESTAMP_KEY, now.toString());\n                  await i18next.changeLanguage(data.language);\n                }\n              } catch (err) {\n                console.error(\"Error fetching user language:\", err);\n              }\n            };\n            \n            void fetchLanguage();\n          }\n          return session;\n        }\n        if (prevSession && !session) {\n          // Clear language cache on logout\n          localStorage.removeItem(LANGUAGE_CACHE_KEY);\n          localStorage.removeItem(LANGUAGE_TIMESTAMP_KEY);\n          return null;\n        }\n        if (prevSession?.access_token !== session?.access_token) return session;\n        return prevSession;\n      });\n      \n      // Only clear cache on SIGNED_IN, SIGNED_OUT, or TOKEN_REFRESHED events\n      if (event === 'SIGNED_IN' || event === 'SIGNED_OUT' || event === 'TOKEN_REFRESHED') {\n        try {\n          localStorage.removeItem('userRole');\n          localStorage.removeItem('isAdmin');\n          localStorage.removeItem('userRoleTimestamp');\n          if (event === 'SIGNED_OUT') {\n            localStorage.removeItem(LANGUAGE_CACHE_KEY);\n            localStorage.removeItem(LANGUAGE_TIMESTAMP_KEY);\n          }\n        } catch (err) {\n          console.error(\"Error clearing localStorage cache:\", err);\n        }\n      }\n      \n      // Broadcast auth change to other tabs if supported\n      if (authChannel) {\n        authChannel.postMessage({\n          type: 'AUTH_STATE_CHANGE',\n          event,\n          session: session ? { \n            access_token: session.access_token,\n            refresh_token: session.refresh_token,\n            expires_at: session.expires_at\n          } : null\n        });\n      }\n\n      // Set user ID in analytics when user logs in/out\n      if (session?.user?.id) {\n        // Use a hashed version of the ID for privacy\n        const hashedId = btoa(session.user.id).substring(0, 12);\n        analytics.setUserId(hashedId);\n      } else {\n        analytics.setUserId(null);\n      }\n    });\n\n    // Listen for auth changes from other tabs\n    const handleAuthMessage = (event) => {\n      if (event.data && event.data.type === 'AUTH_STATE_CHANGE') {\n        // Only update if the session state is different\n        const newSession = event.data.session;\n        setSession(prevSession => {\n          if (!prevSession && !newSession) return prevSession;\n          if (!prevSession && newSession) return newSession;\n          if (prevSession && !newSession) return null;\n          if (prevSession.access_token !== newSession.access_token) return newSession;\n          return prevSession;\n        });\n      }\n    };\n\n    if (authChannel) {\n      authChannel.addEventListener('message', handleAuthMessage);\n    }\n\n    // Listen for app update notifications\n    const handleAppUpdate = () => {\n      // Show update notification instead of forcing reload\n      console.log('New app version available');\n      // You could show a toast notification here\n    };\n    \n    window.addEventListener('appUpdateAvailable', handleAppUpdate);\n\n    return () => {\n      subscription.unsubscribe();\n      if (authChannel) {\n        authChannel.removeEventListener('message', handleAuthMessage);\n      }\n      window.removeEventListener('appUpdateAvailable', handleAppUpdate);\n    };\n  }, []);\n\n  if (loading) {\n    return <LoadingFallback />;\n  }\n\n  return (\n    <ThemeProvider defaultTheme=\"light\" storageKey=\"zaparounds-theme\">\n      <HelmetProvider>\n        <CookieConsentProvider>\n          <TooltipProvider>\n            <Toaster />\n            <UpdateNotification />\n            <WebVitalsReporter enabled={true} debug={false} />\n            <Router>\n              <RouteChangeTracker />\n              <LanguageRouter>\n                <Layout session={session}>\n                  <Suspense fallback={<LoadingFallback />}>\n                    <Routes>\n                      {/* Root-level redirects for main pages */}\n                      <Route path=\"/\" element={<Navigate to=\"/en\" replace />} />\n                      \n                      <Route path=\"/:lang\" element={\n                        <HomePageAccessControl session={session}>\n                          <Index session={session} />\n                        </HomePageAccessControl>\n                      } />\n                      <Route \n                        path=\"/:lang/auth\" \n                        element={\n                          session ? <NavigateWithLang to=\"/:lang/dashboard\" /> : <Auth />\n                        } \n                      />\n                      <Route \n                        path=\"/:lang/create-trip\" \n                        element={\n                          <Suspense fallback={<LoadingFallback />}>\n                            <CreateTrip session={session} />\n                          </Suspense>\n                        }\n                      />\n                      <Route \n                        path=\"/:lang/dashboard\" \n                        element={\n                          !session ? <NavigateWithLang to=\"/auth\" /> : <Dashboard />\n                        } \n                      />\n                      <Route \n                        path=\"/:lang/map-dashboard\" \n                        element={\n                          !session ? <NavigateWithLang to=\"/auth\" /> : <MapDashboard />\n                        } \n                      />\n                      \n                      {/* Profile Routes */}\n                      <Route \n                        path=\"/:lang/profile\" \n                        element={\n                          !session ? <NavigateWithLang to=\"/auth\" /> : <ProfileLayout />\n                        }\n                      >\n                        <Route index element={<ProfilePersonalInfo />} />\n                        <Route path=\"passport\" element={<ProfilePassport />} />\n                        <Route path=\"security\" element={<ProfileSecurity />} />\n                        <Route path=\"email\" element={<ProfileEmail />} />\n                        <Route path=\"subscription\" element={<ProfileSubscription />} />\n                        <Route path=\"preferences\" element={<ProfilePreferences />} />\n                        <Route path=\"account\" element={<ProfileAccount />} />\n                      </Route>\n                      \n                      <Route \n                        path=\"/:lang/trips/:tripId\" \n                        element={\n                          !session ? <NavigateWithLang to=\"/auth\" /> : <TripDetails />\n                        }\n                      />\n                      <Route \n                        path=\"/:lang/trips/:tripId/share\" \n                        element={\n                          !session ? <NavigateWithLang to=\"/auth\" /> : <TripDetails />\n                        }\n                      />\n                      <Route \n                        path=\"/:lang/zapout/:tripId\" \n                        element={\n                          !session ? <NavigateWithLang to=\"/auth\" /> : <TripDetails />\n                        }\n                      />\n                      <Route \n                        path=\"/:lang/zapout/:tripId/share\" \n                        element={\n                          !session ? <NavigateWithLang to=\"/auth\" /> : <TripDetails />\n                        }\n                      />\n                      <Route \n                        path=\"/:lang/zaproad/:tripId\" \n                        element={\n                          !session ? <NavigateWithLang to=\"/auth\" /> : <TripDetails />\n                        }\n                      />\n                      <Route \n                        path=\"/:lang/zaproad/:tripId/share\" \n                        element={\n                          !session ? <NavigateWithLang to=\"/auth\" /> : <TripDetails />\n                        }\n                      />\n                      <Route path=\"/:lang/about\" element={<About />} />\n                      <Route path=\"/:lang/admin\" element={<Admin />} />\n                      <Route path=\"/:lang/admin/blog/:id\" element={<BlogEdit />} />\n                      <Route path=\"/:lang/blog\" element={<Blog />} />\n                      <Route path=\"/:lang/blog/category/:categorySlug\" element={<BlogCategory />} />\n                      <Route path=\"/:lang/blog/:blogSlug\" element={<BlogPost />} />\n                      <Route path=\"/:lang/contact\" element={<Contact />} />\n                      <Route path=\"/:lang/pricing\" element={<Pricing />} />\n                      <Route path=\"/:lang/reset-password\" element={<ResetPassword />} />\n                      <Route path=\"/:lang/community\" element={<Community />} />\n                      <Route path=\"/:lang/community/post/:postId\" element={<CommunityPost />} />\n                      <Route path=\"/:lang/community/share/:postId/:locationSlug?\" element={<CommunityShare />} />\n                      <Route path=\"/:lang/zap-places/:placeSlug\" element={<ZapPlaces />} />\n                      \n                      {/* Booking Routes */}\n                      <Route path=\"/:lang/travel-flight\" element={<TravelFlight />} />\n                      <Route path=\"/:lang/booking/flights\" element={<NavigateWithLang to=\"/:lang/travel-flight\" />} />\n                      <Route path=\"/:lang/booking/internal-flights\" element={<FlightBooking />} />\n                      <Route path=\"/:lang/booking/flight-details\" element={<FlightBookingDetails />} />\n                      <Route path=\"/:lang/booking/hotels\" element={<HotelBooking />} />\n                      <Route path=\"/:lang/bookings\" element={<Bookings />} />\n                      <Route path=\"/:lang/bookings/:bookingReference\" element={<BookingDetail />} />\n                      \n                      {/* Legal Pages */}\n                      <Route path=\"/:lang/legal\" element={<LegalInformation />} />\n                      <Route path=\"/:lang/privacy\" element={<PrivacyPolicy />} />\n                      <Route path=\"/:lang/terms\" element={<TermsOfService />} />\n                      <Route path=\"/:lang/cookie-policy\" element={<CookiePolicy />} />\n                      <Route path=\"/:lang/gdpr\" element={<GdprCompliance />} />\n                      <Route path=\"/:lang/faq\" element={<FAQ />} />\n                      <Route path=\"/:lang/devsurvey\" element={<DevSurvey />} />\n                      <Route path=\"/devsurvey\" element={<NavigateWithLang to=\"/:lang/devsurvey\" />} />\n                      <Route path=\"/:lang/currency-converter\" element={<CurrencyConverter />} />\n                      <Route path=\"/:lang/unsubscribe\" element={<Unsubscribe />} />\n                      <Route path=\"/unsubscribe\" element={<Unsubscribe />} />\n                      \n\n                      \n                      <Route path=\"*\" element={<NotFound />} />\n                    </Routes>\n                  </Suspense>\n                </Layout>\n              </LanguageRouter>\n            </Router>\n            <Analytics />\n            <SpeedInsights />\n          </TooltipProvider>\n        </CookieConsentProvider>\n      </HelmetProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// Revert to synchronous bootstrap (pre-lazy-loading) for stable initialization\nimport './utils/polyfills';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './index.css';\nimport './styles/webkit-native.css';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport '@/i18n'; // Import i18next configuration early\nimport { initSWUpdateListener } from '@/utils/sw-update';\n\n// Version management\nconst APP_VERSION = import.meta.env.VITE_APP_VERSION || new Date().toISOString().split('T')[0];\nconst CACHE_KEY = 'zaparound-version';\n\nconst versionManager = {\n  getCurrentVersion: () => localStorage.getItem(CACHE_KEY),\n  setCurrentVersion: (version: string) => localStorage.setItem(CACHE_KEY, version),\n  clearCache: async () => {\n    if ('caches' in window) {\n      try {\n        const cacheNames = await caches.keys();\n        const appCaches = cacheNames.filter((name) => name.includes('zaparound'));\n        await Promise.all(appCaches.map((name) => caches.delete(name)));\n      } catch (error) {\n        console.error('Error clearing caches:', error);\n      }\n    }\n  },\n  shouldUpdate: () => {\n    const storedVersion = versionManager.getCurrentVersion();\n    return storedVersion && storedVersion !== APP_VERSION;\n  },\n};\n\n// If a new version is detected, clear caches and notify UI\nif (versionManager.shouldUpdate()) {\n  versionManager.setCurrentVersion(APP_VERSION);\n  versionManager.clearCache().then(() => {\n    window.dispatchEvent(new CustomEvent('appUpdateAvailable'));\n  });\n} else {\n  versionManager.setCurrentVersion(APP_VERSION);\n}\n\n// Kick-off SW update listener so the UI can prompt users when a new version is ready\ninitSWUpdateListener();\n\n// React-Query client\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: (failureCount: number, error: any) => {\n        if (\n          error?.message === 'Not authenticated' ||\n          error?.message === 'Unauthorized' ||\n          error?.status === 404\n        ) {\n          return false;\n        }\n        return failureCount < 2;\n      },\n      staleTime: 5 * 60 * 1000, // 5 minutes\n      gcTime: 30 * 60 * 1000, // 30 minutes\n      refetchOnWindowFocus: false,\n      refetchOnMount: true,\n      refetchOnReconnect: true,\n      retryDelay: (attemptIndex) => Math.min(1000 * 2 ** attemptIndex, 30000),\n    },\n    mutations: {\n      retry: 1,\n      retryDelay: (attemptIndex) => Math.min(1000 * 2 ** attemptIndex, 30000),\n    },\n  },\n});\n\n// Mount the full application immediately (no delayed bootstrap)\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n);\n"],"file":"assets/index-BqEaX823.js"}